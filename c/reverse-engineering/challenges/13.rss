<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:discourse="http://www.discourse.org/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Challenges - 0x00sec - The Home of the Hacker</title>
    <link>https://0x00sec.org/c/reverse-engineering/challenges/13</link>
    <description>Topics in the &#39;Challenges&#39; category </description>
    
      <lastBuildDate>Wed, 17 Apr 2024 01:35:21 +0000</lastBuildDate>
      <atom:link href="https://0x00sec.org/c/reverse-engineering/challenges/13.rss" rel="self" type="application/rss+xml" />
        <item>
          <title>[ReverseMe]Alpha</title>
          <dc:creator><![CDATA[0xf00I]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h1><a name="reverseme-1" class="anchor" href="https://0x00sec.org#reverseme-1"></a>ReverseMe</h1>
<p>I’ve got another challenge! It’s been a while since I posted my first challenge, <a href="https://0x00sec.org/t/reverseme-cipher/">Cipher</a>. So, I had some free time on my hands and wrote a simple ReverseMe. Difficulty? I’d say it’s somewhere between easy and intermediate, maybe easy depending on your current knowledge. Enjoy!</p>
<h1><a name="executable-2" class="anchor" href="https://0x00sec.org#executable-2"></a>Executable</h1>
<pre data-code-wrap="bs"><code class="lang-plaintext">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
</code></pre>
<h2><a name="the-binary-3" class="anchor" href="https://0x00sec.org#the-binary-3"></a>The Binary</h2>
<p>save the dump into a <code>foo.txt</code> and run the following command to recover the binary:</p>
<pre><code class="lang-bash">cat foo.txt | base64 -d | gunzip &gt; foo.elf &amp;&amp; chmod +x foo.elf
</code></pre>
<p>Good luck!</p>
            <p><small>5 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/reverseme-alpha/40095">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/reverseme-alpha/40095</link>
          <pubDate>Wed, 17 Apr 2024 01:35:21 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-40095</guid>
          <source url="https://0x00sec.org/t/reverseme-alpha/40095.rss">[ReverseMe]Alpha</source>
        </item>
        <item>
          <title>[ReverseMe]Cipher</title>
          <dc:creator><![CDATA[0xf00]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h2>
<a name="challenge-1" class="anchor" href="https://0x00sec.org#challenge-1"></a>Challenge</h2>
<p>beginner-friendly challenge particularly for those who are just starting to explore the fundamentals of programming and reverse engineering. enjoy</p>
<pre><code class="lang-auto">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
</code></pre>
<h3>
<a name="to-build-the-binary-2" class="anchor" href="https://0x00sec.org#to-build-the-binary-2"></a>To build the binary</h3>
<pre><code class="lang-auto">cat foo.txt | base64 -d | gunzip &gt; foo.elf &amp;&amp; chmod +x foo.elf
</code></pre>
<p>Feel free to ask any questions or share your progress through the challenge.</p>
<h2>
<a name="references-3" class="anchor" href="https://0x00sec.org#references-3"></a>References</h2>
<p>Resources to look into.<br>
<a href="https://0x00sec.org/t/reverse-engineering-101/1233" class="inline-onebox">Reverse Engineering 101</a> by <a class="mention" href="https://0x00sec.org/u/0x00pf">@0x00pf</a><br>
<a href="https://web.archive.org/web/20160608095854/http://fluxius.handgrep.se/2011/10/20/the-art-of-elf-analysises-and-exploitations/" class="inline-onebox" rel="noopener nofollow ugc">The Art Of ELF: Analysis and Exploitations | FlUxIuS' Blog</a><br>
<a href="https://0xf00i.github.io/2022/05/28/Reverse-engineering-cheat-sheet.html" class="inline-onebox" rel="noopener nofollow ugc">Reverse Engineering Cheat sheet</a></p>
            <p><small>5 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/reverseme-cipher/35518">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/reverseme-cipher/35518</link>
          <pubDate>Mon, 12 Jun 2023 00:17:00 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-35518</guid>
          <source url="https://0x00sec.org/t/reverseme-cipher/35518.rss">[ReverseMe]Cipher</source>
        </item>
        <item>
          <title>[ReverseMe] Recursion</title>
          <dc:creator><![CDATA[GnikDroy]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h1>Goal</h1>
<p>Get the flag which is in the form of <code>REVERSE{...}</code></p>
<h1>Rules</h1>
<p>No rules. Everything is allowed.</p>
<h1>Author assigned difficulty</h1>
<p>None.</p>
<h1>Community assigned difficulty</h1>
<p><a href="https://0x00sec.org/t/reverseme-recursion/21802/1">Click to view the poll.</a></p>
<p>Best of luck! <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<h1>Executable</h1>
<pre><code>f0VMRgIBAQAAAAAAAAAAAAMAPgABAAAAQBEAAAAAAABAAAAAAAAAAEAxAAAAAAAAAAAAAEAAOAAN
AEAAHQAcAAYAAAAEAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAA2AIAAAAAAADYAgAAAAAAAAgA
AAAAAAAAAwAAAAQAAAAYAwAAAAAAABgDAAAAAAAAGAMAAAAAAAAcAAAAAAAAABwAAAAAAAAAAQAA
AAAAAAABAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgHAAAAAAAAyAcAAAAAAAAAEAAA
AAAAAAEAAAAFAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAA1QQAAAAAAADVBAAAAAAAAAAQAAAA
AAAAAQAAAAQAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAQDQAAAAAAABANAAAAAAAAABAAAAAA
AAABAAAABgAAAIAtAAAAAAAAgD0AAAAAAACAPQAAAAAAAJACAAAAAAAAmAIAAAAAAAAAEAAAAAAA
AAIAAAAGAAAAkC0AAAAAAACQPQAAAAAAAJA9AAAAAAAA8AEAAAAAAADwAQAAAAAAAAgAAAAAAAAA
BAAAAAQAAAA4AwAAAAAAADgDAAAAAAAAOAMAAAAAAAAgAAAAAAAAACAAAAAAAAAACAAAAAAAAAAE
AAAABAAAAFgDAAAAAAAAWAMAAAAAAABYAwAAAAAAAEQAAAAAAAAARAAAAAAAAAAEAAAAAAAAAFPl
dGQEAAAAOAMAAAAAAAA4AwAAAAAAADgDAAAAAAAAIAAAAAAAAAAgAAAAAAAAAAgAAAAAAAAAUOV0
ZAQAAAC4KwAAAAAAALgrAAAAAAAAuCsAAAAAAABEAAAAAAAAAEQAAAAAAAAABAAAAAAAAABR5XRk
BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAFLldGQE
AAAAgC0AAAAAAACAPQAAAAAAAIA9AAAAAAAAgAIAAAAAAACAAgAAAAAAAAEAAAAAAAAAL2xpYjY0
L2xkLWxpbnV4LXg4Ni02NC5zby4yAAAAAAAEAAAAEAAAAAUAAABHTlUAAgAAwAQAAAADAAAAAAAA
AAQAAAAUAAAAAwAAAEdOVQCSJZX5oSYUqp1zI9+6jS/MiiKregQAAAAQAAAAAQAAAEdOVQAAAAAA
AwAAAAIAAAAAAAAAAAAAAAIAAAANAAAAAQAAAAYAAAAAAIEAAAAAAA0AAAAAAAAA0WXObQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAEgAAAAAAAAAAAAAAAAAAAAAAAACKAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAALAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEgAAAAAAAAAAAAAAAAAA
AAAAAAAwAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAApAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAA
EgAAAAAAAAAAAAAAAAAAAAAAAABXAAAAEgAAAAAAAAAAAAAAAAAAAAAAAACmAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAA6AAAAEgAAAAAAAAAAAAAAAAAAAAAAAABBAAAAEgAAAAAAAAAAAAAAAAAAAAAA
AAC1AAAAIAAAAAAAAAAAAAAAAAAAAAAAAABIAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAAbGliYy5z
by42AHB1dHMAX19zdGFja19jaGtfZmFpbABwdXRjaGFyAHByaW50ZgBtbWFwAHJlYWQAbWVtY3B5
AG11bm1hcABfX2N4YV9maW5hbGl6ZQBfX2xpYmNfc3RhcnRfbWFpbgBHTElCQ18yLjE0AEdMSUJD
XzIuNABHTElCQ18yLjIuNQBfSVRNX2RlcmVnaXN0ZXJUTUNsb25lVGFibGUAX19nbW9uX3N0YXJ0
X18AX0lUTV9yZWdpc3RlclRNQ2xvbmVUYWJsZQAAAAACAAAAAgADAAIAAgACAAIAAAAEAAIAAAAC
AAAAAAABAAMAAQAAABAAAAAAAAAAlJGWBgAABABpAAAAEAAAABRpaQ0AAAMAdAAAABAAAAB1GmkJ
AAACAH4AAAAAAAAAgD0AAAAAAAAIAAAAAAAAACASAAAAAAAAiD0AAAAAAAAIAAAAAAAAAOARAAAA
AAAACEAAAAAAAAAIAAAAAAAAAAhAAAAAAAAA2D8AAAAAAAAGAAAAAgAAAAAAAAAAAAAA4D8AAAAA
AAAGAAAACAAAAAAAAAAAAAAA6D8AAAAAAAAGAAAACQAAAAAAAAAAAAAA8D8AAAAAAAAGAAAADAAA
AAAAAAAAAAAA+D8AAAAAAAAGAAAADQAAAAAAAAAAAAAAmD8AAAAAAAAHAAAAAQAAAAAAAAAAAAAA
oD8AAAAAAAAHAAAAAwAAAAAAAAAAAAAAqD8AAAAAAAAHAAAABAAAAAAAAAAAAAAAsD8AAAAAAAAH
AAAABQAAAAAAAAAAAAAAuD8AAAAAAAAHAAAABgAAAAAAAAAAAAAAwD8AAAAAAAAHAAAABwAAAAAA
AAAAAAAAyD8AAAAAAAAHAAAACgAAAAAAAAAAAAAA0D8AAAAAAAAHAAAACwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPMPHvpIg+wI
SIsF2S8AAEiFwHQC/9BIg8QIwwAAAAAA/zViLwAA8v8lYy8AAA8fAPMPHvpoAAAAAPLp4f///5Dz
Dx76aAEAAADy6dH///+Q8w8e+mgCAAAA8unB////kPMPHvpoAwAAAPLpsf///5DzDx76aAQAAADy
6aH///+Q8w8e+mgFAAAA8umR////kPMPHvpoBgAAAPLpgf///5DzDx76aAcAAADy6XH///+Q8w8e
+vL/JT0vAAAPH0QAAPMPHvry/yXNLgAADx9EAADzDx768v8lxS4AAA8fRAAA8w8e+vL/Jb0uAAAP
H0QAAPMPHvry/yW1LgAADx9EAADzDx768v8lrS4AAA8fRAAA8w8e+vL/JaUuAAAPH0QAAPMPHvry
/yWdLgAADx9EAADzDx768v8llS4AAA8fRAAA8w8e+jHtSYnRXkiJ4kiD5PBQVEyNBWYDAABIjQ3v
AgAASI09wQAAAP8Vci4AAPSQSI09mS4AAEiNBZIuAABIOfh0FUiLBU4uAABIhcB0Cf/gDx+AAAAA
AMMPH4AAAAAASI09aS4AAEiNNWIuAABIKf5IifBIwe4/SMH4A0gBxkjR/nQUSIsFJS4AAEiFwHQI
/+BmDx9EAADDDx+AAAAAAPMPHvqAPSUuAAAAdStVSIM9Ai4AAABIieV0DEiLPQYuAADoqf7//+hk
////xgX9LQAAAV3DDx8Aww8fgAAAAADzDx766Xf////zDx76VUiJ5UFUU0iD7DBkSIsEJSgAAABI
iUXoMcBIieBIicO4UAAAAEiYSIPoAUiJRdC4UAAAAEiYSYnAQbkAAAAAuFAAAABImEiJxr8AAAAA
uFAAAABImLoQAAAASIPqAUgB0LkQAAAAugAAAABI9/FIa8AQSInCSIHiAPD//0iJ4Ugp0UiJykg5
1HQSSIHsABAAAEiDjCT4DwAAAOvpSInCgeL/DwAASCnUSInCgeL/DwAASIXSdBAl/w8AAEiD6AhI
AeBIgwgASIngSIPAAEiJRdhIjT0HGAAA6Mb9//+4UAAAAEhj0EiLRdhIica/AAAAAOjt/f//iUXI
uFAAAAA5Rch0GUiNPeoXAADolP3//7j/////SInc6egAAABBuQAAAABBuP////+5IgAAALoHAAAA
vuQKAAC/AAAAAOiC/f//SIlF4EiDfeD/D4SsAAAASItF4LrkCgAASI01kwwAAEiJx+iL/f//SItF
2EmJxEiLVeC4AAAAAP/SiUXMg33MAXVXSI09iRcAALgAAAAA6D/9///HRcQAAAAA6ydIi1XYi0XE
SJgPtgQCD7bAicZIjT2EFwAAuAAAAADoE/3//4NFxAG4UAAAADlFxHzPv30AAADou/z//+sRSI09
YhcAALgAAAAA6Oj8//9Ii0XgvuQKAABIicfoB/3//0iJ3LgAAAAASItd6GRIMxwlKAAAAHQF6Jv8
//9IjWXwW0FcXcNmkPMPHvpBV0yNPSMpAABBVkmJ1kFVSYn1QVRBifxVSI0tFCkAAFNMKf1Ig+wI
6H/7//9Iwf0DdB8x2w8fgAAAAABMifJMie5EiedB/xTfSIPDAUg53XXqSIPECFtdQVxBXUFeQV/D
ZmYuDx+EAAAAAADzDx76wwAAAPMPHvpIg+wISIPECMMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAIAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAEiLNXwAAABBuiIAAAC4CQAAALoHAAAAScfA/////0gx/00xyQ8FSDHJ
SDH/SI0VWAAAAIoUCoDyn4gUCIn+SMHuGEjB5whAANdIMfdI/8FIOw0tAAAAddRBizQkOf4PlMN1
CkmDxARQ/9CIw1hIicdIizUMAAAAuAsAAAAPBUgPtsPDWQoAAAAAAADSrlbWWF9gYGBg165gJZif
n58nlp+fn94lvZ+fn9cUqsCfn5+QmteuVteuYNcSisefn58Vi5UfbSkXi5cWYddecYfXXniX359I
165o12Be16SSsp+fn+pL3hSru6ZhkAtc6pXP1hxbm2BPF1zH1xZYJ5Sfn5/XFKqYn5+fkJrXkClc
XFGWn5+fn5+fZBjgYO7p1tbW1mGiHFspKSmRICkpKZMuKSkpaJMLKSkpYRjWJixhGNZhGOBhpDxx
KSkpoz0jqdsloT0hoNdh6McxYejOIWkp/mEY3mHW6GESJAQpKSlc/WiiHQ0Q1ya96lwjYKrtLXnW
+aHqcWGg7pEiKSkpYaIcLikpKSYsYSaf6upqICkpKSkpKW0U2mzi5dra2tqdLCUlJW2uEEglJSVk
nwclJSWfIiUlJWgU7CogbRTsbRTabagwfSUlJa8xL6XXZ60xLazbbeTLPW3kwi1lJfJtFNJt2uRt
HigIJSUlUPFkrhEBHNsqseZQL3VspuEh2vWt5n1trOJtrhApJSUlnS4lJSUqIG0qk+bmnS0lJSUl
JSUuoKeYmJiYL1aY3WBnZ2cv7FIKZ2dnKlauJt1FZ2dn325nZ2doYi9WmC9Wri/qcj9nZ2ftc23n
lS3vc2/umS+miX8vpoBvJ2ewL1aQL5imL1xqSmdnZxKzJuxTQ16ZaPOkEm03LuSjY5i376Q/L+6g
L+xSa2dnZ99sZ2dnaGIvaNGkpEpvZ2dnZ2dnZRzSYBzklyotLS1lphhcLS0tZOrt0tLS0pUkLS0t
bJcPLS0tIihlHNJlHORloDh1LS0tpzknrd/npTklpNNl7MM1ZezKJW0t+mUc2mXS7GUWIAAtLS1Y
+WymGQkU0yK57lgnfWSu6SnS/aXudWWk6pUmLS0tZaYYKi0tLSIoZSKb7u6PKi0tLS0tLaZdxefn
569s0pHn5+euICcYGBgYr9YYqtYuX+7n5+dd4Ofn5+jir9YYr9Yur2ryv+fn523z7WcVoW/z724Z
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
7J+piaSkpNFw5S+QgJ1aqzBn0a707SdgoFt0LGf87C1j7C+RqKSkpByvpKSkq6HsqxJnZ6ykpKSk
pKSkxEtMjYyMjE8AAAAAUAAAAEVudGVyIHRoZSBwYXNzd29yZDogAEluc3VmZmljaWVudCBwYXNz
Y29kZSBsZW5ndGgAAABDb25ncmF0dWxhdGlvbnMhIFRoZSBmbGFnIGlzOiBSRVZFUlNFewAlMDJ4
AAAAAABTb3JyeS4gV3JvbmcgZmxhZy4gVGhlIHBhc3N3b3JkIG1pZ2h0IG5vdCBiZSBwcmludGFi
bGUgY2hhcmFjdGVycy4gOikAAAABGwM7RAAAAAcAAABo5P//eAAAAPjk//+gAAAACOX//7gAAACI
5f//YAAAAHHm///QAAAAmOj///gAAAAI6f//QAEAAAAAAAAUAAAAAAAAAAF6UgABeBABGwwHCJAB
AAAUAAAAHAAAACDl//8vAAAAAEQHEAAAAAAkAAAANAAAAOjj//+QAAAAAA4QRg4YSg8LdwiAAD8a
OiozJCIAAAAAFAAAAFwAAABQ5P//EAAAAAAAAAAAAAAAFAAAAHQAAABI5P//gAAAAAAAAAAAAAAA
JAAAAIwAAACZ5f//JQIAAABFDhCGAkMNBkeMA4MEAxUCDAcIAAAAAEQAAAC0AAAAmOf//2UAAAAA
Rg4QjwJJDhiOA0UOII0ERQ4ojAVEDjCGBkgOOIMHRw5Abg44QQ4wQQ4oQg4gQg4YQg4QQg4IABAA
AAD8AAAAwOf//wUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAgEgAAAAAAAOARAAAAAAAAAQAAAAAAAAABAAAAAAAAAAwAAAAA
AAAAABAAAAAAAAANAAAAAAAAAMgUAAAAAAAAGQAAAAAAAACAPQAAAAAAABsAAAAAAAAACAAAAAAA
AAAaAAAAAAAAAIg9AAAAAAAAHAAAAAAAAAAIAAAAAAAAAPX+/28AAAAAoAMAAAAAAAAFAAAAAAAA
ABgFAAAAAAAABgAAAAAAAADIAwAAAAAAAAoAAAAAAAAAzwAAAAAAAAALAAAAAAAAABgAAAAAAAAA
FQAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAgD8AAAAAAAACAAAAAAAAAMAAAAAAAAAAFAAAAAAAAAAH
AAAAAAAAABcAAAAAAAAACAcAAAAAAAAHAAAAAAAAAEgGAAAAAAAACAAAAAAAAADAAAAAAAAAAAkA
AAAAAAAAGAAAAAAAAAAeAAAAAAAAAAgAAAAAAAAA+///bwAAAAABAAAIAAAAAP7//28AAAAACAYA
AAAAAAD///9vAAAAAAEAAAAAAAAA8P//bwAAAADoBQAAAAAAAPn//28AAAAAAwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAJA9AAAAAAAAAAAAAAAAAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAA
AABQEAAAAAAAAGAQAAAAAAAAcBAAAAAAAACAEAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAAAAAAEdDQzogKFVi
dW50dSA5LjMuMC0xMHVidW50dTIpIDkuMy4wAAAuc2hzdHJ0YWIALmludGVycAAubm90ZS5nbnUu
cHJvcGVydHkALm5vdGUuZ251LmJ1aWxkLWlkAC5ub3RlLkFCSS10YWcALmdudS5oYXNoAC5keW5z
eW0ALmR5bnN0cgAuZ251LnZlcnNpb24ALmdudS52ZXJzaW9uX3IALnJlbGEuZHluAC5yZWxhLnBs
dAAuaW5pdAAucGx0LmdvdAAucGx0LnNlYwAudGV4dAAuZmluaQAucm9kYXRhAC5laF9mcmFtZV9o
ZHIALmVoX2ZyYW1lAC5pbml0X2FycmF5AC5maW5pX2FycmF5AC5keW5hbWljAC5kYXRhAC5ic3MA
LmNvbW1lbnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAACwAAAAEAAAACAAAAAAAAABgDAAAAAAAAGAMAAAAAAAAcAAAAAAAA
AAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAABMAAAAHAAAAAgAAAAAAAAA4AwAAAAAAADgDAAAAAAAA
IAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAmAAAABwAAAAIAAAAAAAAAWAMAAAAAAABY
AwAAAAAAACQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAOQAAAAcAAAACAAAAAAAAAHwD
AAAAAAAAfAMAAAAAAAAgAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAEcAAAD2//9vAgAA
AAAAAACgAwAAAAAAAKADAAAAAAAAJAAAAAAAAAAGAAAAAAAAAAgAAAAAAAAAAAAAAAAAAABRAAAA
CwAAAAIAAAAAAAAAyAMAAAAAAADIAwAAAAAAAFABAAAAAAAABwAAAAEAAAAIAAAAAAAAABgAAAAA
AAAAWQAAAAMAAAACAAAAAAAAABgFAAAAAAAAGAUAAAAAAADPAAAAAAAAAAAAAAAAAAAAAQAAAAAA
AAAAAAAAAAAAAGEAAAD///9vAgAAAAAAAADoBQAAAAAAAOgFAAAAAAAAHAAAAAAAAAAGAAAAAAAA
AAIAAAAAAAAAAgAAAAAAAABuAAAA/v//bwIAAAAAAAAACAYAAAAAAAAIBgAAAAAAAEAAAAAAAAAA
BwAAAAEAAAAIAAAAAAAAAAAAAAAAAAAAfQAAAAQAAAACAAAAAAAAAEgGAAAAAAAASAYAAAAAAADA
AAAAAAAAAAYAAAAAAAAACAAAAAAAAAAYAAAAAAAAAIcAAAAEAAAAQgAAAAAAAAAIBwAAAAAAAAgH
AAAAAAAAwAAAAAAAAAAGAAAAGAAAAAgAAAAAAAAAGAAAAAAAAACRAAAAAQAAAAYAAAAAAAAAABAA
AAAAAAAAEAAAAAAAABsAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAjAAAAAEAAAAGAAAA
AAAAACAQAAAAAAAAIBAAAAAAAACQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAJcAAAAB
AAAABgAAAAAAAACwEAAAAAAAALAQAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAA
AACgAAAAAQAAAAYAAAAAAAAAwBAAAAAAAADAEAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA
ABAAAAAAAAAAqQAAAAEAAAAGAAAAAAAAAEARAAAAAAAAQBEAAAAAAACFAwAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAK8AAAABAAAABgAAAAAAAADIFAAAAAAAAMgUAAAAAAAADQAAAAAAAAAA
AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAC1AAAAAQAAAAIAAAAAAAAAACAAAAAAAAAAIAAAAAAAALYL
AAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAvQAAAAEAAAACAAAAAAAAALgrAAAAAAAAuCsA
AAAAAABEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAMsAAAABAAAAAgAAAAAAAAAALAAA
AAAAAAAsAAAAAAAAEAEAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAADVAAAADgAAAAMAAAAA
AAAAgD0AAAAAAACALQAAAAAAAAgAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAA4QAAAA8A
AAADAAAAAAAAAIg9AAAAAAAAiC0AAAAAAAAIAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAIAAAAAAAA
AO0AAAAGAAAAAwAAAAAAAACQPQAAAAAAAJAtAAAAAAAA8AEAAAAAAAAHAAAAAAAAAAgAAAAAAAAA
EAAAAAAAAACbAAAAAQAAAAMAAAAAAAAAgD8AAAAAAACALwAAAAAAAIAAAAAAAAAAAAAAAAAAAAAI
AAAAAAAAAAgAAAAAAAAA9gAAAAEAAAADAAAAAAAAAABAAAAAAAAAADAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAACAAAAAAAAAAAAAAAAAAAAPwAAAAIAAAAAwAAAAAAAAAQQAAAAAAAABAwAAAAAAAACAAA
AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAQAAAQAAADAAAAAAAAAAAAAAAAAAAAAQMAAA
AAAAACQAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAMAAAAAAAAAAAAAAAAAAAAA
AAAANDAAAAAAAAAKAQAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA==
</code></pre>
<h3>Build</h3>
<pre><code class="lang-auto">cat rev.elf.b64 | base64 -d  &gt; rev.elf &amp;&amp; chmod +x rev.elf
</code></pre>
            <p><small>8 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/reverseme-recursion/21802">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/reverseme-recursion/21802</link>
          <pubDate>Tue, 16 Jun 2020 07:59:13 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-21802</guid>
          <source url="https://0x00sec.org/t/reverseme-recursion/21802.rss">[ReverseMe] Recursion</source>
        </item>
        <item>
          <title>CSCG 2020 reversing intro challenges writeup (easy level)</title>
          <dc:creator><![CDATA[jeff]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Hello everyone, I hope all of you are safe out there, before we start I have to mention that I don’t have a good  experience in this field yet, so if you spot any mistakes or think of better methods of doing this, please let me know in the comments</p>
<p><a href="https://earth.2020.cscg.de/" rel="noopener nofollow ugc">CSCG</a> 2020 is a German Cyber Security Challenge Qualification <a href="https://www.youtube.com/watch?v=8ev9ZX9J45A" rel="noopener nofollow ugc">CTF</a> which has some entry level challenges in couple fields, today we will be looking at the first 3 reverse engineering challenges</p>
<p>This write-up is targeting beginners like my self, so I will be demonstrating some easy ways to solve each challenge</p>
<h2>PREREQUISITE</h2>
<p>In order to understand this write-up right, it’s recommended to have a basic idea about the following subjects<br>
• how C language code is structured<br>
• assembly language knowledge and debugging<br>
• XOR<br>
• some familiarity with Linux</p>
<h2>first challenge</h2>
<p>so let’s begin. After setting up an account in the CTF website, downloading the first challenge and unzipping it, you get two files, flag and rev1, the latter appears to be executable<br>
now we need to get an idea about what those files might be, <code>file</code> is a great utility to get couple information about files, <code>file *</code> gives the following result :</p>
<pre><code class="lang-auto">flag: ASCII text
rev1: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=c26549fbcc84a4199635818d97bd48b69eea5fb2, not stripped
</code></pre>
<p>this might seem a bit overwhelming but in an entry level challenge we’re only interested in 2 peaces of information, <code>ELF 64-bit executable</code>, and <code>not stripped</code>, meaning rev1 is an executable that runs under Linux 64 bits systems, and contains some strings that will help us debugging/reversing it if we had to</p>
<p>the first file is obviously just a text file with the content : CSCG{real_flag_is_on_the_server}, as it was mentioned on the website that we should send the password we get from the executable to a server to get the actual flag</p>
<p><strong>So how would we approach this ?</strong></p>
<p>Trying to execute rev1 gives the following result<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/8/86b6f0d39147f4dc40eb6340c6aca914398dd406.png" alt="1-asking_for_password" data-base62-sha1="jdJVDVKslG2wOqtF8M3ZVitOpVk" width="283" height="85"></p>
<p>“password is not password” <strong>hmm okay</strong></p>
<p>“asking for a password” means that rev1 takes your input and compare it with some string that may or may not be hard-coded in the binary</p>
<p><code>strings</code> is a great command to get all hard-coded strings in an executable</p>
<p><code>strings rev1</code> gives the following result :</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/5/5682b24d44081ae6d21512598d11a35fabacd739.png" data-download-href="/uploads/short-url/clj4RmXFVL9ieE9kWLw88kz6SIV.png?dl=1" title="2-strings" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/5/5682b24d44081ae6d21512598d11a35fabacd739_2_690x473.png" alt="2-strings" data-base62-sha1="clj4RmXFVL9ieE9kWLw88kz6SIV" width="690" height="473" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/5/5682b24d44081ae6d21512598d11a35fabacd739_2_690x473.png, https://0x00sec.s3.amazonaws.com/original/2X/5/5682b24d44081ae6d21512598d11a35fabacd739.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/5/5682b24d44081ae6d21512598d11a35fabacd739.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/5/5682b24d44081ae6d21512598d11a35fabacd739_2_10x10.png"></a></div><p></p>
<p>We can ignore most of it, but if you look close enough, you’ll see “give me your password” which is what we got earlier, and right underneath it, this weird string “ y0u_5h3ll_p455”, (from the Lord of the Rings series <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:">) let’s try throwing that string at rev1 and …</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/9/933b2f4343a9c1b77cef8c3203aeebd268a2b6f7.png" alt="3-voila" data-base62-sha1="l0sZpWreMYgHuvgXAE9dOeAdYNh" width="489" height="103"></p>
<p>now sending that string to the server gives the following result</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/a/a6cb4e74d5a0a1c3faf318acdcbdfc2ac6f8c4d2.png" alt="4-nc" data-base62-sha1="nNwQdppeclHjeUAJ9QCgsUIVhvk" width="426" height="108"></p>
<p>Voilà! Easy 40 points earned without trying to debug anything</p>
<p>if you don’t like working with terminals that much, there is this nice tool called <a href="https://binary.ninja/" rel="noopener nofollow ugc"> <strong>Binary</strong> <strong>Ninja</strong> </a>, which is great when it comes to static analysis, running it with rev1 gives us a nice graphical interface explains the executable branches (this where some assembly knowledge comes handy) there are also 3 ways of displaying code, from pure assembly to human-friendy-code, however I won’t be using that as I prefer reading the former <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>after jumping to main() (which the tools detect the address of, automatically, thanks to the binary not being stripped), we get this view<br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/a/a753bf99221a3e3bc37f66dd4e0d70cbb486a986.png" data-download-href="/uploads/short-url/nSfaoPpKnMt1WG2Z0C8F06R2Pfo.png?dl=1" title="5-binaryninja" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a753bf99221a3e3bc37f66dd4e0d70cbb486a986_2_475x500.png" alt="5-binaryninja" data-base62-sha1="nSfaoPpKnMt1WG2Z0C8F06R2Pfo" width="475" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a753bf99221a3e3bc37f66dd4e0d70cbb486a986_2_475x500.png, https://0x00sec.s3.amazonaws.com/original/2X/a/a753bf99221a3e3bc37f66dd4e0d70cbb486a986.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/a/a753bf99221a3e3bc37f66dd4e0d70cbb486a986.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a753bf99221a3e3bc37f66dd4e0d70cbb486a986_2_10x10.png"></a></div><p></p>
<p>even if you have no idea about what’s going on, you can easily spot the password, and strcmp() which is used to compare it with your input</p>
<p>there also the command <code>ltrace</code> which you can use to trace system calls, after executing it with rev1,and throwing a random string at it,  you can see it being compared just like in the following picture</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/1/14b6833bb36873459c17bf79b2d16730ad5cf622.png" data-download-href="/uploads/short-url/2XeA12f6LC6qGBuVCOL4S17vUXw.png?dl=1" title="6-trace" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/1/14b6833bb36873459c17bf79b2d16730ad5cf622_2_690x183.png" alt="6-trace" data-base62-sha1="2XeA12f6LC6qGBuVCOL4S17vUXw" width="690" height="183" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/1/14b6833bb36873459c17bf79b2d16730ad5cf622_2_690x183.png, https://0x00sec.s3.amazonaws.com/original/2X/1/14b6833bb36873459c17bf79b2d16730ad5cf622.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/1/14b6833bb36873459c17bf79b2d16730ad5cf622.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/1/14b6833bb36873459c17bf79b2d16730ad5cf622_2_10x10.png"></a></div><p></p>
<p><strong>note</strong> : we see the same string in both read() and strcmp() because rev1 compares our input with the password directly without changing it<br>
and those where couple way of how you can approach this binary</p>
<h2>second challenge</h2>
<p>the second challenges, gives the same files, same prompt, unless there is no hard-coded string this time, try running <code>strings</code> and you won’t see any password</p>
<p>running it with binary ninja, we get the following view<br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/f/f472ecc4492972195d53800009535c5184d7dfda.png" data-download-href="/uploads/short-url/ySuJ99CFYu6Q16ryDoDX4VV7rrI.png?dl=1" title="7-second_challenge_binaryninja" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/f/f472ecc4492972195d53800009535c5184d7dfda_2_690x340.png" alt="7-second_challenge_binaryninja" data-base62-sha1="ySuJ99CFYu6Q16ryDoDX4VV7rrI" width="690" height="340" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/f/f472ecc4492972195d53800009535c5184d7dfda_2_690x340.png, https://0x00sec.s3.amazonaws.com/original/2X/f/f472ecc4492972195d53800009535c5184d7dfda.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/f/f472ecc4492972195d53800009535c5184d7dfda.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/f/f472ecc4492972195d53800009535c5184d7dfda_2_10x10.png"></a></div><p></p>
<p>hmm, this time rev2 is not comparing our input string directly, but rather using a loop (denoted by the green and the blue lines) to change it byte by byte (subtracting 0x77 from each byte to be specific hence the <code>sub eax, 0x77</code>), and that explains why we couldn’t find any useful strings with the <code>strings</code> command, because all the bytes are non-ascii values</p>
<p>now we know that each byte is decreased by 0x77 and compared to something else, so to retrieve the password we should know that “something else” and increase each byte of it by 0x77</p>
<p>The easiest way to figure it out would be using <code>ltrace</code> command again, which shows us the following<br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/a/a3492ad5e52accae247aa6caacd6dbee7f2f35b0.png" data-download-href="/uploads/short-url/niuAs6yYNyTFRp6uNouhO7xvayk.png?dl=1" title="8-ltrace_again" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a3492ad5e52accae247aa6caacd6dbee7f2f35b0_2_690x144.png" alt="8-ltrace_again" data-base62-sha1="niuAs6yYNyTFRp6uNouhO7xvayk" width="690" height="144" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a3492ad5e52accae247aa6caacd6dbee7f2f35b0_2_690x144.png, https://0x00sec.s3.amazonaws.com/original/2X/a/a3492ad5e52accae247aa6caacd6dbee7f2f35b0.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/a/a3492ad5e52accae247aa6caacd6dbee7f2f35b0.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a3492ad5e52accae247aa6caacd6dbee7f2f35b0_2_10x10.png"></a></div><p></p>
<p>now we see some weird characters which are just an encoding to represent non ascii characters I believe, we need to add 0x77 to each byte to get the password, for that I wrote something like this</p>
<pre><code class="lang-auto">#include&lt;stdio.h&gt;

int main(void){
        unsigned int i;
        int pass[] = {'\374', '\375', '\352', '\300', '\272', '\354', '\350', '\375', '\373', '\275', '\367', '\276', '\357', '\271', '\373', '\366', '\275', '\300', '\272', '\271', '\367', '\350', '\362', '\375', '\350', '\362', '\374'};

        for(i = 0 ; i &lt; sizeof(pass) / sizeof(pass[0]) ; i++)
                putchar(pass[i] + 0x77);
        puts("");
        return 0;
}

</code></pre>
<p>running this programs gives : “sta71c_tr4n5f0rm4710n_it_is” which I’m positive that it’s another movie’s quote that I don’t know about</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/7/77833afe2a302442307100f0f5551e9bde82ab48.png" alt="9-second_password" data-base62-sha1="h3fYGUIAEulMnXXwmg4AEnd4toQ" width="374" height="41"></p>
<p>submitting it to the server we get</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/c/cce5bdb3587f3a1b1d4f033c5ac06408c8a8a8c0.png" alt="10-second_challenge_solved" data-base62-sha1="teBCyk2r5TEFkwgc2Uv3kU6CweI" width="690" height="88"><br>
another not-so-hard 47 points !</p>
<h2>Third challenge</h2>
<p>this is very similar to the second one, except this time we get a password with <code>file</code> and <code>ltrace</code>, just one little problem, it’s not the same!</p>
<p><code>string</code>’s output :<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/1/13a2190db8e9ac0ce495d175d45dbb247842bc38.png" alt="12-strings_output" data-base62-sha1="2NGmD72Tvo60tgzrlyFcBk1at5e" width="348" height="86"></p>
<p><code>ltrace</code>’s output :<br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/6/62f485d1a62086f85e96f0007c3646dc23187e79.png" data-download-href="/uploads/short-url/e7oG8wCAvveeBUNfD457YNBEYWd.png?dl=1" title="13-ltrace_output" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/6/62f485d1a62086f85e96f0007c3646dc23187e79_2_690x173.png" alt="13-ltrace_output" data-base62-sha1="e7oG8wCAvveeBUNfD457YNBEYWd" width="690" height="173" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/6/62f485d1a62086f85e96f0007c3646dc23187e79_2_690x173.png, https://0x00sec.s3.amazonaws.com/original/2X/6/62f485d1a62086f85e96f0007c3646dc23187e79.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/6/62f485d1a62086f85e96f0007c3646dc23187e79.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/6/62f485d1a62086f85e96f0007c3646dc23187e79_2_10x10.png"></a></div><p></p>
<p><code>strings</code> gives us 2 lines, when <code>ltrace</code> show one long line only, with more characters than <code>strings</code>'s output, well … this is because strings by definition are a sequence of bytes followed by and null byte (‘\0’ byte), we can see that our password in second picture contains 3 of them, so <code>strings</code> sees that password as 4 separate strings, as for why the second one has more character than the first, <code>strings</code> only shows strings above a certain length, so “17” and “5J” are ignored because they’re too short (are you tired of the word “strings” yet ? <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>Now we know the password, now we just have to figure out exactly what input we should throw at rev3 so it can match that (remember that rev3 modifies our input before comparing it)</p>
<p>and for that we need to take a look at the assembly code, opening binaryninja, we get this view</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/a/ab8ec8ccc019729f10010ecbb108ba26e1f95c0e.png" data-download-href="/uploads/short-url/otFyOCVTkz6faFLtlKj2ZNx8yPY.png?dl=1" title="11-xor" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/a/ab8ec8ccc019729f10010ecbb108ba26e1f95c0e_2_690x352.png" alt="11-xor" data-base62-sha1="otFyOCVTkz6faFLtlKj2ZNx8yPY" width="690" height="352" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/a/ab8ec8ccc019729f10010ecbb108ba26e1f95c0e_2_690x352.png, https://0x00sec.s3.amazonaws.com/original/2X/a/ab8ec8ccc019729f10010ecbb108ba26e1f95c0e.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/a/ab8ec8ccc019729f10010ecbb108ba26e1f95c0e.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/a/ab8ec8ccc019729f10010ecbb108ba26e1f95c0e_2_10x10.png"></a></div><p></p>
<p>we’re only focusing on the left box cause that’s where the magic happens, if you can’t figure out what’s happening there, I advise you to use the other human-friendly displaying mode I talked about earlier, or just learn some assembly if you’re interested in this field <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>basically the codes loops over each byte of the input, xor it with (its index in the input string + 0xa) add subtract two from it</p>
<p>so if your input is “hey”</p>
<p>the code will do the following</p>
<pre><code class="lang-auto">pass[0] = (‘h’ ^ (0 + 0xa) ) -2

pass[1] = (‘e’ ^ (1 + 0xa) ) - 2
</code></pre>
<p>so to reverse this algorithm we should add 2 to each byte of the password we got earlier, then Xor it with (it’s index + 0xa)</p>
<p>and for that I wrote this code</p>
<pre><code class="lang-auto">
#include&lt;stdio.h&gt;
#include&lt;string.h&gt;

int main(void){
        char ptr[] = {'l', 'p', '`', '7', 'a', '&lt;', 'q', 'L', 'w', '\036', 'k', 'H', 'o', 'p', 't', '(', 'f', '-', 'f', '*', ',', 'o','}', 'V', '\017', '\025', 'J'};
        unsigned int i = 0;

        for(i = 0;i &lt; sizeof(ptr)/sizeof(ptr[0]); i++)
                printf("%c", (ptr[i] + 2) ^ (0xa + i));
        puts("");
        return 0;
}
</code></pre>
<p>After running this code we get the following flag : “dyn4m1c_k3y_gen3r4t10n_y34h” which all I can say about is “lol!”</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d88419aedc2631cf8691e316a67611574347fbfb.png" alt="14-last_flag" data-base62-sha1="uTo9KuGl469QxOiOxqMInDW52j1" width="385" height="46"></p>
<p>One last thing we need to do …<br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/7/7333aac3f2c7454b9a59194a16f227af4226f39a.png" data-download-href="/uploads/short-url/gr7BwAfvkeeQDF6oiVB87pd9q0a.png?dl=1" title="15-last_hecking_flag" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/7/7333aac3f2c7454b9a59194a16f227af4226f39a_2_690x92.png" alt="15-last_hecking_flag" data-base62-sha1="gr7BwAfvkeeQDF6oiVB87pd9q0a" width="690" height="92" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/7/7333aac3f2c7454b9a59194a16f227af4226f39a_2_690x92.png, https://0x00sec.s3.amazonaws.com/original/2X/7/7333aac3f2c7454b9a59194a16f227af4226f39a.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/7/7333aac3f2c7454b9a59194a16f227af4226f39a.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/7/7333aac3f2c7454b9a59194a16f227af4226f39a_2_10x10.png"></a></div><p></p>
<p>And there is our last laughable flag that gets us another 51 points !<br>
I really hopped I could explain this so even beginners can understand and not find it boring</p>
<p>as this my first write up, I would like to thank <a class="mention" href="https://0x00sec.org/u/dtm">@dtm</a> and <a class="mention" href="https://0x00sec.org/u/leeky">@leeky</a> so much for putting up with my most-of-the-time-stupid questions, as well as other people who put me on track, like yeni, ayoub and hammadi</p>
<p>if anything unclear or fuzzy don’t hesitate to ask about it, Jeff’s out</p>
            <p><small>7 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/cscg-2020-reversing-intro-challenges-writeup-easy-level/20096">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/cscg-2020-reversing-intro-challenges-writeup-easy-level/20096</link>
          <pubDate>Sat, 28 Mar 2020 02:10:56 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-20096</guid>
          <source url="https://0x00sec.org/t/cscg-2020-reversing-intro-challenges-writeup-easy-level/20096.rss">CSCG 2020 reversing intro challenges writeup (easy level)</source>
        </item>
        <item>
          <title>[Reverse Challenge] revme</title>
          <dc:creator><![CDATA[jl3]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h1>revme</h1>
<p>The goal of the challenge is to retrieve the correct password. It’s written in C and stripped.<br>
Hints might come up if needed.</p>
<p>Good luck!</p>
<h2>Difficulty</h2>
<p>0 Easy - 5 Hard</p>
<p><a href="https://0x00sec.org/t/reverse-challenge-revme/17016/1">Click to view the poll.</a></p>
<h2>Challenge</h2>
<p>Retrieving the binary<br>
<code>cat revme.b64 | base64 -d | gunzip &gt; revme</code></p>
<p>sha256sum<br>
<code>a45228ba135c25d1a9826e37fd63e095ddc31ff1f9744afbada2069d61118cd3  revme</code></p>
<h3>revme.b64</h3>
<pre><code class="lang-bash">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
</code></pre>
            <p><small>7 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/reverse-challenge-revme/17016">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/reverse-challenge-revme/17016</link>
          <pubDate>Fri, 18 Oct 2019 09:27:58 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-17016</guid>
          <source url="https://0x00sec.org/t/reverse-challenge-revme/17016.rss">[Reverse Challenge] revme</source>
        </item>
        <item>
          <title>My CrackMe solving</title>
          <dc:creator><![CDATA[hlop]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>since no one replied my challenge <a href="https://0x00sec.org/t/crack-me-10/15920" class="inline-onebox">Crack Me [?/10]</a>, i do it myself</p>

What compiler <a href="https://0x00sec.org/t/my-crackme-solving/16033/1">(click for more details)</a>
<h1>Reversing with IDA</h1>
<p>Load sample to ida, after few minutes you see this <img src="https://0x00sec.s3.amazonaws.com/original/2X/7/77c37c9ffe01824fdb700a4237826d0698106c05.jpeg" alt="%D0%90%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F%202019-09-04%20184512" data-base62-sha1="h5tE9cEQkgTw0UmJVRy4d9jM1St" width="690" height="377"><br>
What i going to do first is load <a href="https://github.com/sibears/IDAGolangHelper" rel="noopener nofollow ugc">this</a> python script<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/7/7dfc803ab69484194f15ef90754dcc2c8668baf4.png" alt="image" data-base62-sha1="hYwFcgkGqCbz1RHoT68McG1aHEo" width="207" height="343"> <img src="https://0x00sec.s3.amazonaws.com/original/2X/c/c806a27269e72ffa785cb737ecdf4ba0315efcd2.png" alt="image" data-base62-sha1="sxvHVIZ3qVj9KYDq8ZtzcTZiXNE" width="204" height="336"><br>
this better<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/b/bacac7d1d17e01d630800988b4305c95ea32ca37.jpeg" alt="image" data-base62-sha1="qErgpXABnB72LoQz5wlkFIaf4lF" width="690" height="377"></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d12d24099ccd2d5659fc25f80c66acf3814a0e22.png" alt="image" data-base62-sha1="tQsvj98OuMgQIYXPT0fcJsc8uXw" width="690" height="37"><br>
<code>23</code> line in decompiled code looks interesting, google it<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d5b1a74323b0a7226b23edd1cf04c762a84500b3.png" alt="image" data-base62-sha1="uuqjWXXvRMK8Mh0278THdKAtt7R" width="466" height="500"><br>
<code>Wails a framework for building desktop applications using Go &amp; Web Technologies</code><br>
let’s look at an <a href="https://wails.app/quick_start.html#high-level-overview" rel="noopener nofollow ugc">example</a><br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/6/642f890d6ab4feedd95212e815014d2b304909ae.png" alt="image" data-base62-sha1="eihAE8mIKM7oSvuT2WFrm2RLonA" width="401" height="500"><br>
find Run function<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/c/c31b4f39303119bddde85842f899e18b683650af.png" alt="image" data-base62-sha1="rPZCfKeNBJxQFSB9j7iN0BFJaLt" width="383" height="55"><br>
and xrefs at her<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/f/f880b7dd8f45e926fa259ba4b009eed1c5cf7f15.png" alt="image" data-base62-sha1="zsmbN6TOmGWViuyiDG29dfjBd89" width="690" height="241"><br>
<code>off_972CE0</code> address for higher-order functions<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/c/c89c7969d824197a3b6275ebe6be4126397f80c9.png" alt="image" data-base62-sha1="sCGJNrJp0uou0VxN66lWAxZub7H" width="455" height="15"><br>
this is classic string compare function in Go<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/e/edb521ffcd12b1ee9546056172f27f3225dcc9c0.png" alt="image" data-base62-sha1="xUReCe2Nqk8GX7rAdh0M653NCrm" width="344" height="500"><br>
after decompile<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/e/ed15f00dc17b9a43ccd1803338fa6e7d3c4955a0.png" alt="image" data-base62-sha1="xPma22YFpiLtYbijqYX6KRm4pxu" width="690" height="274"><br>
here <code>v2</code> is the length of the string, and hexadecimal values are the chunks of the string<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/7/7beecc0061f9f7f65fb606f21da1a7372286f542.png" alt="image" data-base62-sha1="hGmlCSfSYpSfmVJLGJqlfdCioD0" width="690" height="316"><br>
finally get the key<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/c/c1cb4d5a0f78b65b6472d830d653956e3833ae2c.png" alt="image" data-base62-sha1="rEnIVzN9XlIDQHlW12kEuqU3oSg" width="690" height="90"></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/f/f3129ccd5c3e2f557cd96c1a799ffdb10632ac7d.jpeg" alt="image" data-base62-sha1="yGjTWXttCAlb22GLLsG92CFOYdD" width="690" height="378"></p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://0x00sec.org/t/my-crackme-solving/16033">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/my-crackme-solving/16033</link>
          <pubDate>Wed, 04 Sep 2019 20:30:37 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-16033</guid>
          <source url="https://0x00sec.org/t/my-crackme-solving/16033.rss">My CrackMe solving</source>
        </item>
        <item>
          <title>Crack Me [?/10]</title>
          <dc:creator><![CDATA[hlop]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p><img src="https://0x00sec.s3.amazonaws.com/original/2X/6/6988c4f96c600dddfc4971ee95cff133ad4bfc54.png" alt="image" data-base62-sha1="f3Ba10e6KlTwAXGG1llPnQ5ZKuM" width="690" height="401"></p>
<p>Goal:   “success” message.<br>
Rules: none.</p>
<p>Downlaod:<a href="https://mega.nz/#!bQBglSgR!ZWDxP4lR9mcZ3dKo0vRPZxU9K8VbzxXlFgOdEK2mzZg" rel="noopener nofollow ugc">https://mega.nz/#!bQBglSgR!ZWDxP4lR9mcZ3dKo0vRPZxU9K8VbzxXlFgOdEK2mzZg</a><br>
Virustotal:<a href="https://www.virustotal.com/gui/file/cd1c7380a7fd9dcbcac84ba48c788aa635fa4ec705cdceef8b6240153f522b81/detection" rel="noopener nofollow ugc">https://www.virustotal.com/gui/file/cd1c7380a7fd9dcbcac84ba48c788aa635fa4ec705cdceef8b6240153f522b81/detection</a></p>
<p>Good luck.</p>
            <p><small>3 posts - 2 participants</small></p>
            <p><a href="https://0x00sec.org/t/crack-me-10/15920">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/crack-me-10/15920</link>
          <pubDate>Wed, 28 Aug 2019 21:58:45 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-15920</guid>
          <source url="https://0x00sec.org/t/crack-me-10/15920.rss">Crack Me [?/10]</source>
        </item>
        <item>
          <title>Python adventures 01</title>
          <dc:creator><![CDATA[hacker_snail]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Hey amigo,</p>
<p>A common friend said you can help me out, you’ll be rewarded for your time - handsomely - don’t worry.</p>
<p>We phished some buffoon to get access, but this stands in our way to leak their entire database, it’s supposed to spit out some numbers we can use as an access code. Johnny said you’ll need Python 3.6 or 3.7 to run it (I’m not good with numbers, see if it runs FFS), and then give us the code.</p>
<pre><code>import random

PASSWORD = random.weibullvariate(alpha=13, beta=37)


class InvalidUsernameException(BaseException):
    def __init__(self, invalid_username: str) -&gt; None:
        print(
            f"'{invalid_username.format(error=self)}' "
            f"is not recognised as an authorised user, "
            f"but login is permitted with the secret key."
        )


class InvalidPasswordException(BaseException):
    def __init__(self):
        print("Invalid password provided. Authorities have been informed.")


def grant_access():
    print(
        f"*** Access Granted! ***\n\n"
        f"  The Shirai Ryu are ninja, Liu Kang\n\n"
        f"The access code is: {PASSWORD / random.triangular()}"
    )


def check_password(user_password: str) -&gt; None:
    if user_password != str(PASSWORD):
        raise InvalidPasswordException()


if __name__ == "__main__":
    username = input("Username: ")
    password = PASSWORD

    try:
        if username != "the_mighty_snail":
            raise InvalidUsernameException(username)
    except InvalidUsernameException:
        password = input("Secret: ")
    finally:
        check_password(password)
        grant_access()
</code></pre>
<p>Hint 1</p>
<div class="spoiler"><a href="https://0x00sec.org/t/python-adventures-01/15730/1">spoiler</a></div>
<p>Hint 2</p>
<div class="spoiler"><a href="https://0x00sec.org/t/python-adventures-01/15730/1">spoiler</a></div>
<p>Hint 3</p>
<div class="spoiler"><a href="https://0x00sec.org/t/python-adventures-01/15730/1">spoiler</a></div>
            <p><small>9 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/python-adventures-01/15730">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/python-adventures-01/15730</link>
          <pubDate>Tue, 20 Aug 2019 21:30:28 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-15730</guid>
          <source url="https://0x00sec.org/t/python-adventures-01/15730.rss">Python adventures 01</source>
        </item>
        <item>
          <title>Reverse Obfuscated PHP Code</title>
          <dc:creator><![CDATA[ammarfaizi2]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Hello,<br>
I created a PHP obfuscator which encrypts PHP code and give some protection against evalhook and any similar de-obfuscation tools. I want to find the weakness of this obfuscator so here I make a challenge for you all.</p>
<p>What to do?</p>
<ol>
<li>Decode and gunzip the below base64 encoded text into a file.</li>
<li>Run the file with PHP 7.</li>
<li>You will be asked to enter password.</li>
<li>Find the correct password.</li>
<li>Send the flag here (Please give the write up, I want to know your method).</li>
</ol>
<p>Note:</p>
<ul>
<li>The protector checks the file checksum everytime it runs. If the checksum doesn’t match with the built checksum or we can say there is a change on the code, then it leads to segmentation fault.</li>
<li>Wrong password also leads to segmentation fault.</li>
</ul>
<pre><code class="lang-auto">base64 -d file.txt | gunzip &gt; file.php
</code></pre>
<pre><code class="lang-auto">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
aKtsjswA13GYEfwfs+AqX+JaAAA=
</code></pre>
            <p><small>5 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/reverse-obfuscated-php-code/15459">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/reverse-obfuscated-php-code/15459</link>
          <pubDate>Tue, 06 Aug 2019 07:39:53 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-15459</guid>
          <source url="https://0x00sec.org/t/reverse-obfuscated-php-code/15459.rss">Reverse Obfuscated PHP Code</source>
        </item>
        <item>
          <title>[KEYGEN] I hate rectangles</title>
          <dc:creator><![CDATA[wex-ler]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>…they are so edgy <img src="https://0x00sec.org/images/emoji/twitter/thinking.png?v=9" title=":thinking:" class="emoji" alt=":thinking:"></p>
<p>Last time I gave up too much information with the title so here we are. GL&amp;HF <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<h2>Difficulty</h2>
<p><strong>Author Assigned Level: Wannabe</strong></p>
<p><strong>Community Assigned Level:</strong></p>
<p><a href="https://0x00sec.org/t/keygen-i-hate-rectangles/11284/1">Click to view the poll.</a></p>
<hr>
<h2>Goals</h2>
<ol>
<li>Find a working key and password pair.</li>
<li>Create a non-brute keygen.</li>
</ol>
<hr>
<h2>Rules</h2>
<ol>
<li>No patching allowed!</li>
</ol>
<hr>
<h2>Binaries</h2>
<p>For executables use <code>cat in | base64 -d | gunzip &gt; a.out &amp;&amp; chmod +x a.out</code>, chmod is only required for linux binary.</p>
<ul>
<li>windows (mingw-w64 in path required): <a href="https://pastebin.com/36JyfcDh" rel="nofollow noopener">https://pastebin.com/36JyfcDh</a>
</li>
<li>linux: <a href="https://pastebin.com/gN8C7HAC" rel="nofollow noopener">https://pastebin.com/gN8C7HAC</a>
</li>
<li>more sources are available in hints <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">
</li>
</ul>
<p>If you need a windows binary but don’t have a linux subystem to decode it, lmk in the comments and I will provide the full executable.</p>
<hr>
<h2>Hints</h2>
<p>If you need minimal help, use 2.</p>
<ol start="0">
<li>.jar: <a href="https://www.dropbox.com/s/9v2f9bc6wj4r001/jar.jar.gz?dl=1" rel="nofollow noopener">https://www.dropbox.com/s/9v2f9bc6wj4r001/jar.jar.gz?dl=1</a> just gunzip it, jdk8 required, beware of decompiling because the file is quite large</li>
<li>.cpp: <a href="https://pastebin.com/uyRu1Zff" rel="nofollow noopener">https://pastebin.com/uyRu1Zff</a>
</li>
<li>
<div class="spoiler"><a href="https://0x00sec.org/t/keygen-i-hate-rectangles/11284/1">spoiler</a></div>
</li>
</ol>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://0x00sec.org/t/keygen-i-hate-rectangles/11284">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/keygen-i-hate-rectangles/11284</link>
          <pubDate>Sat, 02 Feb 2019 00:08:56 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-11284</guid>
          <source url="https://0x00sec.org/t/keygen-i-hate-rectangles/11284.rss">[KEYGEN] I hate rectangles</source>
        </item>
        <item>
          <title>[KEYGEN] Balanced Tree</title>
          <dc:creator><![CDATA[wex-ler]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Hello guys, this is my first post here. I’ve been lurking around for a few months solving various challenges, and today I finally decided to create my own (instead of studying for finals) <img src="https://0x00sec.org/images/emoji/twitter/grin.png?v=9" title=":grin:" class="emoji" alt=":grin:"></p>
<p>Hope you enjoy it!</p>
<p>The program consists of simple username and password query. There’s a slight hint in the title but it will only help you if you come far enough <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<h2>Difficulty</h2>
<p><strong>Author Assigned Level: Wannabe</strong></p>
<p><strong>Community Assigned Level:</strong></p>
<p><a href="https://0x00sec.org/t/keygen-balanced-tree/11044/1">Click to view the poll.</a></p>
<hr>
<h2>Goals</h2>
<ol>
<li>Find a working username and password pair.</li>
<li>Create a non-brute keygen.</li>
</ol>
<hr>
<h2>Rules</h2>
<ol>
<li>No patching allowed!</li>
</ol>
<hr>
<h2>Binary</h2>
<pre><code class="lang-auto">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
</code></pre>
<p>Decode with: <code>cat input | base64 -d | gunzip &gt; a.out &amp;&amp; chmod +x a.out</code></p>
<p>EDIT: For some reason there is some weird formatting, better version here: <a href="https://pastebin.com/BkRd6Bxn" rel="nofollow noopener">https://pastebin.com/BkRd6Bxn</a></p>
            <p><small>7 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/keygen-balanced-tree/11044">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/keygen-balanced-tree/11044</link>
          <pubDate>Tue, 22 Jan 2019 19:31:41 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-11044</guid>
          <source url="https://0x00sec.org/t/keygen-balanced-tree/11044.rss">[KEYGEN] Balanced Tree</source>
        </item>
        <item>
          <title>[Pwnable/Code Auditing] NoREpls - Part 7</title>
          <dc:creator><![CDATA[dtm]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h1>Backstory</h1>
<p>It has been a year and a half since <code>edgyReggie</code> halted development of his precious software. However, due to having a terrible lecturer for his programming courses, who lacks any sense of secure development practices, and unfortunate circumstances, a self-proclaimed hacker has threatened to release a DoS 0-day exploit (ooooh scary!).</p>
<p><code>edgyReggie</code> is now calling all his beloved hackers to aid him in discovering the vulnerability in his software so that he can make NoREpls great again! To help you, he has released a special version that will allow you to register the software using any Username/Serial combination!</p>
<h2>Difficulty</h2>
<h4>Author Assigned Level: Wannabe</h4>
<h4>Community Assigned Level:</h4>
<p><a href="https://0x00sec.org/t/pwnable-code-auditing-norepls-part-7/10617/1">Click to view the poll.</a></p>
<hr>
<h2>Goal</h2>
<ul>
<li>Your primary goal is to discover the DoS vulnerability</li>
<li>Your secondary goal is to develop a working DoS exploit or document steps to trigger the exploit</li>
</ul>
<hr>
<h2>Rules of Engagement</h2>
<ul>
<li>No binary patching or any modifications to the software or environment to gain an advantage (enable all system default exploitation protection mitigations)</li>
<li>You may refer to the source code listed under the <em>Research Material</em> section below.</li>
</ul>
<hr>
<h2>Research Material</h2>

Source code <a href="https://0x00sec.org/t/pwnable-code-auditing-norepls-part-7/10617/1">(click for more details)</a>
<hr>
<h2>Binary</h2>
<h4>Version 2.2.1 special release version</h4>
<p><a href="https://www.mediafire.com/file/3ma9rax9irayg49/NoREpls2.2.1.exe/file">MediaFire - https://www.mediafire.com/file/3ma9rax9irayg49/NoREpls2.2.1.exe/file</a></p>
<p><a href="https://transfer.sh/Jbiuo/NoREpls2.2.1.exe">transfer.sh - https://transfer.sh/Jbiuo/NoREpls2.2.1.exe</a></p>
<p><a href="https://www.virustotal.com/#/file/f9247a2b0a70348f5ad11e472d41f0901671f4f2e7b6afdd2294bfd9b2a7b80e/detection">VirusTotal - https://www.virustotal.com/#/file/f9247a2b0a70348f5ad11e472d41f0901671f4f2e7b6afdd2294bfd9b2a7b80e/detection</a></p>
<p>Good luck! <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
            <p><small>6 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/pwnable-code-auditing-norepls-part-7/10617">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/pwnable-code-auditing-norepls-part-7/10617</link>
          <pubDate>Thu, 03 Jan 2019 07:36:40 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-10617</guid>
          <source url="https://0x00sec.org/t/pwnable-code-auditing-norepls-part-7/10617.rss">[Pwnable/Code Auditing] NoREpls - Part 7</source>
        </item>
        <item>
          <title>CRACKME RE/Math challenge MEDIUM (Decrypt the hidden message)</title>
          <dc:creator><![CDATA[diaze]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Something I came up with after the CTF, some of you may have a clue how to do it, there is more than one solution!</p>
<p>However I will point out now this will test almost all you’re skills is logic to do properly (there is of course the non proper way)</p>
<p>The only chars in use are in the ASCII range 0-127 or 1-128, however you prefer it.</p>
<p>If no one gets anything at ll I will post a few hints slowly over the upcoming week w/s 17th dec</p>
<p><code>216 202 216 64 224 217 133 227 146 149 223 215 143 216 64 234 206 146 229 140 213 230 142 222 143 218 137 154 216 137 220 231 140 209 218 194 137 223 133 215 212 135 222 216 217 136 147 224 212 232 203 202 224 200 136 150 81 153 162 87 147 213 221 208 64 202 221 215 226 202 202 226 215 221 202 64 208 221 213 147 87 162 153 81 150 136 200 224 202 203 232 212 224 147 136 217 216 222 135 212 215 133 223 137 194 218 209 140 231 220 137 216 154 137 218 143 222 142 230 213 140 229 146 206 234 64 216 143 215 223 149 146 227 133 217 224 64 216 202 216</code></p>
<p>To check you solved it yourself, sha256 the answer then md5 it, the result should be</p>
<blockquote>
<p>10c438bf7b9fa3746238df966b712360</p>
</blockquote>
<p>Example given:<br>
<code><br>
$ sha256 -s test_string<br>
SHA256 (“test_string”) = 4b641e9a923d1ea57e18fe41dcb543e2c4005c41ff210864a710b0fbb2654c11<br>
$ md5 -s 4b641e9a923d1ea57e18fe41dcb543e2c4005c41ff210864a710b0fbb2654c11<br>
MD5 (“4b641e9a923d1ea57e18fe41dcb543e2c4005c41ff210864a710b0fbb2654c11”) = 3babffc2e6e579831fe64e9b4ddb4cec<br>
</code></p>
<p>In this example the hashcheck you have the right password/string is 3babffc2e6e579831fe64e9b4ddb4cec</p>
<p><strong>For those of you that do manage it!</strong></p>
<p>Post a single character in this form:</p>
<blockquote>
<p>block[n] = c</p>
</blockquote>
<p>where n is 0 to 139</p>
            <p><small>7 posts - 2 participants</small></p>
            <p><a href="https://0x00sec.org/t/crackme-re-math-challenge-medium-decrypt-the-hidden-message/10293">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/crackme-re-math-challenge-medium-decrypt-the-hidden-message/10293</link>
          <pubDate>Sun, 16 Dec 2018 13:02:27 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-10293</guid>
          <source url="https://0x00sec.org/t/crackme-re-math-challenge-medium-decrypt-the-hidden-message/10293.rss">CRACKME RE/Math challenge MEDIUM (Decrypt the hidden message)</source>
        </item>
        <item>
          <title>[CrackMe] BabyELF Revenge</title>
          <dc:creator><![CDATA[_py]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h2>BabyELF Revenge</h2>
<hr>
<h3>Description</h3>
<p>A <a href="https://0x00sec.org/t/crackme-babyelf/7268">BabyELF</a> sequel since <a class="mention" href="https://0x00sec.org/u/0x00pf">@0x00pf</a> and <a class="mention" href="https://0x00sec.org/u/leeky">@Leeky</a>  nailed it in no time (I hope this one cannot be solved the same way <img src="https://0x00sec.org/images/emoji/twitter/sweat_smile.png?v=9" title=":sweat_smile:" class="emoji" alt=":sweat_smile:">).</p>
<hr>
<h3>Rules</h3>
<ul>
<li>Make the binary display <em>Congrats!</em>
</li>
<li>Patch more than <strong>4 bits</strong> and you’re disqualified. <strong>Don’t patch any instruction!</strong>
</li>
</ul>
<hr>
<h3>Binary</h3>
<pre><code class="lang-makefile">base64 -d dump | gunzip &gt; babyelf_revenge
</code></pre>
<pre><code class="lang-makefile">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
</code></pre>
            <p><small>10 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/crackme-babyelf-revenge/7286">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/crackme-babyelf-revenge/7286</link>
          <pubDate>Wed, 27 Jun 2018 13:13:15 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-7286</guid>
          <source url="https://0x00sec.org/t/crackme-babyelf-revenge/7286.rss">[CrackMe] BabyELF Revenge</source>
        </item>
        <item>
          <title>[CrackMe] BabyELF</title>
          <dc:creator><![CDATA[_py]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h3>BabyELF</h3>
<hr>
<pre><code class="lang-makefile">                        _..--""""--...___                 .---,
                      ,' \               `'--.___        /   /
                     /`\  \                      ``''--:'`--'
                    (  ,'. '.              _____..--''`
                    )__/`-'._;__       .-'`
                     _/ e    /.-|     /
                     \        _/      |
                      |_,    (  \     /
                       \______\__\_.-'//////
                        |||||||||}////////;._
          __/\ _..----''````     \_       /  /.
         (    / |                  `'._---:./  '.
          '---\_;-...______.           '.   |_,  \  ===---
                        /               .`     '-'
                       /             _.'                ===---
                      /___.._  _..-'`\
                       /    /`'  \    '--.______ \
                      /    /      \         \   \#\
                      |   |        '---------'-. \#\
            ----------|  /----------------------\_\-\-----------------
                      |__|                         ._\
                   __.'  |
                  /______|       ..::::::::::::::::::::::::::..
                (___#__#____  .::::::::::::::::::::::::::::::::::'
                              '':::::::::::::::::::::::::::::'
</code></pre>
<hr>
<h3>Rules</h3>
<ul>
<li>
<p>Make the binary display  <em>Congrats!</em></p>
</li>
<li>
<p>Patch more than one byte and you’re disqualified. <strong>Don’t patch any instruction!</strong></p>
</li>
</ul>
<hr>
<h3>Binary</h3>
<pre><code class="lang-makefile">base64 -d dump | gunzip &gt; babyelf
</code></pre>
<pre><code class="lang-makefile">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
QCIAAA==
</code></pre>
            <p><small>11 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/crackme-babyelf/7268">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/crackme-babyelf/7268</link>
          <pubDate>Tue, 26 Jun 2018 13:00:07 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-7268</guid>
          <source url="https://0x00sec.org/t/crackme-babyelf/7268.rss">[CrackMe] BabyELF</source>
        </item>
        <item>
          <title>[CrackMe] CrackMe Simulator 2018 MK II</title>
          <dc:creator><![CDATA[dtm]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Similar to my previous <a href="https://0x00sec.org/t/crackme-crackme-simulator-2018/6740">crackme</a>, another test application for a personal project that I am developing.</p>
<h2>Difficulty</h2>
<h4>Author Assigned Level: ¯\_(ツ)_/¯</h4>
<h4>Community Assigned Level:</h4>
<p><a href="https://0x00sec.org/t/crackme-crackme-simulator-2018-mk-ii/6867/1">Click to view the poll.</a></p>
<hr>
<h2>Objective</h2>
<ul>
<li>Find the correct key.</li>
</ul>
<hr>
<h2>Rules of Engagement</h2>
<ul>
<li>None.</li>
</ul>
<hr>
<h2>Binary</h2>
<p>To retrieve the binary, use the following command with the base64 text below:</p>
<blockquote>
<p>cat text | base64 -d | gunzip &gt;binary</p>
</blockquote>
<pre><code class="lang-makefile">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
</code></pre>
<p>Good luck!</p>
            <p><small>3 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/crackme-crackme-simulator-2018-mk-ii/6867">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/crackme-crackme-simulator-2018-mk-ii/6867</link>
          <pubDate>Mon, 28 May 2018 16:01:33 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-6867</guid>
          <source url="https://0x00sec.org/t/crackme-crackme-simulator-2018-mk-ii/6867.rss">[CrackMe] CrackMe Simulator 2018 MK II</source>
        </item>
        <item>
          <title>[CrackMe] CrackMe Simulator 2018</title>
          <dc:creator><![CDATA[dtm]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>This is a PoC-style test run for an application that I am currently developing as a personal project. Should anything weird happen, please report it to me and I’ll try to fix it. This is just a simple crackme so it shouldn’t be too hard once you start to figure out what’s happening… maybe…? <img src="https://0x00sec.org/images/emoji/twitter/thinking.png?v=9" title=":thinking:" class="emoji" alt=":thinking:"></p>
<h2>Difficulty</h2>
<h4>Author Assigned Level: ¯\_(ツ)_/¯</h4>
<h4>Community Assigned Level:</h4>
<p><a href="https://0x00sec.org/t/crackme-crackme-simulator-2018/6740/1">Click to view the poll.</a></p>
<hr>
<h2>Objective</h2>
<ul>
<li>Find the correct key.</li>
</ul>
<hr>
<h2>Rules of Engagement</h2>
<ul>
<li>You may not modify the binary.</li>
</ul>
<hr>
<h2>Binary</h2>
<p>To retrieve the binary, use the following command with the base64 text below:</p>
<blockquote>
<p>cat text | base64 -d | gunzip &gt;binary</p>
</blockquote>
<pre><code class="lang-makefile">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
</code></pre>
<p>Good luck!</p>
            <p><small>8 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/crackme-crackme-simulator-2018/6740">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/crackme-crackme-simulator-2018/6740</link>
          <pubDate>Sat, 19 May 2018 06:39:06 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-6740</guid>
          <source url="https://0x00sec.org/t/crackme-crackme-simulator-2018/6740.rss">[CrackMe] CrackMe Simulator 2018</source>
        </item>
        <item>
          <title>ARM Crackme - Data Processing</title>
          <dc:creator><![CDATA[Leeky]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h1>ARM Crackme - Data Processing</h1>
<p><a class="mention" href="https://0x00sec.org/u/wunkolo">@Wunkolo</a> and I have decided that there aren’t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>We will start very easy with some challenges that don’t require any kind of setup or reading up specific processor manuals but that will change when the challenges get harder.<br>
This challenge will most likely be the last one to contain formated extracted assembly so if you prefer trying it out through dynamic analysis as a warm up a binary is provided as well.</p>
<h2>Rules and Goals</h2>
<p>In this challenge the goal is to deduct the original password from the assembly/binary.<br>
Post it in spoiler tags under the challenge if you got it so we can see who solved it! <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<h2>Challenge</h2>
<p>After seeing how easy the last password has been recovered I thought that this might be not ideal to secure all my data that way.<br>
Which is why I’ve written this new super secure program that doesn’t sole base on exclusive and processes the password in multiple ways!<br>
Although I’m pretty confident in my new method I would like you to confirm that it’s not possible to recover the secret password anymore.</p>
<h3>Dump of the relevant assembly</h3>
<pre><code class="lang-auto">08460 main      STMFD   SP!, {R11,LR}
08464           ADD     R11, SP, #4
08468           LDR     R3, =var_8638 ; "%s"
0846C           MOV     R0, R3
08470           LDR     R1, =input
08474           BL      __isoc99_scanf
08478           LDR     R0, =input
0847C           BL      strlen
08480           MOV     R3, R0
08484           CMP     R3, #0x14
08488           BEQ     loc_8494
0848C           MOV     R3, #1
08490           B       loc_8570
08494 loc_8494  LDR     R3, =input_10798
08498           LDR     R2, [R3]
0849C           LDR     R3, =0x12345678
084A0           EOR     R3, R2, R3
084A4           LDR     R2, =0x69790439
084A8           LDR     R2, [R2]
084AC           CMP     R3, R2
084B0           BEQ     loc_84BC
084B4           MOV     R3, #1
084B8           B       loc_8570
084BC loc_84BC  LDR     R3, =input_1079C
084C0           LDR     R2, [R3]
084C4           LDR     R3, =input
084C8           LDR     R3, [R3]
084CC           ADD     R2, R2, R3
084D0           LDR     R3, =0xC2819E87
084D4           CMP     R2, R3
084D8           BEQ     loc_84E4
084DC           MOV     R3, #1
084E0           B       loc_8570
084E4 loc_84E4  LDR     R3, =input_107A0
084E8           LDR     R2, [R3]
084EC           LDR     R3, =input_1079C
084F0           LDR     R3, [R3]
084F4           RSB     R2, R3, R2
084F8           LDR     R3, =0xE91E0419
084FC           CMP     R2, R3
08500           BEQ     loc_850C
08504           MOV     R3, #1
08508           B       loc_8570
0850C loc_850C  LDR     R3, =input_107A0
08510           LDR     R2, [R3]
08514           LDR     R3, =input_107A4
08518           LDR     R3, [R3]
0851C           RSB     R2, R3, R2
08520           LDR     R3, =0xDD1F1D1C
08524           CMP     R2, R3
08528           BEQ     loc_8534
0852C           MOV     R3, #1
08530           B       loc_8570
08534 loc_8534  LDR     R3, =input_107A8
08538           LDR     R2, [R3]
0853C           LDR     R3, =input_107A4
08540           LDR     R3, [R3]
08544           ADD     R2, R2, R3
08548           LDR     R3, =0xD07A8174
0854C           CMP     R2, R3
08550           BEQ     loc_855C
08554           MOV     R3, #1
08558           B       loc_8570
0855C loc_855C  LDR     R3, =aCorrectTheFlag ; "Correct! The flag is: %s\n"
08560           MOV     R0, R3
08564           LDR     R1, =input
08568           BL      printf
0856C           MOV     R3, #0
08570 loc_8570  MOV     R0, R3
08574           SUB     SP, R11, #4
08578           LDMFD   SP!, {R11,LR}
0857C           BX      LR
</code></pre>
<h3>(Optional) Binary in base64 format</h3>
<p>Extract with:</p>
<pre><code class="lang-bash">cat base64below.txt | base64 -d | gunzip &gt; binary.elf
</code></pre>
<p>File type:</p>
<pre><code class="lang-nohighlight">ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.26, not stripped
</code></pre>
<p>Base64 encoded gzip archive:</p>
<pre><code class="lang-nohighlight">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

</code></pre>
<h2>References</h2>
<p>As these challenges are meant for learning this section will contain some resources to look into that will help solving this challenge.</p>
<div class="spoiler"><a href="https://0x00sec.org/t/arm-crackme-data-processing/6677/1">spoiler</a></div>
            <p><small>6 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/arm-crackme-data-processing/6677">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/arm-crackme-data-processing/6677</link>
          <pubDate>Mon, 14 May 2018 20:40:08 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-6677</guid>
          <source url="https://0x00sec.org/t/arm-crackme-data-processing/6677.rss">ARM Crackme - Data Processing</source>
        </item>
        <item>
          <title>CrackMe #1 [C#]</title>
          <dc:creator><![CDATA[Geilokowski]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Hello guys,</p>
<p>this is my first CrackMe so dont except much. It quite simple to crack since there is no obfuscation involved here. But maybe i could add that later <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> The Program consists of two parts. The CrackMe1.exe and the License.dll.</p>
<p>Your goals are:</p>
<ul>
<li>to write a keygen (really really easy)</li>
<li>to patch the programm so that you can enter anything and it says “License key valid”</li>
</ul>
<p>Rules:<br>
Dont modify the CrackMe1.exe in any Way! You can decompile to see what it does but dont change anything inside of it.</p>
<p>Have fun!</p>
<p>Downlaod: <a href="https://mega.nz/#!2QoTgBSD!h6sdjQDhZAbV1REUychAZ7QVdS5Q67Og4-cM5ceU8BY" rel="nofollow noopener">https://mega.nz/#!2QoTgBSD!h6sdjQDhZAbV1REUychAZ7QVdS5Q67Og4-cM5ceU8BY</a><br>
Virustotal for the .exe: <a href="https://www.virustotal.com/#/file/96979226822e7b88e0c9cd058ed51c5a2dfcdeeb7e8974e09f08bc0446a4a4b4/detection" rel="nofollow noopener">https://www.virustotal.com/#/file/96979226822e7b88e0c9cd058ed51c5a2dfcdeeb7e8974e09f08bc0446a4a4b4/detection</a> (idk where this detection comes from)</p>
<p>Virustotal for the .dll: <a href="https://www.virustotal.com/#/file-analysis/NTEyODBkOTZkMTg5N2I5NGYwNjFiZjViMTlmYTM0MDk6MTUyNTYyNTg3Nw==" rel="nofollow noopener">https://www.virustotal.com/#/file-analysis/NTEyODBkOTZkMTg5N2I5NGYwNjFiZjViMTlmYTM0MDk6MTUyNTYyNTg3Nw==</a></p>
            <p><small>7 posts - 7 participants</small></p>
            <p><a href="https://0x00sec.org/t/crackme-1-c/6576">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/crackme-1-c/6576</link>
          <pubDate>Sun, 06 May 2018 16:58:22 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-6576</guid>
          <source url="https://0x00sec.org/t/crackme-1-c/6576.rss">CrackMe #1 [C#]</source>
        </item>
        <item>
          <title>ARM Crackme - Starting with EOR</title>
          <dc:creator><![CDATA[Leeky]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <h1>ARM Crackme - Starting with EOR</h1>
<p><a class="mention" href="https://0x00sec.org/u/wunkolo">@Wunkolo</a> and I have decided that there aren’t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>We will start very easy with some challenges that don’t require any kind of setup or reading up specific processor manuals but that will change when the challenges get harder.<br>
A binary is still provided in case static analysis is not your thing, anyways let’s start:</p>
<h2>Rules and Goals</h2>
<p>In this challenge the goal is to decrypt the password in ever way you want.<br>
Post it in spoiler tags under the challenge so we can see who solved it! <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<h2>Challenge</h2>
<p>I’ve written myself this tool to encrypt all my passwords a few month ago but apparently I forgot to implement a decryption function.<br>
I can’t find the source either so I’m left with this useless encrypted password. Maybe you can help me decrypt it?</p>
<h3>Encrypted Password</h3>
<pre><code class="lang-nohighlight">1D 0E 11 27 0F 6D 11 0C 10 6F 03 6F  6C 0E 21
</code></pre>
<h3>Dump of the relevant assembly</h3>
<pre><code class="lang-auto">0845C main      STMFD   SP!, {R11,LR}
08460           ADD     R11, SP, #4
08464           SUB     SP, SP, #8
08468           LDR     R3, =var_856C  ; "%s"
0846C           MOV     R0, R3
08470           LDR     R1, =input
08474           BL      __isoc99_scanf
08478           MOV     R3, #0
0847C           STR     R3, [R11,#-8]
08480           B       loc_84B8
08484 loc_8484  LDR     R2, =var_8570  ; "%02X "
08488           LDR     R1, =input
0848C           LDR     R3, [R11,#-8]
08490           ADD     R3, R1, R3
08494           LDRB    R3, [R3]
08498           EOR     R3, R3, #0x5C
0849C           AND     R3, R3, #0xFF
084A0           MOV     R0, R2
084A4           MOV     R1, R3
084A8           BL      printf
084AC           LDR     R3, [R11,#-8]
084B0           ADD     R3, R3, #1
084B4           STR     R3, [R11,#-8]
084B8 loc_84B8  LDR     R3, [R11,#-8]
084BC           CMP     R3, #0xE
084C0           BLS     loc_8484
084C4           LDR     R0, =var_8578  ; ""
084C8           BL      puts
084CC           SUB     SP, R11, #4
084D0           LDMFD   SP!, {R11,LR}
084D4           BX      LR
</code></pre>
<h3>(Optional) Binary in base64 format</h3>
<p>Extract with:</p>
<pre><code class="lang-bash">cat base64below.txt | base64 -d | gunzip &gt; binary.elf
</code></pre>
<p>File type:</p>
<pre><code class="lang-nohighlight">ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.26, not stripped
</code></pre>
<p>Base64 encoded gzip archive:</p>
<pre><code class="lang-nohighlight">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
8K1WnXmyp/8DjmgtOHsVAAA=
</code></pre>
<h2>References</h2>
<p>As these challenges are meant for learning this section will contain some resources to look into that will help solving this challenge.</p>
<div class="spoiler"><a href="https://0x00sec.org/t/arm-crackme-starting-with-eor/6421/1">spoiler</a></div>
            <p><small>5 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/arm-crackme-starting-with-eor/6421">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/arm-crackme-starting-with-eor/6421</link>
          <pubDate>Wed, 25 Apr 2018 03:01:38 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-6421</guid>
          <source url="https://0x00sec.org/t/arm-crackme-starting-with-eor/6421.rss">ARM Crackme - Starting with EOR</source>
        </item>
        <item>
          <title>CSCG 2015 reversing binary</title>
          <dc:creator><![CDATA[volta]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Hi guys,</p>
<p>I’ve been here for a long time, but now it’s my first post. I hope that you can help with it. If it’s in the wrong category, let me know.</p>
<p>I have this challenge from CSCG 2015 where I need to find the password for the following binary. Could anyone of you please help me understand that? I tried different inputs, looked at the contained ASCII strings and decomposed the binary file. Assembly is not my strength, so it was barren. The string<br>
;@}1"(.7-kf7Hy&lt;[l5ZitD’c_Ae{h+)</p>
<p>caught my attention, but I don’t know if it’s useful.</p>
<p>EDIT: I tried include base64, but here is a link…</p>
<p>EDIT2: Without lines:<br>
<a href="https://pastebin.com/raw/R2CHM9nD" rel="nofollow noopener">Binary in base64</a></p>
<p>Many thanks</p>
            <p><small>5 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/cscg-2015-reversing-binary/6410">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/cscg-2015-reversing-binary/6410</link>
          <pubDate>Mon, 23 Apr 2018 21:18:57 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-6410</guid>
          <source url="https://0x00sec.org/t/cscg-2015-reversing-binary/6410.rss">CSCG 2015 reversing binary</source>
        </item>
        <item>
          <title>[CrackMe] AikonCWD.01</title>
          <dc:creator><![CDATA[aikoncwd]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Hi all! My first contribution in this community <img src="/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>I coded a small crackme for you, don’t know if this crackme is for advanced users or not, depending on the results I will change the difficult for future crackmes</p>
<h2>GOAL</h2>
<ul>
<li>Guess and post here the correct serial/key for this crackme</li>
<li>You can crack or patch the crackme if you want, but <strong>you need to provide the correct serial/key</strong>
</li>
<li>If you want, write a nice tutorial explaining how you beat this</li>
<li>If you solve this crackme, you will see this message:<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/7/711bddb467381ba6c0ff45b628d90ab66905c500.png" alt="">
</li>
</ul>
<h2>Some Info</h2>
<p>This crackme uses some anti-debug tricks that may trigger AVs. <a href="https://www.virustotal.com/#/file/749ffe22b7a075a948998ff8ee16cee00b3af450218142b42e347f55e4f22e10/detection" rel="noopener nofollow ugc">VirusTotal</a> shows 22 detections, but the file is clean. If you feel better, you can run it into a VirtualMachine or SandBox (there is no anti-vm tricks on this crackme).</p>
<h2>Download</h2>
<p><a href="http://www.mediafire.com/file/nlg6d5xf16r3hw9/P5.zip" rel="noopener nofollow ugc">P5.exe on mediafire</a> / ZIP Password = <strong>crackme</strong></p>
<h2>Help, Hints…</h2>
<p>I preffer start this without helping you, but feel free to share here any hints</p>
<p>Good luck! <img src="/images/emoji/twitter/blush.png?v=9" title=":blush:" class="emoji" alt=":blush:"></p>
            <p><small>6 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/crackme-aikoncwd-01/5406">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/crackme-aikoncwd-01/5406</link>
          <pubDate>Fri, 09 Feb 2018 14:41:19 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-5406</guid>
          <source url="https://0x00sec.org/t/crackme-aikoncwd-01/5406.rss">[CrackMe] AikonCWD.01</source>
        </item>
        <item>
          <title>[PATCHME] Look Deeper Inside</title>
          <dc:creator><![CDATA[0x00pf]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Continuing the discussion from <a href="https://0x00sec.org/t/keygen-look-inside/4075">[KEYGEN] Look Inside</a>:</p>
<p>Please be aware that, in case you are trying to solve the <em>KEYGEN Look Inside</em>, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading.<br>
<strong>You have been warned</strong></p>
<h1>PATCHME</h1>
<p>[spoiler]<br>
This Greedy Brothers Corp applications are really bad. That Alpha version for their DAMS system has some nasty bugs. But one of then is specially bad. The GBC programmers forgot to remove some debug code that forced fixed code into the system avoiding the load of external LCB programs, as it was the initial intention.</p>
<p>That is now being sold by the company as a security feature but…</p>
<p><strong>Can you patch the binary to enable the load and execution of external bytecodes?</strong></p>
<p>For this challenge, challenge solver badges will be awarded only to the first person to post a valid patch.</p>
<p>Additional badges will only be awarded to progressively shorter (in number of bytes changed) patches</p>
<p>There are two functions that have to be patched. You have to patch both to get your badge !!!</p>
<p>If you are trying this you had already got the binary from the KEYGEN challenge.</p>
<p>Good Luck![/spoiler]</p>
<p>Thanks to <a class="mention" href="https://0x00sec.org/u/leeky">@Leeky</a> for noticing this <em>BUG</em>  and make possible this additional challenge <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
            <p><small>4 posts - 2 participants</small></p>
            <p><a href="https://0x00sec.org/t/patchme-look-deeper-inside/4113">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/patchme-look-deeper-inside/4113</link>
          <pubDate>Wed, 01 Nov 2017 06:41:16 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-4113</guid>
          <source url="https://0x00sec.org/t/patchme-look-deeper-inside/4113.rss">[PATCHME] Look Deeper Inside</source>
        </item>
        <item>
          <title>[KEYGEN] Look Inside</title>
          <dc:creator><![CDATA[0x00pf]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic).</p>
<p>This is an experiment so I hope it works fine. Let me know if you have any issue.</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/8/860ecd3009fda09f0e6982a25e75c0f9a9c7af1a.gif" width="690" height="414"></p>
<p><strong>NOTE:</strong><br>
<em>You need to download the original image. Click in the image and download the one that pops up</em><br>
(MD5:<code>7b120c07d6beca086b7cc1d495a85359</code>)</p>
            <p><small>11 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/keygen-look-inside/4075">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/keygen-look-inside/4075</link>
          <pubDate>Sun, 29 Oct 2017 09:28:55 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-4075</guid>
          <source url="https://0x00sec.org/t/keygen-look-inside/4075.rss">[KEYGEN] Look Inside</source>
        </item>
        <item>
          <title>[Malware Analysis] Case GBC-17_124: The dropper Part II</title>
          <dc:creator><![CDATA[0x00pf]]></dc:creator>
          <category>Challenges</category>
          <description><![CDATA[
            <p>Continuing the discussion from <a href="https://0x00sec.org/t/malware-analysis-case-gbc-17-124-the-dropper-part-i/3408">[Malware Analysis] Case GBC-17_124: The dropper Part I</a>:</p>
<h1>The <code>get_msg</code> Function</h1>
<p>Our analysis is going pretty well. By now, we know that the <code>get_msg</code> function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:</p>
<pre><code class="lang-auto">                               get_msg:                                           │
00400aad:   55                      	push	rbp                               │
00400aae:   48 89 e5                	mov	rbp, rsp                          │
00400ab1:   53                      	push	rbx                               │
00400ab2:   48 81 ec 58 04 00 00    	sub	rsp, 0x458                        │
00400ab9:   89 bd ac fb ff ff       	mov	dword ptr [rbp - 0x454], edi      │; {ls_rbp-1108}
00400abf:   48 89 b5 a0 fb ff ff    	mov	qword ptr [rbp - 0x460], rsi      │; {ls_rbp-1120}
00400ac6:   64 48 8b 04 25 28 00 00 	mov	rax, qword ptr fs:[0x28]          │
00400acf:   48 89 45 e8             	mov	qword ptr [rbp - 0x18], rax       │; {ls_rbp-24}
00400ad3:   31 c0                   	xor	eax, eax                          │
00400ad5:   e8 c6 fe ff ff          	call	&lt;rand@plt&gt;                        │; &lt;rand@plt&gt; 4009a0(.plt+0x140)
00400ada:   89 85 c4 fb ff ff       	mov	dword ptr [rbp - 0x43c], eax      │; {ls_rbp-1084}
</code></pre>
<p>We can see the typical stack arrangement common to normal C functions as well as the set of the canary in the stack to detect stack corruption. The function parameters are also stored in local variables at <code>rbp - 0x454</code> for the first parameter and <code>rbp-0x460</code> for the second.</p>
<p><em>Note: Remember that for Linux 64bits bits binaries, parameters are passed in registers as: <code>func (RDI, RSI, RDX, RCX)</code></em></p>
<p><em>Note1: <code>EDI</code> is actually the lower 32 bits part of the 64bits register <code>RDI</code></em></p>
<p>After that, we find a call to <code>rand</code> that, as you know, generates a random number. This first random number gets stored at <code>rbp + 0x43c</code>.</p>
<pre><code class="lang-auto">00400ae0:   8b 85 c4 fb ff ff       	mov	eax, dword ptr [rbp - 0x43c]      │; {ls_rbp-1084}
00400ae6:   89 c7                   	mov	edi, eax                          │
00400ae8:   e8 f3 fd ff ff          	call	&lt;htonl@plt&gt;                       │; &lt;htonl@plt&gt; 4008e0(.plt+0x80)
00400aed:   89 85 b8 fb ff ff       	mov	dword ptr [rbp - 0x448], eax      │; {ls_rbp-1096}
</code></pre>
<p>Then, that number is converted to network order and stored at local variable <code>rbp-0x448</code> to be used later.</p>
<pre><code class="lang-auto">00400af3:   48 8b 05 de 15 20 00    	mov	rax, qword ptr [rip + 0x2015de]   │; &lt;http_req&gt; 6020d8(.data+18)  :
00400afa:   48 89 c7                	mov	rdi, rax                          │
00400afd:   e8 7e fd ff ff          	call	&lt;strlen@plt&gt;                      │; &lt;strlen@plt&gt; 400880(.plt+0x20)
00400b02:   48 89 c2                	mov	rdx, rax                          │
00400b05:   48 8b 0d cc 15 20 00    	mov	rcx, qword ptr [rip + 0x2015cc]   │; &lt;http_req&gt; 6020d8(.data+18)  :
00400b0c:   8b 85 ac fb ff ff       	mov	eax, dword ptr [rbp - 0x454]      │; {ls_rbp-1108}
00400b12:   48 89 ce                	mov	rsi, rcx                          │
00400b15:   89 c7                   	mov	edi, eax                          │
00400b17:   e8 54 fd ff ff          	call	&lt;write@plt&gt;                       │; &lt;write@plt&gt; 400870(.plt+0x10)
</code></pre>
<p>Next, the program calculates the length of the <code>http_req</code> symbol and sends it through the network using <code>write</code>. We use as first parameter to <code>write</code> the local variable <code>rbp - 0x454</code> (see how that value flows into <code>RDI</code>).  If you recall, <code>rbp - 0x454</code> contains the first parameter passed to the function. You can go quickly back to the <code>main</code> function and verify that the first parameter is actually the socket associated to the current server connection.</p>
<p>This is a good time to start naming variables using your preferred tool. As you progress filling in proper names for those <code>rbp + XXX</code> the code becomes more and more readable. Most disassemblers provides this option, so does STAN (check <code>func.var</code> command). I will not do that here so you can follow the paper even using <code>objdump</code> :).</p>
<p>Also note the instruction pointer relative addressing to reference <code>http_req</code>. This is common for global variables that lives in the <code>.data</code> segment instead of in the stack. We already have a symbol for it and our preferred disassembler is showing it. Depending on the tool you may already get the content of the global var. For instance, radare2 will generate a symbol whose name is actually the content of the string (when the variable points to a string). Something like this:</p>
<pre><code class="lang-auto">0x00400b38      488b05911520.  mov rax, qword [rip + 0x201591] ; [0x6020d0:8]=0x400fd8 str.HTTP_1.0_200_OK_
nServer:_ShadowHTTP_3.26__SECURED__nContent_type:_text_html__charset_UTF_8_nContent_Length:__1_n_nPNG LEA obj.http_hdr
; obj.http_hdr
</code></pre>
<p>With the current STAN version you have to manually dereference the pointer (this is going to change soon!). Something like this:</p>
<pre><code>STAN] &gt; mem.dump p 6020d8 1
+ Dumping 1 items from segment '.data'
0x6020d8: 0x401050	&lt;_IO_stdin_used +128&gt;

STAN] &gt; mem.dump x 401050 100
+ Dumping 100 items from segment '.rodata'
          | 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f |0123456789abcdef
----------+-------------------------------------------------+----------------
0x401050 : 47 45 54 20 2f 20 48 54 54 50 2f 31 2e 31 0a 55 |GET / HTTP/1.1.U
0x401060 : 73 65 72 2d 41 67 65 6e 74 3a 42 6c 61 63 6b 4e |ser-Agent:BlackN
0x401070 : 69 62 62 6c 65 73 20 35 2e 33 32 20 78 4f 53 20 |ibbles 5.32 xOS
0x401080 : 32 2e 31 0a 0a 00 49 6e 76 61 6c 69 64 20 6e 75 |2.1...Invalid nu
0x401090 : 6d 62 65 72 20 6f 66 20 70 61 72 61 6d 65 74 65 |mber of paramete
0x4010a0 : 72 73 0a 00 73 6f 63 6b 65 74 3a 00 63 6f 6e 6e |rs..socket:.conn
0x4010b0 : 65 63 74 3a                                     |ect:
</code></pre>
<p>Anyway, the dropper has already sent an HTTP request to the remote server. Let’s see what happen next</p>
<pre><code class="lang-auto">00400b1c:   48 8d 8d b8 fb ff ff    	lea	rcx, qword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400b23:   8b 85 ac fb ff ff       	mov	eax, dword ptr [rbp - 0x454]      │; {ls_rbp-1108}
00400b29:   ba 04 00 00 00          	mov	edx, 4                            │
00400b2e:   48 89 ce                	mov	rsi, rcx                          │
00400b31:   89 c7                   	mov	edi, eax                          │
00400b33:   e8 38 fd ff ff          	call	&lt;write@plt&gt;                       │; &lt;write@plt&gt; 400870(.plt+0x10)
</code></pre>
<p>Right after that, the dropper sends to the server the random value generated at the beginning of the function in network order (<code>rbp - 0x448]</code>). Do you remember we have already seen this in the wireshark TCP Stream earlier on?</p>
<pre><code class="lang-auto">00400b38:   48 8b 05 91 15 20 00    	mov	rax, qword ptr [rip + 0x201591]   │; &lt;http_hdr&gt; 6020d0(.data+10)  :
00400b3f:   48 89 c7                	mov	rdi, rax                          │
00400b42:   e8 39 fd ff ff          	call	&lt;strlen@plt&gt;                      │; &lt;strlen@plt&gt; 400880(.plt+0x20)
00400b47:   48 89 c2                	mov	rdx, rax                          │
00400b4a:   48 8d 8d e0 fb ff ff    	lea	rcx, qword ptr [rbp - 0x420]      │; {ls_rbp-1056}
00400b51:   8b 85 ac fb ff ff       	mov	eax, dword ptr [rbp - 0x454]      │; {ls_rbp-1108}
00400b57:   48 89 ce                	mov	rsi, rcx                          │
00400b5a:   89 c7                   	mov	edi, eax                          │
00400b5c:   e8 9f fd ff ff          	call	&lt;read@plt&gt;                        │; &lt;read@plt&gt; 400900(.plt+0xa0)
</code></pre>
<p>And after that, it calculates the length of another global var (<code>http_hdr</code>) and reads that amount of data from the server. So, the dropper is expecting a specific header from the server. I already know that this data is going to be dump so I would not comment more on this.</p>
<pre><code class="lang-auto">00400b61:   48 8d 8d b8 fb ff ff    	lea	rcx, qword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400b68:   8b 85 ac fb ff ff       	mov	eax, dword ptr [rbp - 0x454]      │; {ls_rbp-1108}
00400b6e:   ba 04 00 00 00          	mov	edx, 4                            │
00400b73:   48 89 ce                	mov	rsi, rcx                          │
00400b76:   89 c7                   	mov	edi, eax                          │
00400b78:   e8 83 fd ff ff          	call	&lt;read@plt&gt;                        │; &lt;read@plt&gt; 400900(.plt+0xa0)
</code></pre>
<p>Now it reads an integer (4 bytes) from the network and stores it again on <code>rbp - 0x448</code>… uhm… let’s see what happens next.</p>
<pre><code class="lang-auto">00400b7d:   8b 85 b8 fb ff ff       	mov	eax, dword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400b83:   89 c7                   	mov	edi, eax                          │
00400b85:   e8 06 fe ff ff          	call	&lt;ntohl@plt&gt;                       │; &lt;ntohl@plt&gt; 400990(.plt+0x130)
00400b8a:   89 85 c8 fb ff ff       	mov	dword ptr [rbp - 0x438], eax      │; {ls_rbp-1080}
</code></pre>
<p>The value read from the network is converted to host format and stored at <code>rbp - 0x438</code>. At this point we can assume that <code>rbp - 0x448</code> is a kind of temporal variable and therefore not important for us. Let’s keep going.</p>
<pre><code class="lang-auto">00400b90:   8b 85 c4 fb ff ff       	mov	eax, dword ptr [rbp - 0x43c]      │; {ls_rbp-1084}
00400b96:   8b 95 c8 fb ff ff       	mov	edx, dword ptr [rbp - 0x438]      │; {ls_rbp-1080}
00400b9c:   31 d0                   	xor	eax, edx                          │
00400b9e:   89 85 bc fb ff ff       	mov	dword ptr [rbp - 0x444], eax      │; {ls_rbp-1092}
</code></pre>
<p>Aha, a <code>xor</code>. This is interesting. We are xoring the value we have just received from the server <code>rbp - 0x438</code> with the random value we generated (either check the text above or, if you have renamed your local vars you will immediately see that). Let’s keep analysing the code but this looks like a good candidate for our encryption key.</p>
<p><code>rbp - 0x444 -&gt; candidate_key</code></p>
<pre><code class="lang-auto">00400ba4:   48 8d 8d b8 fb ff ff    	lea	rcx, qword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400bab:   8b 85 ac fb ff ff       	mov	eax, dword ptr [rbp - 0x454]      │; {ls_rbp-1108}
00400bb1:   ba 04 00 00 00          	mov	edx, 4                            │
00400bb6:   48 89 ce                	mov	rsi, rcx                          │
00400bb9:   89 c7                   	mov	edi, eax                          │
00400bbb:   e8 40 fd ff ff          	call	&lt;read@plt&gt;                        │; &lt;read@plt&gt; 400900(.plt+0xa0)
00400bc0:   8b 85 b8 fb ff ff       	mov	eax, dword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400bc6:   89 c7                   	mov	edi, eax                          │
00400bc8:   e8 c3 fd ff ff          	call	&lt;ntohl@plt&gt;                       │; &lt;ntohl@plt&gt; 400990(.plt+0x130)
00400bcd:   89 85 cc fb ff ff       	mov	dword ptr [rbp - 0x434], eax      │; {ls_rbp-1076}
00400bd3:   8b 85 cc fb ff ff       	mov	eax, dword ptr [rbp - 0x434]      │; {ls_rbp-1076}
00400bd9:   48 98                   	cdqe	                                  │
00400bdb:   48 89 c7                	mov	rdi, rax                          │
00400bde:   e8 5d fd ff ff          	call	&lt;malloc@plt&gt;                      │; &lt;malloc@plt&gt; 400940(.plt+0xe0)
00400be3:   48 89 85 d0 fb ff ff    	mov	qword ptr [rbp - 0x430], rax      │; {ls_rbp-1072}
00400bea:   8b 85 cc fb ff ff       	mov	eax, dword ptr [rbp - 0x434]      │; {ls_rbp-1076}
00400bf0:   89 85 b8 fb ff ff       	mov	dword ptr [rbp - 0x448], eax      │; {ls_rbp-1096}
00400bf6:   eb 49                   	jmp	&lt;l7&gt;                              │; 400c41(.text+0x281)
</code></pre>
<p>This is a big chunk but, by now, it should be very easy to interpret. This is what it does:</p>
<ul>
<li>Reads an integer from the network and stores it in our temporal var (<code>rbp - 0x448</code>)</li>
<li>Converts it to host representation</li>
<li>Allocates a buffer with size equals to the value we have just received from the network!</li>
</ul>
<p>Looking to the assignments at the end we can see that:</p>
<ul>
<li>The pointer returned by <code>malloc</code> is stored at <code>rbp - 0x430</code>
</li>
<li>The size of the buffer is copied at <code>rbp - 0x448</code>
</li>
</ul>
<p>Then we find an unconditional jump (<code>jmp</code>) that usually means we are about to start a loop.</p>
<pre><code class="lang-auto">                                    l8:                                           │
00400bf8:   8b 85 b8 fb ff ff       	mov	eax, dword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400bfe:   89 c3                   	mov	ebx, eax                          │
00400c00:   8b 85 b8 fb ff ff       	mov	eax, dword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400c06:   48 63 d0                	movsxd	rdx, eax                          │
00400c09:   8b 85 cc fb ff ff       	mov	eax, dword ptr [rbp - 0x434]      │; {ls_rbp-1076}
00400c0f:   48 63 c8                	movsxd	rcx, eax                          │
00400c12:   8b 85 b8 fb ff ff       	mov	eax, dword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400c18:   48 98                   	cdqe	                                  │
00400c1a:   48 29 c1                	sub	rcx, rax                          │
00400c1d:   48 8b 85 d0 fb ff ff    	mov	rax, qword ptr [rbp - 0x430]      │; {ls_rbp-1072}
00400c24:   48 01 c1                	add	rcx, rax                          │
00400c27:   8b 85 ac fb ff ff       	mov	eax, dword ptr [rbp - 0x454]      │; {ls_rbp-1108}
00400c2d:   48 89 ce                	mov	rsi, rcx                          │
00400c30:   89 c7                   	mov	edi, eax                          │
00400c32:   e8 c9 fc ff ff          	call	&lt;read@plt&gt;                        │; &lt;read@plt&gt; 400900(.plt+0xa0)
00400c37:   29 c3                   	sub	ebx, eax                          │
00400c39:   89 d8                   	mov	eax, ebx                          │
00400c3b:   89 85 b8 fb ff ff       	mov	dword ptr [rbp - 0x448], eax      │; {ls_rbp-1096}
                                    l7:                                           │
00400c41:   8b 85 b8 fb ff ff       	mov	eax, dword ptr [rbp - 0x448]      │; {ls_rbp-1096}
00400c47:   85 c0                   	test	eax, eax                          │
00400c49:   75 ad                   	jne	&lt;l8&gt;                              │; 400bf8(.text+0x238)
</code></pre>
<p>Sure this is a loop using a loop index <code>rbp - 0x448</code>. That was a copy of the size of the data we are going to receive from the net. Again, I will leave the detailed analysis of this loop as an exercise to the reader. The loop basically reads data from the network and stores it in the allocated buffer until all data has been processed.</p>
<pre><code class="lang-auto">00400c4b:   8b 85 ac fb ff ff       	mov	eax, dword ptr [rbp - 0x454]      │; {ls_rbp-1108}
00400c51:   89 c7                   	mov	edi, eax                          │
00400c53:   e8 98 fc ff ff          	call	&lt;close@plt&gt;                       │; &lt;close@plt&gt; 4008f0(.plt+0x90)
</code></pre>
<p>Then the socket is closed… :o we have actually found a bug LoL.</p>
<p>The rest of the program is jut another loop. Again I will just give you some hints for you to reverse it. By now you should already be an expert on reversing loops :). If any of you experience real difficulties going through this code just post your question in the comments.</p>
<ul>
<li>The loop is XORing the buffer got from the network with the key we calculated and stored at <code>rbp - 0x444</code>
</li>
<li>The key is an integer so the program stores a pointer to the key in <code>rbp- 0x428</code> to go through the int (4 bytes) byte by byte</li>
<li>All that funny <code>shr, and, add, sub</code> code… is the modulus 4 calculation… I think <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:">
</li>
</ul>
<p>With this info and some googling you should be able to make sense out of the code below.</p>
<pre><code class="lang-auto">00400c58:   48 8b 85 a0 fb ff ff    	mov	rax, qword ptr [rbp - 0x460]      │; {ls_rbp-1120}
00400c5f:   8b 95 cc fb ff ff       	mov	edx, dword ptr [rbp - 0x434]      │; {ls_rbp-1076}
00400c65:   89 10                   	mov	dword ptr [rax], edx              │
00400c67:   48 8d 85 bc fb ff ff    	lea	rax, qword ptr [rbp - 0x444]      │; {ls_rbp-1092}
00400c6e:   48 89 85 d8 fb ff ff    	mov	qword ptr [rbp - 0x428], rax      │; {ls_rbp-1064}
00400c75:   c7 85 c0 fb ff ff 00 00 	mov	dword ptr [rbp - 0x440], 0        │; {ls_rbp-1088}
00400c7f:   eb 56                   	jmp	&lt;l9&gt;                              │; 400cd7(.text+0x317)
                                   l10:                                           │
00400c81:   8b 85 c0 fb ff ff       	mov	eax, dword ptr [rbp - 0x440]      │; {ls_rbp-1088}
00400c87:   48 63 d0                	movsxd	rdx, eax                          │
00400c8a:   48 8b 85 d0 fb ff ff    	mov	rax, qword ptr [rbp - 0x430]      │; {ls_rbp-1072}
00400c91:   48 8d 0c 02             	lea	rcx, qword ptr [rdx + rax]        │
00400c95:   8b 85 c0 fb ff ff       	mov	eax, dword ptr [rbp - 0x440]      │; {ls_rbp-1088}
00400c9b:   48 63 d0                	movsxd	rdx, eax                          │
00400c9e:   48 8b 85 d0 fb ff ff    	mov	rax, qword ptr [rbp - 0x430]      │; {ls_rbp-1072}
00400ca5:   48 01 d0                	add	rax, rdx                          │
00400ca8:   0f b6 30                	movzx	esi, byte ptr [rax]               │
00400cab:   8b 85 c0 fb ff ff       	mov	eax, dword ptr [rbp - 0x440]      │; {ls_rbp-1088}
00400cb1:   99                      	cdq	                                  │
00400cb2:   c1 ea 1e                	shr	edx, 0x1e                         │
00400cb5:   01 d0                   	add	eax, edx                          │
00400cb7:   83 e0 03                	and	eax, 3                            │
00400cba:   29 d0                   	sub	eax, edx                          │
00400cbc:   48 63 d0                	movsxd	rdx, eax                          │
00400cbf:   48 8b 85 d8 fb ff ff    	mov	rax, qword ptr [rbp - 0x428]      │; {ls_rbp-1064}
00400cc6:   48 01 d0                	add	rax, rdx                          │
00400cc9:   0f b6 00                	movzx	eax, byte ptr [rax]               │
00400ccc:   31 f0                   	xor	eax, esi                          │
00400cce:   88 01                   	mov	byte ptr [rcx], al                │
00400cd0:   83 85 c0 fb ff ff 01    	add	dword ptr [rbp - 0x440], 1        │; {ls_rbp-1088}
                                    l9:                                           │
00400cd7:   8b 85 c0 fb ff ff       	mov	eax, dword ptr [rbp - 0x440]      │; {ls_rbp-1088}
00400cdd:   3b 85 cc fb ff ff       	cmp	eax, dword ptr [rbp - 0x434]      │; {ls_rbp-1076}
00400ce3:   7c 9c                   	jl	&lt;l10&gt;                             │; 400c81(.text+0x2c1)
</code></pre>
<p>Finally, the function prepares itself to return the pointer to the <code>malloced</code> buffer (that now contains the decoded data  received from the network), check the canary and clean the stack</p>
<pre><code class="lang-auto">00400ce5:   48 8b 85 d0 fb ff ff    	mov	rax, qword ptr [rbp - 0x430]      │; {ls_rbp-1072}
00400cec:   48 8b 5d e8             	mov	rbx, qword ptr [rbp - 0x18]       │; {ls_rbp-24}
00400cf0:   64 48 33 1c 25 28 00 00 	xor	rbx, qword ptr fs:[0x28]          │
00400cf9:   74 05                   	je	&lt;l11&gt;                             │; 400d00(.text+0x340)
00400cfb:   e8 90 fb ff ff          	call	&lt;__stack_chk_fail@plt&gt;            │; &lt;__stack_chk_fail@plt&gt; 400890(.plt+0x30)
                                   l11:                                           │
00400d00:   48 81 c4 58 04 00 00    	add	rsp, 0x458                        │
00400d07:   5b                      	pop	rbx                               │
00400d08:   5d                      	pop	rbp                               │
00400d09:   c3                      	ret	                                  │
</code></pre>
<h1>Getting the Sample</h1>
<p>So, what have we learn about the dropper after analysing it?</p>
<ul>
<li>The data is xor encoded</li>
<li>The encoding key is an integer (4 bytes) calculated as the xor of a random number generated by the dropper and another random number received from the server.</li>
<li>During the communication, we can see the local random number in the request to the server</li>
<li>The server responds with 2 consecutive integers. The first integer is used to generate the key and the second integer is the size of the data that is going to be transferred</li>
<li>The HTTP headers are not used at all and can be safely ignored.</li>
</ul>
<p>With all this information let’s look again to our network dump using wireshark. First the request to the server, that shall contain the random number generated by the dropper</p>
<pre><code>00000000  47 45 54 20 2f 20 48 54  54 50 2f 31 2e 31 0a 55 GET / HT TP/1.1.U
00000010  73 65 72 2d 41 67 65 6e  74 3a 42 6c 61 63 6b 4e ser-Agen t:BlackN
00000020  69 62 62 6c 65 73 20 35  2e 33 32 20 78 4f 53 20 ibbles 5 .32 xOS 
00000030  32 2e 31 0a 0a                                   2.1..
00000035  6b 8b 45 67                                      k.Eg
</code></pre>
<p>So, the number we are interested on is: 0x6b8b4567</p>
<p><em>Note: We can figure out the length of the HTTP header dumping the <code>http_req</code> symbol in the dropper binary, as we have seen previously. In general, HTTP headers finish with two black lines (‘0a 0a’ in the dump).</em></p>
<p>Now let’s look at the server response</p>
<pre><code>00000000  48 54 54 50 2f 31 2e 30  20 32 30 30 20 4f 4b 0a HTTP/1.0  200 OK.
00000010  53 65 72 76 65 72 3a 20  53 68 61 64 6f 77 48 54 Server:  ShadowHT
00000020  54 50 2f 33 2e 32 36 20  5b 53 45 43 55 52 45 44 TP/3.26  [SECURED
00000030  5d 0a 43 6f 6e 74 65 6e  74 2d 74 79 70 65 3a 20 ].Conten t-type: 
00000040  74 65 78 74 2f 68 74 6d  6c 3b 20 63 68 61 72 73 text/htm l; chars
00000050  65 74 3d 55 54 46 2d 38  0a 43 6f 6e 74 65 6e 74 et=UTF-8 .Content
00000060  2d 4c 65 6e 67 74 68 3a  20 2d 31 0a 0a 50 4e 47 -Length:  -1..PNG
00000070  74 29 86 72                                      t).r
00000074  00 20 38 00 6a 86 ee 59  17 c2 a3 1f 15 c3 a2 1f . 8.j..Y ........
 (...)
</code></pre>
<p>The key number is just after the <code>PNG</code> string : <code>0x74298672</code> and the file size is next: <code>0x00203800</code>.</p>
<p>Now we can calculate the key:</p>
<pre><code>0x6b8b4567 ^ 0x74298672 = 0x1fa2c315
</code></pre>
<p>Finally, you need to dump the data and write a small program to decode the data. I have already told you how to dump the data from wireshark into a file and how to skip a header. Now you know that you have to also skip the <code>PNG</code> string and the 2 integers sent by the server. Just check the new offset and dump the thing.</p>
<pre><code>$ dd if=png.dump of=sample bs=1 skip=$((0x78))
</code></pre>
<p>Done, we just need a program to decode the file and we are done. This is my quick and dirty <code>xor</code> decoder in C. You can use any language you want.</p>
<pre><code class="lang-auto">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int
main (int argc, char *argv[])
{
  unsigned char *p, *k;
  int len;
  int key = atoi (argv[2]);
  int i;
  FILE *f;

  f = fopen (argv[1], "rb");
  fseek (f, 0L, SEEK_END);
  len = ftell (f);
  fseek (f, 0L, SEEK_SET);
  printf ("File size is: %d\n", len);
  printf ("key %x\n", key);
  p = malloc (len);
  fread (p, 1, len, f);
  fclose (f);
  k = &amp;key;
  for (i = 0; i &lt; len; i++) p[i] ^= k[i % 4];
  f = fopen (argv[1], "wb");
  fwrite (p, 1, len, f);
  fclose (f);

</code></pre>
<p>And, after all this,  we can finally recover our sample!</p>
<pre><code>$ cp sample sample.1
$  ./xor1 sample.1 530760469
File size is: 2111488
key 1fa2c315
$  file sample.1
sample.1: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=0x0ec065afe8fd78ff18381dc09b0be805364c3c95, not stripped
</code></pre>
<h1>Next</h1>
<p>Believe it or no, you have got the first flag… just run <code>strings sample.1| grep CTF</code> <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Awesome… you have successfully analysed a malware dropper. Now, you have to start again and analyse the actual malware sample. I hope it would be a lot easier now that you can make good use of all the experience you have gained analysing the dropper. Actually you will find a lot of familiar code in the sample what should make your analysis faster and easier. Anyhow, I’ll wait a couple of weeks for you to get the flags and before release Part II… Maybe some of you would write Part II for me <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://0x00sec.org/t/malware-analysis-case-gbc-17-124-the-dropper-part-ii/3409">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/malware-analysis-case-gbc-17-124-the-dropper-part-ii/3409</link>
          <pubDate>Fri, 25 Aug 2017 15:59:05 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-3409</guid>
          <source url="https://0x00sec.org/t/malware-analysis-case-gbc-17-124-the-dropper-part-ii/3409.rss">[Malware Analysis] Case GBC-17_124: The dropper Part II</source>
        </item>
  </channel>
</rss>
