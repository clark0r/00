<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:discourse="http://www.discourse.org/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Anonymity - 0x00sec - The Home of the Hacker</title>
    <link>https://0x00sec.org/c/anonymity/72</link>
    <description>Topics in the &#39;Anonymity&#39; category </description>
    
      <lastBuildDate>Thu, 14 Dec 2023 01:52:21 +0000</lastBuildDate>
      <atom:link href="https://0x00sec.org/c/anonymity/72.rss" rel="self" type="application/rss+xml" />
        <item>
          <title>An Overview of Operations security (OPSEC)</title>
          <dc:creator><![CDATA[0xf00I]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Finally taking the plunge to share thoughts that have been brewing in the recesses of my mind. So, what’s the scoop? It’s all about the intricate dance of OPSEC, or <code>OPERATIONS SECURITY</code>. For those who fancy a formal definition, OPSEC is the art of evaluating whether our moves are visible to potential threats, assessing the risk of compromising information, and then taking calculated measures to thwart those who seek to exploit our critical data.</p>
<p>Diving into the tactical realm, OPSEC emerged officially in 1966 during the US’s Operation Purple Dragon, spurred by the need to investigate operational mishaps and devise a pre-operation process to dodge fatal compromises. If you’re feeling historical, check it out here:  <a href="https://www.nsa.gov/portals/75/documents/news-features/declassified-documents/cryptologic-histories/purple_dragon.pdf" rel="noopener nofollow ugc">purple_dragon.pdf</a></p>
<h2><a name="core-principles-1" class="anchor" href="https://0x00sec.org#core-principles-1"></a>Core Principles</h2>
<p>In a nutshell, OPSEC boils down to one thing: control. Control over information and actions, to prevent any attempts at turning them against you. Whether you’re immersed in threat intelligence collection, a red team engagement, or just nosing around an investigation, OPSEC is the guardian angel watching over it all. While the textbooks swear by five sacred steps, we’re zooming in on a couple, starting with the core of <strong>Identifying and Analyzing Threats &amp;&amp; Vulnerabilities.</strong> Picture a process that unveils the adversary’s watchful gaze, details the information they crave, and pinpoints your Achilles’ heels. That’s just the kickoff. We then pivot to <strong>Assessing Risks</strong> and strategically applying <strong>Appropriate Countermeasures.</strong> Quick heads-up: I’m spinning this yarn with a big ol’ focus on Anonymity and Privacy.</p>
<p>Now, whether you’re a soldier, a civilian, or somewhere in the murky in-between, safeguarding your critical information is non-negotiable. This isn’t just a 9-to-5 deal it extends to your home. OPSEC isn’t just for the field; it’s your shield against personal info leaks and safeguarding sensitive details from turning into weapons against you. From PII and financial data to your daily grind, address, and personal records, OPSEC’s got your back. Stick around, and we’ll navigate the cyber, hopping between topics, unraveling my train of thought. By the time we wrap this up, it should all click into place.</p>
<h2><a name="identifying-and-analyzing-threats-vulnerabilities-2" class="anchor" href="https://0x00sec.org#identifying-and-analyzing-threats-vulnerabilities-2"></a>Identifying and Analyzing Threats &amp;&amp; Vulnerabilities</h2>
<p>Alright, let’s demystify the <strong>Identification of Critical Information.</strong> In plain speak, it’s about pinpointing what needs safeguarding to pull off the operation without a hitch. Be it your source IP address, the tools of the trade, or the intricate web of your command and control (C&amp;C) infrastructure – make it crystal clear. Enter CALI (Capabilities, Activities, Limitations, and Intentions), a straightforward checklist outlining the operation’s must-haves. But before I dive into the deep end and potentially befuddle you, let’s ease into it with a high-level overview and a dash of shenanigans.</p>
<p>Now, let’s get down to the internet. IP – the gateway to the online realm. Your connection to the internet is marked by an IP provided by your trusty ISP (Internet Service Provider), a key linked to an entry in their database. Most countries, ever-vigilant, have data retention regulations, forcing ISPs to log who’s using what IP when, for years on end. If that origin IP leaks, it’s a breadcrumb trail straight to you. Oh, and good luck accessing the internet in many places without coughing up some form of identification to your provider. <a href="https://en.wikipedia.org/wiki/IP_address" rel="noopener nofollow ugc">https://en.wikipedia.org/wiki/IP_address</a></p>
<p>Now, DNS. Standing for “Domain Name System,” it’s the wizard behind the curtain, helping your browser find the IP address of a service. Think of it as a colossal contact list – ask for a name, and it hands you the number. When your browser wants to visit, say, <code>0x00sec</code> via <a href="https://0x00sec.org/">0x00sec.org</a>, it ping-pongs with a DNS service to unveil the IP addresses of <code>0x00sec</code>’s servers.</p>
<p>Typically, your ISP dishes out the DNS service, automatically set up by the network you’re on. So, you type <code>0x00sec.com</code> into your browser, and the request embarks on an internet journey, hopping from DNS resolver to root nameserver to TLD server, and finally, to the domain’s nameserver. All this dance reveals the IP address of <code>0x00sec.com</code>, which then travels back to your browser, completing the ritual. For a deeper dive, check out: <a href="https://www.cloudflare.com/learning/dns/what-is-dns/" rel="noopener nofollow ugc">https://www.cloudflare.com/learning/dns/what-is-dns/</a></p>
<p>But here’s the kicker – most of these DNS requests cruise unencrypted. Even if you’re surfing in incognito mode, or HTTPS, your browser might be casually throwing unencrypted DNS requests out there, saying, “Hey, what’s the IP address of <a href="https://web.archive.org/web/20201121171632/http://www.pornhub.com/" rel="noopener nofollow ugc">www.pornhub.com</a>?”. Not exactly covert, right?</p>
<p>Now that we’ve paved the way and you’ve got the basics down, let’s talk about fortifying your privacy. Enter encrypted DNS, DNS over HTTPS or DNS over TLS. You can set up your private DNS server, self-hosted with something like pi-hole or remotely hosted with the likes of <strong>nextdns</strong> or the  <em>1.1.1.1</em> within the Tor network. Sounds like airtight privacy, right? Well, not entirely.</p>
<p>You can’t don the cloak of Tor all the time – it’s like shouting, “Hey, look at me!” and that’s not our game plan. To dodge unnecessary attention, we introduce VPNs and Tor, tag-teaming to keep your ISP and any nosy third party from eavesdropping or blocking your DNS requests. We’ll unpack this intricate dance in more detail down the road.</p>
<p>We’ve got a glaring gap to address here – MAC addresses, a pivotal piece of the puzzle. Your MAC address, acting as a unique ID for your network interface, can become a tracking beacon if left unrandomized. Big players like Microsoft and Apple, along with device manufacturers, maintain logs with MAC addresses, creating a traceable trail linking devices to specific accounts. Even if you think you’ve slipped under the radar by buying your gadget “anonymously”, surveillance tactics, from CCTV footage to mobile provider antenna logs, might expose your identity.  So, randomizing your MAC becomes a non-negotiable move. Concealing both your MAC and Bluetooth addresses is paramount. Operating systems like Android, iOS, Linux, and Windows 10 offer MAC address randomization, or you can wield tools like <a href="https://github.com/alobbs/macchanger" class="inline-onebox" rel="noopener nofollow ugc">GitHub - alobbs/macchanger: GNU MAC Changer</a></p>
<p>But hold up, home routers and WiFi access points are keeping tabs on connected devices, and ISPs can remotely access and analyze this info.</p>
<p>Shifting gears to Bluetooth MAC addresses, they’re not off the hook from the tracking game. Manufacturers and OS providers log this data, potentially connecting it to sale details or accounts. Despite the safeguards in operating systems, vulnerabilities persist. To amp up your privacy and minimize tracking, consider disabling Bluetooth in the BIOS/UEFI settings or within the operating system. In the Windows realm, shutting down the Bluetooth device in the device manager can force randomization. Or, for a hassle-free solution, consider rocking a Linux system.</p>
<h3><a name="threat-analysis-3" class="anchor" href="https://0x00sec.org#threat-analysis-3"></a>Threat Analysis</h3>
<p>Now, let’s unpack Threat Analysis in layman’s terms. It’s all about getting to know your adversaries inside out and identifying what’s on the line. Picture this: the threat of your source IP, network, or fingerprint being exposed. This becomes especially critical when dealing with malware samples – slip up, and your investigation might be blown. For those donning the hat of adversary hunters, safeguarding your identity as a researcher is paramount. Some adversaries aren’t above trying to infect or exploit researchers with malware. Let’s break it down step by step:</p>
<p>Imagine you’re using Windows or macOS for your school or work research, everyday internet surfing, perhaps even employing a privacy VPN like <code>mullvad</code>. You write code, edit photos, keep things normal. Password managers, disk encryption, and backups on encrypted external disks are part of the routine. This is your main OS – clean, nothing shady. Stick to regular emails, social networks, bookmarks, visited sites, and your Wi-Fi access point. This is for your public face, providing plausible deniability when the need arises. Check out <a href="https://opsec101.org/" rel="noopener nofollow ugc">https://opsec101.org/</a></p>
<p>Next, you’ve got a private VM for malware analysis, maybe even dabbling in writing or reverse engineering malware. Same drill – encrypted traffic routing. This VM is your privacy haven, guarding against a softer adversary.</p>
<p>And then, the pièce de résistance – the <strong>Hidden OS,</strong> where you carry out anonymous activities from a VM within this clandestine setup. All network traffic from your client VM is routed through a Gateway VM, a Tor Network conductor that directs (torifies) all traffic into the Tor Network – essentially, a network “kill switch.” The VM itself, basking in internet connectivity through a Tor Network Gateway, hooks up to your cash-paid VPN service through Tor. DNS leaks to your ISP? Impossible, thanks to the isolated network that mandates a journey through Tor, come what may.</p>
<p>Sure, Tor alone might raise eyebrows on many platforms, resulting in pesky captchas, errors, and challenges. But this multi-layered approach significantly slashes the odds of your adversaries easily de-anonymizing you. Now, you might ask about using Tor over VPN instead of VPN over Tor. Well, your VPN provider is just another ISP, aware of your origin IP, making de-anonymization a breeze. Connecting to various services using the IP of a Tor Exit Node? That’s a red flag in many places.</p>
<p>Enter Whonix, a linchpin in the anonymization process. Whonix, a Linux distribution, rolls out two Virtual Machines:</p>
<ul>
<li>The Whonix Workstation (your go-to for anonymous activities)</li>
<li>The Whonix Gateway (establishing a connection to the Tor network and routing all network traffic from the Workstation through the Tor network).</li>
</ul>
<p>You’ve got two routes here – the Whonix-only route, where all traffic journeys through the Tor Network, and the Whonix hybrid route, where everything goes through a cash-paid VPN over the Tor Network. Choose your adventure wisely.</p>
<p>Hold up, an anonymous (cash-paid) VPN subscription? You’re probably thinking, “Are you kidding me?” Aren’t you the one talking shit about VPNs? Well, kind of. I’m usually referring to third-party VPNs and recommending renting a VPS to bootstrap an open-source VPN server! (Check out these guides: <a href="https://proprivacy.com/vpn/guides/create-your-own-vpn-server" rel="noopener nofollow ugc">ProPrivacy</a> and <a href="https://medium.com/press-start-to-begin/anyone-can-ssh-into-a-server-scp-files-from-it-set-up-your-own-vpn-or-all-of-the-above-471a06e310bd" rel="noopener nofollow ugc">Medium</a>) But let’s keep it real here. You need a VPN that’s not leaving any traces in the financial system back to you. This VPN will come into play later when you want to connect to various services incognito, but never directly from your IP. Why? Because trusting VPNs is like treading on thin ice. Only unleash this new VPN account when explicitly directed, and never connect to it using your usual connections. The plan is to employ this VPN within a Virtual Machine in a secure manner because, let’s face it, we don’t trust those VPN providers’ “no-logging policies.” Your origin IP should forever remain a mystery to the VPN provider.</p>
<p>This serves two crucial purposes: first, all your traffic gets a cozy cloak of anonymity through Tor, and second, by keeping your personal and digital lives on separate tracks, you dodge any accidental mix-ups.</p>
<p>Now, I’ve delved into the complexity and limitations of using VPN and Tor simultaneously in a <a href="https://0x00sec.org/t/vpn-and-tor-at-the-same-time/36790/6">previous post</a>, but let’s circle back and revisit the essentials.</p>
<p>Even the Tor project devs say a big “No” to <a href="https://support.torproject.org/faq/faq-5/#topic_faq-5" rel="noopener nofollow ugc">VPN with Tor?</a>, but only for advanced users. However, <strong>It’s complicated.</strong> It depends on your threat model and how well you configure everything. Here are the facts: your ISP is DEFINITELY logging your activities, a VPN is MAYBE logging your activities. Another fact is routing your Tor traffic through a VPN is no guarantee of hiding your Tor usage. Your Tor usage and even your browsing patterns might be revealed through traffic fingerprints. So, man, it really depends on you.</p>
<h2><a name="vulnerability-analysis-risk-assessment-4" class="anchor" href="https://0x00sec.org#vulnerability-analysis-risk-assessment-4"></a>Vulnerability Analysis &amp;&amp; Risk Assessment</h2>
<p>Now, let’s delve into identifying vulnerabilities – the weak spots adversaries are itching to exploit. The Tor Project, while a formidable force, isn’t an impervious fortress against global adversaries, as laid out in the Tor design document <a href="https://css.csail.mit.edu/6.858/2022/readings/tor-design.pdf" rel="noopener nofollow ugc">here</a>. Successful attacks against Tor have left their mark, and various advanced techniques boasting a remarkable 96% success rate in fingerprinting encrypted traffic have emerged over the years, laying bare the websites you’ve visited. Consider major platforms like Twitter and Facebook. While Tor is often associated with accessing these sites in censored countries, things get dicey when users toss in their real names, pictures, and link their accounts to personal info like emails and phone numbers. The anonymity offered by Tor starts losing its mojo in such scenarios. Moreover, platforms can employ algorithms to scrutinize your browsing behavior, spotting patterns, and potentially connecting you to other profiles.</p>
<p>Though it’s unclear if governments tap into such data, the possibility lingers. Basic information can inadvertently lead back to you. Your digital fingerprint, a unique blend of how you write, behave, click, and browse – from fonts to screen resolution, operating system, and model – can be triangulated to follow you as you navigate the web. This is what we call <code>Fingerprinting</code> – the art of identifying someone based on these behavioral patterns. Even seemingly trivial details like slangs or spelling quirks could potentially unveil your identity. Platforms like Google and Meta can leverage this information, mapping it to your past online activities. The internet is rife with pseudonyms, but the majority are anything but anonymous and can be effortlessly traced back to their real identities.</p>
<p>Also, ensure you disable Bluetooth, biometrics, webcam, and microphone. Enable BIOS/UEFI password, and disable USB/HDMI. These measures help keep things in check and fend off certain attacks. And whatever you do, don’t leave your laptop unattended in your hotel room or elsewhere. Make it as challenging as possible for anyone to tamper with it without raising alarms.</p>
<p>Now, let’s talk about something you carry every day – your phone. Phones come with IMEI (International Mobile Equipment Identity) and IMSI (International Mobile Subscriber Identity) numbers. The IMEI is tied directly to your phone, known by mobile operators, and tracked each time your phone connects to the network. Changing the IMEI is possible but not straightforward, making it easier to opt for an old burner phone for anonymity.</p>
<p>The IMSI is linked to your mobile subscription or pre-paid plan and is hardcoded on the SIM card. Like the IMEI, it’s used by apps and OS for identification. Some EU countries maintain a database of IMEI/IMSI associations for law enforcement.</p>
<p>Tracing back IMEI and IMSI to you is a reality. Mobile Operator Subscriber Logs store IMEI and IMSI, linking them to subscriber information. IMEI and IMSI, along with connection data, are logged for precise tracking through signal triangulation, unveiling connections to other known phones.</p>
<p>Manufacturers trace phone sales using IMEI. Even if bought anonymously, they can correlate this info with other phones present at the time, utilizing antenna logs. IMSI is tied to the buyer’s identity, and even in countries allowing cash purchases, details like where and when it was bought can be retrieved.</p>
<p>Google/Apple logs IMEI/IMSI tied to accounts and user history. Government agencies deploy IMSI catchers to force a specific IMSI to connect, enabling various attacks.</p>
<p>Geolocation isn’t solely done through mobile antennas triangulation; it involves WIFIs and Bluetooth devices around you. Google and Apple maintain a database of most WIFI access points and Bluetooth devices and their locations. When your smartphone is on, it scans passively (unless disabled in settings) WIFI access points and Bluetooth devices, allowing them to provide accurate locations even when GPS is off. However, this feature also lets them keep a record of all Bluetooth devices globally for tracking purposes.</p>
<p>For maximum anonymity, use a burner phone with an unlinked IMEI and an IMSI not tied to you. Purchase these in a secure location using cash, and don’t bring your primary phone during the purchase. Never power on the burner phone in a traceable location, especially not where your known smartphone is located, to maintain maximum anonymity during setup and occasional verification.</p>
<p><strong>Note:</strong> Don’t take your smartphone with you during sensitive activities if you want to keep them secret. Just leave it at home.</p>
<p>Your devices can be tracked even when powered off. Such devices continue to broadcast identity information to nearby devices using Bluetooth Low-Energy, even when they are turned off. While they don’t have direct access to the devices not connected to the internet.</p>
<p>Your devices are like silent informants, even when powered off. They persistently broadcast identity information via Bluetooth Low-Energy to nearby devices, creating a potential trail. While they lack direct access to devices not connected to the internet, their subtle transmissions reveal more than you might think.</p>
<p>Your smartphone, diligently records everything from your voice commands (“Hey Siri,” “Hey Google”) to your every move (Bluetooth devices, Wi-Fi access points), activities (steps, screen time, connected devices data), and network locations. It captures images and videos, and likely has access to your logs, including social media, messaging, and financial accounts. It’s not just your smartphone; other smart devices – Apple Watch, Android Smartwatch, fitness devices, smart speakers (Amazon Alexa), and more – join the surveillance party.</p>
<p>When gearing up for anonymous or sensitive activities, it’s prudent to leave your smart devices behind. They can identify your device and store the location in a database, which might be accessed by third parties or the devices themselves for various purposes. Even when turned off, your smartphone may not be as dormant as you think, as highlighted in this <a href="https://threatpost.com/iphones-attack-turned-off/179641/" rel="noopener nofollow ugc">threatpost article</a>.</p>
<p>Let’s talk about <code>Metadata</code> – the information about your activities without delving into the actual content. Imagine knowing you had a call from an oncologist followed by calls to family and friends. Though the conversation details elude us, the metadata hints at its nature.</p>
<p>Smartphones, operating systems (Android/IOS), browsers, apps, and websites are avid collectors of your metadata, often including your location. Numerous companies likely know your precise location at any time, courtesy of your smartphone. Additionally, files come adorned with metadata – a prime example being pictures with EXIF information containing details like GPS coordinates, device model, and precise capture time. While this may not directly unveil your identity, it could disclose your exact whereabouts at a specific moment, potentially piecing together a larger puzzle.</p>
<p>Depths of the Deep Web and Dark Web, OPSEC <a href="http://dreadytofatroptsdj6io7l3xptbet6onoyno2yv7jicoxknyazubrad.onion/post/19687954203332614950/#c-7c2f1f5af40e27b563" rel="noopener nofollow ugc">Onion</a></p>
<p>Here’s the reality check you’re not as special as you might think. Advanced techniques require considerable resources, skills, joint effort, and time, unless your goal is to overthrow the government. For most scenarios, investigations and espionage require reconnaissance and intelligence coordination, which, in itself, is time-consuming. However, once you find yourself on some list, it’s too late for OPSEC.</p>
<h1><a name="conclusion-5" class="anchor" href="https://0x00sec.org#conclusion-5"></a>Conclusion</h1>
<p>I won’t sugarcoat it achieving perfect OPSEC is an illusion. Compromises are inevitable. The key is in your dedication and the measures you’re willing to take. The more time invested and the more cautious you are, the better. Remember the basics: avoid attracting attention, stay vigilant, be patient, steer clear of laziness and ignorance, blend in, do what makes sense, and, most importantly, Shut the F* up.  <a href="https://theanarchistlibrary.org/library/crimethinc-what-is-security-culture" class="inline-onebox" rel="noopener nofollow ugc">What Is Security Culture? | The Anarchist Library</a></p>
<p>I’ve touched on the shenanigans in play. While not an exhaustive dive into every facet of attacks or vulnerabilities, consider this a 101 to kickstart your research. It’s designed to stake a claim in the recesses of your damn mind, offering a glimpse into how an OPSEC strategy should take shape against the backdrop of tools and adversary capabilities. and no matter what research you conduct or guide/tips you come across might not cut it; they could be downright irrelevant to your unique operations. So, how do you make this realistically work? Simple. Build your own OPSEC and execute drills that fit your OP. It shouldn’t consume more than a few hours in most cases. Stay sharp, stay secure.</p>
<h2><a name="references-6" class="anchor" href="https://0x00sec.org#references-6"></a>References</h2>
<ul>
<li><a href="https://irp.fas.org/nsa/ioss/threat96/index.html" rel="noopener nofollow ugc">Operations Security INTELLIGENCE THREAT HANDBOOK</a></li>
<li><a href="https://whiteprime.github.io/thgtoa/guide.html" rel="noopener nofollow ugc">Автостопом по анонимности в Интернете</a></li>
<li><a href="https://media.defense.gov/2017/Mar/24/2001721511/-1/-1/0/CIM_5510_24A.PDF" rel="noopener nofollow ugc">DHS/USCG Operations Security (OPSEC) Program</a></li>
<li><a href="https://info.publicintelligence.net/IOSS-TerrorismThreatHandbook.pdf" rel="noopener nofollow ugc">Interagency OPSEC Support Staff (IOSS) Terrorism Threat Handbook</a></li>
<li><a href="https://wikileaks.org/ciav7p1/cms/page_14587109.html" rel="noopener nofollow ugc">Vault 7: Development Tradecraft DOs and DON’Ts</a></li>
<li><a href="https://defuse.ca/truecrypt-plausible-deniability-useless-by-game-theory.htm" rel="noopener nofollow ugc">Plausible Deniability is Theoretically Useless</a></li>
</ul>
            <p><small>6 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/an-overview-of-operations-security-opsec/38328">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/an-overview-of-operations-security-opsec/38328</link>
          <pubDate>Thu, 14 Dec 2023 01:52:21 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-38328</guid>
          <source url="https://0x00sec.org/t/an-overview-of-operations-security-opsec/38328.rss">An Overview of Operations security (OPSEC)</source>
        </item>
        <item>
          <title>Isp&gt;vpn&gt;whoami&gt;proxychain&gt;tor</title>
          <dc:creator><![CDATA[0xbeep]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>YOU&gt;ISP&gt;VPN&gt;WHOAMI&gt;PROXYCHAIN&gt;TOR&gt;Website<br>
What’s the best possible “anonimity/untraceable combo”?<br>
(I’m n00bie)</p>
<p><em>imagine you’re the NSA and found me on the target website since you can easily see and reverse the TOR chain and encryption. And you’re going back to my computer to find me</em></p>
<p><img src="https://0x00sec.org/images/emoji/twitter/point_down/2.png?v=12" title=":point_down:t2:" class="emoji only-emoji" alt=":point_down:t2:" loading="lazy" width="20" height="20"><br>
What I’ve learned last days:<br>
•I’m here<br>
•ISP (what ISP can see here?)<br>
•WHOAMI project (mac changing, ip spoofing, and many more stuff)<br>
•VPN (vpn company can’t see see my IP and stuff because of whoami)<br>
•Proxychain (doesn’t encrypt nothing, just to make them stuck searching)<br>
•TOR (exit node is open and NSA knows what I’m doing and knows I’m using proxychain and if they reverse it they’ll know my VPN company. But don’t know who and where am I.</p>
<p>I said I was n00bie <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20"></p>
<p>Now some questions.<br>
How the hell I “order these steps on a chain”?<br>
(Example: how do i set vpn before or after tor?)<br>
Which is the best order/combination in your conception?<br>
Can I use VPN again after TOR? Even if I’m using before?</p>
<p>Cheers fam?<br>
(Example: how do i set vpn before or after tor?)<br>
Which is the best order/combination in your conception?</p>
<p>Cheers fam!</p>
            <p><small>15 posts - 7 participants</small></p>
            <p><a href="https://0x00sec.org/t/isp-vpn-whoami-proxychain-tor/37626">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/isp-vpn-whoami-proxychain-tor/37626</link>
          <pubDate>Sun, 29 Oct 2023 06:52:32 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-37626</guid>
          <source url="https://0x00sec.org/t/isp-vpn-whoami-proxychain-tor/37626.rss">Isp&gt;vpn&gt;whoami&gt;proxychain&gt;tor</source>
        </item>
        <item>
          <title>VPN and Tor at the same time?</title>
          <dc:creator><![CDATA[Mr5Robot]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Hello, I wounder if it is safe to use Kaspersky VPN and Tor at the same time ?</p>
<p>What do you think ?</p>
<p>Thank you in advance</p>
            <p><small>17 posts - 17 participants</small></p>
            <p><a href="https://0x00sec.org/t/vpn-and-tor-at-the-same-time/36790">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/vpn-and-tor-at-the-same-time/36790</link>
          <pubDate>Mon, 04 Sep 2023 17:51:38 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-36790</guid>
          <source url="https://0x00sec.org/t/vpn-and-tor-at-the-same-time/36790.rss">VPN and Tor at the same time?</source>
        </item>
        <item>
          <title>[Wiki] Anonymization Networks</title>
          <dc:creator><![CDATA[loser]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p><strong>Introduction</strong><br>
To maintain anonymity while hacking or hosting content, you can use these networks and programs. They are all libre software.</p>
<p><strong>I2P:</strong><br>
I2P is a garlic routing network, meaning similarly to Tor it routes all traffic through a few nodes and encrypts the traffic. Unlike Tor its a closed network and traffic cannot easily escape the network, at least not without an out-proxy. Unlike Tor you can use I2P for torrenting and a few things more. Compared to Tor there is more personal websites and file hosts/torrenting and less illegal content.</p>
<p><strong>How to use the network:</strong><br>
On Windows there is a browser to use for I2P: <a href="http://geti2p.org/en/download/easyinstall" class="inline-onebox" rel="noopener nofollow ugc">I2P Easy Install Bundle (Beta) for Windows - I2P</a><br>
On Unix start the i2p daemon and point your browser (or torrent, email or whatever program) to localhost on port 4444.</p>
<p><strong>How to setup a site on I2P:</strong></p>
<pre><code class="lang-auto"># install program for server
apt install i2pd

cat &lt;&lt; EOF &gt; tunnels.conf
[example]
type = http
host = 127.0.0.1
port = 8080
keys = example.dat
EOF

#output the address
cat example.dat
</code></pre>
<p><strong>Primary Links</strong><br>
I2P Main  website: <a href="https://geti2p.net/en/" rel="noopener nofollow ugc">https://geti2p.net/en/</a><br>
Alternative client written in C++: <a href="https://i2pd.website/" rel="noopener nofollow ugc">https://i2pd.website/</a><br>
Alternative client, enhanced: <a href="https://i2pplus.github.io/" rel="noopener nofollow ugc">https://i2pplus.github.io/</a><br>
<strong>Eepsites:</strong><br>
Duckduckgo: <a href="http://gqt2klvr6r2hpdfxzt4bn2awwehsnc7l5w22fj3enbauxkhnzcoq.b32.i2p/" rel="noopener nofollow ugc">http://gqt2klvr6r2hpdfxzt4bn2awwehsnc7l5w22fj3enbauxkhnzcoq.b32.i2p/</a><br>
InfoCon Archives: <a href="http://ic7rentjh6ilzz6p5kveiuyzov534ksfcexmpeniyallzf5in67a.b32.i2p/" rel="noopener nofollow ugc">http://ic7rentjh6ilzz6p5kveiuyzov534ksfcexmpeniyallzf5in67a.b32.i2p/</a><br>
OpenBSD: <a href="http://ahwlj76krc5do77pibighi2frqmfccpezyiqfmiernvivwomgvuq.b32.i2p/" rel="noopener nofollow ugc">http://ahwlj76krc5do77pibighi2frqmfccpezyiqfmiernvivwomgvuq.b32.i2p/</a><br>
Privatebin: <a href="http://e7qy5kc7ivqtnrbdn5ymx5nmbdedlrjkdchqmmkhud4ockrime5a.b32.i2p/" rel="noopener nofollow ugc">http://e7qy5kc7ivqtnrbdn5ymx5nmbdedlrjkdchqmmkhud4ockrime5a.b32.i2p/</a></p>
<p><strong>Yggdrasil:</strong></p>
<p>Yggdrasil is an overlay network with strong encryption. It’s much smaller than I2P and by worlds smaller than Tor, but still worth looking into. Mostly IRCs and Forums are hosted there. It relies on IPv6 exclusively.</p>
<p><strong>How to use it (on Ubuntu/Debian GNU+Linux):</strong></p>
<pre><code class="lang-auto">#update package manage and install dirmngr
apt update
apt install dirmngr 

#fetch keys
gpg --fetch-keys https://neilalexander.s3.dualstack.eu-west-2.amazonaws.com/deb/key.txt`
gpg --export 569130E8CA20FBC4CB3FDE555898470A764B32C9 | sudo apt-key add -`

#add repository
echo 'deb http://neilalexander.s3.dualstack.eu-west-2.amazonaws.com/deb/ debian yggdrasil' | sudo tee /etc/apt/sources.list.d/yggdrasil.list`

#update the package manager and install yggdrasil
apt update; apt install yggdrasil 

#generate the config
yggdrasil -genconf -json &gt; /etc/yggdrasil.conf

#add peers to the config
#look here for peers: https://github.com/yggdrasil-network/public-peers
#use as near as possible nodes geographically
cat &lt;&lt; EOF &gt; /etc/yggdrasil.conf
Peers:
[
  #your peers here
]
EOF
</code></pre>
<p><strong>How to host something on Yggdrasil:</strong><br>
Setup the network like above and continue with adding more peers. Then restart Yggdrasil with Systemctl (on systemD distros)</p>
<pre><code class="lang-auto">systemctl restart yggdrasil
</code></pre>
<p><strong>Primary Links:</strong><br>
Main website: <a href="https://yggdrasil-network.github.io/" rel="noopener nofollow ugc">https://yggdrasil-network.github.io/</a><br>
Public Peers: <a href="https://github.com/yggdrasil-network/public-peers" rel="noopener nofollow ugc">https://github.com/yggdrasil-network/public-peers</a><br>
<strong>Yggdrasil Sites:</strong><br>
PrivateBin: <a href="https://0x00sec.org">http://[321:c99a:91a1:cd2c::3]/</a><br>
Yggdrasil Community: <a href="https://0x00sec.org">http://[21a:34aa:c782:3ad2:1bf8:73f8:141:66e8]/</a><br>
Yggdrasil Network: <a href="https://0x00sec.org">http://[319:3cf0:dd1d:47b9:20c:29ff:fe2c:39be]/</a></p>
<p><strong>Tor:</strong><br>
Tor is the largest network of those all. All traffic gets routed through three nodes and is encrypted. Tor is mostly secure if you take some means of securing your client. Content hosted on Tor is called a hidden service. For hackers Tor is in particular in interest, because you can anonymize your hacking activities with it when attacking.</p>
<p><strong>Setting up Tor to use as client</strong></p>
<pre><code class="lang-auto">#update package manager
apt update
#install tor
apt install tor

#enable and start the daemon
systemctl enable --now tor
</code></pre>
<p>Now just point your client to localhost on port 9050 and you are using Tor.</p>
<p><strong>Setting up Tor as a transparent proxy with iptables on GNU/Linux</strong><br>
Sometimes it makes sense to root all traffic on a system through Tor. For example in a VM you use for hacking or on a webserver hosting a hidden service.</p>
<pre><code class="lang-auto">#add transparent tor proxy port to config file
cat &lt;&lt; EOF &gt;&gt; /etc/tor/torrc
TransPort 127.0.0.1:9040
DNSPort 127.0.0.1:9053
AutomapHostsOnResolve 1
EOF

#make all traffic resolve through localhost
echo "nameserver 127.0.0.1" &gt; /etc/resolve.conf
echo "nohook resolv.conf" &gt; /etc/dhcpcd.conf
#route all traffic through tor with iptables
iptables -t nat -A OUTPUT -p TCP -m owner ! --uid-owner tor -j DNAT --to-destination 127.0.0.1:9040
iptables -t nat -A OUTPUT -p TCP --dport 53 -j DNAT --to-destination 127.0.0.1:9053`
iptables -t nat -A OUTPUT -p UDP --dport 53 -j DNAT --to-destination 127.0.0.1:9053`
</code></pre>
<p><strong>Setting up a hidden service on Tor:</strong><br>
Tor hidden services are sites on the Tor network which can be accessed exclusively over Tor</p>
<pre><code class="lang-auto">#add this to the config
cat &lt;&lt; EOF &gt;&gt; /etc/tor/torrc
HiddenServiceDir /var/lib/tor/HIDDENSERVICENAME/
HiddenServicePort PORT 127.0.0.1:PORT`
EOF

#restart Tor to take effect
systemctl restart tor@default

#get the .onion address of the service
cat /var/lib/tor/hidden_service/HIDDENSERVICENAME`
</code></pre>
<p><strong>Primary Links</strong><br>
Tor Project: <a href="https://www.torproject.org/" rel="noopener nofollow ugc">https://www.torproject.org/</a><br>
Kicksecure VMs that route all traffic through Tor: <a href="https://www.whonix.org/" rel="noopener nofollow ugc">https://www.whonix.org/</a><br>
<strong>Hidden Services:</strong><br>
Tor Project Support: <a href="http://rzuwtpc4wb3xdzrj3yeajsvm3fkq4vbeubm2tdxaqruzzzgs5dwemlad.onion/" rel="noopener nofollow ugc">http://rzuwtpc4wb3xdzrj3yeajsvm3fkq4vbeubm2tdxaqruzzzgs5dwemlad.onion/</a><br>
Tor Project Status: <a href="http://eixoaclv7qvnmu5rolbdwba65xpdiditdoyp6edsre3fitad777jr3ad.onion/" rel="noopener nofollow ugc">http://eixoaclv7qvnmu5rolbdwba65xpdiditdoyp6edsre3fitad777jr3ad.onion/</a><br>
Bridges for Tor: <a href="http://yq5jjvr7drkjrelzhut7kgclfuro65jjlivyzfmxiq2kyv5lickrl4qd.onion/" rel="noopener nofollow ugc">http://yq5jjvr7drkjrelzhut7kgclfuro65jjlivyzfmxiq2kyv5lickrl4qd.onion/</a><br>
Tor Metrics: <a href="http://hctxrvjzfpvmzh2jllqhgvvkoepxb4kfzdjm6h7egcwlumggtktiftid.onion/" rel="noopener nofollow ugc">http://hctxrvjzfpvmzh2jllqhgvvkoepxb4kfzdjm6h7egcwlumggtktiftid.onion/</a><br>
Duckduckgo: <a href="https://duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion/" rel="noopener nofollow ugc">https://duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion/</a><br>
Ahmia: <a href="http://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion/" rel="noopener nofollow ugc">http://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion/</a></p>
<p><strong>Reticulum</strong><br>
Recticulum is NOT a single network. It is a tool to build a bunch of anonymous networks. One example of such network is NomadNet</p>
<p><strong>How to use rns</strong></p>
<pre><code class="lang-auto">#install nomadnet
pip3 install nomadnet

#run the client
nomadnet
</code></pre>
<p><strong>Primary Links</strong><br>
Recticulum Main Page: <a href="https://reticulum.network/" rel="noopener nofollow ugc">https://reticulum.network/</a></p>
<p>Regard and happy hacking,<br>
loser</p>
            <p><small>4 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/wiki-anonymization-networks/36152">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/wiki-anonymization-networks/36152</link>
          <pubDate>Wed, 26 Jul 2023 23:12:09 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-36152</guid>
          <source url="https://0x00sec.org/t/wiki-anonymization-networks/36152.rss">[Wiki] Anonymization Networks</source>
        </item>
        <item>
          <title>Best privacy-friendly VPN recommendations?</title>
          <dc:creator><![CDATA[forager]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Hi all</p>
<p>My MullvadVPN subscription is expiring soon, so I’m interested in exploring some other providers and would love to hear your recommendations or inputs! My VPN requirements are pretty basic - Speed is not my main priority. I want a reliable, fully anonymous VPN (that is, no logs recorded) for a reasonable price. The VPN should allow for P2P. Extra brownie points if their no-logs policy has been proven in court or they have had any recent audit proving this.</p>
<p>For now, I’ve mostly been using Mullvad VPN and ProtonVPN, and whilst I’m happy with both (I prefer Mullvad and the fact that they don’t even require any email or details when you buy a subscription), a couple of people have also told me about PIA (Private Internet Access). After some research, PIA sounds like a great option - They accept multiple cryptocurrencies as payment, and apparently they’ve indeed proven their no-logs policy in court (according to this comparison: <a href="https://vpnpro.com/vpn-comparison/mullvad-vs-pia-comparison/" class="inline-onebox" rel="noopener nofollow ugc">Mullvad vs Private Internet Access in 2022 | VPNpro</a> , although I’ve not been able to find much more about that). PIA has an amazing offer for a 3 year subscription (something like 60$ for 3 years) which is way cheaper than ProtonVPN or Mullvad.</p>
<p>One of the main cons about PIA is the fact that they require an email in order to sign up (which shouldn’t be that much problem using any alias or throwaway email), and the fact that they’re based in the US.</p>
<p>I’ve also recently heard about Cryptostorm (<a href="https://cryptostorm.is" rel="noopener nofollow ugc">https://cryptostorm.is</a>), which also sounds great on paper. They only have a native application  for Windows, where Linux and MacOS require setting up through OpenVPN (although this wouldn’t be a problem), but after some research it sounds like they may not be fully transparent about their own company or where they’re actually based (to the point where <a href="https://proprivacy.com/vpn/review/cryptostorm" rel="noopener nofollow ugc">some people speculate this can actually be a honeypot</a>, lol)</p>
<p>I’d love to hear if anybody here has tested PIA or Cryptostorm for a while, if you would recommend this provider or if there is any other privacy-friendly provider you’d recommend more.</p>
<p>Many thanks!</p>
            <p><small>14 posts - 8 participants</small></p>
            <p><a href="https://0x00sec.org/t/best-privacy-friendly-vpn-recommendations/31510">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/best-privacy-friendly-vpn-recommendations/31510</link>
          <pubDate>Sun, 02 Oct 2022 20:28:13 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-31510</guid>
          <source url="https://0x00sec.org/t/best-privacy-friendly-vpn-recommendations/31510.rss">Best privacy-friendly VPN recommendations?</source>
        </item>
        <item>
          <title>How google and other companies know your location all the time</title>
          <dc:creator><![CDATA[spuqe]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Friend lost his phone so I helped him using “<a href="https://play.google.com/store/apps/details?id=com.google.android.apps.adm&amp;hl=en_US&amp;gl=US" rel="noopener nofollow ugc">Google find my device</a>” service. Then I started wondering… Does it work if the phone has no GPS on? And yes it did work.</p>
<p>Started doing some research on this and I found out that Google (And other companies for example Apple) uses <a href="https://www.speedcheck.org/wiki/bssid/" rel="noopener nofollow ugc">BSSID</a> information from your <a href="https://www.speedcheck.org/wiki/lan/" rel="noopener nofollow ugc">WLAN</a> Access Point to get an approximation of where you are located. So they basicly build a Database which links WLAN BSSIDs to a geographic location.</p>
<p>So why is that? Why would they really need to capture your location 24/7 and how do you not give your location to them? Probably mission impossible atleast on IOS devices. On android you could just change your ROM which can be hard process especially if you are Huawei user as in Huawei it’s nearly impossible to open it’s boot loader. Does companies sell that location data they capture? Well I have some answers for you that I have taken from: <a href="https://policies.google.com/privacy" rel="noopener nofollow ugc">Google Policies site.</a></p>
<blockquote>
<p>We collect information about your location when you use our services, which helps us offer features like driving directions for your weekend getaway or showtimes for movies playing near you.</p>
</blockquote>
<p>They also say that:</p>
<blockquote>
<p>The types of location data we collect depend in part on your device and account settings. For example, you can turn your Android device’s location on or off using the device’s settings app. You can also turn on Location History if you want to create a private map of where you go with your signed-in devices.</p>
</blockquote>
<p>And of course we tried to turn those off and use the Google Find My Device app again and guess what? It worked. It could track the phone even if those options were off and GPS was off. This might of course be because the app is literally made to track your device which might mean that while using it you allow Google to see the location while using the application.</p>
<p><strong>So does google sell this data? What are the other methods they possibly get you location?</strong></p>
<blockquote>
<p>In some circumstances, Google also collects information about you from publicly accessible sources. For example, if your name appears in your local newspaper, Google’s Search engine may index that article and display it to other people if they search for your name. We may also collect information about you from trusted partners, including marketing partners who provide us with information about potential customers of our business services, and security partners who provide us with information to protect against abuse. We also receive information from advertisers to provide advertising and research services on their behalf.</p>
<p>We use various technologies to collect and store information, including cookies, pixel tags, local storage, such as browser web storage or application data caches, databases, and server logs.</p>
</blockquote>
<p>Good article of how to turn off google’s location tracking: <a href="https://www.theguardian.com/technology/2018/aug/14/how-to-turn-off-google-location-tracking" rel="noopener nofollow ugc">https://www.theguardian.com/technology/2018/aug/14/how-to-turn-off-google-location-tracking</a><br>
Not sure if it even helps… Couple moths back researchers found out that Android devices transfer data to google every 15 minutes. No one’s sure what data.</p>
<p>Also thanks to everyone who isn’t crying “I already knew” on the comments. Some people don’t know and I think this is important and interesting topic. Please comment more information if you know something!</p>
            <p><small>8 posts - 8 participants</small></p>
            <p><a href="https://0x00sec.org/t/how-google-and-other-companies-know-your-location-all-the-time/24098">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/how-google-and-other-companies-know-your-location-all-the-time/24098</link>
          <pubDate>Thu, 03 Dec 2020 10:41:15 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-24098</guid>
          <source url="https://0x00sec.org/t/how-google-and-other-companies-know-your-location-all-the-time/24098.rss">How google and other companies know your location all the time</source>
        </item>
        <item>
          <title>Hacking Anonymously</title>
          <dc:creator><![CDATA[DarkEyes]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p><strong>Hacking Anonymously</strong></p>
<p>I do not endorse illegal activity of any kind. This is pure theory. I’m posting this so that you can learn how malicious hackers could hide from law enforcement. Be smart.</p>
<p>Hacking anonymously is a much-debated topic on hacker forums and in other hacking communities. Do you use VPNs, proxies, VMs…? I’m not claiming the way I’m going to show you is a end-all ultimate anonymity setup. Such thinking is foolish and the kind of thinking that gets you caught. There are some basic concepts about anonymity you have to understand. No matter what you do, if enough resources are used to try to find you then you will be found. Your goal is to be anonymous enough to make the amount of resources required to find you too high a price to pay for your adversaries. To put it in plain English, you have to be hard enough to find that nobody  can and/or wants to put the necessary time/money in to find you. The other concept you must be aware of is that anonymity isn’t a toolset or software. It’s good habits that keep you safe and constantly being alert. Now let’s get to the juicy stuff. I haven’t seen this other places, but it may have been done before.</p>
<p>Anonymity starts at the OS level (or lower if you’re a real psychopath). OSs keep logs, reveal things about themselves via various forms. You have two main threats from your OS. 1) What your OS remembers (things saved to disk like files, logs, etc.) and 2) what your OS tells people about itself (browser fingerprinting, open ports, etc.). What an OS remembers about you is fairly easy to circumvent. Most people say use a VM. I tend to not prefer this though, since VM software writes to the host OS disk and trying to get it to not make any kind of trace is more trouble than it’s worth. Keeping anonymity simple is critical. I like to use live USBs for running a Linux distribution. Usually Kali, since it’s so widely supported. A live USB for those of you who don’t know, is essentially an operating system installed on a USB. Your normal computer has its OS installed on the hard drive. The USB can be thought of as a mini hard drive. The great thing about live USBs is that they save nothing to any disk. It’s all in memory (which goes away as soon as you turn off the computer). Unless you explicitly do it, the USB won’t touch your other hard drive. The USB itself will forget everything as soon as you turn the computer off. So that more or less eliminates the threat of incriminating files or logs on your OS.</p>
<p>Next we look at three identifying aspects of your OS related to networking. Open ports are one thing you may not think of. What ports are open on a machine can be used to accurately guess what OS is running. How likely is it that someone portscans your system? Very unlikely. However, automated programs on other computers (routers or other devices) may or may not do a little network exploration. In general try to keep ports closed. You can run <code>ss -ant | grep -i "listen"</code> to see what ports are open.<br>
Hostname is another thing to be aware of. It’s only significant in very specific cases. But it’s easy to change and doesn’t hurt. Hostnames show up in WiFi APs logs and devices connected lists. A hostname of ‘kali’ is kind of suspicious since kali is a security-oriented OS. To change it, just enter this in a terminal: <code>echo "LAPTOP-16821" &gt; /etc/hostname; hostname LAPTOP-16821</code></p>
<p>Your MAC address is an important thing to address. It is (theoretically) unique to your hardware. So we need to make sure to change it. You can manually do it with ifconfig, but you have to come up with your own MAC address. I prefer to use macchanger. Just enter <code>macchanger -r &lt;interface&gt;</code>. This will give you a random MAC address on the specified interface.</p>
<p>Now we venture a little further than our local network. Firstly, do not use your home network. If your other anonymity measures get bypassed, it will lead straight to your house. This is obviously pretty bad. Break into someone elses’ wifi or use a public network. This next step requires a little bit of money. You have to buy a bulletproof VPS or server. A higher grade one is ideal, but not 100% necessary. This is where we stage our attacks from. The server should be geographically located in a country that is hostile to your home country and/or won’t have an extradition agreement with it. The idea is that all our hacking tools are installed on this server. We SSH in to it from our live USB-equipped laptop over TOR. The reason we go through TOR to our own server is the scenario that the server is compromised or seized by law enforcement. The server won’t have any logs containing your real IP. Just your TOR exit node IP. Of course, periodically wipe the server to remove traces in logs that will show your activities. Or just wipe the logs ;). Now if at all possible we don’t want this server to get “burned” (get discovered by law enforcement or hacked itself). So we’ll set up a proxy system of sorts. But do not pay for proxies or use free ones. Both can potentially stab you in the back through various means. Instead, compromise vulnerable systems. Low hanging fruit like servers with weak passwords or known exploitable vulnerabilities are ideal targets. We essentially set these up as proxies. If you can proxy chain through multiple of these “proxies” that’s even better.</p>
<p>So now we take a brief look at how this works in action. Say we want to do a portscan of a target. Using our computer with live USB, we SSH into our server over TOR, use a portscanning tool installed on the server to scan the target, with the compromised systems as proxies. Let’s break down how this protects you. If you attack a system and an investigation is started, they’ll likely start by looking over the system (or carbon copy of the system to avoid tainting any evidence). They’ll probably find some suspicious activity at some point or another in the logs. Once they track down the suspicious activity they might find your IP address. If law enforcement is doing the investigation, they might go to the ISP the malicious traffic originated from. They can probably get some details like where you live, who you are, etc. But even if that IP is located somewhere in the law enforcement’s jurisdiction, that isn’t your IP. It’s the IP of one of your proxies. The system itself could be a home user PC, company server, or whatever else. If the system isn’t even in the law enforcement agency’s jurisdiction, this further complicates things. They’ll have to cooperate with the other country’s law enforcement and it just gets difficult. Now say they track down the location of the proxy. They still have to figure out that the malicious traffic didn’t originate from this device. If or when they do, it may be tracked to another proxy. But it’s pretty much the same story as the last proxy. Say they track things all the way back to the hacking server. They may get some evidence or clues from the logs (again assuming the bulletproof service and hosting country even let law enforcement access the service). And even if they get some clues from that, they don’t have your real IP address. They just have the TOR exit node IP. The chances of them cracking TOR are pretty low. If the investigation hasn’t stopped by now, it may well die here.</p>
<p>I hope you learned a little something. Thanks for reading to this point. I know that was a bit long. I look forward to being a part of this community. If you have any questions, comments, or holes in my theory let me know. Until next time, keep hacking.</p>
            <p><small>16 posts - 13 participants</small></p>
            <p><a href="https://0x00sec.org/t/hacking-anonymously/18075">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/hacking-anonymously/18075</link>
          <pubDate>Sun, 15 Dec 2019 01:48:13 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-18075</guid>
          <source url="https://0x00sec.org/t/hacking-anonymously/18075.rss">Hacking Anonymously</source>
        </item>
        <item>
          <title>Anonymizing virtual machines with Whonix</title>
          <dc:creator><![CDATA[0x00foeg]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <h1>Introduction</h1>
<ul>
<li>Whonix is security-focused Linux distribution. It uses <strong>enforced</strong> Tor connection. Whonix is distribuited in two virtual machines: “Whonix Gateway” and “Whonix Workstation”.</li>
</ul>
<p>In this topic, we will use only “Whonix Gateway”.<br>
Whonix can also anonymize other virtual machines by changing ther network adapter to Whonix internal network.</p>
<h1>Setting up Whonix</h1>
<p>First thing is to install Whonix Gateway.<br>
<strong>NOTE:</strong> If you use whonix in other purposes, install Whonix Workstation too).<br>
Here is full instruction on how to download and import it to Virtual Box: <a href="https://www.whonix.org/wiki/VirtualBox/XFCE" rel="nofollow noopener">https://www.whonix.org/wiki/VirtualBox/XFCE</a></p>
<p>After you set up Whonix Gateway, go to Whonix Virtualbox Settings &gt; Network:</p>
<ul>
<li>
<p>Adapter 1 needs to be set to <em>NAT</em></p>
</li>
<li>
<p>Adapter 2 should be Attached to <em>Internal Network</em>, name Whonix.</p>
</li>
</ul>
<p>Also, I recommend you, before you start Whonix Gateway, go to Whonix Virtual Box Settings and set  <em>Base Memory</em> as low as you can so it won’t reduce performance of other machines.</p>
<p>After setting up Whonix Gateway, open it up and go to Applications and find <strong>Anon Connection Wizzard</strong>. Choose <em>Connect</em> and leave everything on default. Leave Whonix Gateway open.</p>
<h1>Setting up network on Virtual Machine</h1>
<p>Now, go to settings of your Virtual Machine that you will use and change it’s network settings:</p>
<ul>
<li>Adapter 1 attached to <em>Internal Network</em>, name Whonix.</li>
</ul>
<p>Open up your Virtual Machine and go to it’s Network and sharing center (<em>Windows</em>) or Wired Connection setting (<em>Kali Linux</em>).</p>
<h2><strong>On Kali Linux:</strong></h2>
<p>Go to <strong>Wired Connection 1 Settings</strong> (Click on gear wheel) and click on <strong>IPv4 tab</strong>. Choose manual and fill settings like this:</p>
<h3>Addresses</h3>
<p><strong>Address</strong> - 10.152.152.3 ;<br>
<strong>Netmask</strong> - 255.255.192.0 ;<br>
<strong>Default gateway</strong> -10.152.152.10</p>
<h3>DNS</h3>
<p>10.152.152.10</p>
<h2><strong>On Windows 7:</strong></h2>
<p>Go to <em>Network and sharing center</em>, Change adapter settings, Right click on adapter &gt; Properties , IPv4 Properties, click on <em>Use following IP address</em>, fill in same as in Kali Linux.</p>
<h1>Conclusion</h1>
<p>There you go. Now you have your working Kali LInux with Whonix network.</p>
<p>I hope this was helpful and that it’s valuable. If you have any other opinions on this method and if there is something that I missed or did that could be better, feel free to tell it.</p>
            <p><small>2 posts - 1 participant</small></p>
            <p><a href="https://0x00sec.org/t/anonymizing-virtual-machines-with-whonix/17529">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/anonymizing-virtual-machines-with-whonix/17529</link>
          <pubDate>Sun, 17 Nov 2019 00:54:15 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-17529</guid>
          <source url="https://0x00sec.org/t/anonymizing-virtual-machines-with-whonix/17529.rss">Anonymizing virtual machines with Whonix</source>
        </item>
        <item>
          <title>Cyber Security Awareness</title>
          <dc:creator><![CDATA[blankdash]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <h1>Cyber Security Awareness</h1>
<p>Importance of Cyber Security and Whose Job is it?</p>
<p>Technology is evident, we apply our scientific knowledge to reduce the amount and complexity of our work. There are two major reasons for us to seek for technological advancement, the first one is that we wanted to make life easy and explore more about the very existence of our self. We have advanced so much that we are able to talk to our loved once in an instant, book movie tickets without even approaching the theater in person, we are even able to study and obtain a degree online.</p>
<p>The second reason is that we are lazy and we spend money on ridiculous products. The definition of the need for one to survive has faded over the course of time. Okay it all seems wonderful, that we use all these tech products to achieve what we wanted to, but is that all?</p>
<p>Have you ever questioned the functionality of the product that you are using?</p>
<p>Have you ever wondered if the Application in your mobile device is performing only what it’s supposed to do?</p>
<p>There are 3 major things that has to be considered before using any piece of technology.</p>
<ol>
<li>Confidentiality – who has access to my data?</li>
<li>Integrity – who can modify my data?</li>
<li>Availability – Do I have access to my data?</li>
</ol>
<p>All these data we are talking about could be used by anyone, from any part of the world. When it gets to the wrong hands things could get really ugly, these people who steal data for a personal gain or to cause damage to an individual or a group of people are generally termed as “Hackers”.</p>
<p>With that being said, the moment you start using the internet you join a huge community of people who is doing the same. All you do here is exchange information in different formats, it could be any kind of information.</p>
<p>Today internet has become a major part of business, according to the stats 8 new users join the internet every second, and 30,000 websites are infected everyday of which 80% belong to a small scale business.</p>
<p>We have advanced so much that you can hire a hacking services from black hat hackers around the world, to knock down your rival in a business or to perform cyber-criminal activities. These cyber criminals have professional services to test the quality of their “Malware” that they create</p>
<p>[<a href="http://www.virustotal.com" rel="nofollow noopener">www.virustotal.com</a>]</p>
<p>. One of pack that was responsible for almost 1/3rd of the “Malware” distribution in the world is known as The Black hole exploit pack, it even comes with a technical support where one would get support from a professional cyber-criminal.</p>
<p>You may wonder what someone would possibly do with your data, every single piece of data in your devices contain information about you, I.E. The pictures that you post in social media which was taken from your Mobile device contains information such as the GPS, with which one would be able to locate where the picture was taken. If you upload a picture which was captured in your home, a hacker would be able to obtain your address, which a bunch of the pictures that you post online one will be able to map your interests, places that you have been to, and your regular routine and lifestyle.</p>
<p>You think you are living a life free of war?</p>
<p>Here is a secret, you are not!</p>
<p>We are at war every day against an unknown enemy, we don’t know what’s exposed, what should be exposed &amp; what’s vulnerable. If you are vulnerable anyone could go bankrupt in a short period of time.</p>
<p>How can we protect our self from these kind of threats?</p>
<ol>
<li>Awareness of information security.</li>
<li>Questioning the products you use.</li>
</ol>
<p>It’s the responsibility of software developers to develop products that are secure, companies should hire a security consultant and perform regular code audits from time to time which would reduce the risk of data being exposed. This would also enable people to trust the products they use, people should question the products on their security and demand at least industry standard security protocol being followed by the developers. For instance GDPR (General Data Protection Regulation) proposes a list of regulations that has to be followed by industries, PCI-DDS (Payment Card Industry Data Security Standard) is an information security standard that ensures the prevention of known credit card frauds.</p>
<p>As long as there is technology there will be people who use it for good and for evil, you can defend against such attacks by practicing the best cyber self-defense strategies. The most prevalent cyber-attack is called social engineering in which the cyber criminals gains your trust to obtain your data.</p>
<p>You might have come across many phishing emails which promotes a tempting offer and when you click on you become a victim even before you realize that you have been baited. How do you protect against such attacks?</p>
<p>It’s simple:</p>
<ol>
<li>Use your common sense</li>
<li>Question the reality of the subject matter</li>
<li>Define the Exposure of your data</li>
</ol>
<p>STOP CLICKING!</p>
<p>Before clicking on any link, think about the information its requesting for, think about what data you should be exposing and how it could impact your friends, family, yourself and your organization. Use secure passwords and don’t use the same password for every accounts. Two factor authentication is recommended for additional security. Update your software to make sure all the security misconfiguration is patched.</p>
<p>Stay Safe, Stay Secure.</p>
<p>-blankdash</p>
            <p><small>4 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/cyber-security-awareness/16501">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/cyber-security-awareness/16501</link>
          <pubDate>Wed, 25 Sep 2019 17:20:41 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-16501</guid>
          <source url="https://0x00sec.org/t/cyber-security-awareness/16501.rss">Cyber Security Awareness</source>
        </item>
        <item>
          <title>Surfing the V01D</title>
          <dc:creator><![CDATA[blankdash]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <h1>Surfing the V01D</h1>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/a/aa5c961c073d7515947226c489dad25adac03168.jpeg" data-download-href="/uploads/short-url/oj5xbSCWguRXkxijqswSoXObNpK.jpeg?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/a/aa5c961c073d7515947226c489dad25adac03168_2_690x300.jpeg" alt="" data-base62-sha1="oj5xbSCWguRXkxijqswSoXObNpK" width="690" height="300" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/a/aa5c961c073d7515947226c489dad25adac03168_2_690x300.jpeg, https://0x00sec.s3.amazonaws.com/optimized/2X/a/aa5c961c073d7515947226c489dad25adac03168_2_1035x450.jpeg 1.5x, https://0x00sec.s3.amazonaws.com/optimized/2X/a/aa5c961c073d7515947226c489dad25adac03168_2_1380x600.jpeg 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/a/aa5c961c073d7515947226c489dad25adac03168_2_10x10.png"></a></div><p></p>
<p>So, lately I’ve been thinking about making a post about Digital Security and Anonymity.<br>
Before even getting started if you are just looking for steps to spoof your IP you can skip<br>
ahead, if else you can read a little bit about my experience, so here goes.</p>
<p>First of, if you have no Idea why you need to protect your data you should definitely<br>
read about PRISM – A Surveillance program that collect internet communication based<br>
on demands made by Tech Giants.</p>
<p>You think you are using a free service don’t you?, sadly you are not a customer but<br>
rather you are just a product among a billion products just like you. They care about you<br>
and everything that you do so much so that they make a huge money of you it.</p>
<p>So, what do they know?<br>
What can they possibly they do with that piece of information ?<br>
What can you do to not let every one know everything about you ?</p>
<p>Its simple right, they just sell everything about you so that the buyer can sell you their<br>
useless product by invoking your greed. Well that’s just one of many that they use your<br>
data for. Lets say your Credit card details have been leaked, all you have to do is block<br>
the card and get a new one. What if your Biometrics, Face ID, Medical Records and so<br>
on, those are some of which you can’t change forever.</p>
<p>This article is going to explain you what you can do to maintain Digital Privacy, I am<br>
not going to talk about Social media and the information that you wish to disclose to the<br>
world through various platforms, but why post a picture or a video to the rest of the<br>
world, while hiding from your parents and loved once ?. It all depends on your stupidity<br>
and the hunger for fame + 3rd party’s peoples opinion and approval, ill leave that up to<br>
you.</p>
<p>How do you protect data that flows in and out of your Machine ?</p>
<p>Whenever some piece of data leaves your machine to the internet, it actually goes to<br>
another machine which could be read by your ISP and other 3rd party. A lot of people<br>
talk about VPN, Which is a Virtual Private network that is going to route your traffic<br>
through a different machine which could be located in a different region.</p>
<p>If its too hard for you to understand assume this scenario, lets say your friend wants to<br>
bunk a class in college and lagging in attendance, he asks you to disguise as him and get<br>
his attendance. We call this a proxy, the exact same thing happens with the machines,<br>
you simply ask some other machine located in a different region to send your requests.</p>
<p>Well, VPN is a great choice since it is reliable and provides a fast connection. Although<br>
the integrity of VPN is still questionable, but in the end you have to trust some one.<br>
There are a ton of VPN providers out there you can choose from. Few are listed below</p>
<p>OPEN VPN<br>
CYBER GHOST<br>
HIDE .ME</p>
<p>VPN’s are expensive right, there is a simple solution the TOR Routing aka The Onion<br>
Routing, TOR is a open source software that routs your internet traffic through multiple<br>
TOR nodes to stay anonymous. You can download TOR browser and access the internet<br>
through them which is very simple. But the I’ve been asked a lot about how to route all<br>
of your device traffic through TOR Network. Follow the instructions below</p>
<p>I am doing this on my Linux machine, if you use windows you can try using a VM for<br>
this process.</p>
<p>STEP 1: Install TOR<br>
sudo pacman -S tor</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/7/719e6d406b6654b62aee02f26b6a234bc9c290c6.png" alt="" data-base62-sha1="gd7nGar0zgxKVJNeHKkuhhrHjZY" width="528" height="284"></p>
<p>This should install TOR in your Machine.</p>
<p>STEP 2: Check the status of TOR<br>
systemctl status tor.service</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/d/d0474b2ea19c77b14ba5ad09a6144c07bafce578.png" data-download-href="/uploads/short-url/tIw3I647uE4cwfxojzMd6Uc0gHe.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d0474b2ea19c77b14ba5ad09a6144c07bafce578.png" alt="" data-base62-sha1="tIw3I647uE4cwfxojzMd6Uc0gHe" width="690" height="67" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/d/d0474b2ea19c77b14ba5ad09a6144c07bafce578_2_10x10.png"></a></div><p></p>
<p>step 2</p>
<p>You can see that the service is not active.</p>
<p>STEP 3: Enable TOR.<br>
systemctl start tor.service</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/0/00271534e7a40ce7e1da87f4a7f4af8c343a634c.png" data-download-href="/uploads/short-url/1lJxMDvKiVDrJeAfJMi67xvBNy.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/2X/0/00271534e7a40ce7e1da87f4a7f4af8c343a634c.png" alt="" data-base62-sha1="1lJxMDvKiVDrJeAfJMi67xvBNy" width="690" height="156" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/0/00271534e7a40ce7e1da87f4a7f4af8c343a634c_2_10x10.png"></a></div><p></p>
<p>step 3</p>
<p>STEP 4: Check for the port that the TOR service is using.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/7/75b1968246bed0c6c2dc413a78223d531c291448.png" data-download-href="/uploads/short-url/gNallWq5XcaErxnViuy0yl27otq.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/2X/7/75b1968246bed0c6c2dc413a78223d531c291448.png" alt="" data-base62-sha1="gNallWq5XcaErxnViuy0yl27otq" width="690" height="87" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/7/75b1968246bed0c6c2dc413a78223d531c291448_2_10x10.png"></a></div><p></p>
<p>step 4</p>
<p>STEP 5: Open your Network Manager in settings, Set Proxy as Manual and set the<br>
SOCKS Proxy as 127.0.0.1 &amp; The Prot Number as 9050. Remember these were the<br>
results we got from the previous command. Sometimes tor uses different port like 9151<br>
or 9150 etc.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/6/649f2550ac525502b79ab4569ed5d0e483249e61.png" alt="" data-base62-sha1="em8IlunrAnJKQu99U1OJmYG93ix" width="497" height="437"></p>
<p>step 5</p>
<p>Once that is done, you can take a DNS Leak test to look at your traffic.<br>
</p><aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/d/4/d4cb914c86376ef0398b740d7914a462a962b6b5.png" class="site-icon" width="32" height="32">
      <a href="https://2ip.io/privacy/" target="_blank" rel="noopener nofollow ugc">2ip.io</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:180/162;"><img src="https://0x00sec.s3.amazonaws.com/original/3X/9/6/969ba22eb4e767a1a3ec293779d83043f49f3f91.png" class="thumbnail" width="180" height="162"></div>

<h3><a href="https://2ip.io/privacy/" target="_blank" rel="noopener nofollow ugc">Anonymity check</a></h3>



  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
<a href="https://www.dnsleaktest.com/results.html" class="onebox" target="_blank" rel="noopener nofollow ugc">https://www.dnsleaktest.com/results.html</a>
<p>Below is the result of my DNS Leak test, you can clearly see that all my traffic is being<br>
routed through a different region. I am not using a TOR browser here, its just that every<br>
application uses TOR relay in my Machine.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/9/9eb0d30d283798c5f1341910054b84e25c1368a9.png" data-download-href="/uploads/short-url/mDQhFafFOgdoKDwPfA56JqG8nsB.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/original/2X/9/9eb0d30d283798c5f1341910054b84e25c1368a9.png" alt="" data-base62-sha1="mDQhFafFOgdoKDwPfA56JqG8nsB" width="690" height="468" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/9/9eb0d30d283798c5f1341910054b84e25c1368a9_2_10x10.png"></a></div><p></p>
<p>step 6</p>
<p>This should help you stay anonymous, with that being said TOR can be compromised so<br>
you need to be careful on what files you are downloading &amp; what files you are executing<br>
in your machine.</p>
<p>I2P:</p>
<p>While TOR is a great choice there are certain limitations and few alternatives like VPN,<br>
I2P is a anonymous network overlay within a network to protect communication from<br>
dragnet surveillance by 3rd party.<br>
While i2P is really good, I am not hear to make a step by step walk through about how<br>
to do it, That is for another day. For now just letting you know that such exists.</p>
<p>Operating systems:</p>
<p>There are several distributions of Linux operating systems that could come in handy to<br>
protect your digital data, a few of them are listed below.</p>
<p>Tails : <a href="https://tails.boum.org/" rel="noopener nofollow ugc">https://tails.boum.org/</a> (something from TOR)<br>
Whonix: <a href="https://www.whonix.org/" rel="noopener nofollow ugc">https://www.whonix.org/</a> (if you are lazy)<br>
Kali: <a href="https://www.kali.org/" rel="noopener nofollow ugc">https://www.kali.org/</a> (for the hacker wannabe)<br>
Arch: <a href="https://www.archlinux.org/" rel="noopener nofollow ugc">https://www.archlinux.org/</a> (if you are really good at Linux go for this)</p>
<p>BlackArch: <a href="https://blackarch.org/" rel="noopener nofollow ugc">https://blackarch.org/</a> (if you are really obsessed)</p>
<p><a href="https://www.privacytools.io/" rel="noopener nofollow ugc">https://www.privacytools.io/</a> (Something to look at)</p>
<p>IP is not the only information leaked from your machine, you can also spoof your MAC<br>
ID – but then ill come up with that on another post. Hope you find this useful.</p>
<p>PS: Ignore any typo or grammatical errors – too lazy to correct them.</p>
<p>Stay safe, Stay secure !<br>
-blankdash</p>
<h3>SHARE THIS:</h3>
            <p><small>8 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/surfing-the-v01d/16500">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/surfing-the-v01d/16500</link>
          <pubDate>Wed, 25 Sep 2019 17:18:10 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-16500</guid>
          <source url="https://0x00sec.org/t/surfing-the-v01d/16500.rss">Surfing the V01D</source>
        </item>
        <item>
          <title>Are you really anonymous?</title>
          <dc:creator><![CDATA[RYUZ4KI]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Do you think that switching to your browser’s <strong>private browsing mode</strong> or <strong>incognito mode</strong> will make you anonymous? Then click:</p>
<p><a href="https://www.nothingprivate.ml/" class="onebox" target="_blank" rel="nofollow noopener">https://www.nothingprivate.ml/</a></p>
<p>Don’t actually use your real name <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
A cool little proof of concept, awareness-raising project</p>
            <p><small>20 posts - 13 participants</small></p>
            <p><a href="https://0x00sec.org/t/are-you-really-anonymous/9522">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/are-you-really-anonymous/9522</link>
          <pubDate>Wed, 14 Nov 2018 23:38:25 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-9522</guid>
          <source url="https://0x00sec.org/t/are-you-really-anonymous/9522.rss">Are you really anonymous?</source>
        </item>
        <item>
          <title>How to Anonymize your CryptoCurrencies and CryptoAssets</title>
          <dc:creator><![CDATA[REal0day]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <h1>How to Anonymize your CryptoCurrencies and CryptoAssets</h1>
<h4>Required Skills</h4>
<p>List of previous knowledge required to understand the paper. Contents that will not be explained and without knowing them it will be very difficult to follow the paper content.</p>
<ul>
<li>Familiarity with VMs, Tor, and VPNs</li>
<li>Own cryptocurrencies</li>
</ul>
<h4>Disclaimer</h4>
<p>This method can be used to illegally launder cryptocurrency and cryptoassets. Don’t do anything illegal. There’s your warning.</p>
<hr>
<h1>The paper</h1>
<p>When it comes to anonymity, bitcoin doesn’t provide the privacy that we want it to. I would say it was enough back in the day to just use a different address per transaction, but because InfoSec keeps getting bigger and the ledger will always be  public, even old transactions aren’t private. In fact, I’d say as time progresses, the privacy of older methods of  anonymity surrounding Bitcoin are becoming less and less private. Let’s start from the beginning.</p>
<h2>1. Bitcoin is not Anonymous. It’s  Pseudonymous.</h2>
<p>Then Bitcoin’s ledger is public. That means anyone can download all transactions and de-anonymize others by an attack on <a href="https://epic.org/privacy/reidentification/Sweeney_Article.pdf" rel="noopener nofollow ugc">k-anonymity</a>. Since cryptocurrencies are the main form of currency on DarkNet Marketplaces (DNM), this has lead to a rise in <a href="https://www.chainalysis.com/" rel="noopener nofollow ugc">security firms</a> that specialize in determining who owns certain addresses. While I may not not know who owns addressA, I do know that addressA made a transaction to addressB, which is a known Drug Dealer and who’s private key is held by Coinbase. Enter subpoena to Coinbase.</p>
<h2>2. The Feds are collecting important financial secrets</h2>
<p>On November 17th, 2016, The United States Department of Justice sent a subpoena to Coinbase and Jeffrey K Berns to request the following:</p>
<blockquote>
<p>“The John Does whose identities are<br>
sought by the summons are United States persons who, at any time during the period January 1, 2013,<br>
through December 31, 2015, conducted transactions in a convertible virtual currency.”</p>
</blockquote>
<p>-<a href="https://www.justice.gov/opa/press-release/file/914256/download" rel="noopener nofollow ugc">https://www.justice.gov/opa/press-release/file/914256/download</a></p>
<p>What can the Feds do with Coinbase information?<br>
If, for whatever reason, you used a Coinbase account to assist with private transactions, you’re in trouble. As this currently and will most likely never be the lowest hanging fruit, it is still a very low fruit nonetheless.</p>
<h2>3. There are Anonymous Cryptocurrencies</h2>
<p>They’re are many cryptocurrencies that specialize in providing private transactions between all parties. Many of the stronger privacy-centric altcoins use CryptoNote’s design to secure privacy, the most popular being Monero (XMR). These technologies include ring signatures and one-time-keys. Here is the <a href="https://cryptonote.org/whitepaper.pdf" rel="noopener nofollow ugc">whitepaper</a> for CryptoNote. These coins have a high enough entropy, that it’s just improbable that your transactions will be liked. As Bitcoin is 1-to-1 transaction, Monero uses many-to-many approach, and constantly moves your XMR around in wallets you own. Your money doesn’t just sit, it’s constantly moving.</p>
<p><strong>Ring Signatures</strong><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/3/38ab9dd444302d2412ef5f8b52b90bad6fa621f9.png" width="690" height="162"><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/d/d99b82feaae8586a4db8112de25c7a27dbda490d.png" width="690" height="194"><img src="//0x00sec.s3.amazonaws.com/original/2X/0/06add7cbe0e8e28539f788c118bbb2b31028ab51.png" width="690" height="218"></p>
<p><strong>One-Time-Keys</strong><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/7/7d6137044342c636465ee28996bc2f04868f2504.png" width="690" height="217"><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/a/a1f33482cbe67391786e841743400722fd645303.png" width="690" height="243"></p>
<p>And here’s an very nerdy graph. I had to stare at this for some time to understand it, so don’t feel intimidating, especially if you’re new to anonymous cryptocurrencies.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/7/786fa8457e9dddce25ae45cc8fb7dc114a2f6696.png" width="690" height="328"></p>
<h2>4. Bitcoin Mixers/Tumblers</h2>
<p>Bitcoin mixing services have to be one of the most dangerous scams/services out there. About as bad as storing your private keys on a marketplace server, mixing services require you to send your money to a third party, that will then “clean” your money, and return it to one or many addresses you specify. I can’t really emphasize how stupid it is to give anyone/any service your money, without any assurance that it will end up on the other side. The risk is just too great, and yet people spend millions of dollars on these services. The best method for this, is to send micro-payments and hope that if a payment doesn’t go through, you haven’t lost too much.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/b/b75971fb2563142cd41f9a463db2592f572d6b63.png" width="690" height="361"><br>
Privacy: Some tumblers and mixers place your coins into a big pot, and sends it to many different addresses, until it ends up at your designated address(es). In some cases, the coins that enter your destination wallet were never apart of the original transaction. An issue arrises, when you have large enough amounts of money, or you keep your money in your wallet for some time. These are clear indicators that the destination wallet is linked to a source wallet. $40M from one hacked address, and $40M - fees into another wallet that has not had a single transaction in a week builds the case that they are linked. It might not be enough to confirm 100%, but it’s enough to start an investigation.</p>
<h2>5. Financial Fruits</h2>
<p>Threat and Risk Modeling is critical when it comes to securing your financial privacy. Let’s start with the most risky/dangerous ways of sending and receiving transactions via Bitcoin, and move towards the most privacy centric method.</p>
<ol>
<li>
<p><strong>Same address for all transactions, linked SSN / ID to Online Wallet.</strong><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/f/f5f278ba8c08421104c6b9870a0f279710610ad5.png" width="321" height="75"><br>
This is the worst way of providing any privacy for your transactions. If you use one address and have it linked via your identity, you can kinda kiss any private transaction out the window. The 3rd party that verified your identity knows you and all your transactions, which they might then provide to other ad networks or worse, government agencies. I have known some CryptoAnalysis that will scrape a forum for bitcoin addresses and link them to that user. Do enough mining, and you get see who’s close to whom.</p>
</li>
<li>
<p><strong>Multiple addresses for all transactions, linked SSN / ID to Online Wallet.</strong><br>
Again, you have an account/ID linked with at least 1 of your addresses. This is your ID leark.</p>
</li>
<li>
<p><strong>Single address for all transactions</strong><br>
While you might not have your identity associated with your bitcoin address, you do have other meta-data that can de-anonymize you. (IP address, cookies, MAC address and untrusted routers, etc).</p>
</li>
<li>
<p><strong>Multiple addresses + Mixing/Tumbling all transactions</strong><br>
Still vulnerable to meta-data attack like 3, but less others whom don’t have this metadata to be able to track you. Also able to de-anonymize the mixing process by sitting wallets and large balances.</p>
</li>
<li>
<p><strong>Leveraging Anonymous Cryptocurrencies to Anonymize Bitcoin</strong><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/9/93b29e61f5f39176d777e8fe4520ec89834ee110.png" width="300" height="110"><br>
This is one of the most powerful ways to anonymize your cryptocurrency finances. While there are many exchanges that require personal information, there are a few locations that do not require any information (<a href="https://ShapeShift.io" rel="noopener nofollow ugc">ShapeShift.io</a>). Be aware, you are STILL susceptible to metadata attacks if you aren’t using VPN or Tor.</p>
</li>
<li>
<p><strong>Tor ==&gt; VPN ==&gt; Tor ==&gt; [BTC &lt;–&gt; XMR &lt;–&gt; BTC]</strong><br>
So here’s the real deal. While this might be out of most people’s OpSec, this is a critical way of securing your financial privacy via BTC and other Anonymous Cryptocurrencies, while avoiding a metadata attack. This can be managed much more easier with the assistance of Virtual Machines. <a href="https://www.qubes-os.org/" rel="noopener nofollow ugc">Qubes</a> is great for this. <a href="https://www.whonix.org/" rel="noopener nofollow ugc">Whonix Gateway + Whonix Workstation</a> is enough to provide the ability to connect to any blockchain anonymously. You can setup a VM for that’s a VPN “proxy” (technically it’s not a proxy, but you get what I mean) that sits between two Whonix Gateways. A very privacy centric VPN provider is <a href="https://mullvad.net/" rel="noopener nofollow ugc">Mullvad</a>. They also allow for 3 free hours via a captcha, just incase you need a VPN because a site blocked tor or something silly. Sticking with Monero, what brings more privacy, is running your own monerod node on a Whonix Workstation. WhonixWS ==&gt; WhonixGW ==&gt; vpnVM ==&gt; WhonixGW ==&gt; Internet. On your Workstation, you would have your Monero and Bitcoin Wallets. Secure your password, seeds, and private keys off the WorkstationVM for security reasons. Shift your BTC --&gt; XMR --&gt; BTC via <a href="https://ShapeShift.io" rel="noopener nofollow ugc">ShapeShift.io</a>, and enjoy the financial freedom and privacy of your Bitcoins. For XMR, make sure to use integrated_addresses when sending BTC to your integrated_address, as this provides anonymity of your BTC into the XMR blockchain. Be Aware: If you’re doing anything illegal and ShapeShift can assist with an federal investigation, they will.</p>
</li>
</ol>
<h2>6. Busting Threat Actors via Bitcoin Transactions</h2>
<p>Because the IRS has launched investigations into different exchanges, we can determine that they, at the very least, have the public addresses of any account used on there. If one corresponds those public addresses with the ones in DNMs such as The Silk Road, which Law Enforcement can obtain via a raid, one can determine more links between illegal actors and their financial “havens”.</p>
<h1>Conclusions</h1>
<p>Don’t be the lowest hanging fruit, ever. If you care about privacy in terms of your cryptocurrencies or cryptoassets, don’t use mixers. Mix it yourself and leverage anonymous cryptocurrencies you trust. I trust Monero, but if for whatever reason you don’t, use anon coins you do trust. It also doesn’t hurt to use multiple anonymous cryptocurrencies to further increase your entropy and privacy.</p>
<p>There are other methods that can be used to secure your privacy more, but they involve breaking the law or causing fraud. I have only provided legal ways to secure your financial privacy.</p>
<p>Please provide comments, feedback, and references to support your claims. We’re all here to learn, including myself. Happy to share what I’ve seen, to others that are happy to share what they have seen. Thanks everyone!</p>
<h1>Resources</h1>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/e/9/e9b6ca1b80e21a9126259d1f79b2395ba6a3be7d.png" class="site-icon" width="32" height="32">
      <a href="https://bitcoin.org/en/you-need-to-know" target="_blank" rel="noopener nofollow ugc">bitcoin.org</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/3X/4/a/4aada312cd3aff6c9895d13905b6cd5e71509dc8.png" class="thumbnail onebox-avatar" width="500" height="500">

<h3><a href="https://bitcoin.org/en/you-need-to-know" target="_blank" rel="noopener nofollow ugc">Some things you need to know - Bitcoin</a></h3>



  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
<a href="https://epic.org/privacy/reidentification/Sweeney_Article.pdf" rel="noopener nofollow ugc">K-Anonymity</a><br>
<a href="https://www.chainalysis.com/" rel="noopener nofollow ugc">chainalysis</a><br>
<a href="https://www.plainsite.org/dockets/330oss6rw/california-northern-district-court/-v-united-states-of-america/" class="onebox" target="_blank" rel="noopener nofollow ugc">https://www.plainsite.org/dockets/330oss6rw/california-northern-district-court/-v-united-states-of-america/</a><br>
<a href="https://www.justice.gov/opa/press-release/file/914256/download" class="onebox" target="_blank" rel="noopener nofollow ugc">https://www.justice.gov/opa/press-release/file/914256/download</a><br>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://cryptonote.org/favicon.ico" class="site-icon" width="64" height="64">
      <a href="https://cryptonote.org/inside/" target="_blank" rel="noopener nofollow ugc">cryptonote.org</a>
  </header>
  <article class="onebox-body">
    <img src="" class="thumbnail" width="" height="">

<h3><a href="https://cryptonote.org/inside/" target="_blank" rel="noopener nofollow ugc">CryptoNote Technology</a></h3>



  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/2X/f/f0ef1b877706b13b91c2bb4339658ba57d5d7174.png" class="site-icon" width="32" height="32">
      <a href="https://mullvad.net/en/" target="_blank" rel="noopener nofollow ugc">Mullvad VPN</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/b/b080a8170e87bea11e8b0f839ea249d8eb85050c.png" class="thumbnail onebox-avatar" width="400" height="400">

<h3><a href="https://mullvad.net/en/" target="_blank" rel="noopener nofollow ugc">Mullvad VPN - Privacy is a universal right</a></h3>

<p>Mullvad is a VPN service that helps keep your online activity, identity, and location private. Only €5/month - We accept Bitcoin, cash, bank wire, credit card, PayPal, and Swish.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/2X/f/f674195f5ac81cdee482084cfe34cb6918b6dc9b.png" class="site-icon" width="" height="">
      <a href="https://www.qubes-os.org/" target="_blank" rel="noopener nofollow ugc">Qubes OS</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/f/f9dbba66fcd8e930f39601ac1345e04b18d538f5.png" class="thumbnail" width="" height="">

<h3><a href="https://www.qubes-os.org/" target="_blank" rel="noopener nofollow ugc">Qubes OS: A reasonably secure operating system</a></h3>

<p>Qubes is a security-oriented, free and open-source operating system for personal computers that allows you to securely compartmentalize your digital life.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://www.whonix.org/w/images/favicon.ico" class="site-icon" width="16" height="16">
      <a href="https://www.whonix.org/" target="_blank" rel="noopener nofollow ugc">whonix.org</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/362;"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/9/997bef28d9dd0e3a84553afa8e33f383970adcab_2_690x362.png" class="thumbnail" width="690" height="362" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/9/997bef28d9dd0e3a84553afa8e33f383970adcab_2_690x362.png, https://0x00sec.s3.amazonaws.com/optimized/2X/9/997bef28d9dd0e3a84553afa8e33f383970adcab_2_1035x543.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/9/997bef28d9dd0e3a84553afa8e33f383970adcab.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/9/997bef28d9dd0e3a84553afa8e33f383970adcab_2_10x10.png"></div>

<h3><a href="https://www.whonix.org/" target="_blank" rel="noopener nofollow ugc">Whonix ™ - Software That Can Anonymize Everything You Do Online</a></h3>

<p>Free, Open Source, Kicksecure ™ Security Hardened Linux Distribution, designed for advanced online privacy, Live or Non-Live (Persistent) Mode.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

            <p><small>5 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/how-to-anonymize-your-cryptocurrencies-and-cryptoassets/4259">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/how-to-anonymize-your-cryptocurrencies-and-cryptoassets/4259</link>
          <pubDate>Thu, 09 Nov 2017 01:00:53 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-4259</guid>
          <source url="https://0x00sec.org/t/how-to-anonymize-your-cryptocurrencies-and-cryptoassets/4259.rss">How to Anonymize your CryptoCurrencies and CryptoAssets</source>
        </item>
        <item>
          <title>Threat Modeling and why using a VPN can be a bad thing</title>
          <dc:creator><![CDATA[pry0cc]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Hi 0x00’ers!</p>
<p>Depending on your level of skill, you may be under the impression that using a VPN for all your traffic is a good thing for your privacy, you’ll have been told that using Tor 24/7, or tunneling all your traffic through it may save you from the infamous 3 letter agencies. Whatever crud you’ve been told, it’s time to forget it, and make up your own mind before blindly accepting the next big privacy fad.</p>
<p>If you speak to any well-practiced security guy (or girl, I’m not judging), they will all tell you one thing:</p>
<aside class="quote no-group">
<blockquote>
<p> “It depends on your threat model”</p>
</blockquote>
</aside>
<p>What is a threat model? The definition straight outta Wikipedia mentions the following:</p>
<aside class="quote no-group">
<blockquote>
<p>Threat modeling is a process by which potential threats can be identified, enumerated, and prioritized – all from a hypothetical attacker’s point of view. The purpose of threat modeling is to provide defenders with a systematic analysis of the probable attacker’s profile, the most likely attack vectors, and the assets most desired by an attacker.</p>
</blockquote>
</aside>
<p>To make your threat model, you have to think about a few things. Your threat model can be applied to anything, your physical infiltration threats or your network infiltration threats. In this article, I am going to talk about computer based threats.</p>
<p>In blue team security, there are a number of different methodologies that have been created for companies and people to give people a methodical way to do things.</p>
<p>One of these is <a href="https://en.wikipedia.org/wiki/STRIDE_(security)">STRIDE</a>, a threat classification model developed by Microsoft</p>
<p>It follows 5 threat categories as a mnemonic:</p>
<ul>
<li>Spoofing of user identity</li>
<li>Tampering</li>
<li>Repudiation</li>
<li>Information disclosure (privacy breach or data leak)</li>
<li>Denial of service (D.o.S)</li>
<li>Elevation of Privilege</li>
</ul>
<hr>
<h2>1. Who is a threat to you?</h2>
<p>This is a big and very open ended question, but in short, who poses a threat to you, your safety, your information and/or your assets.</p>
<p>For a corporation, this is nearly always Blackhats, or rogue employees with a vendetta, however for an individual like yourself, it can be anything from Blackhats to the three letter agencies that you hear ranted about daily.</p>
<p>This step is very important to get right, if you don’t know who you’re protecting against, you will never protect yourself adequately.</p>
<hr>
<h2>2. What am I vulnerable to?</h2>
<p>Now you know who you are defending against, you need to step into the shoes of your adversary, personally, my threat model revolves around Blackhats.</p>
<p>Look at yourself completely honestly, if you were a hacker, how would you go about compromising you, what pieces of tech do you have exposed, how might an attacker socially engineer you?</p>
<p>For most, social engineering is one of the leading vulnerabilities that we can all exhibit, one thing that can help our case significantly is our OPSEC, knowing what we can and can not reveal will give our attackers a hard time finding anything to use as leverage.</p>
<hr>
<h2>3. What are my high-value assets?</h2>
<p>Have some information somebody might want? Have access to some server or physical location that might paint a target on your back?</p>
<hr>
<h2>Thinking about solutions</h2>
<p>After thinking about all the potential threats, vulnerabilities, and targets relating to you, you must start thinking about how to remedy these, or give you a better chance. As I have already mentioned, this may be through Opsec, using stronger passphrases, or even using a VPN.</p>
<p>But wait, you’ve just told me that Tor and VPN’s are bad?</p>
<p>What services you use, where you route your traffic and how, is due to your threat model. Are you trying to hide your location and IP from criminal attackers? If so, a VPN and or Tor may actually increase your security posture.</p>
<p>Are you trying to hide from the NSA? A VPN or Tor may actually do the exact opposite, this depends entirely on your trust of an organization, but if you look at it from a full no-trust POV, you’re essentially just tunnelling all your traffic through a company that might not even nee subpoena to reveal.</p>
<h2>Conclusion</h2>
<p>In conclusion then, being aware of your threats, your vulnerabilities, and your adversaries will give you a firm basis for continuing to develop your Opsec, your Security, and what you choose (and choose not) to do in your day to day activities.</p>
<p>I hope this was helpful! If you have anything to add, or to disagree with me on anything, throw down a comment, if you enjoyed this, give me a like, and comment your opinion!</p>
<p>Do you have a threat model? What do you protect against?</p>
<p>Stay Snappy <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p>- pry0cc</p>
            <p><small>10 posts - 7 participants</small></p>
            <p><a href="https://0x00sec.org/t/threat-modeling-and-why-using-a-vpn-can-be-a-bad-thing/3492">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/threat-modeling-and-why-using-a-vpn-can-be-a-bad-thing/3492</link>
          <pubDate>Tue, 05 Sep 2017 15:28:48 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-3492</guid>
          <source url="https://0x00sec.org/t/threat-modeling-and-why-using-a-vpn-can-be-a-bad-thing/3492.rss">Threat Modeling and why using a VPN can be a bad thing</source>
        </item>
        <item>
          <title>How to easily deploy a TOR hidden service</title>
          <dc:creator><![CDATA[Nitrax]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Hi fellas,</p>
<p>I found an interesting docker image on Docker Hub, dedicated to TOR hidden service deployement. The README is self explainatory and worth a try. <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p><a href="https://hub.docker.com/r/goldy/tor-hidden-service/" class="onebox" target="_blank" rel="nofollow noopener">https://hub.docker.com/r/goldy/tor-hidden-service/</a></p>
<p>Take your chance to create the new silk road <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>Best,<br>
Nitrax</p>
            <p><small>6 posts - 6 participants</small></p>
            <p><a href="https://0x00sec.org/t/how-to-easily-deploy-a-tor-hidden-service/3263">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/how-to-easily-deploy-a-tor-hidden-service/3263</link>
          <pubDate>Wed, 09 Aug 2017 11:54:55 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-3263</guid>
          <source url="https://0x00sec.org/t/how-to-easily-deploy-a-tor-hidden-service/3263.rss">How to easily deploy a TOR hidden service</source>
        </item>
        <item>
          <title>Software-Based Data Sanitization Methods Overview</title>
          <dc:creator><![CDATA[n3xUs]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>#<span class="hashtag">#Software-Based</span> Data Sanitization Methods</p>
<hr>
<p>Following up on my “<a href="https://0x00sec.org/t/guide-for-data-sanitization/1938">Guide for Data Sanitization</a>” post, I’ve decided to write up an article regarding the <strong><em>most common and popular</em></strong> data overwrite patterns, in other words, <strong><em>software-based sanitization methods</em></strong> (aka <strong><em>wipe methods</em></strong>).</p>
<p>Essentially, what all these methods do is overwrite the sensitive data on some form of electronic media, replacing it with gibberish. They all fall in the “<strong><em>Clear</em></strong>” type of sanitization, discussed in my previous post.</p>
<p>Most of these methods are freely provided by open source programs and tools such as:</p>
<ul>
<li><a href="https://dban.org/" rel="nofollow noopener">DBAN</a></li>
<li><a href="https://eraser.heidi.ie/" rel="nofollow noopener">Eraser</a></li>
<li><a href="https://www.bleachbit.org/" rel="nofollow noopener">BleachBit</a></li>
<li><a href="http://www.cbldatarecovery.com/data-shredder/" rel="nofollow noopener">CBL Data Shredder</a></li>
<li><a href="https://www.miray.de/download/hdshredder.html" rel="nofollow noopener">HDShredder</a></li>
<li><a href="http://www.killdisk.com/downloadfree.htm" rel="nofollow noopener">KillDisk</a></li>
<li><a href="https://www.piriform.com/ccleaner" rel="nofollow noopener">CCleaner</a></li>
<li><a href="https://www.blancco.com/" rel="nofollow noopener">Blancco</a></li>
<li>…</li>
</ul>
<p>And <strong>many</strong> more, all with different degrees of complexity and available methods.</p>
<hr>
<h2>#####<em>DISCLAIMER</em> : As expected, neither I or the bussinesses behind these programs can guarantee that all data is successfully erased or that it can’t be recovered, either partially or in it’s totality. Use them at your own risk.</h2>
<p>On one hand, it’s widely agreed upon that a <em><strong>single overwrite</strong></em> is enough to prevent <em>any software-based recovery technique</em>. On the other hand, it’s not so agreed upon that a <em><strong>single overwrite</strong></em> is enough to prevent more <em>advanced hardware recovery techniques</em>.</p>
<p>In other words, not everyone supports the idea that a software-based sanitization method prevents <em><strong>all types</strong> of data extraction techniques</em>. This doubt sparked the creation of <strong><em>various overwrite patterns</em></strong>, both by independent researchers and governmental agencies organizations, <strong><em>according to their own research</em></strong>. Some examples are listed below.</p>
<h2>– Secure Erase</h2>
<p><strong><em>Secure Erase</em></strong> is arguably the <em><strong>best and most effective</strong></em> way to delete data on a HDD. It’s not really a program, but rather <strong>a set of commands</strong> available on the firmware of <strong>PATA / SATA</strong> like HDD’s. It works like this:</p>
<blockquote>
<p><strong>Pass 1:</strong> Writes a binary 1 or 0</p>
</blockquote>
<p>Being an operation that <strong><em>occurs from the drive itself</em></strong>, there’s <em><strong>no need to verifiy</strong></em> the overwrite (the drive’s own write fault detection makes sure it doesn’t happen). This also makes the whole process <strong><em>considerably faster</em></strong> than other methods that involve 3rd Party software.</p>
<h2>– Write Zero Method</h2>
<p>The  <strong><em>Write Zero</em></strong> - aka the <strong><em>Single Write</em></strong> / <strong><em>zero fill</em></strong> Method, is rather simple. It’s implemented the following way:</p>
<blockquote>
<p><strong>Pass 1:</strong> Writes a zero.</p>
</blockquote>
<p>And that’s it… The main problem with this method is that, <em>originally</em>, it <strong><em>doesn’t verify</em></strong> if the 0 was actually written, making it less effective than other methods that actually do</p>
<p>There’s also another factor to take into account when choosing to implement this method. For example, let’s say you’re a Detective and you’re searching for your suspect in a big crowd. The first thing you should do is look for something that stands out, something that’s not supposed to be there.</p>
<p>The same applies to <strong><em>Data Forensics</em></strong>. If you know that a storage device was <em><strong>only</strong></em> overwritten with 0’s, then all you have to do you is look for something that doesn’t fit the pattern. However , if you overwrite it with <em><strong>1’s, 0’s or random characters</strong></em>, it makes significantly harder to search for data since you don’t know what you’re looking for.</p>
<h2>– US DoD 5220.22-M Standard</h2>
<p>This <em>was</em> the standard wipe method of the US Department of Defense (and other 3 letter agencies). However, it’s no longer considered a viable / authorized wipe method by the regulatory authorities.</p>
<p>Although there are many different version of this method, this is the most common implementation:</p>
<blockquote>
<p><strong>Pass 1:</strong> Writes a 0 and verifies the write<br>
<strong>Pass 2:</strong> Writes a 1 and verifies the write<br>
<strong>Pass 3:</strong> Writes a random character and verifies the write</p>
</blockquote>
<h2>– Schneier Method</h2>
<p>The Schneier Method follows this pattern:</p>
<blockquote>
<p><strong>Pass 1:</strong> Writes a 0<br>
<strong>Pass 2:</strong> Writes a 1<br>
<strong>Pass 3:</strong> Writes a string of random characters<br>
<strong>Pass 4:</strong> Writes a string of random characters<br>
<strong>Pass 5:</strong> Writes a string of random characters<br>
<strong>Pass 6:</strong> Writes a string of random characters<br>
<strong>Pass 7:</strong> Writes a string of random characters</p>
</blockquote>
<h2>– Gutmann Method</h2>
<p>This method was created by <strong>Peter Gutmann</strong> in 1996. I believe it’s the most complex method as it runs a <strong><em>total of 35 passes</em></strong>, like so:</p>
<blockquote>
<p><strong>Pass 1 - 35:</strong> Writes a random character</p>
</blockquote>
<p>From the first and last 4 passes (1 - 4; 32 - 35) it simply writes a random character, however, between Passes 5 - 31 it uses a complex overwriting pattern.</p>
<p><em><strong>This doesn’t necessarily mean that the Gutmann method is the best</strong></em> wipe method. It’s important to understand that this was developed in the 90’s, maybe even before, meaning that it was <strong><em>designed for past technology</em></strong>. Peter himself said that most of the passes in his method are useless to modern drives and that our best bet is just a random pattern overwrite.</p>
<p>Alternatively, some programs let you implement your own custom method by letting you choose how many passes to run and what to do in those passes.</p>
<hr>
<p>#<span class="hashtag">#Conclusion</span></p>
<p>In this post we covered the most popular software sanitization methods, but believe me when I say there are many more. As you can see, there are only slight variations from method to method - some add / remove passes, others change what to do in those passes or even just add a ‘verify write’ step.</p>
<p>I believe it all comes down to your personal preference and a good speed / security ratio, because, if you think about it, that’s what originated all these different methods.</p>
<p>As all the methods described fall in the “<strong><em>Clear</em></strong>” type of sanitization, there’s still a chance that target data can be recovered by <strong><em>more advanced / state of the art</em></strong> hardware-based recovery techniques, but you shouldn’t worry about that unless you’ve made some pretty powerful enemies…</p>
<p>With that said, I believe we’ve reached the end of this post. As always, I hope you’ve enjoyed reading it and feel free to give suggestions. Thanks.</p>
            <p><small>4 posts - 3 participants</small></p>
            <p><a href="https://0x00sec.org/t/software-based-data-sanitization-methods-overview/1944">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/software-based-data-sanitization-methods-overview/1944</link>
          <pubDate>Sat, 29 Apr 2017 18:44:40 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1944</guid>
          <source url="https://0x00sec.org/t/software-based-data-sanitization-methods-overview/1944.rss">Software-Based Data Sanitization Methods Overview</source>
        </item>
        <item>
          <title>Guide for Data Sanitization</title>
          <dc:creator><![CDATA[n3xUs]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <h2>#<span class="hashtag">#Guide</span> for Data Sanitization</h2>
<p>Hello everyone, hope you’ve been doing great! <a class="mention" href="https://0x00sec.org/u/anon79434934">@anon79434934</a> recently said that we should post articles about something that we are learning, both to help us study and maybe to introduce other people to new subjects. That’s what this article is, so forgive (and please correct) me if I say something that’s wrong, as I’m still learning.</p>
<hr>
<p>So I’ve recently been tasked with selling a used desktop computer, which means I have to properly clean it, both physically (case, internal components, etc…) and logically (securely erase all data - in other words, <strong>sanitize</strong> it).</p>
<p>This got me reading a lot of articles on <strong>Data Sanitization Methods</strong> to better comprehend it and learn more about it, which made me stumble upon a very good and interesting  64-page document about this subject (the purpose of this article is to summarize this document).</p>
<p>The document is called “<em><a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-88r1.pdf" rel="noopener nofollow ugc">Guidelines for Media Sanitization</a></em>” and it’s written by <a href="https://www.nist.gov/about-nist" rel="noopener nofollow ugc">NIST - National Institute of Standards and Technology</a>.</p>
<p>According to their website, <em>“NIST’s mission is to promote U.S. innovation and industrial competitiveness by advancing measurement science, standards, and technology in ways that enhance economic security and improve our quality of life”</em>. Whatever that’s means…</p>
<p>What matters is that they make some fine ass documents (like really good, all freely available), on pretty much <a href="https://www.nist.gov/topics" rel="noopener nofollow ugc">every field of science</a>, and the field of Cybersecurity and Computer Security is no exception. They have a website called <a href="http://csrc.nist.gov/" rel="noopener nofollow ugc">CSRC - Computer Security Resource Center</a>, <em>“which facilitates broad sharing of information security tools and practices, provides a resource for information security standards and guidelines, and identifies key security web resources to support users in industry, government, and academia.”</em></p>
<p>There, they have metric shit-tons of documents related to Cyber &amp; Computer Security, and it’s where you’ll find the “Guidelines for Media Sanitization” document we’ll be talking about (in the <a href="http://csrc.nist.gov/publications/PubsSPs.html" rel="noopener nofollow ugc">Special Publications</a> section).</p>
<p>Like I previously said, I’ll try to summarize this document because most of the government related or goverment-produced documents tend to have too many unnecessary redundancies (see what I did there?).</p>
<hr>
<p>Now that we’ve got that intro out of the way, let’s get to it.</p>
<p>The document is written in a way that kinda focuses more on big bussinesses or organizations where confidentiality is a big deal, but the same concepts apply to people like us, home users.</p>
<p>It has a few pages going on about how technology is constantly evolving, making some of the techniques described obsolete on future technologies and why one might be concerned with Media Sanitization or why it’s important, but I’ll leave that for you to read, if you’re interested.</p>
<hr>
<h3>- What is Data / Media Sanitization?</h3>
<p>“Media Sanitization” is just a fancy expression for “securely deleting data on some type of media thus preventing unauthorized access, therefore increasing confidentiality” or just, you know, deleting stuff, period.</p>
<h3>- Types of Media</h3>
<p>Primarly, there are two types of media involved in our daily routines:</p>
<ol>
<li>
<p><strong>Hard Copy</strong> - these are most commonly paper printouts. However, most printer parts and supplies are also a good example of hard copy media, and often overlooked. This tends to leave organizations and bussinesses rather vulnerable to dumpster-divers or anyone looking for information really.</p>
</li>
<li>
<p><strong>Electronic / Soft Copy</strong> - these are the devices that contain bits and bytes of information. Hard drives, flash memory devices, mobile devices, networking and office equipment are all good examples.</p>
</li>
</ol>
<h3>- Types of Sanitization</h3>
<p>There are three main types of sanitization. These are:</p>
<ol>
<li>
<p><strong>Clear</strong> - uses logical techniques (software based) to delete data in a storage device. Generally applies Read &amp; Write commands, meaning in overwrites existing data with new values (basically replacing sensitive or classified data with non-sensative data). This action is most commonly achieved using software like <a href="https://dban.org/" rel="noopener nofollow ugc">DBAN</a> (or it’s more complete brother <a href="https://www.blancco.com/products/drive-eraser/" rel="noopener nofollow ugc">Blancco 5</a>), <a href="https://eraser.heidi.ie/" rel="noopener nofollow ugc">Eraser</a>, with “<a href="https://www.bleachbit.org/cloth-or-something" rel="noopener nofollow ugc">a cloth or something</a>” or even the standard ‘Factory Reset’ function. However, this method may not be very effective when state of the art data recovery techniques are applied.</p>
</li>
<li>
<p><strong>Purge</strong> - Similar to ‘Clear’ except it uses state of the art techniques and equipment (both physical and logical) to sanitize data, making it even more difficult to apply recovery techniques (i.e degaussers).</p>
</li>
<li>
<p><strong>Destroy</strong> - renders data inacessible by using techniques that prevent future use of the storage device. These include incinerating, shredding, disintegrating, degaussing, pulverizing or melting the storage media.</p>
</li>
</ol>
<hr>
<p><strong>EDIT :</strong> Reading the comments, I remembered a Sanitization Method that I forgot to cover. I’ts called <strong>Cryptographic Erase</strong> (CE for short). What this means is that you encrypt all the sensitive data, but instead of deleting it, you sanitize the decryption key, meaning that nobody will have access to the target data (basically the same as storing something in a vault and then forgeting the combination to open it).</p>
<hr>
<p>##<span class="hashtag">#What</span> to consider when sanitizing data?</p>
<p>When the time comes to sanitize media, you might be faced with choice of what type of sanitization you should apply or what is the most adequate (this question is most commonly found in a bussiness / organization environment, as home users mostly apply the “Clear” method).</p>
<p>There are a few things to consider when making that decision:</p>
<ol>
<li>
<p><strong>What type of media are we dealing with</strong> - hard copy or electronic (if electronic, specify)</p>
</li>
<li>
<p><strong>Security Category</strong> - Early on the document, they talk about how security categorization is important to assure that a proper media sanitization technique is applied (basically, you have to determine if the target data is non-sensitive, if it reveals Personally Identifiable Information, if it’s classified / confidential, etc) (don’t worry, they have a special doc just for that!).</p>
</li>
<li>
<p><strong>Reuse of Media</strong> - wether the storage media is planned for reuse (either within or outside the organization) or recycle.</p>
</li>
<li>
<p><strong>Control of Media &amp; Data Protection Level</strong> - these are closely related to Security Categorization. Control of Media refers to who has had control and access to said media (mostly discussed when leaving organizational control); Data Protection Level refers to the different data protection policies that exist within an organization (like data clearence, some people are authorized to access some information, others are not; mostly discussed when there’s internal reuse).</p>
</li>
<li>
<p><strong>Environmental Impact</strong> - some methods are more harmful to the environment than others.</p>
</li>
<li>
<p><strong>Cost</strong> - some methods may be more cost-friendly than others.</p>
</li>
</ol>
<p>Here’s a decision flow chart that may help you:</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/5/50a6ac5149c5300d66ec486717d4eb9916d3fbfc.jpg" width="473" height="500"></p>
<p>From page 35-48 in the document, there are a great deal of tables that tell you what type of sanitization you shoud consider, depending on the type of media (again, it may help you a lot).</p>
<hr>
<p>That’s it for today. If you made it to the bottom, I hope you’ve enjoyed reading this article and that it helped you in some way.</p>
<p>In the next post maybe I’ll cover software sanitization methods (gutmann method, schneier, DoD, etc…)</p>
<p>Thank you all for reading and I’ll see you all later.</p>
            <p><small>13 posts - 8 participants</small></p>
            <p><a href="https://0x00sec.org/t/guide-for-data-sanitization/1938">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/guide-for-data-sanitization/1938</link>
          <pubDate>Thu, 27 Apr 2017 21:42:18 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1938</guid>
          <source url="https://0x00sec.org/t/guide-for-data-sanitization/1938.rss">Guide for Data Sanitization</source>
        </item>
        <item>
          <title>How to Become Anonymous like Notorious Blackhats - Stealthiest Setup</title>
          <dc:creator><![CDATA[Merozey]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>So, I see very few anonymity tutorials on this site, which is ashame because it’s one of the most powerful proficiencies you can master in this industry.</p>
<p>So, let me tell you step by step how to acquire the stealthiest and sexiest anonymity setup, and how you can hide from every three-letter agency. fucking faggets.</p>
<hr>
<p><strong>NETWORKING</strong></p>
<hr>
<p>First you need to understand networking in profound aspects, because thats where you intend to stay anonymous right? in the world where your anonymity relies upon networking protocols and ports, servers etc. Study them understand them and exploit them.</p>
<p>I understand if you have other areas you wanna specialise in, and you because of that have a hard time getting a proper understanding of these concepts. At the very least you should be familiar with <strong>HTTP/S,FTP/S,SSH,TCP/IP,Ping,UDP</strong></p>
<p>Now, my aspiring anonymity-learner, let me tell you how I would stay anonymous from these hypocritical and despicable agencies incl. LE. After some re-search, I also found out this is how some of the most notorious blackhats stay anonymous, among them is also the populer FinFisher aka. Phineas Fisher.</p>
<hr>
<p><strong>THE SETUP</strong></p>
<hr>
<p>If you have taken the time to understand networking, you’d know the first obstacle is to hide from your ISP, because even though they might not monitor your activities for the same reasons as the NSA does, they still have access to it, which means they have made it easier for american corporations.</p>
<p>if you’re on Windows or Mac put a bullet in your computer cause you fucked up already. Or Download a Linux OS, I prefer K/X/Lubuntu Debian or similar will work just fine too. Then setup your home directory with the LVM encryption and also encrypt your root directory after the installation process has finished.</p>
<ol>
<li>
</li></ol>
<hr>
<p>Install VirtualBox - I recommend it over VMWare! Then create a new guest and configure the settings as:<br>
<strong>System/Motherboard</strong> &gt; 2048 MiB aka. 2GB of RAM is highly recommended for a smooth performance.<br>
<strong>System/Processor</strong> &gt; Append 2 CPU’s to your guest OS - again for an improved performance.<br>
make sure <strong>PAE/NX</strong> is enabled too for additional security.<br>
Next, <strong>Display/Video Memory</strong> &gt; Increase it to 128 MB - just because.<br>
<strong>USB</strong> &gt; Enable USB Controller support. This is also for additional security.</p>
<p>This is recommended as your setup, however, you’re gonna have to make up with yourself which Linux distribution you wanna use for your ‘blackhat acitivites.’ I obviously recommend either Tails or Whonix, but you’re gonna have to compare the two and decide for yourself based upon your desired preference. It varies.</p>
<p>You can also seek a third option and go with Qubes but you know, I dont.</p>
<ol start="2">
<li>
</li></ol>
<hr>
<p>Secondly, you’re gonna need to also encrypt the necessary folders and what not once you’re booted into your OS. This includes again root &amp; home folders. From here, I highly recommend using a VPN and have your internet traffic routed through TOR so the process will look like this. Host &gt; VM/Guest &gt; TOR &gt; VPN &gt; WWW</p>
<p>Let me tell you right now, that looks like one hell of a setup to me. Your ISP wont be able to see you’re connected to all of these hops, which was the goal really. A friendly advice, don’t hack over TOR, I dont think I need to explain why.</p>
<ol start="3">
<li>
</li></ol>
<hr>
<p>The reasoning for using a VM as your only place for hacking where nobody can see you, is because you dont want to accidentally collide your personal life with your secret one. And having it all stored on one VM is super efficient and convenient. Also something to keep in mind, while setting up the VM, its gonna ask you to create a virtual hard drive. In my opinion it really doesnt matter what you choose. As long as you remember, if you do choose to create one, remember to delete it if the day should come where you’re being surprised by FBI agents.</p>
<ol start="4">
<li>
</li></ol>
<hr>
<p>Now to end off, this wont keep you safe as we know. So many habits and actions have to be taken into play here. I have mentioned a lot of them in previous tutorials which you can check out. Combine all of this and you will be at the level of some of the popular blackhats today. fuck Anonymous eh.</p>
            <p><small>24 posts - 8 participants</small></p>
            <p><a href="https://0x00sec.org/t/how-to-become-anonymous-like-notorious-blackhats-stealthiest-setup/1346">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/how-to-become-anonymous-like-notorious-blackhats-stealthiest-setup/1346</link>
          <pubDate>Sun, 11 Dec 2016 14:28:52 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1346</guid>
          <source url="https://0x00sec.org/t/how-to-become-anonymous-like-notorious-blackhats-stealthiest-setup/1346.rss">How to Become Anonymous like Notorious Blackhats - Stealthiest Setup</source>
        </item>
        <item>
          <title>Foxcatcher! [Part 3] - How to prevent data theft</title>
          <dc:creator><![CDATA[n3xUs]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Well, hello there again! This is the last part of this (very) short series on Foxcatcher! Today we’ll discuss how you can prevent your data being stolen. I think that the first thing that comes to mind is <strong>Browsing Habits</strong>.</p>
<p>Now this is a topic that has been thoroughly discussed here on 0x00sec (Check out <a href="https://0x00sec.org/t/achieving-anonymity-securing-your-browsing-habits/518">Merozey’s post</a>), but it can never be stressed enough.</p>
<p>As I’ve previously shown, the data that most people are after is <strong>search &amp; website history, bookmarks, cookies and saved passwords.</strong></p>
<p><strong>This are easy targets because people tend to care more about comfort &amp; convenience than security.</strong></p>
<p>So today I’m going to try something a bit different. Instead of writing a long article about what you can do to protect yourself and how you’re leaking data about yourself wherever you go, I’ll just leave some links below to some websites that not only show you how and what data your leaking, but also how you can protect yourself from it (or at least minimize it).</p>
<p>JonDonym Anonymity Test - <a href="http://ip-check.info/?lang=en" rel="nofollow noopener">http://ip-check.info/?lang=en</a></p>
<p>IPduh Anonymity Check - <a href="http://ipduh.com/anonymity-check/" rel="nofollow noopener">http://ipduh.com/anonymity-check/</a></p>
<p><a href="http://2ip.io" rel="nofollow noopener">2ip.io</a> - <a href="https://2ip.io/privacy" rel="nofollow noopener">https://2ip.io/privacy</a></p>
<p>If you know of any other good websites to test anonymity and privacy or if you have anything to add, you know what to do.</p>
            <p><small>2 posts - 1 participant</small></p>
            <p><a href="https://0x00sec.org/t/foxcatcher-part-3-how-to-prevent-data-theft/1319">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/foxcatcher-part-3-how-to-prevent-data-theft/1319</link>
          <pubDate>Sat, 03 Dec 2016 16:37:41 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1319</guid>
          <source url="https://0x00sec.org/t/foxcatcher-part-3-how-to-prevent-data-theft/1319.rss">Foxcatcher! [Part 3] - How to prevent data theft</source>
        </item>
        <item>
          <title>Paranoia and a Terminal - Part 0x02 - URL Forensics</title>
          <dc:creator><![CDATA[pry0cc]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Hello, 0x00’ers! Welcome to my third <small>(Yes 3rd)</small> instalment of <strong>Paranoia and a Terminal</strong>! In this <em>episode</em> we will explore <strong>URL Forensics - for the Paranoid</strong>. In other terms, viewing a site or viewing a link, without falling victim to a social engineering attack if our spidey sense rings alarm bells.</p>
<h3>Scenario 1</h3>
<p>We are at our terminal, plugging away writing some badass script, then all of a sudden, we receive a message from some random geezer, “Hello, how are you?”, we’ve never spoken to this individual before, this seems VERY fishy. Usually, we would just ignore messages like this due to our paranoia, but today we decide to engage him in conversation.</p>
<p>After some discussion and small talk; he replies “I’m glad you like <em>ABC</em>, I’ve actually been reading about that and I’ve found this <a href="http://bit.ly/2fc6P19" class="inline-onebox-loading">http://bit.ly/2fc6P19</a>, and I thought you might be interested”</p>
<p>To the truly trained and paranoid, this has so many things that send alarm bells ringing:</p>
<ul>
<li>
<strong>Link Shortener</strong> -  Link shorteners are generally an attempt to grab you IP Address &amp; User Agent, something very important during the reconnaissance stage.</li>
<li>
<strong>Random link</strong> - Even if it wasn’t shortened, how do we know he isn’t running a sketchy chrome 0day on that baby? We don’t. We don’t want our boxes to be pwned!!</li>
<li>
<strong>Random Person</strong> - This guy came out of nowhere, and now he’s sharing links? This guy seriously is asking for a beating <img src="/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:">
</li>
<li>
<strong>Weird Concern for You</strong> - Yes, good people do exist, although when a stranger is unusually kind to you out of nowhere, sadly, in this day and age, you should be second-guessing their motives. Con-men + Social Engineering use this tactic to lure many people into the downfall of a company, or just their facebook password.</li>
</ul>
<p>But hang on, <a class="mention" href="https://0x00sec.org/u/pry0cc">@pry0cc</a>,  are you saying we can’t find out where the link goes at all?  I just need to know so bad!</p>
<p>If you can avoid it completely, you can definitely avoid falling trap just by not clicking it at all. But there is no complete reason we should avoid it, after all, we are about to learn some really cool Forensic methods to uncover where it leads, without actually being a noob.</p>
<p>Turns out, there are actually services that offer URL expansion services, that will follow the link so that you don’t have to. I have actually written a super simple script to do this from the terminal (I’m a terminal junkie), but you can go directly if you need.</p>
<p>The first thing I do is run my unshorten script; copy and paste that sucker, and run:</p>
<pre><code class="lang-auto">$ curl "https://unshorten.me/s/http://bit.ly/2fc6P19"
&gt;&gt; https://bigscarywebsite.com
</code></pre>
<p>This will contact the <a href="http://unshorten.me">unshorten.me</a> website; and unshorten the link for us. If they were running a sketchy IP logger such as <a href="http://grabify.link/">grabify</a>, then all they would see is the <a href="http://unshorten.me">unshorten.me</a> service.</p>
<p>As we can see from running this command, we get a response of the expanded URL, AKA - where the rabbit hole leads. This is is really cool; now we just need to figure out how to find out what <a href="https://cdn.meme.am/instances/67030805.jpg">https://bigscarywebsite.com</a> actually is.</p>
<p>At this moment in time; we could just pop open our browser and view the link - but remember - <strong>we are paranoid</strong>. We can’t do that. <em>GASP</em>. You never want to click on a ‘phishy’ URL <em>naked</em>. Yes, if you know me, you’ll know I say “naked” in terms of, connecting without any protection, connecting without any spoofing, proxies or anything. Connecting naked does exactly as the name suggests, <strong>it exposes you</strong>.</p>
<p>No no no, we must use a very clever method to view this link… If you choose, you can do the following from within a <a href="https://0x00sec.org/t/paranoia-and-a-terminal-part-0x00-vagrant/1235/6">vagrant</a> shell, personally, I find it acceptable to do this from my main machine <em>naked</em>.</p>
<p>The first thing you’ll wanna do is break out proxychains + tor. These two items may not cause complete anonyminity against government powers, however, that is not our target objective in this matter; our target objective is staying anonymous from our adversary.</p>
<p>If you don’t know how to use proxychains - <a class="mention" href="https://0x00sec.org/u/oilslick">@OilSlick</a> did a <a href="https://0x00sec.org/t/a-brief-introduction-to-proxychains/418">sweet tutorial</a> a while ago on it, so <a href="https://0x00sec.org/t/a-brief-introduction-to-proxychains/418">go check that out</a> if you’re unsure.</p>
<p>Setting up tor is fairly simple:</p>
<pre><code class="lang-bash"># Install tor
$ sudo apt-get update &amp;&amp; sudo apt-get -y install tor
$ sudo chown -R $(whoami) /var/lib/tor
$ tor
</code></pre>
<blockquote>
<p><strong>Tip</strong><br>
(Do this from a tmux window, or another terminal window as tor will take over your terminal.)</p>
</blockquote>
<p>Now you can safely begin your Forensics. My swiss army knife to use is curl, curl is my baby, and curl allows me to do so much so easily.</p>
<h3>Verify ProxyChains is working correctly</h3>
<pre><code class="lang-bash">$ proxychains curl "http://icanhazip.com/"
&gt;&gt; 305.129.248.134
</code></pre>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/4/4c4ccf1b3aa9f16209029c6131167f4551c55cc9.jpg" width="656" height="133"></p>
<blockquote>
<p><strong>Note</strong><br>
(For the purposes of this tutorial; I have set up a very basic python webserver in order to mimic the logs an adversary may be keeping. As always, I will provide this code for you at the end of this article in a GitLab Repo).</p>
</blockquote>
<h3>Get Header Infomation</h3>
<p>Before we start poking around at the source code of the site; let’s first begin by checking the headers, the headers will tell us a lot about the adversaries setup; server type and other quite interesting information.</p>
<pre><code class="lang-auto">$ proxychains -q curl -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.112 Safari/534.30" -I "http://testserver.com:8000/"
</code></pre>
<h4>Lets break down this command:</h4>
<ul>
<li>
<code>proxychains -q </code> - this command routes <code>curl</code> through our proxies defined in /etc/proxychains.conf</li>
<li>
<code>curl</code> - this is our command to pull data from the server</li>
<li>
<code>-A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.112 Safari/534.30"</code> - this is our flag “-A”, which allows us to define a custom user agent. One of the many ways we can be identified is through our user agent. In this case, I’ve chosen to use a Mac running Safari, this user agent is very typical and would be hard to spot.</li>
<li>
<code>-I</code> - this flag allows us to check the headers of the server we connect to</li>
<li>
<code>"http://testserver.com:8000/"</code> - This is the server we’re connecting to, in my case it is my python web server address.</li>
</ul>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/c/c23b1d073fa9cef9d1b4ab1ce203f2702e9dd85d.jpg" width="656" height="159"></p>
<p>As we can see from this command we have uncovered several little nuggets of information without revealing much if any information to the adversary:</p>
<h4>We have identified:</h4>
<ul>
<li>The server software they’re running and the version</li>
<li>The local time of the server (or the time setting on the server); this is very important as even if they are behind proxies; it might be able to tell us a lot about where the adversary is located.</li>
<li>The last modified time of the page, if this is very recent, then we can suspect it has been tailor made for us.</li>
</ul>
<p>If we take a look at our server, we can see the information we have given to the adversary:<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/8/8db5dc926b77180dac63913fa2eea195df289013.jpg" width="552" height="61"></p>
<p>In this case; after running the -I (header) command, we have only told them our IP address, which if we have configured proxychains correctly, is just the IP of our proxy.</p>
<h3>Get the Page Source</h3>
<p>Now we know the server type, and other information, now it is time to uncover what they’ve really sent us. Is it a sketchy 0day? Is it just an IP Logger? Let’s have a look…</p>
<pre><code class="lang-bash">$ proxychains -q curl -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.112 Safari/534.30" http://testserver.com:8000/
</code></pre>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/0/0e56a0bc0d55ae2d5c754e8f805833de14c3af2a.jpg" width="656" height="216"></p>
<p>As we can see from this command, it has returned the source code of the page we are attempting to view. Since we are in curl, HTTP redirects or Javascript will not execute, neither will HTML5 code or any rendering of any kind. This is perfect for us Paranoid Penguins as it allows us to see exactly the process that occurs, sort of like a debugger; think of it like an Objdump or Radare2 for the web.</p>
<p>In this source code, we can see that the page attempted to load a script, judging by the name that appears to be an IP logger, it also displays a title and a paragraph. Nothing too sketchy, however, it easily could be.</p>
<p>If we take a look at our server again</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/6/6780fff98b93e6e93e90a7c30cbb616d3bc491be.jpg" width="656" height="153"></p>
<p>We can notice we have much more information than before; this is because we have actually requested to see the contents of the page. This log result returns our user-agent, or in this case, our spoofed user agent.</p>
<p>You may notice this command is hardly different from the last command; all we have done is remove the “-I” flag. Apart from that, it is identical.</p>
<h2>Conclusion</h2>
<p>In this article, we’ve covered,</p>
<ul>
<li>Unshortening URLs.</li>
<li>Using a proxy + a custom user agent to protect our identity.</li>
<li>Using curl to protect against data exposure and 0day attacks.</li>
<li>Exercise your curiosity although you are extremely paranoid.</li>
</ul>
<p>Code for this tutorial: <a href="https://git.0x00sec.org/pry0cc/tutorial-code" class="inline-onebox-loading">https://git.0x00sec.org/pry0cc/tutorial-code</a></p>
<p>I hope this comes in handy, and I hope you have learned a lot from this! Please tell me your thoughts about this article, and please suggest anything else you’d be interested in me covering. If you have any questions please ask them, as somebody else might have the exact same question as you! Have a good one guys, and as always, <em>stay paranoid</em>.</p>
<ul>
<li>pry0cc</li>
</ul>
            <p><small>8 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/paranoia-and-a-terminal-part-0x02-url-forensics/1257">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/paranoia-and-a-terminal-part-0x02-url-forensics/1257</link>
          <pubDate>Wed, 02 Nov 2016 21:58:18 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1257</guid>
          <source url="https://0x00sec.org/t/paranoia-and-a-terminal-part-0x02-url-forensics/1257.rss">Paranoia and a Terminal - Part 0x02 - URL Forensics</source>
        </item>
        <item>
          <title>Becoming Anonymous Like a Pro #2: Choosing a Secure &amp; Reliable VPN</title>
          <dc:creator><![CDATA[Merozey]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <h3>What Is a VPN?</h3>
<ul>
<li>VPN = Virtual Private Network</li>
</ul>
<p>It’s a service that offers you anonymity to a certain extent. It creates a tunnel from your PC, to the server you are connecting to, and encrypts that tunnel so nobody can read whatever data is being transmitted. So you will be safe from eavesdropping, ssl striping, man in the middle attack among others.</p>
<h3>The Benefits of a VPN:</h3>
<p>The benefit of VPNs is that it creates an encrypted tunnel from your PC to the server you’re connecting to, making you safe from various attacks. There are many different services to choose from. Every service has its own downsides and upsides. As a base line, they all pretty much offer the same thing.</p>
<ul>
<li>
<p>Some providers even offer you a trial (How incredible is that…)</p>
</li>
<li>
<p>You can choose what country you want displayed as your IP</p>
</li>
<li>
<p>You can change your IP at any time (At least the ones I know)</p>
</li>
<li>
<p>You can buy several VPNs and use them at the same time.</p>
</li>
<li>
<p>Your data is encrypted with strong algortihms.</p>
</li>
<li>
<p>The servers of X provider, are located in countries outside US jurisdictin. (at least if you’re smart.)</p>
</li>
</ul>
<h3>The Downsides of Using a VPN:</h3>
<p>Just to mention a few:</p>
<ul>
<li>
<p>You can never be certain if your provider is being completely honest about its services</p>
</li>
<li>
<p>Some will screw you over and hand over logs to the government. (Hint; HideMyAss)</p>
</li>
<li>
<p>You can never trust a company with your anonymity, because why should they protect you, from legal prosecutions from the Government, for $20 per month?</p>
</li>
</ul>
<h3>Does VPN Providers Keep Logs?</h3>
<p>The simple answer is yes mate. They do.</p>
<p>Personally I would argue that the majority of VPNs today keep logs, and the majority of those providers “claim” they don’t. We have seen it before, a hackers identity is blown because the company provided logs to the government despite the fact they claimed no logs were kept.</p>
<p>Of course some are being honest and doesn’t keep logs, but the bad news is, you need to take a chance and hope that the one you have chosen is being honest about what they are telling you. You really need to do a lot of recon on the provider before choosing it, is my best advice.</p>
<ul>
<li>Read their Terms of Service. (I mean it, actually read it)</li>
<li>Read their privacy policy.</li>
<li>Find out where they are located</li>
<li>Read as many reviews as you can</li>
<li>Check out what others have said about the product</li>
<li>Ask around see what they have to say</li>
<li>And do whatever it takes to get more information from the provider before choosing</li>
</ul>
<h3>How Do I Choose a VPN?</h3>
<p>First of all, dont ask anyone for their recommendation because 99% is they wont tell you. Want to know why? Because every provider is different, and you are responsible for your own anonymity, and have to protect yourself. And because every hacker has different circumstances meaning, you might be in US and another one might be in China, vice versa. Different things apply to people located elsewhere from you.</p>
<p>First of all, when choosing a VPN, <strong>Stay away from any provider that is located in the US.</strong> That is the number one thing you need to make sure of, because not only is the **NSA CIA FBI **located in the US, so is the government (obviously). Also the Patriot Act applies to everyone and everything located within the US, which means the VPN provider you thought is so good about keeping you anonymous, actually has to hand over every single log of you if they are ever approached by the NSA or FBI.</p>
<p>Next, this is the only recommendation I can give you towards VPNs. Choose one located in Russia, China or Sweden. Simply because Sweden has privacy laws that are very good, the US doesn’t have jurisdiction over there.</p>
<ul>
<li>
<p>Read their Terms of Service &amp; Privacy Policy. (Actually read it)</p>
</li>
<li>
<p>Consider your provider a lot before choosing it. Get as close to 100% to being sure of whether or not you can trust the provider.</p>
</li>
</ul>
<h3>Am I Now Anonymous?</h3>
<p>No you aren’t. You are never completely anonymous on the internet, as any real hacker will tell you. And just like any other software out there, your provider is also a software, which means its hackable, and you are therefore still at risk.</p>
<h3>Wait VPNs can be hacked?</h3>
<p>They most certainly can, and you have to remember that whomever has created the software is always in full control of it.</p>
<p>They know the code and you don’t. Stay safe.</p>
            <p><small>7 posts - 5 participants</small></p>
            <p><a href="https://0x00sec.org/t/becoming-anonymous-like-a-pro-2-choosing-a-secure-reliable-vpn/1098">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/becoming-anonymous-like-a-pro-2-choosing-a-secure-reliable-vpn/1098</link>
          <pubDate>Fri, 16 Sep 2016 22:05:57 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1098</guid>
          <source url="https://0x00sec.org/t/becoming-anonymous-like-a-pro-2-choosing-a-secure-reliable-vpn/1098.rss">Becoming Anonymous Like a Pro #2: Choosing a Secure &amp; Reliable VPN</source>
        </item>
        <item>
          <title>Becoming Anonymous LIke a Pro: The Inner Workings of TOR</title>
          <dc:creator><![CDATA[Merozey]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <h1>Becoming Anonymous Like a Pro <span class="hashtag">#3:</span> The Inner Workings of TOR</h1>
<h3>TOR</h3>
<p>TOR as we know has been broken and hacked, which is why many people are now discarding TOR and moving on. As you should too, because it used to be a great anonymization tool. As we’ve seen with Sabu.</p>
<p><strong>How TOR Works</strong></p>
<ul>
<li>Node = Router</li>
</ul>
<p>When connecting to the TOR network, your real IP address is connected to the <em>entry node</em>, and you’re then connected to a second node called the <em>relay node</em> which then connects you to a third node called the <em>exit node</em>. All of this happens in mili seconds.</p>
<p>Your real IP is only visible to the first node, and that node has its own IP, where the second node is the only one who can see that IP. So as you’ve guessed, whoever sniffs the traffic from X server that you’re connected to, will see the exit node.</p>
<p>For the encryption part, it’s been criticized a lot that TOR has a weak encryption protocol, because it doesn’t provide <em>end-to-end encryption</em> which is a big factor as to why you shouldn’t rely on it either.</p>
<p>Now this is where the main reason as to why TOR is a no-go when wanting to become anonymous. Whoever can obtain control of the exit node can see everything. Because all of the traffic is exiting from that node, so if you are in control of the exit node, <em><strong>you’re in full control</strong></em></p>
<p>Also because anyone can setup their own nodes to the TOR network, incl. the NSA, a malicious hacker etc.</p>
<h3>Is TOR Dead?</h3>
<p>If you ask me, TOR should not be used for anything else than bypassing a website’s censorship on its content. Many sites restrict their content to foreign users abroad, so bypassing that feature with TOR is very easy, and that is all I recommend doing with TOR. Nothing more nothing less.</p>
<p><strong>Good news is…</strong></p>
<p>There is a new software in progress at the writing of this article. That particular software is the successor of TOR. It’s called <strong>Riffle</strong> and it’s currently in it’s beta version, so the official launch is yet to come.</p>
<p>It is faster than TOR and more secure because Riffle is based upon a protocol called <strong>anytrust model</strong> which means all it needs is one server to be secure, and as long as that is secure, the entire network is secure.</p>
<p><strong>HOW IS RIFFLE MORE SECURE THAN TOR</strong></p>
<p>Riffle (unlike TOR) shuffles every message in the network making it nearly untraceable. So, when a user (e.g., you), sends a message to the Riffle network, your message is sent to something called <strong>mixnet</strong> which means that your message is sent to a node alongside thousands of other users, which is then mixed up before it’s sent to it’s successive node. In other words, the destination.</p>
<p>source: <a href="http://resources.infosecinstitute.com/riffle-anonymity-network/" rel="nofollow noopener">http://resources.infosecinstitute.com/riffle-anonymity-network/</a></p>
            <p><small>5 posts - 2 participants</small></p>
            <p><a href="https://0x00sec.org/t/becoming-anonymous-like-a-pro-the-inner-workings-of-tor/1086">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/becoming-anonymous-like-a-pro-the-inner-workings-of-tor/1086</link>
          <pubDate>Wed, 14 Sep 2016 18:42:02 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1086</guid>
          <source url="https://0x00sec.org/t/becoming-anonymous-like-a-pro-the-inner-workings-of-tor/1086.rss">Becoming Anonymous LIke a Pro: The Inner Workings of TOR</source>
        </item>
        <item>
          <title>Setting up Quassel Core on Amazon EC2 server</title>
          <dc:creator><![CDATA[123loaded]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>Quassel is an IRC client which can be setup to have a core server, and a client, where the core is always up and running so that you are always available in IRC and also, ideally, have less connection issues etc, etc… Let’s just get right to it.<br>
Note: There won’t be a whole lot of explanation here, as the pictures are pretty straight forward.</p>
<h2>Sign up for Amazon Web Services and Create EC2 AMI</h2>
<p>Create an account for AWS at <a href="http://aws.amazon.com" rel="noopener nofollow ugc">http://aws.amazon.com</a> and then login to your AWS console. You are presented the following screen. There are lots of options, but for now, all we want is a simple EC2 server on their cloud.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/6/67baf8accd9f2ceee58b0ca407a47c3100b23634.PNG" width="642" height="398"></p>
<p>Click “Amazon EC2” and then “Create Instance”<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/8/8ff5f13b238b5bc3e86ad090209b3daf100f69c5.PNG" width="606" height="176"></p>
<p>There are sever AMI’s (Amazon Machine Instances) available to choose from. I am going to fire up an Ubuntu 14.04 Server, but you can choose which ever you’re comfortable/most familiar with.<br>
Note: "Free Tier Eligible means just that, it is free to use. However, this is only for 12 months and then they’ll begin to bill you. Also, this is only for <em>new</em> Amazon Web Services customers. I didn’t know this and I’ve been getting billed… it’s not too expensive… but still… not very hard to just create a new account (not very hard to just create a new account every 12 months either hehe).<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/0/0d48024f2da8a76ddc48fab8fbf2d1ba278e263a.PNG" width="689" height="255"></p>
<p>#<span class="hashtag">#Choose</span> amount of virtual processors and RAM for the machine<br>
Unless you plan to do something beyond the scope of this tutorial, the minimum specs are fine… resist your inner nerd urge to have more than 1GB of RAM… I know… it’s hard, but it’s plenty, trust me, I’m some guy on the internet, I’d never lie.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/3/334407237649db5f91b18135e9c24aef8d2302bc.PNG" width="690" height="341"></p>
<p>#<span class="hashtag">#Choose</span> your subnet info<br>
Again, do nothing here.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/4/4ee09c4d9a69b54af51da30a7b06f26c90783ded.PNG" width="690" height="301"></p>
<p>#<span class="hashtag">#Choose</span> storage space<br>
I’d just leave it at 15GB… you could even go less, unless you plan to use this AMI to store anything in the future.<br>
Note: You get 30GB of free storage across any/all AMI’s you are running (though I think 2 is the limit for free).<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/f/f238b195f5a8188ad7a1de05aa2147308beca153.PNG" width="690" height="258"></p>
<p>#<span class="hashtag">#Create</span> a Tag for your AMI<br>
As far as I know, this is just used within the AWS console to refer to this specific AMI at times.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/7/7397a0a358a7dbd5a0b15072892ceaf8c8667093.PNG" width="690" height="122"></p>
<p>#<span class="hashtag">#Create</span> a security Group<br>
A security group in AWS is just a name given to a particular set of firewall rules that you can apply to groups of machines or a single machine as you see fit. This consists primarily of which ports it’s allowed to recieve ingress (inbound) traffic on, and what IP addresses or address range it will accept connections from.</p>
<p>If you <em>know</em> that your IP is static and won’t change, and you only connect from a couple places, you can go ahead and add your home IP address and connect from anywhere you want. If you’re using this AMI as a staging server for some attack vector and connecting to it through a VPN, you’d definitely want to leave this open/set to 0.0.0.0 so any IP can connect.</p>
<p>Go ahead and open up port 22 so you can SSH into your machine as need be. And then open up whatever port you want Quassel to run on. I was going to have that as 31337 for this demo, but didn’t record the process of changing it so you’ll have to figure that out on your own.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/7/70b29a97cac0f0b6d56d31431e594d276479731c.PNG" width="690" height="229"><br>
<strong>Note: You actually have to open 4242 as well for the initial Quassel Core connection, so your inbound open ports should look like this instead</strong><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/f/f494718f8bdb6ba2635fa0477c791ec9fc8a86bb.PNG" width="690" height="152"></p>
<p>#<span class="hashtag">#Review</span> EC2 AMI settings and click launch<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/5/5e797fd1a12b9bc694357ef9733f78d6267f9c29.PNG" width="689" height="259"></p>
<p>#<span class="hashtag">#Create</span> SSH Key Pair for secure SSH connections.<br>
Amazon does not give their instances default passwords, as they feel that would be too insecure (rightfully so), so instead, they have you create an SSH Key Pair and they drop the public key into your AMI’s /etc/hosts/ directory for you and give you the matching private key. Type in a name for your private key and click “download”. Save this as <code>&lt;</code>MyPrivateKey<code>&gt;</code>.pem somewhere safe/secure where you will not lose it, as you <strong>cannot download this private key again</strong>.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/0/0eb8e8d6386aa1e9a44ca0488675092f3b251030.PNG" width="678" height="500"></p>
<p>#<span class="hashtag">#Actually</span> launch AMI<br>
Click “Launch Instances” and your AMI will actually be up and running.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/e/e21e07b5cf3c6eff5c4c08c93a77dd47785166ac.PNG" width="690" height="240"></p>
<p>#<span class="hashtag">#View</span> launch log<br>
You can click “View launch log” to see the state your AMI is in as it’s booting up.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/e/eb46a7a50079921d254ed9eb36d9063aaa2edc31.PNG" width="601" height="285"></p>
<p>#<span class="hashtag">#Connect</span> to EC2 AMI over SSH with Putty (or just ssh on linux =p)<br>
Windows has no SSH client by default, so you need to acquire one. Sadly, there are only really 2 options that work reliably as far as I know… using cygwin to emulate a linux terminal on your windows machine, and installing ssh via cygwin, or using PuTTY. The later is way easier, and Putty is actually pretty powerful and awesome in its own right. Go ahead and <a href="http://www.putty.org/" rel="noopener nofollow ugc">download and install PuTTY</a>. I don’t have pictures for this… I have faith in your ability to run *.exe’s from unknown sources ;p.</p>
<p>#<span class="hashtag">#Import</span> private key into PuTTY<br>
Putty actually has a seperate program entirely for handling import/export/generation of public/private keys (probably due to the large codebase involved with all the different algorithms different keys cant support). So in Windows, find and run Putty-Gen, and then click the"Load" button where it says “Load existing Private Key”. It will pop up and tell you that the key was loaded successfully.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/4/40c45b4afab8e6ca8f8cbc6bfe04f34ea712be2f.PNG" width="484" height="470"></p>
<p><span class="hashtag">#Save</span> private key as PuTTY compatible key<br>
Putty has some sort of different format for the file types for its keys… loading the key simple extracted the raw data of they key into the resulting window for viewing, now you must choose “Save Private Key” to save it as a Putty Key Type. Feel free to give it a passsphrase though it is not required.<br>
Note: Have fun with half of my private key… if anyone can come up with some decent hashing/collision programs, my free-tier AMI is all yours ;p.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/2/22e2a734d228e023872613426b1bbb1f566ab453.png" width="483" height="466"></p>
<p>#<span class="hashtag">#Grab</span> the IP address or hostname of your AMI from AWS Console<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/d/d42f98459ce4ddfa4c48175947cb10c76ecacefe.PNG" width="689" height="250"></p>
<p>#<span class="hashtag">#Run</span> Putty<br>
Run PuTTY, input the IP/hostname of your AMI, and then go ahead and give this SSH session a name for good measure (saves all the data attributed with this SSH connection for later use) and click “Save”.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/5/59e85dde6a3d29eca822220080826374d2648bbf.PNG" width="460" height="442"></p>
<p>#<span class="hashtag">#Configure</span> Putty session with Private Key and username<br>
Go to Connection-&gt;Data and enter the default username in the “Auto-Login username” field. For most AWS EC2 AMI’s, this username is ec2-user, however you should read the documentation for the AMI you choose, as the default username for the Ubuntu AMI is <strong>ubuntu</strong>.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/7/730e7bf671c43c740e63e51a9cf394c7f2169f32.PNG" width="459" height="439"></p>
<p>Go to Connections-&gt;SSH-&gt;Auth, click the Browse button next to “Private key file for authorization”, and choose the putty compatible private key that you created with PuTTY Gen.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/1/1271f2ccaae108e349e9d420742ff55159b6d52a.png" width="456" height="437"></p>
<p><strong>Note: At this point you should choose “Save Session” again back under the Session tab at the very top of the left hand tree. Otherwise, you’ll have to load the key again each time and username, as we so far only chose “save” after entering the IP/host information.</strong></p>
<p>#<span class="hashtag">#Connect</span> to your AMI<br>
The first time connecting to a new host over SSH with PuTTY you should get a prompt telling you the fingerprint is unknown and asking if you want to trust it before. This is a MITM mitigation by PuTTY… if one day your fingerprint is just suddenly different for no reason, you should Not connect, and figure out why (if it’s not an attack, it’s likely because the IP address changed, while the public DNS record remained the same, or something of the sorts… buuuuut also prob just means something fishy is happening). Go ahead anc click “Yes” to accept the fingerprint as known.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/c/cc5cb61329e6744c5a8938b70f6cf1e52fb79a81.PNG" width="679" height="425"><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/2/249ed12c09e7b84d5c2fdfe569c65d296266e024.PNG" width="690" height="496"></p>
<p>#<span class="hashtag">#Update</span>, Upgrade, and Install Quassel-Core with the following commands<br>
sudo apt-get update<br>
sudo apt-get install upgrade<br>
sudo apt-get install quassel-core<br>
<strong>Note: I forgot to take pictures of the update/upgrade, but there’s nothing more to it.</strong><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/e/e33bdc361a5432e30f6fa274cffb1d3b6f1c7942.PNG" width="673" height="424"><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/f/fba996db12ff0ddda978f57ff5ee2b54a18a27d8.PNG" width="673" height="424"></p>
<p>#<span class="hashtag">#Run</span> Quassel Client and connect to AMI’s IP/hostname on port 4242<br>
<strong>Note: At this point, if you’re on linux, you’ll need to sudo apt-get quassel-client</strong></p>
<p>#<span class="hashtag">#Add</span> Core to Quassel Client<br>
Run Quasel Client. Choose “Add Core”.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/7/7a1550a7b108611a9859daa85f124266532118f1.PNG" width="690" height="424"></p>
<p>#<span class="hashtag">#Fill</span> in details for Core server<br>
Give the core an “Account Name” which is just seen from the client when choosing a core.<br>
Enter the IP/hostname of the core, which can be the IP or the public DNS provided by amazon.<br>
Enter “4242” as the port to connect to.<br>
Enter whatever username and password you want. It creates this account as the super user account for the quassel core.<br>
Enter any proxy information you may have for whatever reason.<br>
Click Ok and connect to Quassel Core.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/e/e3038288557ccaf2d0256f854f455933696ff6e3.PNG" width="394" height="493"></p>
<p>#<span class="hashtag">#Follow</span> the Quassel-Core setup Wizard<br>
Click Next.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/1/14c7e4f17ae201a84122e71d78875ca1b34fcfb8.PNG" width="690" height="423"></p>
<p>Choose SQLiteDB as database type, unless you’re configuring a core to have many, many users (which some people do), in which case you’d want a postgres DB.<br>
<strong>Note: if you choose postgres you’ll have to apt-get install that onto the ubuntu server and/or configure it if it’s already installed.</strong><br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/d/ddac4dbb8dc77f635e0ec30ecba16b7ad39165b8.PNG" width="516" height="398"></p>
<p>At this point, you choose “Connect to Core”, and your Quassel Client connects to your Quassel Core. From here you need to add your Quassel Identity containing your IRC nickname(s) and IRC server info of whatever server(s) you connect to with those nicknames.</p>
<p>I wrote a <a href="https://0x00sec.org/t/join-0x00sec-on-irc-how-to-irc-with-quassel/997">tutorial a few days ago on how to connect to the 0x00sec IRC with Quassel</a> just using the quassel stand-alone program, not the client… however once you connect to the core with the client, the process is identical, so for the rest of this tutorial, jump on over there and do that. See you on the other side!</p>
            <p><small>2 posts - 1 participant</small></p>
            <p><a href="https://0x00sec.org/t/setting-up-quassel-core-on-amazon-ec2-server/1047">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/setting-up-quassel-core-on-amazon-ec2-server/1047</link>
          <pubDate>Sun, 04 Sep 2016 02:36:04 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1047</guid>
          <source url="https://0x00sec.org/t/setting-up-quassel-core-on-amazon-ec2-server/1047.rss">Setting up Quassel Core on Amazon EC2 server</source>
        </item>
        <item>
          <title>About the Anonymity category</title>
          <dc:creator><![CDATA[IoTh1nkN0t]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>(Replace this first paragraph with a brief description of your new category. This guidance will appear in the category selection area, so try to keep it below 200 characters. <strong>Until you edit this description or create topics, this category won’t appear on the categories page.</strong>)</p>
<p>Use the following paragraphs for a longer description, or to establish category guidelines or rules:</p>
<ul>
<li>
<p>Why should people use this category? What is it for?</p>
</li>
<li>
<p>How exactly is this different than the other categories we already have?</p>
</li>
<li>
<p>What should topics in this category generally contain?</p>
</li>
<li>
<p>Do we need this category? Can we merge with another category, or subcategory?</p>
</li>
</ul>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://0x00sec.org/t/about-the-anonymity-category/1021">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/about-the-anonymity-category/1021</link>
          <pubDate>Wed, 31 Aug 2016 17:07:07 +0000</pubDate>
          <discourse:topicPinned>Yes</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-1021</guid>
          <source url="https://0x00sec.org/t/about-the-anonymity-category/1021.rss">About the Anonymity category</source>
        </item>
        <item>
          <title>Join ##0x00sec on IRC! How-to IRC with Quassel</title>
          <dc:creator><![CDATA[123loaded]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p><strong>EDIT, For up-to-date information on connecting to IRC: <a href="https://0x00sec.org/faq#irc">https://0x00sec.org/faq#irc</a></strong></p>
<p>Not sure if this is where I should post this, but couldn’t really pick an appropriate sub category of how-to and figured that this was best to be seen by every 0x00sec member as soon as they join so they can be part of the non-stop discussions, how-to’s, philosophical debates, and the random antics and banter that naturally comes along with having a massive non-stop sausage party with all the other hackers you’ve come to love and respect!</p>
<h2>What is IRC?</h2>
<p>Internet Relay Chat Protocol (IRCP) is an application layer protocol that facilitates communication in the form of text. The chat process works on a client/server networking model. IRC clients are computer programs that a user can install on their system. These clients communicate with chat servers to transfer messages to other IRC clients. IRC is mainly designed for group communication in discussion forums referred to as channels, but also allows one-on-one communication via private messages (PMs), chat and data transfer, and file sharing.</p>
<h2>Why use IRC</h2>
<p>On top of being an amazing place to chat with everyone and ask/answer questions etc, etc… IRC is also something most hackers will need to become intimately familiar with if they plan on playing with any older botnet malware (though still widely used and in some instances still modern), as lots of botnets use IRC servers/channels as their C&amp;C (Command and Control) servers which tell them what to do.</p>
<h2>Which IRC client should I use to connect to 0x00sec’s IRC channel?</h2>
<p>Just like there are many browsers to surf the web, there are many IRC clients to choose from out there, and I encourage you to do some research of your own and see which one suits you best. Off the top of my head, some IRC clients and their benefits/pitfalls are:<br>
<a href="http://mirc.com/" rel="noopener nofollow ugc">mIRC</a> - Probably the easiest IRC client to use besides web-based IRC clients. Windows only and constantly bugs you to purchase it after first 30 days as a “trial”.<br>
<a href="http://xchat.org/" rel="noopener nofollow ugc">xChat</a> - Also very easy to use, installed on some *nix distros out of the box. Lots of support for plug-ins for integrating with other chat programs.<br>
<a href="https://mibbit.com/" rel="noopener nofollow ugc">Mibbit</a> - Website which proxies traffic to/from IRC channels. Very, very minimal/bare functionality with little to no integrity/authenticity… would only use short-term or in an emergency.<br>
<a href="https://irssi.org/" rel="noopener nofollow ugc">irrsi</a> - Command line interface/terminal chat client. Extremely customizable and makes scripting IRC tasks easier than any other client ever could. Started on *nix systems thus very *nix friendly.<br>
<a href="http://quassel-irc.org/" rel="noopener nofollow ugc">Quassel</a> - Client/Server architecture allows connections from anywhere, increases anonymity, helps bypass workplace firewalls, and ensures you never miss anything said!!</p>
<p>I am going to be using that last one, <a href="http://quassel-irc.org/" rel="noopener nofollow ugc">Quassel</a>.</p>
<p>For all the more senior/experienced 0x00sec members reading this, <a href="https://0x00sec.org/t/setting-up-quassel-core-on-amazon-ec2-server/1047">I’ve written a tutorial on how to setup a Quassel Core server on an Amazon EC2 instance of Ubuntu 14.04 LTS</a>. Doing this means that you are always connected to every server and channel you want to be, and when you use the Quassel Client to connect to the Quassel Core, it pulls all the backlogs since the last time it connected to the core, so you never miss a moment of IRC glory. This also gives you an added layer of anonymity, as you connect to everything as ircNick@amazon-aws-ec2-adf89fsdf834-east/west and the IP from which your Quassel Client is connected is never revealed. Finally, you can customize the port which the Core will listen on, which has the added benefit of making it a bit easier to bypass WAFs/IPSes/IDSes that likely have common IRC ports (6667, 6669, 7000, 9999, etc) blocked entirely.</p>
<p>For our beginners though, Quassel offers a stand-alone client which works just like any other IRC client, and that’s what we’re going to get you up and running on.</p>
<h2>Installing Quassel on Linux or Windows</h2>
<p>Go ahead and download and install <a href="http://quassel-irc.org/pub/quassel-x86-setup-0.12.4.exe" rel="noopener nofollow ugc">Quassel 0.12.4</a> Windows Installer if you’re on a Windows platform.<br>
For my linux users, quassel is in most *nix repositories, so just go ahead and do</p>
<blockquote>
<p>root@debain:~# sudo apt-cache search quassel</p>
</blockquote>
<p>and verify the name of the quassel archive that is labeled as a ‘monolithic client’ which includes ‘core+client’ as one program. On debain it’s just quassel, so just apt-get install quassel quick.</p>
<p>#<span class="hashtag">#Run</span> and configure Networks and Identities<br>
Once installed, go ahead and start Quassel. On linux just type “quassel” in a terminal (bonus points if you put a space and ‘&amp;’ after it though, which frees your terminal back up so it’s not now locked to a GUI application). In windows, find and run Quassel as well, but make sure not to run Quassel-Client or Quassel-Core, they all have the same icon. Once up and running, it should look like this, and there shouldn’t be any more differences between Windows or Linux versions.<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/0630b06849a67a199adf5d529c7aab9642b3ccfa.PNG" width="690" height="445"></p>
<p>From the context menu at the very top select “Settings” and choose “Configure Quassel…”<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/a/a264443789a1bc9f437ee5b7f9212b052b3ac7ad.png" width="337" height="168"></p>
<p>On the left hand tree, under “IRC” choose “Identity” and go ahead and all several nicknames/aliases that you want to use as your handle in IRC. Use the arrows on the right to order them from highest to lowest preference, with highest being at the top. You will only ever connect as one of these handles… but sometimes if you disconnect, you may reconnect faster than the IRC server has registered you’ve left, and your past self is still connected and using your primary handle… in this case Quassel would connect with your secondary handle. This is also called “Ghosting”. In this example you just ghosted yourself on accident… but unless your Nickname is registered, anyone can pretend to be you by simply changing their nickname to yours… More on that later.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/5/50fb070fbb55c6cce23cd8ddb97dfaaa3b7eaf78.PNG" width="690" height="394"></p>
<p>In the same window, at the top, go ahead and rename the overall Identity you’ve created from something other than the name that Quassel has set - “Default Identity”.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/0/09204cd1218f50bd2dae018b9c6d6f6a0ba3f31f.PNG" width="524" height="271"></p>
<p>Now in the tree on the left, right below “Identities” choose “Networks” and add a new IRC server/network. Once you’ve clicked “Networks” click “Add”, and you can choose “Freenode” from the list of preset IRC servers, which fills out the server name and port for you.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/5/5fdcbaa47a3c7d118dbd5f9a2e80164eff16ab9f.png" width="690" height="314"></p>
<p>Unfortunately, this information isn’t correct… or at least it kept refusing to let me connect with the default hostname and port provided by quassel. Go ahead and edit the information accordingly after selecting it from the dropdown list. For me, this was <strong><a href="http://irc.freenode.net" rel="noopener nofollow ugc">irc.freenode.net</a></strong> as the host (server address here), and <strong>6667</strong> as the port.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/a/ab2637232002d3b784cc3f844912453fa74187fb.png" width="400" height="384"></p>
<p>Go ahead and click “Connect” -&gt; “Freenode”. Or “Connect to all” since that’s all there is…<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/2/281b679727fc0c6c39cc0af66406913db792b30d.png" width="624" height="332"></p>
<p>#<span class="hashtag">#Register</span> and Verify your nickname on Freenode’s IRC servers<br>
Now you need to register your nickname<a href="https://freenode.net/kb/answer/sasl" rel="noopener nofollow ugc">https://freenode.net/kb/answer/sasl</a>. Registering your nickname is how you can prove that you are You, and somebody didn’t just change their name to your name… in order to do this, we interact with the NickServ bot(?)… w/e… go ahead and type "/msg NickServ register  "<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/c/c8d00cbbe24b0b355b3236739a88da7212d1aaa8.PNG" width="647" height="411"></p>
<p>Ignore me just butcheringTF out of the process every single line above the one I’m about to hit Enter on lol… but alas, it did work. Well, technically right there it didn’t… It didn’t like my mailinator email for this tutorial, so I gave it a legit one that ya’ll don’t get to see. And then it will tell you it has sent you an email. Go check your email, and it will have a command with a special token that it wants you to send back to NickServ in order to verify your email and finish registering your nickname.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/f/f37ed51d8b9d24495137833333addf4fa3c1058e.png" width="644" height="211"></p>
<p>Once you’ve verified your email and nickname, now you can “/msg nickserv identify yourpassword”<br>
and you will be identified as being the rightful owner of the nickname you’ve chosen (note: this gives you an (i) or (+i) next to your name in the IRC channel to verify your authenticity.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/c/ce8fd744cd894825d576853c647d6bbb8a6683f7.PNG" width="615" height="140"></p>
<p>#<span class="hashtag">#Join</span> 0x00sec IRC channel and say hello!<br>
Now you can type “/join #<span class="hashtag">#00x0sec</span>” or “/j #<a class="hashtag" href="https://0x00sec.org/tag/0x00sec">#<span>0x00sec</span></a>” in the very bottom middle window and join our IRC channel!!<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/2/2c0499c22dd204bfe7e77a12ae0323c50ba9272d.PNG" width="299" height="30"></p>
<p>#<span class="hashtag">#Setup</span> automatic channel joining per-server<br>
Finally, go back into “Settings” -&gt; “Configure Quassel…” and choose “Networks” under “IRC” on the left. Then notice the 5 tabs in the “Network Details” area and click on the “Commands” tab. This will execute whatever commands you tell it to immediately upon joining the <a href="http://irc.freenode.net" rel="noopener nofollow ugc">irc.freenode.net</a> server. Typically this is used to auto-join all the channels you want to connect to automatically, so go ahead and type “/j #<a class="hashtag" href="https://0x00sec.org/tag/0x00sec">#<span>0x00sec</span></a>” in the white box under the “command” tab.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/5/507e980e7d4c97955a7e8b433e1c02811e27d6dd.png" width="531" height="298"></p>
<p>#<span class="hashtag">#Setup</span> automated identifying<br>
And lastly, click on the “Auto Identify” tab and fill out your information to automatically identify yourself each time that you connect to Freenode rather than having to type everything out each time. Having to type-out the command to identify yourself every time is risky because if you mistype “/msg” and are in a public channel already, you will type all that information out as a message to everyone in the channel, and everyone will know your password, and you’ll have to make a new nickname and act like you ran away and are a new person, cause we’d never let you live that down… just like that time you pissed your pants in 5th grade… People Don’t Forget!!! (Superbad ftw).</p>
<p>Ok, I know I said I was doing these tutorials in tandem, but I can’t… Will edit this later tonight or tomorrow with links to other one and post it… I’ve already got all the screenshots n shit, just need to whip it together. Oh, and Amazon EC2 AMIs are Free!! Well, there’s a free tier grade assuming you don’t go over a certain amount of bandwidth, which is ideal for just running an IRC server.</p>
<p>Note: conversely, yes it would be just about just as beneficial to just have the AWS EC2 AMI a machine that you can just ssh tunnel your traffic through as a proxy for anonymity, or have it itself always running like irssi to always have back-logs, but I prefer Quassel. It’s pretty boss.</p>
            <p><small>11 posts - 7 participants</small></p>
            <p><a href="https://0x00sec.org/t/join-0x00sec-on-irc-how-to-irc-with-quassel/997">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/join-0x00sec-on-irc-how-to-irc-with-quassel/997</link>
          <pubDate>Tue, 30 Aug 2016 21:08:53 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-997</guid>
          <source url="https://0x00sec.org/t/join-0x00sec-on-irc-how-to-irc-with-quassel/997.rss">Join ##0x00sec on IRC! How-to IRC with Quassel</source>
        </item>
        <item>
          <title>Anonymity: L2TP Introduction</title>
          <dc:creator><![CDATA[Valentine]]></dc:creator>
          <category>Anonymity</category>
          <description><![CDATA[
            <p>LT2P: <strong>"In computer networking, Layer 2 Tunneling Protocol (L2TP) is a tunneling protocol used to support virtual private networks (VPNs) or as part of the delivery of services by ISPs. It does not provide any encryption or confidentiality by itself. Rather, it relies on an encryption protocol that it passes within the tunnel to provide privacy.[1]"</strong></p>
<p>( <a href="https://en.wikipedia.org/wiki/Layer_2_Tunneling_Protocol" rel="noopener nofollow ugc">https://en.wikipedia.org/wiki/Layer_2_Tunneling_Protocol</a> )</p>
<p>This is a one shot for this article. I had to learn something new for a change, if I write something that’s just wrong please tell me down below. I claim no responsibility if this information is used for malicious purposes.</p>
<p>Now with that outta the way, LT2P is a tunneling protocol used a lot with VPNs, but don’t rely on LT2P alone to keep anonymity, as this sentence(s) states:</p>
<p>“L2TP does not provide confidentiality or strong authentication by itself. IPsec is often used to secure L2TP packets by providing confidentiality, authentication and integrity.”</p>
<p>How L2TP works was a bit trivial for me to understand, but L2TP “waits” for new “tunnels”, but once established the traffic is then bidirectional, functioning in two directions. The packets are categorized as <strong>control packets</strong> or <strong>data packets</strong>.  L2TP provides reliability features for the control packets, but no reliability for data packets. If one wants to have reliability for data packets then they must establish it themselves. There are several tunneling models once you establish a tunnel, they’re:</p>
<ul>
<li>voluntary tunnel</li>
<li>compulsory tunnel — incoming call</li>
<li>compulsory tunnel — remote dial</li>
<li>L2TP multihop connection</li>
</ul>
<p>The way the packet exchange is done is one peer requests the other peer to assign a specific tunnel and session id through these control packets. Then using this tunnel and session id, data packets are exchanged with the compressed PPP frames as payload.</p>
<p>The image below shows a diagram for establishing a tunnel and session in voluntary tunnel method:</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/f613ae4c37445e2bd086552b3f143ebe45fa5900.PNG" width="500" height="500"></p>
<p>Earlier I explained (wikipedia did) that alone L2TP isn’t encrypted by itself, but IPsec works hand with hand with L2TP to encrypt the traffic or tunnel. The steps to establish a L2TP/IPsec VPN are as follows:</p>
<ol>
<li>
<p>Negotiation of IPsec security association (SA), typically through Internet key exchange (IKE). This is carried out over UDP port 500, and commonly uses either a shared password (so-called “pre-shared keys”), public keys, or X.509 certificates on both ends, although other keying methods exist.</p>
</li>
<li>
<p>Establishment of Encapsulating Security Payload (ESP) communication in transport mode. The IP protocol number for ESP is 50 (compare TCP’s 6 and UDP’s 17). At this point, a secure channel has been established, but no tunneling is taking place.</p>
</li>
<li>
<p>Negotiation and establishment of L2TP tunnel between the SA endpoints. The actual negotiation of parameters takes place over the SA’s secure channel, within the IPsec encryption. L2TP uses UDP port 1701.</p>
</li>
</ol>
<p>Once established L2TP packets are encapsulated via IPsec. A more detailed description:</p>
<p>“When the process is complete, L2TP packets between the endpoints are encapsulated by IPsec. Since the L2TP packet itself is wrapped and hidden within the IPsec packet, no information about the internal private network can be garnered from the encrypted packet. Also, it is not necessary to open UDP port 1701 on firewalls between the endpoints, since the inner packets are not acted upon until after IPsec data has been decrypted and stripped, which only takes place at the endpoints.”</p>
<p>( <a href="https://en.wikipedia.org/wiki/Layer_2_Tunneling_Protocol" rel="noopener nofollow ugc">https://en.wikipedia.org/wiki/Layer_2_Tunneling_Protocol</a> )</p>
<p>And that’s that. I hope I explained accurately. This was a bit boring to research, but it was interesting. That much I can say. I’m still doing research on L2TP and hopefully in the near future I could write a article on how to establish my own L2TP tunnel via C or C++, unless someone else does it before me.</p>
            <p><small>10 posts - 4 participants</small></p>
            <p><a href="https://0x00sec.org/t/anonymity-l2tp-introduction/740">Read full topic</a></p>
          ]]></description>
          <link>https://0x00sec.org/t/anonymity-l2tp-introduction/740</link>
          <pubDate>Fri, 15 Jul 2016 15:46:32 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">0x00sec.org-topic-740</guid>
          <source url="https://0x00sec.org/t/anonymity-l2tp-introduction/740.rss">Anonymity: L2TP Introduction</source>
        </item>
  </channel>
</rss>
