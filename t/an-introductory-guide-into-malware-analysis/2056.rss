<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>An Introductory Guide Into Malware Analysis</title>
    <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056</link>
    <description>Aye p33ps! Seeing as WannaCry took the world by storm recently, I thought that it&#39;s probably a good time to introduce the world of malware analysis to this forum. In this post, I will write about how you guys can join in on the mayhem and play with some fire (and hopefully not get burnt in the process). Do note that this is **my** take on this and it may not actually be correct or optimal, it is something taken from my own experience. You can most probably find many other guides on malware analysis on the interwebz but I will put this here because it&#39;s convenient (and some people are lazy to actually do the research themselves), and @oaktree and @pry0cc love it when new content is released here. The focus of this &lt;s&gt;guide&lt;/s&gt; general directional pointer is specifically targeted towards the Windows platform.

**Disclaimer**: Again, I will say that this is purely **my** view on this and if you have a problem with that, click away now. If there are any errors in this thread, please notify me and I will fix it ASAP. 

----------

### Prerequisites

For those who are keen to get into this area, it&#39;s probably a good idea to have the following:
```makefile
Must be able to read a lot of books or other texts
Must have a thirst for knowledge
Must be able to problem solve
Self-motivation
Persistence
Courageousness
Patience
```

----------

# Where to Start?

[quote]
The journey of a thousand miles begins with one step.
[/quote]

You may have noticed that I did not list any technical skills under the prerequisite list and that&#39;s because these can be learned. What&#39;s more important in the general field of reverse engineering - and I **cannot** stress this enough - is developing or having the appropriate _mindset_ and without this, no matter how technically competent you are, at some stage you will most likely _never_ be able to approach a task at hand as effectively. Keep in mind that in this current age, there is **nothing** that cannot be reverse engineered [citation needed] and there is **nothing** that can restrain you from doing so - unless, of course, you were doing something illegal and are actually physically inhibited. Mind over matter. If you believe your mind is tamed and has transcended, you may continue.

## Technical Skills and General Knowledge

Now that that&#39;s out of the way, we can move onto building up our skillset. This section is mainly for those who are relatively new to this.

### 1. Reverse Engineering

[quote]
Know thy self, know thy enemy. A thousand battles, a thousand victories.
[/quote]

When I say _reverse engineering_, I mean in a technical sense involving computing, not the general umbrella term that can apply to everything. For example, reverse engineering binaries will probably be the bulk of what malware analysts will do. A lot of decent malware are built using compiled languages which include C, C++, Pascal (Delphi). The result of these compiled languages are native binaries which contain machine code which is translatable to the assembly language. It is your goal to be able to read this assembly code and understand the functionalities of the binary.

### 2. Disassembly and Debugging

[quote]
Balk the enemy&#39;s power; force him to reveal himself.
[/quote]

Yeah, okay, this is a part of how2reverse. What you want to do is use disassembling to actually provide the assembly of the native binary so you can begin translating the code. This is a static method as opposed to debugging where you actually step through and look at what is being executed to see the interaction between the malware and the system. Knowing how to do both of this is absolutely essential because if you don&#39;t, well, you probably can&#39;t understand what&#39;s under the hood and what&#39;s exactly happening.

### 3. Forensics

[quote]
If you know the enemy and know yourself you need not fear the results of a hundred battles.
[/quote]

Knowing what other mysterious content that malware comes packed with is crucial in understanding what it can achieve. Being able to identify file types and analyse network traffic can help gain a bigger picture or give hints towards specific functionality such as file dropping/downloading or contacting C2s (or checking kill switches).

### 4. The Environment

[quote]
Next is the terrain. it can be distant or near. It can be difficult or easy. It can be open or narrow. It also determines your life or death.
[/quote]

As a malware analyst, it&#39;s definitely helpful to know how the underlying system of the platform which is being attacked - yes, you heard me right, you should understand the Windows OS! Knowing the Windows API and how it interacts with the environment (processes, memory, disk, registry, network) makes life very easy and can definitely hint at what suspicious things malware are up to.

### 5. The PE Format

[quote]
The supreme art of war is to subdue the enemy without fighting.
[/quote]

The Portable Executable (PE) format is the executable format for Windows much like ELF is for Linux. Though this is a combination of `Forensics` and `The Environment`, I believe it&#39;s important enough to be in its own section. Knowing how the PE file works and what details it offers can boost your knowledge of what tricks a sample of malware might have up its sleeve and can, at times, win you half the battle just by taking a peek.

### 6. Malware Functionality

[quote]
Thus, what is of supreme importance in war is to attack the enemy&#39;s strategy.
[/quote]

Even better, knowing how malware works makes them easier to analyse! It makes them predictable (by predict, I mean make assumptions and then **verify it**) and your life much, much more forgiving. &quot;_What does this chunk of assembly instructions mean?_&quot; Doesn&#39;t matter, found a string that looks like a registry key which ends with the subkeys `CurrentVersion\\Run` which means it&#39;s most likely setting up persistence. Done. It might even be... * _cough cough_ * ...advisable to research the methods employed by malware and then... * _nudge nudge_ * ... [spoiler]ethically[/spoiler] making your own... * _cough_ * ...em55am5lcg==... * _wink wink_ *.

----------

# Tools

You know what? I just won&#39;t put them here because to be honest, I can&#39;t spoonfeed y&#39;all everyday. Also, I&#39;m lazy. Better start working on your _Google-fu_!

----------

# General Analysis Techniques

[quote]
I hear, I know. I see, I remember. I do, I understand.
[/quote]

In most, if not all, phases of hacking - or _un-hacking_(?) in this case - we &lt;s&gt;usually&lt;/s&gt; should start out with reconnaissance. Here are some things you might do when performing an analysis.

### Strings Analysis

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/6/6a926cf3b0ee6a182139f65698a7dfc15131bb5b.JPG&quot; width=&quot;605&quot; height=&quot;409&quot;&gt;

Dig out as many strings as you can because there is a wealth of information just lying there in plain sight. Error messages, suspicious strings like URLs, registry keys, etc., file names, function names, base64-encoded strings, file signatures, EVERYTHING!

### Entropy

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/5/5f6a9b8ad75e2fd5b7dc274125c0ab48b7e3a5e7.JPG&quot; width=&quot;690&quot; height=&quot;372&quot;&gt;

Have the executable analysed and check if there are sections or resources with any high entropy values. If there are, it&#39;s probably compressed and/or encrypted!

### Resources

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/e/e8678e5abdfce8f67c6a77467d27119db1859427.JPG&quot; width=&quot;690&quot; height=&quot;395&quot;&gt;

Find something unusual in the PE file&#39;s resources? Extract it and analyse it!

### File Signatures

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/e/e9df4116e54b70bbb13be11ced056a2a2cfaee7d.JPG&quot; width=&quot;590&quot; height=&quot;499&quot;&gt;

Found weird data? Just throw it into a hex editor! Find a signature!

### DLL Imports / Exports

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/9/95744b97fdf87017b5b39c7cb3e3c96575aa319e.JPG&quot; width=&quot;641&quot; height=&quot;500&quot;&gt;

Check out what functions it uses! Maybe it&#39;s trying to contact a server? or even logging your keystrokes? Maybe it&#39;s a DLL and is providing functions for the main executable to use?

### Packed Malware / Data

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/0/0f419ec7b163b65d57a2f0a4bc0d661de825a36b.JPG&quot; width=&quot;656&quot; height=&quot;500&quot;&gt;

Let it execute under a debugger! Try to find its unpacking routine and where it ends, then breakpoint it there. Pull the damned thing straight out of memory! Show them who&#39;s boss!

### Disassembly

Pretty obvious one here, throw it in a disassembler and literally read what it does! From previous methods, back trace the instructions and figure out what it&#39;s doing or how it&#39;s doing something.

### Dynamic Analysis

Grab a hot beverage, detonate it (in a securely isolated environment), sit back and watch what it does! Record registry or file changes, networking activity, everything.

----------

# Resources

As a reverse engineer, it&#39;s ideal if you learn everything you lay your eyes on because you&#39;ll never know if you&#39;ll come across it some day.

### 0x00sec

* [Reverse engineering challenges section](https://0x00sec.org/c/reverse-engineering/challenges)
* @0x00pf&#39;s [Reverse Engineering 101](https://0x00sec.org/t/reverse-engineering-101/1233/7)
* @TheDoctor&#39;s  [C# Reversing - MSIL Patching](https://0x00sec.org/t/c-reversing-msil-patching-part-1/1209/5)
* @TheDoctor&#39;s [C# Reversing - Unpacking a Packer](https://0x00sec.org/t/c-reversing-unpacking-a-packer-part-2/1219/3)
* @TheDoctor&#39;s [C# Reversing - Unpacking a Packer ~ MegaDumper](https://0x00sec.org/t/c-reversing-unpacking-a-packer-megadumper-part-3/1227/1)
* [Malware section](https://0x00sec.org/c/malware)

### Books / PDFs

[spoiler]Message me privately for direct links.[/spoiler]

* Hacking: The Art of Exploitation by Jon Erickson (HIGHLY RECOMMENDED FOR BEGINNERS)
* Practical Malware Analysis - The Hands on Guide to Dissecting Malware, by Michael Sikorski and Andrew Honig
* Reversing - Secrets Of Reverse Engineering by Eldad Eilam
* Windows Internals by Mark Russinovich, David A. Solomon, Alex Ionescu
* Reverse Engineering for Beginners by Dennis Yurichev (HIGHLY RECOMMENDED FOR BEGINNERS)
* Malware Analysts Cookbook by Michael Hale Ligh, Steven Adair, Blake Hartstein, Matthew Richard

### Websites

* [Malware Unicorn - Reverse Engineering Malware 101](https://securedorg.github.io/RE101/)
* [Open Security Training](http://opensecuritytraining.info/Training.html)
* [theZoo - Repository of LIVE Malware](https://github.com/ytisf/theZoo)
* [crackmes.de](crackmes.de)
* HackForums (laugh all you want but there&#39;s actually _some_ decent content there if you look hard enough)
* [Rohitab forums](http://www.rohitab.com/discuss/) (malware development)
* [r/HowToHack](https://www.reddit.com/r/HowToHack/)
* [r/Hacking](https://www.reddit.com/r/hacking/)
* [r/Malware](https://www.reddit.com/r/Malware/)
* [r/ReverseEngineering](https://www.reddit.com/r/ReverseEngineering/)
* [HackThisSite Application missions](https://www.hackthissite.org/missions/application/) (mostly VB stuff here, some native binaries)
* Any other hacking forums
* [MSDN - Windows API Index](https://msdn.microsoft.com/en-us/library/windows/desktop/ff818516(v=vs.85).aspx)

### Other

* &lt;s&gt;Steal&lt;/s&gt; Learn from others
* Download some HF skid malware and reverse that

----------

# Conclusion

glhf lal</description>
    
    <lastBuildDate>Wed, 14 Jun 2017 12:01:38 +0000</lastBuildDate>
    <category>Malware</category>
    <atom:link href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/11</link>
        <pubDate>Sun, 21 Jan 2018 00:42:22 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-11</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[z3n]]></dc:creator>
        <description><![CDATA[
            <p>Thank You very much for this informative thread, I learned something new <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/10</link>
        <pubDate>Wed, 14 Jun 2017 12:01:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-10</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Personally, I’ve read minimal amounts of Windows Internals but if I ever happen to want to learn something specific I will try and find the chapters which explain it. It really depends on what kind of malware you’ll be dealing with so for example, ransomware doesn’t require an extremely in-depth knowledge of Windows to take apart but if you come across a kernel rootkit, you <em>will</em> have to know a lot more of the underlying system.</p>
<p>To to give a concrete example, I’ve (statically) taken apart WannaCry to a decent extent and understood how the overall program flow works from extracting and dropping its files to file encryption and finally to the point where it demands the ransom by myself without any need to reference other people’s analysis. What I currently know about Windows includes: memory management, the PE file format, the WinAPI, Windows’ command line and its utilities. There are more things which I would like to learn more about such as WMI, IPC, APC, and definitely the kernel but I’ve also other areas on which I am focussing which work in conjunction for malware analysis, e.g. reverse engineering.</p>
<p>As for resources, there aren’t much which I know of, most of what I’ve learned came from developing Windows applications (and malware) so learning how to read the WinAPI documentation from MSDN (I’ve linked above) and just Googling specific things I wanted to know about and then applying that knowledge.</p>
<p>tl;dr don’t have to read everything, depends on the malware you’re dealing with, focus on other skills as well such as RE and understanding how malware works, theory is good but practical experience is better.</p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/9</link>
        <pubDate>Wed, 14 Jun 2017 06:15:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-9</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[Malware_Info]]></dc:creator>
        <description><![CDATA[
            <p>Excellent resource! Any tutorials available for learning windows internals.I’m now working on windows internals part 1 to get into the nitty-gritty of operating system,prospective malware analyst has to do read windows internals part 1 and 2 completely or selected chapters?</p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/8</link>
        <pubDate>Wed, 14 Jun 2017 05:25:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-8</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[Black]]></dc:creator>
        <description><![CDATA[
            <p>Hi, <a class="mention" href="https://0x00sec.org/u/dtm">@dtm</a> thanks for your article.<br>
<a href="https://www.mzrst.com/" rel="nofollow noopener">PPEE - Professional PE Explorer</a> is also an interesting tool for pe analysis.</p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/7</link>
        <pubDate>Sat, 03 Jun 2017 16:47:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-7</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <p>Great overview  <a class="mention" href="https://0x00sec.org/u/dtm">@dtm</a> .<br>
Everything you need to know if you wanna dive into malware analysis in one post.<br>
Also the recommended books are worth reading. I didn’t finish some of them yet but they are already on my “to buy” list <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/6</link>
        <pubDate>Sat, 20 May 2017 08:27:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-6</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[anon79434934]]></dc:creator>
        <description><![CDATA[
            <p>Great resources for those starting out (like me). Let’s hope I am persistent enough to read all this because I’m a bad reader <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>-Phoenix750</p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/5</link>
        <pubDate>Fri, 19 May 2017 18:21:58 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-5</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>Malware Analysis, Reverse Engineering, Binary Exploitation, all quite technical and related-to-each-other fields.</p>
<p><a class="mention" href="https://0x00sec.org/u/dtm">@dtm</a> just proved to you that the problem isn’t the lack of resources, but the lack of resourcefulness.</p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/4</link>
        <pubDate>Fri, 19 May 2017 12:56:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-4</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Hey, our lecturer just recently taught us ZKP, what a coincidence! If you haven’t already, try looking up Prisoner’s Dilemma and then apply that concept to two strangers both infected with ransomware. <img src="https://0x00sec.org/images/emoji/twitter/imp.png?v=9" title=":imp:" class="emoji" alt=":imp:"></p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/3</link>
        <pubDate>Fri, 19 May 2017 11:40:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-3</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[johnt]]></dc:creator>
        <description><![CDATA[
            <p>Absolutely off topic comment but after landing on Open Security Training, I followed a few external links and ended up learning about Zero Knowledge proofs and other crazy things, so just wanted to say thanks for the knowledge journey and resources.</p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/2</link>
        <pubDate>Fri, 19 May 2017 11:38:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-2</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
      <item>
        <title>An Introductory Guide Into Malware Analysis</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Aye p33ps! Seeing as WannaCry took the world by storm recently, I thought that it’s probably a good time to introduce the world of malware analysis to this forum. In this post, I will write about how you guys can join in on the mayhem and play with some fire (and hopefully not get burnt in the process). Do note that this is <strong>my</strong> take on this and it may not actually be correct or optimal, it is something taken from my own experience. You can most probably find many other guides on malware analysis on the interwebz but I will put this here because it’s convenient (and some people are lazy to actually do the research themselves), and <a class="mention" href="https://0x00sec.org/u/oaktree">@oaktree</a> and <a class="mention" href="https://0x00sec.org/u/pry0cc">@pry0cc</a> love it when new content is released here. The focus of this <s>guide</s> general directional pointer is specifically targeted towards the Windows platform.</p>
<p><strong>Disclaimer</strong>: Again, I will say that this is purely <strong>my</strong> view on this and if you have a problem with that, click away now. If there are any errors in this thread, please notify me and I will fix it ASAP.</p>
<hr>
<h3>Prerequisites</h3>
<p>For those who are keen to get into this area, it’s probably a good idea to have the following:</p>
<pre><code class="lang-makefile">Must be able to read a lot of books or other texts
Must have a thirst for knowledge
Must be able to problem solve
Self-motivation
Persistence
Courageousness
Patience
</code></pre>
<hr>
<h1>Where to Start?</h1>
<aside class="quote no-group">
<blockquote>
<p>The journey of a thousand miles begins with one step.</p>
</blockquote>
</aside>
<p>You may have noticed that I did not list any technical skills under the prerequisite list and that’s because these can be learned. What’s more important in the general field of reverse engineering - and I <strong>cannot</strong> stress this enough - is developing or having the appropriate <em>mindset</em> and without this, no matter how technically competent you are, at some stage you will most likely <em>never</em> be able to approach a task at hand as effectively. Keep in mind that in this current age, there is <strong>nothing</strong> that cannot be reverse engineered [citation needed] and there is <strong>nothing</strong> that can restrain you from doing so - unless, of course, you were doing something illegal and are actually physically inhibited. Mind over matter. If you believe your mind is tamed and has transcended, you may continue.</p>
<h2>Technical Skills and General Knowledge</h2>
<p>Now that that’s out of the way, we can move onto building up our skillset. This section is mainly for those who are relatively new to this.</p>
<h3>1. Reverse Engineering</h3>
<aside class="quote no-group">
<blockquote>
<p>Know thy self, know thy enemy. A thousand battles, a thousand victories.</p>
</blockquote>
</aside>
<p>When I say <em>reverse engineering</em>, I mean in a technical sense involving computing, not the general umbrella term that can apply to everything. For example, reverse engineering binaries will probably be the bulk of what malware analysts will do. A lot of decent malware are built using compiled languages which include C, C++, Pascal (Delphi). The result of these compiled languages are native binaries which contain machine code which is translatable to the assembly language. It is your goal to be able to read this assembly code and understand the functionalities of the binary.</p>
<h3>2. Disassembly and Debugging</h3>
<aside class="quote no-group">
<blockquote>
<p>Balk the enemy’s power; force him to reveal himself.</p>
</blockquote>
</aside>
<p>Yeah, okay, this is a part of how2reverse. What you want to do is use disassembling to actually provide the assembly of the native binary so you can begin translating the code. This is a static method as opposed to debugging where you actually step through and look at what is being executed to see the interaction between the malware and the system. Knowing how to do both of this is absolutely essential because if you don’t, well, you probably can’t understand what’s under the hood and what’s exactly happening.</p>
<h3>3. Forensics</h3>
<aside class="quote no-group">
<blockquote>
<p>If you know the enemy and know yourself you need not fear the results of a hundred battles.</p>
</blockquote>
</aside>
<p>Knowing what other mysterious content that malware comes packed with is crucial in understanding what it can achieve. Being able to identify file types and analyse network traffic can help gain a bigger picture or give hints towards specific functionality such as file dropping/downloading or contacting C2s (or checking kill switches).</p>
<h3>4. The Environment</h3>
<aside class="quote no-group">
<blockquote>
<p>Next is the terrain. it can be distant or near. It can be difficult or easy. It can be open or narrow. It also determines your life or death.</p>
</blockquote>
</aside>
<p>As a malware analyst, it’s definitely helpful to know how the underlying system of the platform which is being attacked - yes, you heard me right, you should understand the Windows OS! Knowing the Windows API and how it interacts with the environment (processes, memory, disk, registry, network) makes life very easy and can definitely hint at what suspicious things malware are up to.</p>
<h3>5. The PE Format</h3>
<aside class="quote no-group">
<blockquote>
<p>The supreme art of war is to subdue the enemy without fighting.</p>
</blockquote>
</aside>
<p>The Portable Executable (PE) format is the executable format for Windows much like ELF is for Linux. Though this is a combination of <code>Forensics</code> and <code>The Environment</code>, I believe it’s important enough to be in its own section. Knowing how the PE file works and what details it offers can boost your knowledge of what tricks a sample of malware might have up its sleeve and can, at times, win you half the battle just by taking a peek.</p>
<h3>6. Malware Functionality</h3>
<aside class="quote no-group">
<blockquote>
<p>Thus, what is of supreme importance in war is to attack the enemy’s strategy.</p>
</blockquote>
</aside>
<p>Even better, knowing how malware works makes them easier to analyse! It makes them predictable (by predict, I mean make assumptions and then <strong>verify it</strong>) and your life much, much more forgiving. “<em>What does this chunk of assembly instructions mean?</em>” Doesn’t matter, found a string that looks like a registry key which ends with the subkeys <code>CurrentVersion\\Run</code> which means it’s most likely setting up persistence. Done. It might even be… * <em>cough cough</em> * …advisable to research the methods employed by malware and then… * <em>nudge nudge</em> * … <span class="spoiler"><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/1">spoiler</a></span> making your own… * <em>cough</em> * …em55am5lcg==… * <em>wink wink</em> *.</p>
<hr>
<h1>Tools</h1>
<p>You know what? I just won’t put them here because to be honest, I can’t spoonfeed y’all everyday. Also, I’m lazy. Better start working on your <em>Google-fu</em>!</p>
<hr>
<h1>General Analysis Techniques</h1>
<aside class="quote no-group">
<blockquote>
<p>I hear, I know. I see, I remember. I do, I understand.</p>
</blockquote>
</aside>
<p>In most, if not all, phases of hacking - or <em>un-hacking</em>(?) in this case - we <s>usually</s> should start out with reconnaissance. Here are some things you might do when performing an analysis.</p>
<h3>Strings Analysis</h3>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/6/6a926cf3b0ee6a182139f65698a7dfc15131bb5b.JPG" width="605" height="409"></p>
<p>Dig out as many strings as you can because there is a wealth of information just lying there in plain sight. Error messages, suspicious strings like URLs, registry keys, etc., file names, function names, base64-encoded strings, file signatures, EVERYTHING!</p>
<h3>Entropy</h3>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/5/5f6a9b8ad75e2fd5b7dc274125c0ab48b7e3a5e7.JPG" width="690" height="372"></p>
<p>Have the executable analysed and check if there are sections or resources with any high entropy values. If there are, it’s probably compressed and/or encrypted!</p>
<h3>Resources</h3>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/e/e8678e5abdfce8f67c6a77467d27119db1859427.JPG" width="690" height="395"></p>
<p>Find something unusual in the PE file’s resources? Extract it and analyse it!</p>
<h3>File Signatures</h3>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/e/e9df4116e54b70bbb13be11ced056a2a2cfaee7d.JPG" width="590" height="499"></p>
<p>Found weird data? Just throw it into a hex editor! Find a signature!</p>
<h3>DLL Imports / Exports</h3>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/9/95744b97fdf87017b5b39c7cb3e3c96575aa319e.JPG" width="641" height="500"></p>
<p>Check out what functions it uses! Maybe it’s trying to contact a server? or even logging your keystrokes? Maybe it’s a DLL and is providing functions for the main executable to use?</p>
<h3>Packed Malware / Data</h3>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/0/0f419ec7b163b65d57a2f0a4bc0d661de825a36b.JPG" width="656" height="500"></p>
<p>Let it execute under a debugger! Try to find its unpacking routine and where it ends, then breakpoint it there. Pull the damned thing straight out of memory! Show them who’s boss!</p>
<h3>Disassembly</h3>
<p>Pretty obvious one here, throw it in a disassembler and literally read what it does! From previous methods, back trace the instructions and figure out what it’s doing or how it’s doing something.</p>
<h3>Dynamic Analysis</h3>
<p>Grab a hot beverage, detonate it (in a securely isolated environment), sit back and watch what it does! Record registry or file changes, networking activity, everything.</p>
<hr>
<h1>Resources</h1>
<p>As a reverse engineer, it’s ideal if you learn everything you lay your eyes on because you’ll never know if you’ll come across it some day.</p>
<h3>0x00sec</h3>
<ul>
<li><a href="https://0x00sec.org/c/reverse-engineering/challenges">Reverse engineering challenges section</a></li>
<li>
<a class="mention" href="https://0x00sec.org/u/0x00pf">@0x00pf</a>’s <a href="https://0x00sec.org/t/reverse-engineering-101/1233/7">Reverse Engineering 101</a>
</li>
<li>
<a class="mention" href="https://0x00sec.org/u/thedoctor">@TheDoctor</a>’s  <a href="https://0x00sec.org/t/c-reversing-msil-patching-part-1/1209/5">C# Reversing - MSIL Patching</a>
</li>
<li>
<a class="mention" href="https://0x00sec.org/u/thedoctor">@TheDoctor</a>’s <a href="https://0x00sec.org/t/c-reversing-unpacking-a-packer-part-2/1219/3">C# Reversing - Unpacking a Packer</a>
</li>
<li>
<a class="mention" href="https://0x00sec.org/u/thedoctor">@TheDoctor</a>’s <a href="https://0x00sec.org/t/c-reversing-unpacking-a-packer-megadumper-part-3/1227/1">C# Reversing - Unpacking a Packer ~ MegaDumper</a>
</li>
<li><a href="https://0x00sec.org/c/malware">Malware section</a></li>
</ul>
<h3>Books / PDFs</h3>
<div class="spoiler"><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/1">spoiler</a></div>
<ul>
<li>Hacking: The Art of Exploitation by Jon Erickson (HIGHLY RECOMMENDED FOR BEGINNERS)</li>
<li>Practical Malware Analysis - The Hands on Guide to Dissecting Malware, by Michael Sikorski and Andrew Honig</li>
<li>Reversing - Secrets Of Reverse Engineering by Eldad Eilam</li>
<li>Windows Internals by Mark Russinovich, David A. Solomon, Alex Ionescu</li>
<li>Reverse Engineering for Beginners by Dennis Yurichev (HIGHLY RECOMMENDED FOR BEGINNERS)</li>
<li>Malware Analysts Cookbook by Michael Hale Ligh, Steven Adair, Blake Hartstein, Matthew Richard</li>
</ul>
<h3>Websites</h3>
<ul>
<li><a href="https://securedorg.github.io/RE101/">Malware Unicorn - Reverse Engineering Malware 101</a></li>
<li><a href="http://opensecuritytraining.info/Training.html">Open Security Training</a></li>
<li><a href="https://github.com/ytisf/theZoo">theZoo - Repository of LIVE Malware</a></li>
<li><a href="https://0x00sec.org">crackmes.de</a></li>
<li>HackForums (laugh all you want but there’s actually <em>some</em> decent content there if you look hard enough)</li>
<li>
<a href="http://www.rohitab.com/discuss/">Rohitab forums</a> (malware development)</li>
<li><a href="https://www.reddit.com/r/HowToHack/">r/HowToHack</a></li>
<li><a href="https://www.reddit.com/r/hacking/">r/Hacking</a></li>
<li><a href="https://www.reddit.com/r/Malware/">r/Malware</a></li>
<li><a href="https://www.reddit.com/r/ReverseEngineering/">r/ReverseEngineering</a></li>
<li>
<a href="https://www.hackthissite.org/missions/application/">HackThisSite Application missions</a> (mostly VB stuff here, some native binaries)</li>
<li>Any other hacking forums</li>
<li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ff818516(v=vs.85).aspx">MSDN - Windows API Index</a></li>
</ul>
<h3>Other</h3>
<ul>
<li>
<s>Steal</s> Learn from others</li>
<li>Download some HF skid malware and reverse that</li>
</ul>
<hr>
<h1>Conclusion</h1>
<p>glhf lal</p>
          <p><a href="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056/1</link>
        <pubDate>Fri, 19 May 2017 08:03:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2056-1</guid>
        <source url="https://0x00sec.org/t/an-introductory-guide-into-malware-analysis/2056.rss">An Introductory Guide Into Malware Analysis</source>
      </item>
  </channel>
</rss>
