<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The Ultimate Privilege Escalation Reference - [Wiki]</title>
    <link>https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788</link>
    <description>Hi 0x00ers!

I have noticed that a lot of us have begun participating more regularly in [HackTheBox](https://hackthebox.eu/) challenges, and so, a lot of us are rooting boxes more frequently. 

In the midst of this learning frenzy, I only thought it was right to make a Wiki for Privilege Escalation, for Linux, Windows and any other operating systems you can think of.

This should mimic something like https://0x00sec.org/t/enumeration-for-linux-privilege-escalation/1959/18, and should not contain every single escalation exploit known to man, but more a list of methods and ways to enumerate for privesc. I am going to start down below with some basic things, and if you&#39;re a member, you can edit this page and add your own methods! 

Remember as a community we&#39;re stronger than ever, and many hands make light work! So if you have something that you use frequently, throw it in! We are going to pin this topic so that everybody can keep an eye on it and work on this. 

If this turns out to be a success, we will make other Wiki&#39;s for things like reverse shells or command injection evasion techniques. 

# Wiki
---

## Linux

(Sourced from https://0x00sec.org/t/enumeration-for-linux-privilege-escalation/1959 for initial information, thank you @g0jirasan!)

### Get Your Bearings

First things first. Always get a good feel for the machine. Its always a good idea to figure out what version you&#39;re looking at:

```
cat /etc/issue
```
or
```
cat /etc/*-release
```

What is the kernel version? Are there known exploits for that version?

```
cat /proc/version
```
```
uname -a
```
```
rpm -q kernel
```

Where are you on the network? What connections are established? 

```
ifconfig -a
```
```
netstat -antup
```
```
iptables -L
```
```
arp -e
```

Check for accidental passwords typed after unsuccessful sudo
```
cat ~/.bash_history | grep -A5 sudo
```

Check for open `tmux` sessions (possibly logged into root shells)
```
tmux ls
```

Find writable files / dirs outside of your home directory
```
find / -writable -type f -o -writable -type d 2&gt;/dev/null | grep -Ev &quot;^(/proc|/home/user|/tmp)&quot;
```

Check home directories of other users for readable files:
```
find /home | grep -Ev &quot;^/home/user&quot;
```

Find files that were modified in the last 10min (useful to spot funky stuff going on)
```
find / -mmin -10 2&gt;/dev/null | grep -Ev &quot;^/proc&quot;
```

- Check mounts
- Grab banners for local ports (using `nc` or other methods)
- Read `crontab` job files and look for crappy backup scripts
- Read service configuration (Especially httpd)
- Scroll over `ps -ef` output and check for passwords passed as command-line arguments

### What is running?

There are numerous local privilege escalation exploits out there in the void. Are there any vulnerable applications or services running that have known exploits?

Which services are being run with root privileges?

```
ps -ef | grep root
```
 or 
```
ps aux | grep root
```

```
cat /etc/services
```

Any vulnerable applications?

```
ls -alh /usr/bin/
```
```
ls -alh /sbin/
```

Any files with SUID/SGID permissions?

```
find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null
```
or, for a faster search in &quot;bin&quot; directories
```
for i in `locate -r &quot;bin$&quot;`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2&gt;/dev/null; done
```

### Uploading and running exploit code

If there is a local privilege escalation exploit available, how will you upload and execute the exploit code on your target? 

What languages are supported on the machine?

```
find / -name &#39;language&#39;
```
ex: find / -name python*

Is GCC present?

```
find / -name gcc
```

How can you upload the exploit code? Use ```find``` to look for things like:

wget, nc, netcat, tftp, ftp, fetch etc.

If you&#39;re over ssh, you can use `scp`.

### Find out what programs are installed with:
```
for item in $(echo &quot;nmap nc perl python ruby gcc wget sudo curl&quot;); do which $item; done
```

### Where can you write and execute files?

You will need to find a place to compile and execute your exploit code

This will locate world writeable and world executable folders

```
find /\(-perm -o w -perm -o x\) -type d 2&gt;/dev/null
```

### Cracking password hashes

Can you view /etc/passwd and /etc/shadow ?

```
cat /etc/passwd
```
```
cat /etc/shadow
```

If you can, try to crack the hashes you find. You never know!

**_Limited Shell?_**

Give these a shot.

```
python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)
```
```
echo os.system(&#39;/bin/bash&#39;)
```
```
/usr/bin/script -qc /bin/bash /dev/null
```

**_The simplest things are often overlooked_**

If I am ever stuck getting root privileges, its 9 times out of 10 because I am overthinking it. Sometimes the answer is so simple that its easy to overlook it. If you&#39;re getting stuck, think back to square one and move forward slowly and pay attention to the details. Here are some of simple things that can be overlooked:

Is the account you are using a sudoer? If you have the password for the account, you may be able to use sudo. I have seen many people look over this. Are there other users that are sudoers?

```
cat /etc/sudoers
```
```
sudo -l
```

### Linux Enumeration Scripts

- Unix-Privesc-Check -  [Main Page](http://pentestmonkey.net/tools/audit/unix-privesc-check) - [Direct Download](http://pentestmonkey.net/tools/unix-privesc-check/unix-privesc-check-1.4.tar.gz)
- LinEnum.sh - [Main Page](https://github.com/rebootuser/LinEnum/blob/master/LinEnum.sh) - [Direct Download](https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh)
- linux-exploit-suggester-2.pl - https://github.com/jondonas/linux-exploit-suggester-2
- linux-soft-exploit-suggester.py - https://github.com/belane/linux-soft-exploit-suggester

### Windows Enumeration Scripts

- windows-exploit-suggester.py - https://github.com/GDSSecurity/Windows-Exploit-Suggester
- PowerUp - http://www.powershellempire.com/?page_id=378

## Windows

Unquoted Service Paths:

 Look for services that are being run as administrator by typing sc query in the command line. From there, you can look at their individual properties by typing sc qc SERVICENAME. Check out their properties, they should have something called a service path. If that path is inside quotes you&amp;rsquo;re out of luck (this the vulnerability is /unquoted/ service paths). For example, If VulnService has C:/Program Files/Vuln/bin/Vuln.exe, you can create your own Vuln.exe and but it between C:/ and C:/Program Files/Vuln/ it&amp;rsquo;ll get executed with the privileges of that service instead of the intended Vuln.exe. This is because if there are quotation marks then the service will only use the exact path specified, but otherwise it will search each directory for the executable as it works its way down.

// To be added - could somebody transfer some information from https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ ?
//This is also a great resource to add information from! https://sushant747.gitbooks.io/total-oscp-guide/privilege_escalation_windows.html

### Windows Releases - Security Bulletin

* WinServer 2016 
    - Description: Windows Kernel Mode Drivers
    - MS16-135  

* WinServer 2008, 2012, 7, 8, 10
    - Description: Secondary Logon Handle
    - MS16-032 
* WinServer 2008, 7, Vista 
    - Description: WebDAV
    - MS16-016 
* WinServer 2003, 2008, 2012, 7, 8
    - Description: Windows Kernel Mode Drivers
    - MS15-051 
* WinServer 2003, 2008, 2012, 7, 8 
    - Description: Win32k.sys
    - MS14-058 
* WinServer 2003, 2008, 2012, 7, 8 
    - Description: AFD Driver
    - MS14-040 
* WinServer 2003, XP  
    - Description: Windows Kernel
    - MS14-002
* WinServer 2003, 2008, 2012, 7, 8  
    - Description: Kernel Mode Driver  
    - MS13-005 
* WinServer 2008, 7  
    - Description: Task Scheduler  
    - MS10-092 
* WinServer 2003, 2008, 7, XP  
    - Description: KiTrap0D
    - MS10-015 
* WinServer 2003, XP 
    - Description: NDProxy  
    - MS14-002 
* WinServer 2003, 2008, 2012, 7, 8  
    - Description: Kernel Driver  
    - MS15-061 
* WinServer 2003, XP  
    - Description: AFD.sys  
    - MS11-080 
* WinServer 2003, XP  
    - Description: NDISTAPI
    - MS11-062 
* WinServer 2003, 2008, 2012, 7, 8 
    - Description: RPC
    - MS15-076 
* WinServer 2003, 2008, 2012, 7, 8  
    - Description: Hot Potato
    - MS16-075 
* WinServer 2003, 2008, 7, XP  
    - Description: Kernel Driver
    - MS15-010 
* WinServer 2003, 2008, 7, XP  
    - Description: AFD.sys
    - MS11-046 

### Windows - Unquoted Services

Find the paths:
```
C:\&gt; ﻿wmic service get name,displayname,pathname,startmode |findstr /i &quot;Auto&quot; |findstr /i /v &quot;C:\Windows\\&quot; |findstr /i /v &quot;&quot;&quot;
```
Identify &quot;Write&quot;-Access:
```
C:\&gt; ﻿icacls &quot;C:\Program Files\Some Folder\&quot;
```
Restart the service:
```
C:\&gt; ﻿sc stop [service name]
C:\&gt; sc start [service name]
```

### Unattended Installs
A _Unattend.xml_ file is left on Windows machines after Unattended installs if the system isn&#39;t cleaned properly after the procedure, the file contains all the configuration settings set in the installation process, including local account credentials such as the Administrator&#39;s. Credentials can also be stored in two other files: _sysprep.xml_ and _sysprep.inf_ and will be either in plain text or encoded in Base64:

```
&lt;UserAccounts&gt;
    &lt;LocalAccounts&gt;
        &lt;LocalAccount&gt;
            &lt;Password&gt;
                &lt;Value&gt;dGhpc1Bhc3N3b3JkQWludFNhZmVQYXNzd29yZA==&lt;/Value&gt;
                &lt;PlainText&gt;false&lt;/PlainText&gt;
            &lt;/Password&gt;
            &lt;Description&gt;Local Administrator&lt;/Description&gt;
            &lt;DisplayName&gt;Administrator&lt;/DisplayName&gt;
            &lt;Group&gt;Administrators&lt;/Group&gt;
            &lt;Name&gt;Administrator&lt;/Name&gt;
        &lt;/LocalAccount&gt;
    &lt;/LocalAccounts&gt;
&lt;/UserAccounts&gt;
```

Before the password is encoded in Base64 the string &quot;Password&quot; is appended to it, so be sure to remove it after decoding the string. Where to find these files:

```
C:\Windows\Panther\
C:\Windows\Panther\Unattend\
C:\Windows\System32\
C:\Windows\System32\sysprep\
```

### Group Policy Preferences (GPP) Files:
The SYSVOL folder in a Domain Controller contains a Groups.xml file with stored configuration policies for account management, some of these may contain passwords for Administrator accounts in encrypted form. GPP uses a static public key for encryption so decrypting these credentials is trivial. Example path as seen from a remote SMB share:

```
\my_host\policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\machine\preferences\groups\groups.xml
```
And its content:
```
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;Groups clsid=&quot;{3125E937-EB16-4b4c-9934-544FC6D24D26}&quot;&gt;
     &lt;User clsid=&quot;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&quot; name=&quot;Administrator&quot; image=&quot;2&quot; changed=&quot;2018-07-18 20:46:06&quot; uid=&quot;{EF57DA28-5F69-4530-A59E-AAB58578219D}&quot;&gt;
          &lt;Properties action=&quot;U&quot; newName=&quot;&quot; fullName=&quot;&quot; description=&quot;&quot; cpassword=&quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&quot; changeLogon=&quot;0&quot; noChange=&quot;1&quot; neverExpires=&quot;1&quot; acctDisabled=&quot;0&quot; userName=&quot;Administrator&quot;/&gt;
     &lt;/User&gt;
&lt;/Groups&gt;
```
Now it&#39;s time to decrypt the password found in the _cpassword_ field:
```
gpp-decrypt &lt;encrypted_string&gt;
```
If you have a meterpreter session running on the machine you can automatize the process with this module:
```
use post/windows/gather/credentials/gpp
```
Or use the [Get-GPPPassword](https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1) script from PowerSploit.</description>
    
    <lastBuildDate>Fri, 30 Nov 2018 22:18:50 +0000</lastBuildDate>
    <category>Wiki</category>
    <atom:link href="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The Ultimate Privilege Escalation Reference - [Wiki]</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/6</link>
        <pubDate>Wed, 26 Dec 2018 14:23:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9788-6</guid>
        <source url="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788.rss">The Ultimate Privilege Escalation Reference - [Wiki]</source>
      </item>
      <item>
        <title>The Ultimate Privilege Escalation Reference - [Wiki]</title>
        <dc:creator><![CDATA[zSec]]></dc:creator>
        <description><![CDATA[
            <p>Sometimes you might have a system where wmic is not available for you.<br>
In this case you can still lookup services manually:</p>
<p>List all services:</p>
<blockquote>
<p>sc query</p>
</blockquote>
<p>Lookup a specific service:</p>
<blockquote>
<p>sc qc SERVICE_NAME</p>
</blockquote>
<p>This will show you the details of a service and also the binary path where you can check if it is unquoted or not.</p>
          <p><a href="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/5</link>
        <pubDate>Fri, 30 Nov 2018 22:18:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9788-5</guid>
        <source url="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788.rss">The Ultimate Privilege Escalation Reference - [Wiki]</source>
      </item>
      <item>
        <title>The Ultimate Privilege Escalation Reference - [Wiki]</title>
        <dc:creator><![CDATA[jl3]]></dc:creator>
        <description><![CDATA[
            <p>Checking the version of the running processes are very useful as well.</p>
<pre><code class="lang-auto">rpm -q &lt;package&gt;

apt-cache policy &lt;package&gt;
</code></pre>
<p>accesschk.exe for windows is great:</p>
<pre><code class="lang-auto">accesschk.exe /accepteula -uwcqv "Authenticated Users" *
</code></pre>
          <p><a href="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/4</link>
        <pubDate>Tue, 27 Nov 2018 08:05:42 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9788-4</guid>
        <source url="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788.rss">The Ultimate Privilege Escalation Reference - [Wiki]</source>
      </item>
      <item>
        <title>The Ultimate Privilege Escalation Reference - [Wiki]</title>
        <dc:creator><![CDATA[AlexiBesto]]></dc:creator>
        <description><![CDATA[
            <p>Thank you very much, this is extremely comprehensive.</p>
          <p><a href="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/3</link>
        <pubDate>Tue, 27 Nov 2018 07:45:26 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9788-3</guid>
        <source url="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788.rss">The Ultimate Privilege Escalation Reference - [Wiki]</source>
      </item>
      <item>
        <title>The Ultimate Privilege Escalation Reference - [Wiki]</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/2</link>
        <pubDate>Mon, 26 Nov 2018 14:24:33 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9788-2</guid>
        <source url="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788.rss">The Ultimate Privilege Escalation Reference - [Wiki]</source>
      </item>
      <item>
        <title>The Ultimate Privilege Escalation Reference - [Wiki]</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Hi 0x00ers!</p>
<p>I have noticed that a lot of us have begun participating more regularly in <a href="https://hackthebox.eu/">HackTheBox</a> challenges, and so, a lot of us are rooting boxes more frequently.</p>
<p>In the midst of this learning frenzy, I only thought it was right to make a Wiki for Privilege Escalation, for Linux, Windows and any other operating systems you can think of.</p>
<p>This should mimic something like <a href="https://0x00sec.org/t/enumeration-for-linux-privilege-escalation/1959/18" class="inline-onebox">Enumeration for Linux Privilege Escalation</a>, and should not contain every single escalation exploit known to man, but more a list of methods and ways to enumerate for privesc. I am going to start down below with some basic things, and if you’re a member, you can edit this page and add your own methods!</p>
<p>Remember as a community we’re stronger than ever, and many hands make light work! So if you have something that you use frequently, throw it in! We are going to pin this topic so that everybody can keep an eye on it and work on this.</p>
<p>If this turns out to be a success, we will make other Wiki’s for things like reverse shells or command injection evasion techniques.</p>
<h1>Wiki</h1>
<hr>
<h2>Linux</h2>
<p>(Sourced from <a href="https://0x00sec.org/t/enumeration-for-linux-privilege-escalation/1959" class="inline-onebox">Enumeration for Linux Privilege Escalation</a> for initial information, thank you <a class="mention" href="https://0x00sec.org/u/g0jirasan">@g0jirasan</a>!)</p>
<h3>Get Your Bearings</h3>
<p>First things first. Always get a good feel for the machine. Its always a good idea to figure out what version you’re looking at:</p>
<pre><code class="lang-auto">cat /etc/issue
</code></pre>
<p>or</p>
<pre><code class="lang-auto">cat /etc/*-release
</code></pre>
<p>What is the kernel version? Are there known exploits for that version?</p>
<pre><code class="lang-auto">cat /proc/version
</code></pre>
<pre><code class="lang-auto">uname -a
</code></pre>
<pre><code class="lang-auto">rpm -q kernel
</code></pre>
<p>Where are you on the network? What connections are established?</p>
<pre><code class="lang-auto">ifconfig -a
</code></pre>
<pre><code class="lang-auto">netstat -antup
</code></pre>
<pre><code class="lang-auto">iptables -L
</code></pre>
<pre><code class="lang-auto">arp -e
</code></pre>
<p>Check for accidental passwords typed after unsuccessful sudo</p>
<pre><code class="lang-auto">cat ~/.bash_history | grep -A5 sudo
</code></pre>
<p>Check for open <code>tmux</code> sessions (possibly logged into root shells)</p>
<pre><code class="lang-auto">tmux ls
</code></pre>
<p>Find writable files / dirs outside of your home directory</p>
<pre><code class="lang-auto">find / -writable -type f -o -writable -type d 2&gt;/dev/null | grep -Ev "^(/proc|/home/user|/tmp)"
</code></pre>
<p>Check home directories of other users for readable files:</p>
<pre><code class="lang-auto">find /home | grep -Ev "^/home/user"
</code></pre>
<p>Find files that were modified in the last 10min (useful to spot funky stuff going on)</p>
<pre><code class="lang-auto">find / -mmin -10 2&gt;/dev/null | grep -Ev "^/proc"
</code></pre>
<ul>
<li>Check mounts</li>
<li>Grab banners for local ports (using <code>nc</code> or other methods)</li>
<li>Read <code>crontab</code> job files and look for crappy backup scripts</li>
<li>Read service configuration (Especially httpd)</li>
<li>Scroll over <code>ps -ef</code> output and check for passwords passed as command-line arguments</li>
</ul>
<h3>What is running?</h3>
<p>There are numerous local privilege escalation exploits out there in the void. Are there any vulnerable applications or services running that have known exploits?</p>
<p>Which services are being run with root privileges?</p>
<pre><code class="lang-auto">ps -ef | grep root
</code></pre>
<p>or</p>
<pre><code class="lang-auto">ps aux | grep root
</code></pre>
<pre><code class="lang-auto">cat /etc/services
</code></pre>
<p>Any vulnerable applications?</p>
<pre><code class="lang-auto">ls -alh /usr/bin/
</code></pre>
<pre><code class="lang-auto">ls -alh /sbin/
</code></pre>
<p>Any files with SUID/SGID permissions?</p>
<pre><code class="lang-auto">find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null
</code></pre>
<p>or, for a faster search in “bin” directories</p>
<pre><code class="lang-auto">for i in `locate -r "bin$"`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2&gt;/dev/null; done
</code></pre>
<h3>Uploading and running exploit code</h3>
<p>If there is a local privilege escalation exploit available, how will you upload and execute the exploit code on your target?</p>
<p>What languages are supported on the machine?</p>
<pre><code class="lang-auto">find / -name 'language'
</code></pre>
<p>ex: find / -name python*</p>
<p>Is GCC present?</p>
<pre><code class="lang-auto">find / -name gcc
</code></pre>
<p>How can you upload the exploit code? Use <code>find</code> to look for things like:</p>
<p>wget, nc, netcat, tftp, ftp, fetch etc.</p>
<p>If you’re over ssh, you can use <code>scp</code>.</p>
<h3>Find out what programs are installed with:</h3>
<pre><code class="lang-auto">for item in $(echo "nmap nc perl python ruby gcc wget sudo curl"); do which $item; done
</code></pre>
<h3>Where can you write and execute files?</h3>
<p>You will need to find a place to compile and execute your exploit code</p>
<p>This will locate world writeable and world executable folders</p>
<pre><code class="lang-auto">find /\(-perm -o w -perm -o x\) -type d 2&gt;/dev/null
</code></pre>
<h3>Cracking password hashes</h3>
<p>Can you view /etc/passwd and /etc/shadow ?</p>
<pre><code class="lang-auto">cat /etc/passwd
</code></pre>
<pre><code class="lang-auto">cat /etc/shadow
</code></pre>
<p>If you can, try to crack the hashes you find. You never know!</p>
<p><strong><em>Limited Shell?</em></strong></p>
<p>Give these a shot.</p>
<pre><code class="lang-auto">python -c 'import pty;pty.spawn("/bin/bash")
</code></pre>
<pre><code class="lang-auto">echo os.system('/bin/bash')
</code></pre>
<pre><code class="lang-auto">/usr/bin/script -qc /bin/bash /dev/null
</code></pre>
<p><strong><em>The simplest things are often overlooked</em></strong></p>
<p>If I am ever stuck getting root privileges, its 9 times out of 10 because I am overthinking it. Sometimes the answer is so simple that its easy to overlook it. If you’re getting stuck, think back to square one and move forward slowly and pay attention to the details. Here are some of simple things that can be overlooked:</p>
<p>Is the account you are using a sudoer? If you have the password for the account, you may be able to use sudo. I have seen many people look over this. Are there other users that are sudoers?</p>
<pre><code class="lang-auto">cat /etc/sudoers
</code></pre>
<pre><code class="lang-auto">sudo -l
</code></pre>
<h3>Linux Enumeration Scripts</h3>
<ul>
<li>Unix-Privesc-Check -  <a href="http://pentestmonkey.net/tools/audit/unix-privesc-check">Main Page</a> - <a href="http://pentestmonkey.net/tools/unix-privesc-check/unix-privesc-check-1.4.tar.gz">Direct Download</a>
</li>
<li>LinEnum.sh - <a href="https://github.com/rebootuser/LinEnum/blob/master/LinEnum.sh">Main Page</a> - <a href="https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh">Direct Download</a>
</li>
<li>linux-exploit-suggester-2.pl - <a href="https://github.com/jondonas/linux-exploit-suggester-2">https://github.com/jondonas/linux-exploit-suggester-2</a>
</li>
<li>linux-soft-exploit-suggester.py - <a href="https://github.com/belane/linux-soft-exploit-suggester">https://github.com/belane/linux-soft-exploit-suggester</a>
</li>
</ul>
<h3>Windows Enumeration Scripts</h3>
<ul>
<li>windows-exploit-suggester.py - <a href="https://github.com/GDSSecurity/Windows-Exploit-Suggester">https://github.com/GDSSecurity/Windows-Exploit-Suggester</a>
</li>
<li>PowerUp - <a href="http://www.powershellempire.com/?page_id=378">http://www.powershellempire.com/?page_id=378</a>
</li>
</ul>
<h2>Windows</h2>
<p>Unquoted Service Paths:</p>
<p>Look for services that are being run as administrator by typing sc query in the command line. From there, you can look at their individual properties by typing sc qc SERVICENAME. Check out their properties, they should have something called a service path. If that path is inside quotes you’re out of luck (this the vulnerability is /unquoted/ service paths). For example, If VulnService has C:/Program Files/Vuln/bin/Vuln.exe, you can create your own Vuln.exe and but it between C:/ and C:/Program Files/Vuln/ it’ll get executed with the privileges of that service instead of the intended Vuln.exe. This is because if there are quotation marks then the service will only use the exact path specified, but otherwise it will search each directory for the executable as it works its way down.</p>
<p>// To be added - could somebody transfer some information from <a href="https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/">https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/</a> ?<br>
//This is also a great resource to add information from! <a href="https://sushant747.gitbooks.io/total-oscp-guide/privilege_escalation_windows.html">https://sushant747.gitbooks.io/total-oscp-guide/privilege_escalation_windows.html</a></p>
<h3>Windows Releases - Security Bulletin</h3>
<ul>
<li>
<p>WinServer 2016</p>
<ul>
<li>Description: Windows Kernel Mode Drivers</li>
<li>MS16-135</li>
</ul>
</li>
<li>
<p>WinServer 2008, 2012, 7, 8, 10</p>
<ul>
<li>Description: Secondary Logon Handle</li>
<li>MS16-032</li>
</ul>
</li>
<li>
<p>WinServer 2008, 7, Vista</p>
<ul>
<li>Description: WebDAV</li>
<li>MS16-016</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 2012, 7, 8</p>
<ul>
<li>Description: Windows Kernel Mode Drivers</li>
<li>MS15-051</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 2012, 7, 8</p>
<ul>
<li>Description: Win32k.sys</li>
<li>MS14-058</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 2012, 7, 8</p>
<ul>
<li>Description: AFD Driver</li>
<li>MS14-040</li>
</ul>
</li>
<li>
<p>WinServer 2003, XP</p>
<ul>
<li>Description: Windows Kernel</li>
<li>MS14-002</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 2012, 7, 8</p>
<ul>
<li>Description: Kernel Mode Driver</li>
<li>MS13-005</li>
</ul>
</li>
<li>
<p>WinServer 2008, 7</p>
<ul>
<li>Description: Task Scheduler</li>
<li>MS10-092</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 7, XP</p>
<ul>
<li>Description: KiTrap0D</li>
<li>MS10-015</li>
</ul>
</li>
<li>
<p>WinServer 2003, XP</p>
<ul>
<li>Description: NDProxy</li>
<li>MS14-002</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 2012, 7, 8</p>
<ul>
<li>Description: Kernel Driver</li>
<li>MS15-061</li>
</ul>
</li>
<li>
<p>WinServer 2003, XP</p>
<ul>
<li>Description: AFD.sys</li>
<li>MS11-080</li>
</ul>
</li>
<li>
<p>WinServer 2003, XP</p>
<ul>
<li>Description: NDISTAPI</li>
<li>MS11-062</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 2012, 7, 8</p>
<ul>
<li>Description: RPC</li>
<li>MS15-076</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 2012, 7, 8</p>
<ul>
<li>Description: Hot Potato</li>
<li>MS16-075</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 7, XP</p>
<ul>
<li>Description: Kernel Driver</li>
<li>MS15-010</li>
</ul>
</li>
<li>
<p>WinServer 2003, 2008, 7, XP</p>
<ul>
<li>Description: AFD.sys</li>
<li>MS11-046</li>
</ul>
</li>
</ul>
<h3>Windows - Unquoted Services</h3>
<p>Find the paths:</p>
<pre><code class="lang-auto">C:\&gt; ﻿wmic service get name,displayname,pathname,startmode |findstr /i "Auto" |findstr /i /v "C:\Windows\\" |findstr /i /v """
</code></pre>
<p>Identify “Write”-Access:</p>
<pre><code class="lang-auto">C:\&gt; ﻿icacls "C:\Program Files\Some Folder\"
</code></pre>
<p>Restart the service:</p>
<pre><code class="lang-auto">C:\&gt; ﻿sc stop [service name]
C:\&gt; sc start [service name]
</code></pre>
<h3>Unattended Installs</h3>
<p>A <em>Unattend.xml</em> file is left on Windows machines after Unattended installs if the system isn’t cleaned properly after the procedure, the file contains all the configuration settings set in the installation process, including local account credentials such as the Administrator’s. Credentials can also be stored in two other files: <em>sysprep.xml</em> and <em>sysprep.inf</em> and will be either in plain text or encoded in Base64:</p>
<pre><code class="lang-auto">&lt;UserAccounts&gt;
    &lt;LocalAccounts&gt;
        &lt;LocalAccount&gt;
            &lt;Password&gt;
                &lt;Value&gt;dGhpc1Bhc3N3b3JkQWludFNhZmVQYXNzd29yZA==&lt;/Value&gt;
                &lt;PlainText&gt;false&lt;/PlainText&gt;
            &lt;/Password&gt;
            &lt;Description&gt;Local Administrator&lt;/Description&gt;
            &lt;DisplayName&gt;Administrator&lt;/DisplayName&gt;
            &lt;Group&gt;Administrators&lt;/Group&gt;
            &lt;Name&gt;Administrator&lt;/Name&gt;
        &lt;/LocalAccount&gt;
    &lt;/LocalAccounts&gt;
&lt;/UserAccounts&gt;
</code></pre>
<p>Before the password is encoded in Base64 the string “Password” is appended to it, so be sure to remove it after decoding the string. Where to find these files:</p>
<pre><code class="lang-auto">C:\Windows\Panther\
C:\Windows\Panther\Unattend\
C:\Windows\System32\
C:\Windows\System32\sysprep\
</code></pre>
<h3>Group Policy Preferences (GPP) Files:</h3>
<p>The SYSVOL folder in a Domain Controller contains a Groups.xml file with stored configuration policies for account management, some of these may contain passwords for Administrator accounts in encrypted form. GPP uses a static public key for encryption so decrypting these credentials is trivial. Example path as seen from a remote SMB share:</p>
<pre><code class="lang-auto">\my_host\policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\machine\preferences\groups\groups.xml
</code></pre>
<p>And its content:</p>
<pre><code class="lang-auto">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Groups clsid="{3125E937-EB16-4b4c-9934-544FC6D24D26}"&gt;
     &lt;User clsid="{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}" name="Administrator" image="2" changed="2018-07-18 20:46:06" uid="{EF57DA28-5F69-4530-A59E-AAB58578219D}"&gt;
          &lt;Properties action="U" newName="" fullName="" description="" cpassword="edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ" changeLogon="0" noChange="1" neverExpires="1" acctDisabled="0" userName="Administrator"/&gt;
     &lt;/User&gt;
&lt;/Groups&gt;
</code></pre>
<p>Now it’s time to decrypt the password found in the <em>cpassword</em> field:</p>
<pre><code class="lang-auto">gpp-decrypt &lt;encrypted_string&gt;
</code></pre>
<p>If you have a meterpreter session running on the machine you can automatize the process with this module:</p>
<pre><code class="lang-auto">use post/windows/gather/credentials/gpp
</code></pre>
<p>Or use the <a href="https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1">Get-GPPPassword</a> script from PowerSploit.</p>
          <p><a href="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788/1</link>
        <pubDate>Mon, 26 Nov 2018 14:23:47 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9788-1</guid>
        <source url="https://0x00sec.org/t/the-ultimate-privilege-escalation-reference-wiki/9788.rss">The Ultimate Privilege Escalation Reference - [Wiki]</source>
      </item>
  </channel>
</rss>
