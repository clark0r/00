<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Privilege Escalation</title>
    <link>https://0x00sec.org/t/privilege-escalation/22302</link>
    <description>dmcxblue.net

In today’s Episode of Red-Teaming we will talk about Privilege Escalation a valuable Technique when trying to gain higher privileges on a machine, we want to achieve this Goal because we want UNRESTRICTED access onto the machine we are targeting. In this part the APT is trying to gain higher privileges on the Machine

There have been various great talks and blogs about this part of Red-Teaming they are well documented, and so many incredible tools that can be used to achieve this Goal. I will work with a few well known tools. Some of these are written for our famous PowerShell, others in C# and then with Python.

**1.- Files**

Let’s not go too far, by experience or CTF’s sometimes the passwords are in Plain Sight no need to use fancy exploitation methods or Capture Hashes and none of that sort. Why not just search a file named **Passwords.xlsx.** Yes these famous files do exist, they can be on the machine, on a share or even right on the Desktop. And let’s not forget these can be Word Documents, Text Files, or anything that can hold passwords.

![](upload://s4oYfTlijlKSTWZ6ykFC50IKKbF.png)

But of course unless you have a Cheat Sheet with all these fancy commands to search for these files, why not use an already created awesome tool. That can search for these files in a fast manner and even faster if it’s an SSD.

**2.- Tools**

*Sauron Eye*

First awesome tool in our list in its Gihub Repo it is said:

SauronEye is a search tool built to aid red teams in finding files containing specific keywords.

**Features** :

* Search multiple (network) drives
* Search contents of files
* Search contents of Microsoft Office files (.doc, .docx, .xls, .xlsx)
* Find VBA macros in old 2003 .xls and .doc files
* Search multiple drives multi-threaded for increased performance
* Supports regular expressions in search keywords
* Compatible with Cobalt Strike’s execute-assembly

It’s also quite fast, can do 50k files, totaling 1,3 TB on a network drive in under a minute (with realistic file filters). Searches a C:\ (on a cheap SATA SSD) in about 15 seconds.

Let’s work with this tool we have our shell and we will need to upload the Binary onto the machine (Yes!! Poor Opsec, but it’s just a Demo).

![](upload://7rSuN8VbltN3A6ho9wheL2HVyHd.png)

Let’s search for these password files

![](upload://pDU3nNzDoxR5QMAKDoAy5Qi0DGM.gif)

Oh yes, in just seconds it crawled the entire C:\ directory and its sub-directories and managed to found plenty of files, one is our Password.txt file that I moved to the Documents folder, what and amazing Tool. With that password we can use tools such as CrackMapExec to capture shells as Administrators

*SharpUp*

Another amazing tool.

SharpUp is a C# port of various [PowerUp](https://github.com/PowerShellMafia/PowerSploit/blob/dev/Privesc/PowerUp.ps1) functionality. Currently, only the most common checks have been ported; no weaponize functions have yet been implemented.

This tool comes in an awesome package named GhostPack highly active and frequently updated to keep up with the .NET Framework incompatibilities.

The thought about this tool is that we can also use it’s PowerShell Brother in case .NET isn’t available or the proper version for it to run. If by any chance you downloaded the incorrect one but let’s focus on the C# one.

The syntax for this one is very simple:

```
Sharpup.exe audit
```

And it finds 2 methods to Privesc which with a little more research we can actually see that its very simple since our User is already an Admin but the Shell isn’t running with High Privileges

*Don’t forget to use the PowerShell version if you can’t get the C# to work*

¯\_(ツ)_/¯

![](upload://fOCZtql7VW6LKGrjSLCEFpE3SfR.png)

*Responder*

Aaaah the amazing tool for Active Directories and almost everything Windows. I won’t explain into detail about Responder since there is so much out there about this tool. But TL;DR is that Responder…… well Responds to LLLMNR, NBT-NS requests, by poisoning these requests when a user misspells or tries to access an non-existent Share responder will say “Yeah it’s Me!!”and with that it can Capture the NTLMv2 hashes.

Its very easy to use just have responder running on the local area network and wait for requests, Of Course recommended by the Creator a good Pentester always recons first using  “-A”  no need to respond to EVERY request just a few target machines, try to be as stealthy as you can.

[But were not trying to be stealthy here we want Admin!!! So let’s respond!!!]

![](upload://wA1gQqcRfXsa7DHynC5m6mUWXxH.png)

And just like that

![](upload://7WAmG3KVAJk4ePl9vwlYS0QBhrS.png)

From here it’s just cracking this hash to grab a ClearText password, or you can use NtlmRelay…

More info [here](https://en.hackndo.com/ntlm-relay/)

**3.- Exploitation**

Alright here is an interesting one and sometimes very difficult to work with, you Test and you Test , you are sure the exploit works in your Environment but when you use it live. Uh Oh the System Crashed, it didn’t work??!

Or just nothing happens. Even if this happens let’s imagine it all went fine!! Let me show the most current Example going on in the World right now on a Local privilege Escalation method.

*WesNg*

Another amazing tool I stumbled upon *Thank You Twitter.* The creator loved the Windows-Exploit-Suggester by GDS Security but unfortunately it hasn’t been updated since 2017 so taking matters into his own hands BOOM, WESNG was born and has been using the latest information for exploits. Its very easy to use, on your regular shell grab the sysinfo.exe information save it onto a txt file and run the script with file as a parameter.

![](upload://5UHnducTZvwR7eu6SJl0MK6jBRm.png)

Then we use the following syntax

```
wes.py SYSINFO.TXT
```

![](upload://1linCeA4wHCFLXfTTBrOiBaWj6E.png)

SMBGhost

Aaah the talk of the moment, [I think..] a new vulnerability that grants us SYSTEM access this is the most recent I can find and will show you how its being exploited. Newest Exploit and it looks very simple to attack.

![](upload://nJEtfZWi4bTK5iOdHQwWQGww7mN.gif)

But how do we search for this vulnerability?, well there are a few methods we can check it by using the SMBGhost Scanner script by ollypwn.

https://github.com/ollypwn/SMBGhost

Or we can search for the Patch and see if it was applied where you can find more info [here](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0796)

![](upload://kpX7oDeeq2D0eXO6zIrDt0BLm7g.png)

We can search with the PowerShell Cmdlet **Get-Hotfix**

![](upload://kcolHCi0ibIrliNtIU1DbOZRsq4.png)

Uh Oh not here.

As you noticed we seen various methods for gaining higher privileges we used Offensive Tool to do the recon and we also used in-house commands to check our environment as well to find vulnerable OS we did the easy thing in just searching for stored passwords in clear text if you been pentesting or just playing with CTF you will notice the phrase “Low hanging Fruit” And yeah, don’t break your head sometimes the answer is very simple (Believe me).

Happy Hacking and hope you love a little more Red- Team.</description>
    
    <lastBuildDate>Sun, 09 Aug 2020 22:35:04 +0000</lastBuildDate>
    <category>Red-Team</category>
    <atom:link href="https://0x00sec.org/t/privilege-escalation/22302.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Privilege Escalation</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/privilege-escalation/22302/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/privilege-escalation/22302/6</link>
        <pubDate>Tue, 17 Nov 2020 11:29:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-22302-6</guid>
        <source url="https://0x00sec.org/t/privilege-escalation/22302.rss">Privilege Escalation</source>
      </item>
      <item>
        <title>Privilege Escalation</title>
        <dc:creator><![CDATA[dmcxblue]]></dc:creator>
        <description><![CDATA[
            <p>Yes their are ways to probably exploit without detection, please be aware these techniques are meant for beginners I am not demonstrating how to be stealthy just techniques for red teaming. You may find various great references or tools for avoiding detection. And a second article probably in the future.</p>
          <p><a href="https://0x00sec.org/t/privilege-escalation/22302/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/privilege-escalation/22302/5</link>
        <pubDate>Sun, 09 Aug 2020 22:35:04 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-22302-5</guid>
        <source url="https://0x00sec.org/t/privilege-escalation/22302.rss">Privilege Escalation</source>
      </item>
      <item>
        <title>Privilege Escalation</title>
        <dc:creator><![CDATA[testcase]]></dc:creator>
        <description><![CDATA[
            <p>Great, but is there a way to exploit this without it being detected? Maybe a second article?</p>
          <p><a href="https://0x00sec.org/t/privilege-escalation/22302/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/privilege-escalation/22302/4</link>
        <pubDate>Thu, 06 Aug 2020 15:52:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-22302-4</guid>
        <source url="https://0x00sec.org/t/privilege-escalation/22302.rss">Privilege Escalation</source>
      </item>
      <item>
        <title>Privilege Escalation</title>
        <dc:creator><![CDATA[dmcxblue]]></dc:creator>
        <description><![CDATA[
            <p>Oh yes, absolutely please do have in mind these are basic and just beginner red team, nothing crazy advanced, running in memory using Impacket or working with a C2 techniques. Just entry level tools that people may find helpful to research more advanced techniques. Even using all the PowerSploit Tools is a great entry level to get a grasp for better techniques (Entry Level Red Team Of Course).</p>
          <p><a href="https://0x00sec.org/t/privilege-escalation/22302/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/privilege-escalation/22302/3</link>
        <pubDate>Thu, 23 Jul 2020 00:47:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-22302-3</guid>
        <source url="https://0x00sec.org/t/privilege-escalation/22302.rss">Privilege Escalation</source>
      </item>
      <item>
        <title>Privilege Escalation</title>
        <dc:creator><![CDATA[randomer]]></dc:creator>
        <description><![CDATA[
            <p>It’s a nice tool overview, but none of this tools or commands would be suitable in a Red Teaming context, since each of it would be easily detected by EDR <img src="https://0x00sec.org/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"> They are only usable in a regular pentest context.</p>
          <p><a href="https://0x00sec.org/t/privilege-escalation/22302/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/privilege-escalation/22302/2</link>
        <pubDate>Wed, 22 Jul 2020 17:02:34 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-22302-2</guid>
        <source url="https://0x00sec.org/t/privilege-escalation/22302.rss">Privilege Escalation</source>
      </item>
      <item>
        <title>Privilege Escalation</title>
        <dc:creator><![CDATA[dmcxblue]]></dc:creator>
        <description><![CDATA[
            <aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d36cc0e86b91ffb045078967592725343b2158d6.jpeg" class="site-icon" width="32" height="32">
      <a href="https://dmcxblue.net/" target="_blank" rel="noopener nofollow ugc">DMCXBLUE</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/6/6623899f9ff113725012267e1559f59940bc3f44.jpeg" class="thumbnail onebox-avatar" width="200" height="200">

<h3><a href="https://dmcxblue.net/" target="_blank" rel="noopener nofollow ugc">DMCXBLUE</a></h3>

<p>Red Teaming, Web Apps, General Pentesting and Thoughts</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>In today’s Episode of Red-Teaming we will talk about Privilege Escalation a valuable Technique when trying to gain higher privileges on a machine, we want to achieve this Goal because we want UNRESTRICTED access onto the machine we are targeting. In this part the APT is trying to gain higher privileges on the Machine</p>
<p>There have been various great talks and blogs about this part of Red-Teaming they are well documented, and so many incredible tools that can be used to achieve this Goal. I will work with a few well known tools. Some of these are written for our famous PowerShell, others in C# and then with Python.</p>
<p><strong>1.- Files</strong></p>
<p>Let’s not go too far, by experience or CTF’s sometimes the passwords are in Plain Sight no need to use fancy exploitation methods or Capture Hashes and none of that sort. Why not just search a file named <strong>Passwords.xlsx.</strong> Yes these famous files do exist, they can be on the machine, on a share or even right on the Desktop. And let’s not forget these can be Word Documents, Text Files, or anything that can hold passwords.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b.png" data-download-href="/uploads/short-url/s4oYfTlijlKSTWZ6ykFC50IKKbF.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b_2_690x355.png" alt="" data-base62-sha1="s4oYfTlijlKSTWZ6ykFC50IKKbF" width="690" height="355" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b_2_690x355.png, https://0x00sec.s3.amazonaws.com/original/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/c/c4bc47a2b92769410206f64eb53a814e4134e81b_2_10x10.png"></a></div><p></p>
<p>But of course unless you have a Cheat Sheet with all these fancy commands to search for these files, why not use an already created awesome tool. That can search for these files in a fast manner and even faster if it’s an SSD.</p>
<p><strong>2.- Tools</strong></p>
<p><em>Sauron Eye</em></p>
<p>First awesome tool in our list in its Gihub Repo it is said:</p>
<p>SauronEye is a search tool built to aid red teams in finding files containing specific keywords.</p>
<p><strong>Features</strong> :</p>
<ul>
<li>Search multiple (network) drives</li>
<li>Search contents of files</li>
<li>Search contents of Microsoft Office files (.doc, .docx, .xls, .xlsx)</li>
<li>Find VBA macros in old 2003 .xls and .doc files</li>
<li>Search multiple drives multi-threaded for increased performance</li>
<li>Supports regular expressions in search keywords</li>
<li>Compatible with Cobalt Strike’s execute-assembly</li>
</ul>
<p>It’s also quite fast, can do 50k files, totaling 1,3 TB on a network drive in under a minute (with realistic file filters). Searches a C:\ (on a cheap SATA SSD) in about 15 seconds.</p>
<p>Let’s work with this tool we have our shell and we will need to upload the Binary onto the machine (Yes!! Poor Opsec, but it’s just a Demo).</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/3/3435fcdc4e27e5c2bd673d7acb497918b264fe67.png" alt="" data-base62-sha1="7rSuN8VbltN3A6ho9wheL2HVyHd" width="628" height="302"></p>
<p>Let’s search for these password files</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8.gif" data-download-href="/uploads/short-url/pDU3nNzDoxR5QMAKDoAy5Qi0DGM.gif?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8_2_690x367.gif" alt="" data-base62-sha1="pDU3nNzDoxR5QMAKDoAy5Qi0DGM" width="690" height="367" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8_2_690x367.gif, https://0x00sec.s3.amazonaws.com/original/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8.gif 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8.gif 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/b/b3b91b1656e9c3b64a94d78d57827f67cb9b8ed8_2_10x10.png"></a></div><p></p>
<p>Oh yes, in just seconds it crawled the entire C:\ directory and its sub-directories and managed to found plenty of files, one is our Password.txt file that I moved to the Documents folder, what and amazing Tool. With that password we can use tools such as CrackMapExec to capture shells as Administrators</p>
<p><em>SharpUp</em></p>
<p>Another amazing tool.</p>
<p>SharpUp is a C# port of various <a href="https://github.com/PowerShellMafia/PowerSploit/blob/dev/Privesc/PowerUp.ps1" rel="noopener nofollow ugc">PowerUp</a> functionality. Currently, only the most common checks have been ported; no weaponize functions have yet been implemented.</p>
<p>This tool comes in an awesome package named GhostPack highly active and frequently updated to keep up with the .NET Framework incompatibilities.</p>
<p>The thought about this tool is that we can also use it’s PowerShell Brother in case .NET isn’t available or the proper version for it to run. If by any chance you downloaded the incorrect one but let’s focus on the C# one.</p>
<p>The syntax for this one is very simple:</p>
<pre><code class="lang-auto">Sharpup.exe audit
</code></pre>
<p>And it finds 2 methods to Privesc which with a little more research we can actually see that its very simple since our User is already an Admin but the Shell isn’t running with High Privileges</p>
<p><em>Don’t forget to use the PowerShell version if you can’t get the C# to work</em></p>
<p>¯_(ツ)_/¯</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937.png" data-download-href="/uploads/short-url/fOCZtql7VW6LKGrjSLCEFpE3SfR.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937_2_638x500.png" alt="" data-base62-sha1="fOCZtql7VW6LKGrjSLCEFpE3SfR" width="638" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937_2_638x500.png, https://0x00sec.s3.amazonaws.com/optimized/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937_2_957x750.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/6/6ed9b922c4a76f95faba69b97994b43dfdc3c937_2_10x10.png"></a></div><p></p>
<p><em>Responder</em></p>
<p>Aaaah the amazing tool for Active Directories and almost everything Windows. I won’t explain into detail about Responder since there is so much out there about this tool. But TL;DR is that Responder…… well Responds to LLLMNR, NBT-NS requests, by poisoning these requests when a user misspells or tries to access an non-existent Share responder will say “Yeah it’s Me!!”and with that it can Capture the NTLMv2 hashes.</p>
<p>Its very easy to use just have responder running on the local area network and wait for requests, Of Course recommended by the Creator a good Pentester always recons first using  “-A”  no need to respond to EVERY request just a few target machines, try to be as stealthy as you can.</p>
<p>[But were not trying to be stealthy here we want Admin!!! So let’s respond!!!]</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/e/e457f062567316c632f255212f8cd188419dee85.png" data-download-href="/uploads/short-url/wA1gQqcRfXsa7DHynC5m6mUWXxH.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/e/e457f062567316c632f255212f8cd188419dee85_2_690x157.png" alt="" data-base62-sha1="wA1gQqcRfXsa7DHynC5m6mUWXxH" width="690" height="157" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/e/e457f062567316c632f255212f8cd188419dee85_2_690x157.png, https://0x00sec.s3.amazonaws.com/original/2X/e/e457f062567316c632f255212f8cd188419dee85.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/e/e457f062567316c632f255212f8cd188419dee85.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/e/e457f062567316c632f255212f8cd188419dee85_2_10x10.png"></a></div><p></p>
<p>And just like that</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c.png" data-download-href="/uploads/short-url/7WAmG3KVAJk4ePl9vwlYS0QBhrS.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c_2_690x343.png" alt="" data-base62-sha1="7WAmG3KVAJk4ePl9vwlYS0QBhrS" width="690" height="343" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c_2_690x343.png, https://0x00sec.s3.amazonaws.com/original/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/3/37ae9cb8ead792a0e01e552656d0f9e480737f9c_2_10x10.png"></a></div><p></p>
<p>From here it’s just cracking this hash to grab a ClearText password, or you can use NtlmRelay…</p>
<p>More info <a href="https://en.hackndo.com/ntlm-relay/" rel="noopener nofollow ugc">here</a></p>
<p><strong>3.- Exploitation</strong></p>
<p>Alright here is an interesting one and sometimes very difficult to work with, you Test and you Test , you are sure the exploit works in your Environment but when you use it live. Uh Oh the System Crashed, it didn’t work??!</p>
<p>Or just nothing happens. Even if this happens let’s imagine it all went fine!! Let me show the most current Example going on in the World right now on a Local privilege Escalation method.</p>
<p><em>WesNg</em></p>
<p>Another amazing tool I stumbled upon <em>Thank You Twitter.</em> The creator loved the Windows-Exploit-Suggester by GDS Security but unfortunately it hasn’t been updated since 2017 so taking matters into his own hands BOOM, WESNG was born and has been using the latest information for exploits. Its very easy to use, on your regular shell grab the sysinfo.exe information save it onto a txt file and run the script with file as a parameter.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288.png" data-download-href="/uploads/short-url/5UHnducTZvwR7eu6SJl0MK6jBRm.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288_2_465x500.png" alt="" data-base62-sha1="5UHnducTZvwR7eu6SJl0MK6jBRm" width="465" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288_2_465x500.png, https://0x00sec.s3.amazonaws.com/optimized/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288_2_697x750.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/2/2973a8b1e0cad4f624f367cb2a15a8009216c288_2_10x10.png"></a></div><p></p>
<p>Then we use the following syntax</p>
<pre><code class="lang-auto">wes.py SYSINFO.TXT
</code></pre>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/0/096a75109b1902ea27643761bc552626db0f0b98.png" data-download-href="/uploads/short-url/1linCeA4wHCFLXfTTBrOiBaWj6E.png?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/0/096a75109b1902ea27643761bc552626db0f0b98_2_690x256.png" alt="" data-base62-sha1="1linCeA4wHCFLXfTTBrOiBaWj6E" width="690" height="256" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/0/096a75109b1902ea27643761bc552626db0f0b98_2_690x256.png, https://0x00sec.s3.amazonaws.com/original/2X/0/096a75109b1902ea27643761bc552626db0f0b98.png 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/0/096a75109b1902ea27643761bc552626db0f0b98.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/0/096a75109b1902ea27643761bc552626db0f0b98_2_10x10.png"></a></div><p></p>
<p>SMBGhost</p>
<p>Aaah the talk of the moment, [I think…] a new vulnerability that grants us SYSTEM access this is the most recent I can find and will show you how its being exploited. Newest Exploit and it looks very simple to attack.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61.gif" data-download-href="/uploads/short-url/nJEtfZWi4bTK5iOdHQwWQGww7mN.gif?dl=1" title="" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61_2_689x499.gif" alt="" data-base62-sha1="nJEtfZWi4bTK5iOdHQwWQGww7mN" width="689" height="499" srcset="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61_2_689x499.gif, https://0x00sec.s3.amazonaws.com/original/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61.gif 1.5x, https://0x00sec.s3.amazonaws.com/original/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61.gif 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/2X/a/a65b1d4c9d7fbf089543b19d33c4ee23abbdbe61_2_10x10.png"></a></div><p></p>
<p>But how do we search for this vulnerability?, well there are a few methods we can check it by using the SMBGhost Scanner script by ollypwn.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">
      <a href="https://github.com/ollypwn/SMBGhost" target="_blank" rel="noopener nofollow ugc">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/d/d34c1978d78a96934788718e3b0a5cac4ec54195.png" class="thumbnail onebox-avatar" width="400" height="400">

<h3><a href="https://github.com/ollypwn/SMBGhost" target="_blank" rel="noopener nofollow ugc">ollypwn/SMBGhost</a></h3>

<p>Scanner for CVE-2020-0796 - SMBv3 RCE. Contribute to ollypwn/SMBGhost development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>Or we can search for the Patch and see if it was applied where you can find more info <a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0796" rel="noopener nofollow ugc">here</a></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/8/8f1a87c5c372a2a3e69cf711dc1f06b6d9fc84b2.png" alt="" data-base62-sha1="kpX7oDeeq2D0eXO6zIrDt0BLm7g" width="644" height="208"></p>
<p>We can search with the PowerShell Cmdlet <strong>Get-Hotfix</strong></p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/8/8d921aaa5b54257b494f1c5df8acc2a2b3e9bde8.png" alt="" data-base62-sha1="kcolHCi0ibIrliNtIU1DbOZRsq4" width="574" height="278"></p>
<p>Uh Oh not here.</p>
<p>As you noticed we seen various methods for gaining higher privileges we used Offensive Tool to do the recon and we also used in-house commands to check our environment as well to find vulnerable OS we did the easy thing in just searching for stored passwords in clear text if you been pentesting or just playing with CTF you will notice the phrase “Low hanging Fruit” And yeah, don’t break your head sometimes the answer is very simple (Believe me).</p>
<p>Happy Hacking and hope you love a little more Red- Team.</p>
          <p><a href="https://0x00sec.org/t/privilege-escalation/22302/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/privilege-escalation/22302/1</link>
        <pubDate>Sat, 18 Jul 2020 19:29:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-22302-1</guid>
        <source url="https://0x00sec.org/t/privilege-escalation/22302.rss">Privilege Escalation</source>
      </item>
  </channel>
</rss>
