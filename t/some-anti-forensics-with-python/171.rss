<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Some anti-forensics with Python</title>
    <link>https://0x00sec.org/t/some-anti-forensics-with-python/171</link>
    <description>Hello,

  My name is WireWise, today I will show you how to how to write some anti-forensics code in Python 3. None of this code is low-level anti-forensics(rootkits) in the way there is no kernel or user land hooks(I&#39;m learning that and hopefully will post about it someday). Most of the code will be finding files by iterating through directories , opening and editing them, wiping them and changing their timestamps to the previous ones. 
  
 **Lets Start!**

 First we will need to find a target file. Finding the file is the easiest part , since it&#39;s just checking every file in the system if it matches a keyword or two, then doing some sort of operation on the file path. Let&#39;s check out some code !

&lt;img src=&quot;/uploads/default/original/1X/39135c9e233b55780b5d9fe63c74abf1b2dfb442.png&quot; width=&quot;690&quot; height=&quot;100&quot;&gt;

  This code is pretty self explanatory and basically compares every file on the computer with the string FoundME and if the result is True will then print the path to the file. I used the print function here but you could see how you could run other operations with the information you now have.

Output: 
&lt;img src=&quot;/uploads/default/original/1X/7cd2f282534364aa1f7670a8e51cc238fa7edf0b.png&quot; width=&quot;440&quot; height=&quot;109&quot;&gt;

So that&#39;s all for finding a file in a computer. 

Now for Opening and editing files!
&lt;img src=&quot;/uploads/default/original/1X/27cded681f3f91f53697389f443134d69925fb69.png&quot; width=&quot;690&quot; height=&quot;165&quot;&gt;

So yeah that&#39;s really it with file opening. Now let&#39;s talk about what you can do now that you have successfully opened the file.

&lt;img src=&quot;/uploads/default/original/1X/50324ab008d5797e7028f22dc1978fc28ffdc42d.png&quot; width=&quot;690&quot; height=&quot;109&quot;&gt;

Well that&#39;s not all you can do. There is much much more. But this is all we need for now. Let&#39;s now focus on file timestamps. 
 What are file timestamps ? To put it simply they are attributes of every file has that tell you : time is was changed , modified and accessed. Now you could see how this is valuable , you wouldn&#39;t want a forensics investigator, hypothetically, know what files you accessed after you attack a system. :wink: 
 
The next photo will be code to changing  file timestamps.
*I haven&#39;t actually perfected changing ctime(change) simply because of a annoying 0.016666666 delay , let me know if you know how to fix this, but I wanted to start studying something else so I didn&#39;t and couldn&#39;t fix it.*
&lt;img src=&quot;/uploads/default/original/1X/0434c57b8173fdccac2292fbef774bc239161872.png&quot; width=&quot;690&quot; height=&quot;186&quot;&gt;

What we learned to do : Find files , Open and edit them, wipe them and change their file timestamps. 

Now I spent some time writing a tool that put this all together in a bigger scale, but also added a couple more things. But since the tool is around 550+ lines long I&#39;m not going to go through bit by bit.
But I will tell you where to find it if you want to check it out yourself, what it can do and what I plan for it in the future.

**Where I can find it?**
https://github.com/WireWise/Anti-forensics

**What can it do?**

* Find a file using keywords and other arguments 
* Delete a file
* Nano a file and change timestamps 
* Edit , remove and nano Log&#39;s then reverting timestamps
* Print information about computer.

**What I plan to do to it in the future.**

* Basically turn it into a kernel level rootkit
* Be way more useful
* Much much more...

So that is the end of my first post to 0x00sec. Great to be here. I will try to post more often , if i can. I&#39;m going to start learning low-level programming for writting malware and exploit development. So I will try to post abit about that when I learn more about it. 

Anyway&#39;s thank you for reading my post. 
Have a nice day.

-WireWise</description>
    
    <lastBuildDate>Thu, 05 May 2016 05:57:50 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/some-anti-forensics-with-python/171.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Some anti-forensics with Python</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Really nice post mate!</p>
          <p><a href="https://0x00sec.org/t/some-anti-forensics-with-python/171/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/some-anti-forensics-with-python/171/5</link>
        <pubDate>Thu, 05 May 2016 05:57:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-171-5</guid>
        <source url="https://0x00sec.org/t/some-anti-forensics-with-python/171.rss">Some anti-forensics with Python</source>
      </item>
      <item>
        <title>Some anti-forensics with Python</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>Awesome work mate! It fits nicely with that Anti-Reverse Engineering DEFCON panel you showed me!</p>
          <p><a href="https://0x00sec.org/t/some-anti-forensics-with-python/171/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/some-anti-forensics-with-python/171/4</link>
        <pubDate>Thu, 05 May 2016 01:11:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-171-4</guid>
        <source url="https://0x00sec.org/t/some-anti-forensics-with-python/171.rss">Some anti-forensics with Python</source>
      </item>
      <item>
        <title>Some anti-forensics with Python</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>Great tutorial!.</p>
<p>My 2 cents:</p>
<p>Take a look to <a href="https://docs.python.org/3/library/os.html#os.stat" rel="nofollow noopener">os.stat</a> and friends and also to <a href="https://docs.python.org/3/library/os.html#os.utime" rel="nofollow noopener">os.utime</a>.</p>
<p>Nice work!</p>
          <p><a href="https://0x00sec.org/t/some-anti-forensics-with-python/171/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/some-anti-forensics-with-python/171/3</link>
        <pubDate>Wed, 04 May 2016 23:25:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-171-3</guid>
        <source url="https://0x00sec.org/t/some-anti-forensics-with-python/171.rss">Some anti-forensics with Python</source>
      </item>
      <item>
        <title>Some anti-forensics with Python</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Great. It’s nice to see so many contribs so fast.</p>
          <p><a href="https://0x00sec.org/t/some-anti-forensics-with-python/171/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/some-anti-forensics-with-python/171/2</link>
        <pubDate>Wed, 04 May 2016 22:59:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-171-2</guid>
        <source url="https://0x00sec.org/t/some-anti-forensics-with-python/171.rss">Some anti-forensics with Python</source>
      </item>
      <item>
        <title>Some anti-forensics with Python</title>
        <dc:creator><![CDATA[WireWise]]></dc:creator>
        <description><![CDATA[
            <p>Hello,</p>
<p>My name is WireWise, today I will show you how to how to write some anti-forensics code in Python 3. None of this code is low-level anti-forensics(rootkits) in the way there is no kernel or user land hooks(I’m learning that and hopefully will post about it someday). Most of the code will be finding files by iterating through directories , opening and editing them, wiping them and changing their timestamps to the previous ones.</p>
<p><strong>Lets Start!</strong></p>
<p>First we will need to find a target file. Finding the file is the easiest part , since it’s just checking every file in the system if it matches a keyword or two, then doing some sort of operation on the file path. Let’s check out some code !</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.org/uploads/default/original/1X/39135c9e233b55780b5d9fe63c74abf1b2dfb442.png" data-download-href="/uploads/short-url/88UHi5Jbql0JTISNNQMfuTkhjFM.png?dl=1" title="findingcode.png"><img src="/uploads/default/original/1X/39135c9e233b55780b5d9fe63c74abf1b2dfb442.png" width="690" height="100" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/1X/39135c9e233b55780b5d9fe63c74abf1b2dfb442_2_10x10.png"></a></div><p></p>
<p>This code is pretty self explanatory and basically compares every file on the computer with the string FoundME and if the result is True will then print the path to the file. I used the print function here but you could see how you could run other operations with the information you now have.</p>
<p>Output:<br>
<img src="/uploads/default/original/1X/7cd2f282534364aa1f7670a8e51cc238fa7edf0b.png" width="440" height="109"></p>
<p>So that’s all for finding a file in a computer.</p>
<p>Now for Opening and editing files!<br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.org/uploads/default/original/1X/27cded681f3f91f53697389f443134d69925fb69.png" data-download-href="/uploads/short-url/5G7OL5QPqngUEt3oxL7jb9WMYKl.png?dl=1" title="Fileopening.png"><img src="/uploads/default/original/1X/27cded681f3f91f53697389f443134d69925fb69.png" width="690" height="165" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/1X/27cded681f3f91f53697389f443134d69925fb69_2_10x10.png"></a></div><p></p>
<p>So yeah that’s really it with file opening. Now let’s talk about what you can do now that you have successfully opened the file.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.org/uploads/default/original/1X/50324ab008d5797e7028f22dc1978fc28ffdc42d.png" data-download-href="/uploads/short-url/brrWJ4JL72aAVxbEhTaAF2trrjL.png?dl=1" title="wipingafile.png"><img src="/uploads/default/original/1X/50324ab008d5797e7028f22dc1978fc28ffdc42d.png" width="690" height="109" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/1X/50324ab008d5797e7028f22dc1978fc28ffdc42d_2_10x10.png"></a></div><p></p>
<p>Well that’s not all you can do. There is much much more. But this is all we need for now. Let’s now focus on file timestamps.<br>
What are file timestamps ? To put it simply they are attributes of every file has that tell you : time is was changed , modified and accessed. Now you could see how this is valuable , you wouldn’t want a forensics investigator, hypothetically, know what files you accessed after you attack a system. <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p>The next photo will be code to changing  file timestamps.<br>
<em>I haven’t actually perfected changing ctime(change) simply because of a annoying 0.016666666 delay , let me know if you know how to fix this, but I wanted to start studying something else so I didn’t and couldn’t fix it.</em><br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.org/uploads/default/original/1X/0434c57b8173fdccac2292fbef774bc239161872.png" data-download-href="/uploads/short-url/BcYgP6BjeN4f1wlQ9zhvPAcNkm.png?dl=1" title="Timestamps.png"><img src="/uploads/default/original/1X/0434c57b8173fdccac2292fbef774bc239161872.png" width="690" height="186" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/1X/0434c57b8173fdccac2292fbef774bc239161872_2_10x10.png"></a></div><p></p>
<p>What we learned to do : Find files , Open and edit them, wipe them and change their file timestamps.</p>
<p>Now I spent some time writing a tool that put this all together in a bigger scale, but also added a couple more things. But since the tool is around 550+ lines long I’m not going to go through bit by bit.<br>
But I will tell you where to find it if you want to check it out yourself, what it can do and what I plan for it in the future.</p>
<p><strong>Where I can find it?</strong><br>
<a href="https://github.com/WireWise/Anti-forensics" class="onebox" target="_blank" rel="noopener nofollow ugc">https://github.com/WireWise/Anti-forensics</a></p>
<p><strong>What can it do?</strong></p>
<ul>
<li>Find a file using keywords and other arguments</li>
<li>Delete a file</li>
<li>Nano a file and change timestamps</li>
<li>Edit , remove and nano Log’s then reverting timestamps</li>
<li>Print information about computer.</li>
</ul>
<p><strong>What I plan to do to it in the future.</strong></p>
<ul>
<li>Basically turn it into a kernel level rootkit</li>
<li>Be way more useful</li>
<li>Much much more…</li>
</ul>
<p>So that is the end of my first post to 0x00sec. Great to be here. I will try to post more often , if i can. I’m going to start learning low-level programming for writting malware and exploit development. So I will try to post abit about that when I learn more about it.</p>
<p>Anyway’s thank you for reading my post.<br>
Have a nice day.</p>
<p>-WireWise</p>
          <p><a href="https://0x00sec.org/t/some-anti-forensics-with-python/171/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/some-anti-forensics-with-python/171/1</link>
        <pubDate>Wed, 04 May 2016 22:33:11 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-171-1</guid>
        <source url="https://0x00sec.org/t/some-anti-forensics-with-python/171.rss">Some anti-forensics with Python</source>
      </item>
  </channel>
</rss>
