<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Thoughts on Generics</title>
    <link>https://0x00sec.org/t/thoughts-on-generics/236</link>
    <description>Hello 0x00sec!

For some reason, I currently feel like posing a question: _What are your thoughts on_ [Generic Programming](https://en.wikipedia.org/wiki/Generic_programming)?

If you don&#39;t already know, Generic Programming is when the programmer writes a single function or set of functions capable of being used with a number of then unspecified types.

#### An example in pseudo-code:

    void print_array(T array):
        for_each element in array:
             print element + &quot; &quot;

__Note__: The syntax is not language-specific. This is pseudo-code. Don&#39;t compile this!

So, for the C++ programmers out there, or anyone else with an opinion on the Generics, what are your thoughts?

Personally, I find it convenient, but it can easily be a waste of time if you know your code will only use, for example, a specific type, like an array of `float`s.</description>
    
    <lastBuildDate>Wed, 11 May 2016 02:04:06 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/thoughts-on-generics/236.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/33">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/33</link>
        <pubDate>Sun, 21 Jan 2018 00:33:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-33</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>True. We can’t deny how much their work was of importance. On an extremely funny note, people often regard Jobs as a programming genius, little do they know Wozniak did all the leg-work until Apple hired their own programmers. Jobs was just the cheeky sales guy.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/32">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/32</link>
        <pubDate>Wed, 11 May 2016 02:04:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-32</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[EnergyWolf]]></dc:creator>
        <description><![CDATA[
            <p>On the subject of C and all, being created in the 60’s etc. The man who was essentially the creator of C, and co-creator of UNIX, two accolades that are hard to top in the world of CS, died the same week as Steve Jobs. Unfortunately his death was almost completely overshadowed by Jobs own in the media. I suppose it’s not surprising, since Jobs was such a media Darling for the most part. But even jobs wouldn’t have been where he was if it wasn’t for <a href="https://en.wikipedia.org/wiki/Dennis_Ritchie" rel="nofollow noopener">Dennis Ritchie</a>. We all stand on that guys shoulders… hell, the modern world does. Heh, off-topic, but we probably wouldn’t be here talking about generics either. Thanks Dennis!</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/31">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/31</link>
        <pubDate>Tue, 10 May 2016 15:26:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-31</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>All of computation is basically fast math (the exception being AI). If you look at my sorting series, I believe all of the algorithms I talk about were conceived before 1960.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/30">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/30</link>
        <pubDate>Tue, 10 May 2016 00:02:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-30</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>And we’re even seeing lots of Algorithms today be based on mathematical theories from over 100 years back. So you could say that Computers have a lot in common with Science, as well as Mathematics.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/29">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/29</link>
        <pubDate>Mon, 09 May 2016 23:24:33 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-29</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>On top of that, tons of algorithms were devised more than 50 years ago.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/28">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/28</link>
        <pubDate>Mon, 09 May 2016 18:33:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-28</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>You will be amazed how much stuff that belongs to museums is still alive. Furthermore, most of the technology we are using nowadays (if not all of them) was defined, specified, described or envisioned more than 50 years ago…</p>
<p>Just think about UNIX and C. They where developed end of the 60s beginning of the 70s and it is all around. From your home router to your smartwatch. It has changed but not much.</p>
<p>Good things does not get outdated that easily…</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/27">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/27</link>
        <pubDate>Mon, 09 May 2016 16:58:02 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-27</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>:)… that is what the sentences [quote=“0x00pf, post:10, topic:236”]<br>
…it all depends on what you have to do…<br>
[/quote]</p>
<p>and</p>
<aside class="quote no-group" data-username="0x00pf" data-post="10" data-topic="236">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/0x00pf/40/199_2.png" class="avatar"> 0x00pf:</div>
<blockquote>
<p>you need to know your tools and chose the right one at the right time</p>
</blockquote>
</aside>
<p>meant. <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue_winking_eye.png?v=9" title=":stuck_out_tongue_winking_eye:" class="emoji" alt=":stuck_out_tongue_winking_eye:"></p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/26">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/26</link>
        <pubDate>Mon, 09 May 2016 16:29:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-26</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>Agreed. Good thinking mate.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/25">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/25</link>
        <pubDate>Mon, 09 May 2016 15:04:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-25</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[EnergyWolf]]></dc:creator>
        <description><![CDATA[
            <p>As an aside, .sort() is a method of lists, so if there’s stuff in the list, it will sort it. There is a sorted() standalone function, and it only takes iterables <img src="https://0x00sec.org/images/emoji/twitter/smile_cat.png?v=9" title=":smile_cat:" class="emoji" alt=":smile_cat:"></p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/24">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/24</link>
        <pubDate>Mon, 09 May 2016 15:01:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-24</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>That depends on how programmers are taught. If they are brought up with a decent foundation then it will be fine. Optimization should never be completely relied upon to create faster code execution.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/23">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/23</link>
        <pubDate>Mon, 09 May 2016 13:48:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-23</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/dtm">@dtm</a> you said that they could optimize. I just brought up the point that, said optimization aside, future programmers should be no less vigilant about their code’s quality.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/22">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/22</link>
        <pubDate>Mon, 09 May 2016 13:41:52 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-22</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>I don’t recall saying anything about compilers simplifying the programming process nor say that they can fix errors.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/21">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/21</link>
        <pubDate>Mon, 09 May 2016 13:40:29 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-21</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Oh! My bad <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> I guess python isn’t as good as ruby xD</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/20">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/20</link>
        <pubDate>Mon, 09 May 2016 13:22:23 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-20</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Well said, <a class="mention" href="https://0x00sec.org/u/0x00pf">@0x00pf</a>…</p>
<p>You can’t pass a <code>block</code> to <code>.sort()</code> in Python? You <em>can</em> in Ruby, and it makes manipulating complex data types very simple.</p>
<p><a class="mention" href="https://0x00sec.org/u/dtm">@dtm</a> I agree with your point that we shouldn’t maintain tech that belongs in a museum. But, if programming becomes particularly easy because of compiler optimizations, and that somehow leads to an abundance of supbar software engineers, we’re going down a bad path. Sure, the compiler can take out a bunch of redundant code or make a small function inline to avoid the overhead, but the compiler can’t fix all of the logic errors produced by humans. So if we create an atmosphere in which the programmer doesn’t have to think that much, and can write inefficient code with the expectation of it being optimized by the compiler, we create an atmosphere in which much of our software will be designed mediocrely.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/19">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/19</link>
        <pubDate>Mon, 09 May 2016 13:16:47 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-19</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>I do have to agree with you on that. Whats your view on the direction of platforms? My personal view is that everything will start to go web-based (as it is already), and platforms like the Chromebook will rule. HTML5, JS, CSS3 and countless javascript libraries in my opinion will mark the building blocks for many of our most used tools. This platform for example is Ruby on Rails with a Javascript front end. And it is capable of a lot, especially when you link it with other people.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/17">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/17</link>
        <pubDate>Mon, 09 May 2016 07:25:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-17</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Sure, if you want to maintain something, have all the clean code you want but we’re not discussing about how well something can be managed. As technology evolves, more and more things will become outdated and replaced and I understand your concern about saving resources however, as software features start to grow in size, so too will the complexity and the time and space requirements. It’s inevitable that more things will become available to us and as a result, we just can’t continue support for technology that belongs in a museum. It doesn’t make an sense and it will only hinder our advancement.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/16">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/16</link>
        <pubDate>Mon, 09 May 2016 07:21:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-16</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>I understand that the differences may be negligible; but I would say that clean-efficient &amp; code is important by principle.  What if somebody needs to refactor the code somewhere else? What if somebody runs your program on a legacy machine? Anything that is wasted, and could be saved (such as electricity and the odd bit), should be saved.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/15</link>
        <pubDate>Mon, 09 May 2016 07:12:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-15</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Probably negligible, unless you have no idea what you’re doing and fill your code with redundancy. Nevertheless, compilers and optimizers are there to remove such junk. C compilers make much more efficient assembler code than humans could.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/14</link>
        <pubDate>Mon, 09 May 2016 07:06:40 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-14</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>So are you saying that code efficiency won’t matter, because the computers will be so fast?</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/13</link>
        <pubDate>Mon, 09 May 2016 07:02:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-13</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Soon enough, it won’t matter. Computers and high level language interpretation will become faster and optimized. CPU speeds are peaking and it won’t be able to get any faster with the conventional computer. The only purpose that low level languages will probably have is for low level tasks in embedded devices or operating system management.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/12</link>
        <pubDate>Mon, 09 May 2016 06:58:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-12</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Can’t agree with this more. However, there tends to be a trade-off with high-level abstraction and speed/efficiency. Since a higher level language won’t let you tinker under the hood, you have to use what you’ve been given.</p>
<p>Give for example pythons .sort() function. Now I don’t know how this function operates, but it sorts a list. If I was sorting a special data type, that required an exclusive algorithm, then I couldn’t use the .sort() function, and I’d have to write my own function. This means that although I’ve been offered the opportunity for higher-level abstraction, it’s no good to me because it doesn’t operate efficiently enough for my needs. In which case I may as well write the program in C.</p>
<p>But you’re right, if we can use a higher-level language, and it will suit our needs, then we’d be silly not to.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/11</link>
        <pubDate>Mon, 09 May 2016 06:37:57 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-11</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>My thoughts…</p>
<p>As  any single programming language feature out there, there is a situation or problem where they will help. Said that, I think <strong>generics</strong> are overall a great thing.</p>
<p>From a SW development point of view they provide what every programming language aims to provide; a simplified way to write code and also a way to maintain groups of semantically equivalent functions in one just place. Simplification reduces complexity, and the lower the complexity the lower the number of bugs.</p>
<p>In general, you, as a programmer, want a higher level of abstraction to talk to your computer. Otherwise all of us will be typing binary data to write our program… don’t we?. So, anything that helps to deal with problems at a higher level of abstraction is good. Specially if it is a feature that you can chose to use or not.</p>
<p>Then again, it all depends on what you have to do. That is one part of what programming is about; to chose the right tool to solve your problem. There are a couple of fields where you will really benefit from using generic programming. Other cases where there will be no benefit.</p>
<p>So, you need to know your tools and chose the right one at the right time… or at least try your best <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/10</link>
        <pubDate>Mon, 09 May 2016 05:32:11 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-10</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Yup, pretty much. I agree.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/9</link>
        <pubDate>Sun, 08 May 2016 21:47:35 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-9</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
      <item>
        <title>Thoughts on Generics</title>
        <dc:creator><![CDATA[Khaos]]></dc:creator>
        <description><![CDATA[
            <p>Just like <a class="mention" href="https://0x00sec.org/u/sea">@Sea</a> said this seems like something that would be really good if your doing a lot of sorting or searching especially if there are varied data types, and would help reduce the amount of code that you actually have in your final program.<br>
But there seems very little point to do it if there is only ever going to be one data type passed to it other than probably making any debugging a bit harder to do.</p>
          <p><a href="https://0x00sec.org/t/thoughts-on-generics/236/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/thoughts-on-generics/236/8</link>
        <pubDate>Sun, 08 May 2016 21:41:57 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-236-8</guid>
        <source url="https://0x00sec.org/t/thoughts-on-generics/236.rss">Thoughts on Generics</source>
      </item>
  </channel>
</rss>
