<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Brute forcing cd keys?</title>
    <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362</link>
    <description>So Im looking for some direction in learning about brute forcing cd keys.  I was installing an operating system and had the thought of trying such a thing.  I was thinking along the lines of something like virtual hardware.  Like a flash drive emulating a keyboard, then set the cd key size and let it roll, then save the last key it tried.

Maybe there are already tools out there? 
I wasnt able to find much out there.

Networking and Sec are just my everyday hobbies.  Starting to get into programming, so my skills are limited.</description>
    
    <lastBuildDate>Fri, 20 Apr 2018 14:54:54 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Brute forcing cd keys?</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/brute-forcing-cd-keys/6362/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362/8</link>
        <pubDate>Sat, 19 May 2018 22:12:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6362-8</guid>
        <source url="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss">Brute forcing cd keys?</source>
      </item>
      <item>
        <title>Brute forcing cd keys?</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="blink" data-post="1" data-topic="6362">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/blink/40/4635_2.png" class="avatar"> blink:</div>
<blockquote>
<p>I was thinking along the lines of something like virtual hardware.</p>
</blockquote>
</aside>
<p>Regarding your specific question about virtual hardware (which may not be the best solution as pointed out in the comments above), you may take a look to this old post:</p>
<aside class="quote quote-modified" data-post="1" data-topic="1161">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="20" height="20" src="/user_avatar/0x00sec.org/0x00pf/40/199_2.png" class="avatar">
    <a href="https://0x00sec.org/t/using-a-teensy-to-install-stuff-in-a-few-seconds/1161">Using a Teensy to Install Stuff in a Few Seconds</a> <a class="badge-wrapper  bullet" href="https://0x00sec.org/c/hardware/68"><span class="badge-category-bg" style="background-color: #CCFF31;"></span><span style="" data-drop-close="true" class="badge-category clear-badge">Hardware</span></a>
  </div>
  <blockquote>
    Continuing the discussion from <a href="https://0x00sec.org/t/plug-in-to-win-diy-bad-usb-part-3-3/1159">Plug In To Win - DIY Bad USB [Part 3/3]</a>: 
You may have read the awesome “Plug In To Win” series from <a class="mention" href="https://0x00sec.org/u/thedoctor">@TheDoctor</a>. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alternative to this “keyboard injection” attacks. You may have already seen the code in the last part of <a class="mention" href="https://0x00sec.org/u/thedoctor">@TheDoctor</a> series… this goes a bit more in detail. 
In this paper I will describe how to reproduce…
  </blockquote>
</aside>

          <p><a href="https://0x00sec.org/t/brute-forcing-cd-keys/6362/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362/7</link>
        <pubDate>Fri, 20 Apr 2018 14:54:54 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6362-7</guid>
        <source url="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss">Brute forcing cd keys?</source>
      </item>
      <item>
        <title>Brute forcing cd keys?</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <p>Yes. Many CD or serial inputs expect only a-z0-9 and even not necessarily distinguish  between upper and lower case (e.g.: lower case input is casted to upper case automatically). That obviously reduces the possible key space by quite a bit, but as <a class="mention" href="https://0x00sec.org/u/wunkolo">@Wunkolo</a> already pointed out the possible combinations for a valid key of length 25 is quite ‘big’ <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p>Edit: not sure about windows activation routine but just had the mentioned above experience  with vmware: 5x4 characters from range A-Z0-9 with no distinction between upper or lower case</p>
          <p><a href="https://0x00sec.org/t/brute-forcing-cd-keys/6362/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362/6</link>
        <pubDate>Fri, 20 Apr 2018 14:18:30 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6362-6</guid>
        <source url="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss">Brute forcing cd keys?</source>
      </item>
      <item>
        <title>Brute forcing cd keys?</title>
        <dc:creator><![CDATA[blink]]></dc:creator>
        <description><![CDATA[
            <p>ah yes, thanks for kick starting my brain. Not sure what I was thinking. Also if Im not mistaken doesnt windows not let you enter certain characters?</p>
<p>and Thanks <a class="mention" href="https://0x00sec.org/u/fxbg">@fxbg</a> for the resource!</p>
          <p><a href="https://0x00sec.org/t/brute-forcing-cd-keys/6362/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362/5</link>
        <pubDate>Fri, 20 Apr 2018 13:59:30 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6362-5</guid>
        <source url="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss">Brute forcing cd keys?</source>
      </item>
      <item>
        <title>Brute forcing cd keys?</title>
        <dc:creator><![CDATA[number28]]></dc:creator>
        <description><![CDATA[
            <p>That is pretty damn interesting. Do you happen to know any other good resources that further explain RE’ing keys?</p>
          <p><a href="https://0x00sec.org/t/brute-forcing-cd-keys/6362/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362/4</link>
        <pubDate>Fri, 20 Apr 2018 11:33:35 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6362-4</guid>
        <source url="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss">Brute forcing cd keys?</source>
      </item>
      <item>
        <title>Brute forcing cd keys?</title>
        <dc:creator><![CDATA[Wunkolo]]></dc:creator>
        <description><![CDATA[
            <p>I’d look into the math behind what the character-space of a key is and the key-space so you can get some insight on how possible or realistic a brute-force is.</p>
<p>If you have a 25-character key, and each character can be an uppercase letter.<br>
That’s <code>len("ABCDEFGHIJKLMNOPQRSTUVWXYZ")</code><sup>25</sup> = <strong>236,773,830,007,967,588,876,795,164,938,469,376</strong> possible keys you have to try.</p>
<p>If you have a 25-character key and characters with numbers 0-9 and uppercase letters:<br>
That’s <code>len("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ")</code><sup>25</sup> = <strong>808,281,277,464,764,060,643,139,600,456,536,293,376</strong></p>
<p>If you have a 25-character key and characters with numbers 0-9 and uppercase letters and lowercase letters:<br>
That’s <code>len('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz')</code><sup>25</sup> = <strong>645,345,427,773,512,447,880,377,451,634,304,602,899,218,432</strong></p>
<p>It’s better to just reverse engineer and outwit the algorithm.</p>
          <p><a href="https://0x00sec.org/t/brute-forcing-cd-keys/6362/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362/3</link>
        <pubDate>Fri, 20 Apr 2018 01:24:37 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6362-3</guid>
        <source url="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss">Brute forcing cd keys?</source>
      </item>
      <item>
        <title>Brute forcing cd keys?</title>
        <dc:creator><![CDATA[fxbg]]></dc:creator>
        <description><![CDATA[
            <p>Brute forcing the keys might get you one, some day in the future. It might be easier to reverse engineer the algorithm used. For example, the Starcraft key algo was revealed here: <a href="http://takingsoftwareapart.blogspot.com/2008/01/starcraft-cd-key-algorithm-explained.html" rel="nofollow noopener">http://takingsoftwareapart.blogspot.com/2008/01/starcraft-cd-key-algorithm-explained.html</a></p>
<pre><code class="lang-auto">//Algorithm found by TAKINGSOFTWAREAPART
//javascript code by Snoopyhack
var x = 3;
var c = 0;
var keyString = '';
while (c &lt; 12) {
    var ran = Math.floor(Math.random() * 10);
    x += (2 * x) ^ ran;
    if ((c == 4) || (c == 9)) {
        keyString += '-';
    }
    keyString += ran;
    c++;
}
x = x % 10;
keyString += x;
document.write(keyString);
</code></pre>
<p>but if you wanna waste a few years for a few keys, brute force away <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          <p><a href="https://0x00sec.org/t/brute-forcing-cd-keys/6362/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362/2</link>
        <pubDate>Thu, 19 Apr 2018 23:38:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6362-2</guid>
        <source url="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss">Brute forcing cd keys?</source>
      </item>
      <item>
        <title>Brute forcing cd keys?</title>
        <dc:creator><![CDATA[blink]]></dc:creator>
        <description><![CDATA[
            <p>So Im looking for some direction in learning about brute forcing cd keys.  I was installing an operating system and had the thought of trying such a thing.  I was thinking along the lines of something like virtual hardware.  Like a flash drive emulating a keyboard, then set the cd key size and let it roll, then save the last key it tried.</p>
<p>Maybe there are already tools out there?<br>
I wasnt able to find much out there.</p>
<p>Networking and Sec are just my everyday hobbies.  Starting to get into programming, so my skills are limited.</p>
          <p><a href="https://0x00sec.org/t/brute-forcing-cd-keys/6362/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/brute-forcing-cd-keys/6362/1</link>
        <pubDate>Thu, 19 Apr 2018 22:12:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6362-1</guid>
        <source url="https://0x00sec.org/t/brute-forcing-cd-keys/6362.rss">Brute forcing cd keys?</source>
      </item>
  </channel>
</rss>
