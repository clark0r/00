<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>HTS.org R4 challenge</title>
    <link>https://0x00sec.org/t/hts-org-r4-challenge/1968</link>
    <description># Preface
I stated my reasoning behind this article series in the first article which can be found [here](https://0x00sec.org/t/hts-org-r1-challenge/). 
To avoid redundancy please check out the preface over there and let&#39;s get right into action!

_**note:**_ If I write non sense in this and the next following articles please correct me for the sake of me and others not getting confused and mixed up with things :) . 

#### Author Assigned Level: Wannabe
#### Community Assigned Level:
[poll type=regular]
* Newbie
* Wannabe
* Hacker
* Wizard
* Guru
[/poll]

#### Required Skills
Since we&#39;re starting at the beginning not much knowledge is required at the moment. 

* basic HTML
* SQL 

#### Disclaimer
These write ups are only my 2 cents on the challenges. So don&#39;t take them too seriously. ;)

-----
# HTS.org realistic challenges

### [Realistic challenge 4](https://www.hackthissite.org/missions/realistic/4/)

#### Message:
&gt;Message: Hello, I was referred to you by a friend who says you know how to hack into computers and web sites - well I was wondering if you could help me out here. There&#39;s this local store who is killing hundreds of animals a day exclusively for the purpose of selling jackets and purses etc out of their skin! I have been to their website and they have an email list for their customers. I was wondering if you could somehow hack in and send me every email address on that list? I want to send them a message letting them know of the murder they are wearing. Just reply to this message with a list of the email addresses. Please? Their website is here. Thanks so much!!

#### What can we extract from the message?

* There&#39;s some kind of email list
* We shall retrieve all emails registered on that list

### The site:

The main page doesn&#39;t reveal much. Just two sub sites where you can browser their catalogue and the possibility to add yourself to the email list.
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/0/01974360905fea38be4dcec89ef6f54cf87725af.png&quot; width=&quot;690&quot; height=&quot;329&quot;&gt;

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/b/bae03d7cbe376ff7fcb6395ec55b9cebdb13d56a.png&quot; width=&quot;690&quot; height=&quot;396&quot;&gt;

### The source

Once again we have a &quot;one liner&quot; when it comes to the html code. But here we can see 3 different .php scripts working on this site.

    ....
    &lt;a href=&quot;products.php?category=1&quot;&gt;Fur Coats!&lt;/a&gt;
    ....
    &lt;a href=&quot;products.php?category=2&quot;&gt;Alligator Accessories!&lt;/a&gt;
    ....
    &lt;font face=&quot;verdana&quot; size=2&gt;Join our mailing list to receive updates!&lt;br /&gt;&lt;form action=&quot;addemail.php&quot; method=&quot;post&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;email&quot; value=&quot;your@email.com&quot;&gt;&lt;Br&gt;&lt;input type=&quot;submit&quot; value=&quot;add to list&quot;&gt;&lt;/form&gt;&lt;/font&gt;&lt;/center&gt;

### The &#39;hack&#39;
[spoiler]
So let&#39;s think about this some more. We have an email list of potential customers.
We have a catalogue like shop which displays the article, a description and a price.
It&#39;s unlikely that this text is hardcoded somewhere. 
It&#39;s more likely that these catalogue entries represent a single line from a database. 
It just makes it more convenient.
So let&#39;s try a little more XSS with some SQL injection.

So we have this URL:

     .../products.php?category=1
Let&#39;s change it to

    .../products.php?category=1 and 1=1
This statement is still TRUE and if the site is vulnerable to SQL injection it should display still the same results.
And yes this works!
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/1/19132c8124ef1706299bb054981ad411e1a10c6f.png&quot; width=&quot;690&quot; height=&quot;459&quot;&gt;

So what could we try next to see if there&#39;s really a database behind all of this?
How about &#39;order by&#39; a specific column ;)?
Let&#39;s try ordering it by column 2
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/f/fe94723974780e340719a022650d3756b0db577e.png&quot; width=&quot;690&quot; height=&quot;495&quot;&gt;
As you can easily see the catalogue changed.
This method works!
We can try ordering by different columns now until we reach a point where we get a bad return.
Then we definitely know how many columns are involved in this database!
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/0/02a37d6e50b91930afefda82e2eb67daf84a5bdc.png&quot; width=&quot;582&quot; height=&quot;500&quot;&gt;
So ordering by 5 won&#39;t work and returns a blank page.
Now we know that the database has 4 columns!

##### Whats next?
Did you already forget our initial goal?
No? Good!
Let&#39;s try to find some emails!
So first things first. 
Let&#39;s try to select all results from the database with UNION ALL SELECT 1,2,3,4
Why UNION ALL?
Because just UNION would remove duplicates. 
Since we are searching for all entries no matter the article in the catalogue we want to display all entries.
So here is our new URL:

    .../products.php?category=-1 union all select 1,2,3,4
The numbers we inserted in the URL will get displayed on the page as one can see below:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/7/7177d2e74a703591230f380709268bada736bbfe.png&quot; width=&quot;265&quot; height=&quot;263&quot;&gt;
We want to switch out the numbers for real values now, so we have to find the corresponding identifiers!
But first things first. Why is there just one result displayed?
We need to specify or more find out from which SQL table we want to UNION ALL SELECT these values.
Since we want to find emails we could try FROM email.
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/8/8c7e27c00f44738fb835edd6cd7bd06a02744072.png&quot; width=&quot;285&quot; height=&quot;500&quot;&gt;
Ah a lucky guess! We were correct with that assumption, that there exist a SQL table &#39;email&#39;.
So now we want to switch out the numerical values for the correct values. 
So what are we interested in?
Emails of course! So let&#39;s try this!
Numbers 2 and 3 are currently displayed so let&#39;s switch one of those numbers from the URL to &#39;email&#39;
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/8/802f5279f1366601aafcdc35248067d6fd4cfe2a.png&quot; width=&quot;517&quot; height=&quot;500&quot;&gt;
There we go. Now we just need to extract all those emails and send them to the person from our message above! 
[/spoiler]


# Conclusions
This time we had a little more in depth SQL tutorial on how to test for SQL injection and what you can try to do to find some values you want to extract from the webpage

The next article of the series can be found [here](https://0x00sec.org/t/hts-org-r5-challenge/) once it&#39;s up!!
 
Stay tuned ;)</description>
    
    <lastBuildDate>Fri, 05 May 2017 14:20:03 +0000</lastBuildDate>
    <category>Web Hacking</category>
    <atom:link href="https://0x00sec.org/t/hts-org-r4-challenge/1968.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>HTS.org R4 challenge</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/hts-org-r4-challenge/1968/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hts-org-r4-challenge/1968/4</link>
        <pubDate>Sun, 21 Jan 2018 00:41:04 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1968-4</guid>
        <source url="https://0x00sec.org/t/hts-org-r4-challenge/1968.rss">HTS.org R4 challenge</source>
      </item>
      <item>
        <title>HTS.org R4 challenge</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <p>Oh good catch <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"> . I missed that one!</p>
          <p><a href="https://0x00sec.org/t/hts-org-r4-challenge/1968/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hts-org-r4-challenge/1968/3</link>
        <pubDate>Fri, 05 May 2017 14:20:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1968-3</guid>
        <source url="https://0x00sec.org/t/hts-org-r4-challenge/1968.rss">HTS.org R4 challenge</source>
      </item>
      <item>
        <title>HTS.org R4 challenge</title>
        <dc:creator><![CDATA[SmartOne]]></dc:creator>
        <description><![CDATA[
            <p>You don’t even have to guess that the table is ‘email’, just put a invalid email in the submit form and it says:<br>
Error inserting into table “email”! Email not valid! Please contact an administrator of Fischer’s<br>
<img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji only-emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/hts-org-r4-challenge/1968/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hts-org-r4-challenge/1968/2</link>
        <pubDate>Fri, 05 May 2017 14:05:02 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1968-2</guid>
        <source url="https://0x00sec.org/t/hts-org-r4-challenge/1968.rss">HTS.org R4 challenge</source>
      </item>
      <item>
        <title>HTS.org R4 challenge</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <h1>Preface</h1>
<p>I stated my reasoning behind this article series in the first article which can be found <a href="https://0x00sec.org/t/hts-org-r1-challenge/">here</a>.<br>
To avoid redundancy please check out the preface over there and let’s get right into action!</p>
<p><em><strong>note:</strong></em> If I write non sense in this and the next following articles please correct me for the sake of me and others not getting confused and mixed up with things <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> .</p>
<h4>Author Assigned Level: Wannabe</h4>
<h4>Community Assigned Level:</h4>
<p><a href="https://0x00sec.org/t/hts-org-r4-challenge/1968/1">Click to view the poll.</a></p>
<h4>Required Skills</h4>
<p>Since we’re starting at the beginning not much knowledge is required at the moment.</p>
<ul>
<li>basic HTML</li>
<li>SQL</li>
</ul>
<h4>Disclaimer</h4>
<p>These write ups are only my 2 cents on the challenges. So don’t take them too seriously. <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<hr>
<h1>
<a href="http://HTS.org">HTS.org</a> realistic challenges</h1>
<h3><a href="https://www.hackthissite.org/missions/realistic/4/">Realistic challenge 4</a></h3>
<h4>Message:</h4>
<blockquote>
<p>Message: Hello, I was referred to you by a friend who says you know how to hack into computers and web sites - well I was wondering if you could help me out here. There’s this local store who is killing hundreds of animals a day exclusively for the purpose of selling jackets and purses etc out of their skin! I have been to their website and they have an email list for their customers. I was wondering if you could somehow hack in and send me every email address on that list? I want to send them a message letting them know of the murder they are wearing. Just reply to this message with a list of the email addresses. Please? Their website is here. Thanks so much!!</p>
</blockquote>
<h4>What can we extract from the message?</h4>
<ul>
<li>There’s some kind of email list</li>
<li>We shall retrieve all emails registered on that list</li>
</ul>
<h3>The site:</h3>
<p>The main page doesn’t reveal much. Just two sub sites where you can browser their catalogue and the possibility to add yourself to the email list.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/0/01974360905fea38be4dcec89ef6f54cf87725af.png" width="690" height="329"></p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/b/bae03d7cbe376ff7fcb6395ec55b9cebdb13d56a.png" width="690" height="396"></p>
<h3>The source</h3>
<p>Once again we have a “one liner” when it comes to the html code. But here we can see 3 different .php scripts working on this site.</p>
<pre><code>....
&lt;a href="products.php?category=1"&gt;Fur Coats!&lt;/a&gt;
....
&lt;a href="products.php?category=2"&gt;Alligator Accessories!&lt;/a&gt;
....
&lt;font face="verdana" size=2&gt;Join our mailing list to receive updates!&lt;br /&gt;&lt;form action="addemail.php" method="post"&gt;&lt;input type="text" name="email" value="your@email.com"&gt;&lt;Br&gt;&lt;input type="submit" value="add to list"&gt;&lt;/form&gt;&lt;/font&gt;&lt;/center&gt;
</code></pre>
<h3>The ‘hack’</h3>
<div class="spoiler"><a href="https://0x00sec.org/t/hts-org-r4-challenge/1968/1">spoiler</a></div>
<h1>Conclusions</h1>
<p>This time we had a little more in depth SQL tutorial on how to test for SQL injection and what you can try to do to find some values you want to extract from the webpage</p>
<p>The next article of the series can be found <a href="https://0x00sec.org/t/hts-org-r5-challenge/">here</a> once it’s up!!</p>
<p>Stay tuned <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/hts-org-r4-challenge/1968/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hts-org-r4-challenge/1968/1</link>
        <pubDate>Thu, 04 May 2017 18:26:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1968-1</guid>
        <source url="https://0x00sec.org/t/hts-org-r4-challenge/1968.rss">HTS.org R4 challenge</source>
      </item>
  </channel>
</rss>
