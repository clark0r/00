<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Steganography - Hiding text files in images files</title>
    <link>https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506</link>
    <description>In my previous tutorial, I covered concealing messages in text files. Now, I&#39;m going to show you how to conceal a text file in an image file using steghide, since SNOW only allows to store data in ASCII files. Like SNOW, steghide is a command-line program (I believe there is a GUI version available).

[Steghide&#39;s official website](http://steghide.sourceforge.net/) states the following:

&gt; Steghide is a steganography program that is able to hide data in various kinds of image- and audio-files. The color- respectivly sample-frequencies are not changed thus making the embedding resistant against first-order statistical tests.

It&#39;s worth noting that this program is a bit more complex than SNOW, so I will only be covering the essential options. So without further ado, let&#39;s get started!

----
# Installing steghide

Just like SNOW, steghide&#39;s repositories are already present in Kali, so to install simply type 
`sudo apt-get install steghide`

----
# Concealing text files in image files

Like I said earlier, i&#39;ll cover the essential options of the program, so if you want the full list of options just type in the terminal:

`steghide` or `steghide --help`

The main options we&#39;ll take a look at are:

      embed - embed data
      extract - extract data
      -ef - file to be embedded
      -cf - cover-file (image/audio file)
      -sf - stego-file
      -xf - write the extracted data to &lt;filename&gt;
 

Let&#39;s imagine I want to share a secret file named &quot;wordlist&quot; and conceal it in an image file called &quot;Robin.JPG&quot; (To my understanding, only .jpg files work). I&#39;d type:

`steghide embed -ef wordlist -cf Robin.JPG`

Now the program will ask you to setup a passphrase (just type whatever you want).

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/a29b1b5a38aa9e2c8955e4560fdb7cc9709c5aa4.png&quot; width=&quot;685&quot; height=&quot;76&quot;&gt;

----
# Retreiving the concealed file

To retrieve the hidden file, we type:

`steghide extract -sf Robin.JPG -xf &lt;some_file_name&gt;`

It&#39;ll ask you again for the passphrase. Now all you need to do is find the file with the extracted data and you&#39;re good to go!

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/d13fbe7c83767108485f708a9380f7924b3ff31a.png&quot; width=&quot;685&quot; height=&quot;56&quot;&gt;

---

That&#39;s it for this tutorial, hope you enjoyed reading as much as I did writing it!</description>
    
    <lastBuildDate>Tue, 27 Jun 2017 07:52:06 +0000</lastBuildDate>
    <category>Cryptology</category>
    <atom:link href="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Steganography - Hiding text files in images files</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/7</link>
        <pubDate>Sun, 21 Jan 2018 00:41:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-506-7</guid>
        <source url="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506.rss">Steganography - Hiding text files in images files</source>
      </item>
      <item>
        <title>Steganography - Hiding text files in images files</title>
        <dc:creator><![CDATA[Nitrax]]></dc:creator>
        <description><![CDATA[
            <p>Steganography involves cryptography, otherwise, your hidden data will decrease the entropy which, compared to the standard, will lead to its detection.</p>
<aside class="quote no-group" data-username="Awn" data-post="4" data-topic="506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/awn/40/2406_2.png" class="avatar"> Awn:</div>
<blockquote>
<p>What if you hid encrypted data in the noisy parts of an image? How predictable is the noise in a typical image file anyway?</p>
</blockquote>
</aside>
<p>This method is known as DCT steganography. Here is a <a href="http://www.ijcee.org/papers/533-P0025.pdf" rel="nofollow noopener">paper</a> about this process.</p>
<p><strong>Disclaimer: I didn’t read it, but it will certainly explain DCT algorithm.</strong></p>
<aside class="quote no-group" data-username="Awn" data-post="4" data-topic="506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/awn/40/2406_2.png" class="avatar"> Awn:</div>
<blockquote>
<p>I suppose certain types of images would have a much higher entropy value. For a start, high quality images, and probably images of complex objects rather than, say, a wall.</p>
</blockquote>
</aside>
<p>The entropy is correlated to the maximal compression ration. Lower is the ratio, higher will be the entrepropy. Consequently, whatever the image is, a high quality or not, it is the file format that will affect the entropy.</p>
<p><strong>jpeg &gt; png &gt; bmp</strong></p>
<p>Further reading about entropy:</p>
<ul>
<li><a href="https://0x00sec.org/t/information-theory-101-entropy/963">Information theory 101. Entropy</a></li>
<li><a href="https://0x00sec.org/t/captcha-randomness-applicability/954">CAPTCHA - Randomness applicability</a></li>
</ul>
          <p><a href="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/6</link>
        <pubDate>Tue, 27 Jun 2017 07:52:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-506-6</guid>
        <source url="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506.rss">Steganography - Hiding text files in images files</source>
      </item>
      <item>
        <title>Steganography - Hiding text files in images files</title>
        <dc:creator><![CDATA[n3xUs]]></dc:creator>
        <description><![CDATA[
            <p>Talk about old posts…</p>
<p>I see you’re into crypto but I gotta be honest, unfortunately, it’s not something I know a lot about, so I can’t really help you with that question, maybe some other person can help you (and I’m sure they will).</p>
<p>This post was just a quick how-to on Steganography.</p>
          <p><a href="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/5</link>
        <pubDate>Mon, 26 Jun 2017 22:09:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-506-5</guid>
        <source url="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506.rss">Steganography - Hiding text files in images files</source>
      </item>
      <item>
        <title>Steganography - Hiding text files in images files</title>
        <dc:creator><![CDATA[Awn]]></dc:creator>
        <description><![CDATA[
            <p>I’ve always wondered about combining stenography and cryptography.</p>
<p>What if you hid encrypted data in the noisy parts of an image? How predictable is the noise in a typical image file anyway?</p>
<p>I suppose certain types of images would have a much higher entropy value. For a start, high quality images, and probably images of complex objects rather than, say, a wall.</p>
          <p><a href="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/4</link>
        <pubDate>Mon, 26 Jun 2017 19:42:52 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-506-4</guid>
        <source url="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506.rss">Steganography - Hiding text files in images files</source>
      </item>
      <item>
        <title>Steganography - Hiding text files in images files</title>
        <dc:creator><![CDATA[n3xUs]]></dc:creator>
        <description><![CDATA[
            <p>Thanks! I’ve heard of it, but I actually never tried it.</p>
          <p><a href="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/3</link>
        <pubDate>Sun, 29 May 2016 13:04:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-506-3</guid>
        <source url="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506.rss">Steganography - Hiding text files in images files</source>
      </item>
      <item>
        <title>Steganography - Hiding text files in images files</title>
        <dc:creator><![CDATA[SmartOne]]></dc:creator>
        <description><![CDATA[
            <p>Great post! I also like to use <a href="https://play.google.com/store/apps/details?id=info.guardianproject.pixelknot" rel="nofollow noopener">Pixelknot</a> when I’m on Android</p>
          <p><a href="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/2</link>
        <pubDate>Sun, 29 May 2016 12:11:49 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-506-2</guid>
        <source url="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506.rss">Steganography - Hiding text files in images files</source>
      </item>
      <item>
        <title>Steganography - Hiding text files in images files</title>
        <dc:creator><![CDATA[n3xUs]]></dc:creator>
        <description><![CDATA[
            <p>In my previous tutorial, I covered concealing messages in text files. Now, I’m going to show you how to conceal a text file in an image file using steghide, since SNOW only allows to store data in ASCII files. Like SNOW, steghide is a command-line program (I believe there is a GUI version available).</p>
<p><a href="http://steghide.sourceforge.net/" rel="noopener nofollow ugc">Steghide’s official website</a> states the following:</p>
<blockquote>
<p>Steghide is a steganography program that is able to hide data in various kinds of image- and audio-files. The color- respectivly sample-frequencies are not changed thus making the embedding resistant against first-order statistical tests.</p>
</blockquote>
<p>It’s worth noting that this program is a bit more complex than SNOW, so I will only be covering the essential options. So without further ado, let’s get started!</p>
<hr>
<h1>Installing steghide</h1>
<p>Just like SNOW, steghide’s repositories are already present in Kali, so to install simply type<br>
<code>sudo apt-get install steghide</code></p>
<hr>
<h1>Concealing text files in image files</h1>
<p>Like I said earlier, i’ll cover the essential options of the program, so if you want the full list of options just type in the terminal:</p>
<p><code>steghide</code> or <code>steghide --help</code></p>
<p>The main options we’ll take a look at are:</p>
<pre><code>  embed - embed data
  extract - extract data
  -ef - file to be embedded
  -cf - cover-file (image/audio file)
  -sf - stego-file
  -xf - write the extracted data to &lt;filename&gt;
</code></pre>
<p>Let’s imagine I want to share a secret file named “wordlist” and conceal it in an image file called “Robin.JPG” (To my understanding, only .jpg files work). I’d type:</p>
<p><code>steghide embed -ef wordlist -cf Robin.JPG</code></p>
<p>Now the program will ask you to setup a passphrase (just type whatever you want).</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/a29b1b5a38aa9e2c8955e4560fdb7cc9709c5aa4.png" width="685" height="76"></p>
<hr>
<h1>Retreiving the concealed file</h1>
<p>To retrieve the hidden file, we type:</p>
<p><code>steghide extract -sf Robin.JPG -xf &lt;some_file_name&gt;</code></p>
<p>It’ll ask you again for the passphrase. Now all you need to do is find the file with the extracted data and you’re good to go!</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/d13fbe7c83767108485f708a9380f7924b3ff31a.png" width="685" height="56"></p>
<hr>
<p>That’s it for this tutorial, hope you enjoyed reading as much as I did writing it!</p>
          <p><a href="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506/1</link>
        <pubDate>Sat, 28 May 2016 00:54:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-506-1</guid>
        <source url="https://0x00sec.org/t/steganography-hiding-text-files-in-images-files/506.rss">Steganography - Hiding text files in images files</source>
      </item>
  </channel>
</rss>
