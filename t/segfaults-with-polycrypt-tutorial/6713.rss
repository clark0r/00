<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Segfaults With Polycrypt Tutorial</title>
    <link>https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713</link>
    <description>Had a question about this tutorial:

https://0x00sec.org/t/polycrypt-experiments-on-self-modifying-programs/857

I&#39;ve tried double-checking the code several times. Even tried pulling it off this github to ensure I wasn&#39;t missing anything:

https://raw.githubusercontent.com/0x00pf/0x00sec_code/master/crypter/polycrypt.c

Every time I try to run it I get the following though:

$ ./polycrypt 
mprotect:: Cannot allocate memory
Segmentation fault

At first I thought this may be some security feature on my device that was preventing that. However, I was able to execute the code in the link below that also calls mprotect without issue:

https://shanetully.com/2013/12/writing-a-self-mutating-x86_64-c-program/

I was very far from running low on memory with my device, so I do not think this was due to low resources. I suspect that as I&#39;m using x86_64, maybe some of the offsets and code in polycrypt.c were to be used with i386? 

That&#39;s just a guess, but I&#39;m interested on anyone&#39;s thoughts on this.</description>
    
    <lastBuildDate>Sat, 19 May 2018 04:53:59 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Segfaults With Polycrypt Tutorial</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/7</link>
        <pubDate>Sat, 16 Jun 2018 06:53:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6713-7</guid>
        <source url="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713.rss">Segfaults With Polycrypt Tutorial</source>
      </item>
      <item>
        <title>Segfaults With Polycrypt Tutorial</title>
        <dc:creator><![CDATA[ph33r]]></dc:creator>
        <description><![CDATA[
            <p>Well, I would make a pull request, but it seems github just flagged my account. Guess they don’t like privacy settings. I contacted them, but not sure how long it will take for them to review it. I’ll try to do that when/if they let me back on. lol</p>
          <p><a href="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/6</link>
        <pubDate>Sat, 19 May 2018 04:53:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6713-6</guid>
        <source url="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713.rss">Segfaults With Polycrypt Tutorial</source>
      </item>
      <item>
        <title>Segfaults With Polycrypt Tutorial</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>Now you can try to make it work with <code>PIE</code> binaries. Hint:  Check /proc/PID/maps to figure out the real address at run-time.</p>
<p>Do not forget to make a PR on my repo if you make it work <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/5</link>
        <pubDate>Fri, 18 May 2018 15:08:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6713-5</guid>
        <source url="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713.rss">Segfaults With Polycrypt Tutorial</source>
      </item>
      <item>
        <title>Segfaults With Polycrypt Tutorial</title>
        <dc:creator><![CDATA[ph33r]]></dc:creator>
        <description><![CDATA[
            <p>I found ‘-no-pie’ wasn’t in the Makefile from the github, but added it like so:</p>
<p>$ cat Makefile<br>
all:prog crypter_rt polycrypt</p>
<p>crypter_rt:crypter_rt.c<br>
${CC} -no-pie -Wall -o $@ $&lt;</p>
<p>prog:prog.c<br>
${CC} -no-pie -Wall -o $@ $&lt;</p>
<p>polycrypt:polycrypt.c<br>
${CC} -no-pie -Wall -o $@ $&lt;<br>
.PHONY:<br>
clean:<br>
rm prog crypter_rt polycrypt</p>
<p>After that it ran perfect. Much thanks!</p>
          <p><a href="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/4</link>
        <pubDate>Fri, 18 May 2018 14:07:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6713-4</guid>
        <source url="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713.rss">Segfaults With Polycrypt Tutorial</source>
      </item>
      <item>
        <title>Segfaults With Polycrypt Tutorial</title>
        <dc:creator><![CDATA[fxbg]]></dc:creator>
        <description><![CDATA[
            <p>compiled fine for me with gcc with no flags</p>
          <p><a href="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/3</link>
        <pubDate>Fri, 18 May 2018 04:43:27 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6713-3</guid>
        <source url="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713.rss">Segfaults With Polycrypt Tutorial</source>
      </item>
      <item>
        <title>Segfaults With Polycrypt Tutorial</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>Hi <a class="mention" href="https://0x00sec.org/u/ph33r">@ph33r</a></p>
<p>Looks like the error you are actually getting is <code>ENOMEM</code> (check the <code>mprotect</code> man page for details). This normally means that the address you are passing as a parameter is wrong. So my best guess is that you have generated a <code>PIE</code> binary.</p>
<p>To play with program compile it as a normal binary (<code>-no-pie</code> flag?). Otherwise you can try to fix <code>polycrypt</code> to work with <code>PIE</code> binaries, which is, I think, an interesting exercise.</p>
<p>Let me know if that is the case (a <code>PIE</code> binary). Otherwise I may need more details to figure out what is wrong as the program works fine in all my boxes.</p>
          <p><a href="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/2</link>
        <pubDate>Thu, 17 May 2018 20:39:33 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6713-2</guid>
        <source url="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713.rss">Segfaults With Polycrypt Tutorial</source>
      </item>
      <item>
        <title>Segfaults With Polycrypt Tutorial</title>
        <dc:creator><![CDATA[ph33r]]></dc:creator>
        <description><![CDATA[
            <p>Had a question about this tutorial:</p>
<aside class="quote quote-modified" data-post="1" data-topic="857">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="20" height="20" src="/user_avatar/0x00sec.org/0x00pf/40/199_2.png" class="avatar">
    <a href="https://0x00sec.org/t/polycrypt-experiments-on-self-modifying-programs/857">PolyCrypt. Experiments on Self-Modifying Programs</a> <a class="badge-wrapper  bullet" href="https://0x00sec.org/c/malware/56"><span class="badge-category-bg" style="background-color: #F7941D;"></span><span style="" data-drop-close="true" class="badge-category clear-badge">Malware</span></a>
  </div>
  <blockquote>
    Some time ago, we explored the idea of a simple crypter for ELF files ( <a href="https://0x00sec.org/t/a-simple-linux-crypter/537" class="inline-onebox-loading">https://0x00sec.org/t/a-simple-linux-crypter/537</a>). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. 
In this article, I will present you an experiment to actually changing the binaries after each execution. It was conceived as a crackme but, in the end, I thought it would be too much s…
  </blockquote>
</aside>

<p>I’ve tried double-checking the code several times. Even tried pulling it off this github to ensure I wasn’t missing anything:</p>
<p><a href="https://raw.githubusercontent.com/0x00pf/0x00sec_code/master/crypter/polycrypt.c" class="onebox" target="_blank" rel="nofollow noopener">https://raw.githubusercontent.com/0x00pf/0x00sec_code/master/crypter/polycrypt.c</a></p>
<p>Every time I try to run it I get the following though:</p>
<p>$ ./polycrypt<br>
mprotect:: Cannot allocate memory<br>
Segmentation fault</p>
<p>At first I thought this may be some security feature on my device that was preventing that. However, I was able to execute the code in the link below that also calls mprotect without issue:</p>
<p><a href="https://shanetully.com/2013/12/writing-a-self-mutating-x86_64-c-program/" class="onebox" target="_blank" rel="nofollow noopener">https://shanetully.com/2013/12/writing-a-self-mutating-x86_64-c-program/</a></p>
<p>I was very far from running low on memory with my device, so I do not think this was due to low resources. I suspect that as I’m using x86_64, maybe some of the offsets and code in polycrypt.c were to be used with i386?</p>
<p>That’s just a guess, but I’m interested on anyone’s thoughts on this.</p>
          <p><a href="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713/1</link>
        <pubDate>Thu, 17 May 2018 06:53:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6713-1</guid>
        <source url="https://0x00sec.org/t/segfaults-with-polycrypt-tutorial/6713.rss">Segfaults With Polycrypt Tutorial</source>
      </item>
  </channel>
</rss>
