<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
    <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311</link>
    <description>### What?
#### Summary
This post details the steps required to achieve persistent access to Burp Collaborator sessions which are usually volatile, and lost when current instance of Burpsuite collaborator client is closed. 

#### Burpsuite Collaborator
In case you are currently unaware of the collaborator client in Burpsuite, it allows you to generate collaborator links and monitor DNS, HTTP, and SMTP interactions made by external services. This is an excellent feature which greatly simplifies testing for vulnerabilities such as Server-Side Request Forgery (SSRF), Blind-XSS, and various other issues which may cause external service interactions. 

![example|690x331](upload://7wXQ4BRCENUb0uepWofpG4GPRjw.png) 

### Why?
Whilst attempting to re-create the research pipeline described by James Kettle, in the whitepaper [cracking the lens](https://portswigger.net/blog/cracking-the-lens-targeting-https-hidden-attack-surface), and integrate it into my enumeration/scanning tool Ardent (which I will release here another time). I was faced with a choice of rolling my own interaction server, or living with the limitations imposed by collaborator, in that, manually generated links are only usable as long as the collaborator client is open, and do not survive exiting Burp. As the latter was unfeasible due to my goals of scanning a large range of targets over an extended period of time, I decided to see if I could piggyback off Burp collaborator in a less obvious way before taking the plunge and implementing my own solution.

 Initially, I found that you can run your own collaborator server, which I recommend if you follow this guide as to not piss off PortSwigger. However, even when using your own Collaborator server, there is not an obvious way to interact with it outside BurpSuite. Which leads me to the following...

### How?
#### Theory
Through some research I discovered that in order to maintain a simple stateful collaborator implementation, they generate the collaborator subdomains using a key derivation function based on a secret key. This secret key is generated by the Burp collaborator client when you open it, and subsequently destroyed when you close it. 

When polling for interactions, Burp&#39;s collaborator server regenerates the list of collaborator domains from the secret key, and returns the interactions it has recorded against that subdomain. Thus, it is possible to capture a Collaborator secret, and use it to poll for interactions made against links generated from that secret key. 

#### Methodology
To begin with, we must find a way to intercept a polling request from BurpSuite, to the Burp Collaborator server. As this is a HTTP based protocol, you can use two instances of BurpSuite to achieve this. However, it&#39;s probably easier to use wireshark. 

However, before we are able to capture the polling request sent by BurpSuite to collaborator, we must first go to `Project Options-&gt;misc`, and set Collaborator to poll over HTTP.

![over_http|687x500](upload://dVxkchdomSLRCyIXagtDVr0mNit.png) 

 Once this has been achieved, and wireshark is listening on the appropriate interface, go to `Burp-&gt;Collaborator Client` and press `Poll now`. In wireshark, you should now see a HTTP request to `http://polling.burpcollaborator.net/burpresults?biid=SECRET_KEY_HERE`. Take note of the secret key value sent as the value of the `biid` parameter. 

![wireshark|690x341](upload://5D7oCK3Hv0rEqvq7MGvcX8sFdLD.png) 

Now, it&#39;s time to get some links to use with this secret in future. To do so, generate however many links you think you may need, and save them somewhere, along with the secret key.

 It is now possible to retrieve interactions with any one of the generated collaborator links by sending a HTTP GET request to `http://polling.burpcollaborator.net/burpresults?biid=SECRET_KEY_HERE`. As the collaborator server generates the links using the secret key, they will never expire. However, the Burp collaborator server is ephemeral and thus may lose data if it is left there for prolonged periods. As such, it is recommended you poll regularly to collect your data. 

![demo|690x179](upload://nHoYHIATmlmFvq2HheibG022b1H.png) 


#### Conclusion
I hope this helps the researchers out there in some way, and if you haven&#39;t already, I highly recommend watching James Kettle&#39;s talk &quot;cracking the lens&quot; and messing about with it yourself, it&#39;s bizarre some of the interactions you can get from services by placing links in weird places. Figuring out why you have so many pingbacks for China when you never sprayed there will keep you busy for a while ;).</description>
    
    <lastBuildDate>Sun, 07 Jul 2019 16:48:56 +0000</lastBuildDate>
    <category>Web Hacking</category>
    <atom:link href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/15</link>
        <pubDate>Thu, 11 Jul 2019 19:47:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-15</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[petruknisme]]></dc:creator>
        <description><![CDATA[
            <p>Thanks for sharing. Wait, how can you even think about this method? <img src="https://0x00sec.org/images/emoji/twitter/face_with_monocle.png?v=9" title=":face_with_monocle:" class="emoji" alt=":face_with_monocle:"><img src="https://0x00sec.org/images/emoji/twitter/face_with_monocle.png?v=9" title=":face_with_monocle:" class="emoji" alt=":face_with_monocle:"> This is an awesome technique to try!</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/14</link>
        <pubDate>Sun, 07 Jul 2019 16:48:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-14</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Mantis]]></dc:creator>
        <description><![CDATA[
            <p>Wait, what did I do?</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/13</link>
        <pubDate>Fri, 14 Jun 2019 08:39:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-13</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[threatsurfer]]></dc:creator>
        <description><![CDATA[
            <p>Top work Mantis, thank you</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/12</link>
        <pubDate>Fri, 14 Jun 2019 00:25:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-12</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Cgboal]]></dc:creator>
        <description><![CDATA[
            <p>Cheers Mantis, I’ll check it out</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/11</link>
        <pubDate>Thu, 13 Jun 2019 19:32:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-11</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Mantis]]></dc:creator>
        <description><![CDATA[
            <p>I mean, if you’re looking for alternatives or persistence you can look at <a href="https://swin.es/o/" rel="nofollow noopener">https://swin.es/o/</a> - A friend of mine made it and it works a charm</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/10</link>
        <pubDate>Thu, 13 Jun 2019 13:47:46 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-10</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Cgboal]]></dc:creator>
        <description><![CDATA[
            <p>Ah that looks awesome, thank you. Put in the extra work I couldn’t be bothered with haha.</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/9</link>
        <pubDate>Wed, 12 Jun 2019 21:49:42 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-9</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Gavin_Anders]]></dc:creator>
        <description><![CDATA[
            <p>Check out this project I started a while back. I like to think it’s like a collaborator on steroids.it might be of some interest to you <a href="https://bitbucket.org/gavinanders/callback-catcher/src/master/" rel="nofollow noopener">https://bitbucket.org/gavinanders/callback-catcher/src/master/</a></p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/8</link>
        <pubDate>Wed, 12 Jun 2019 21:48:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-8</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Cgboal]]></dc:creator>
        <description><![CDATA[
            <p>Damn, not bad. That’s awesome</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/7</link>
        <pubDate>Wed, 12 Jun 2019 19:56:42 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-7</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Mantis]]></dc:creator>
        <description><![CDATA[
            <p>Just an FYI, your post got picked up by the Bug Bounty Hunter telegram group.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/7/758871ddbf8769770d8e47f47a8a456c8621386f.png" alt="" width="" height=""></p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/6</link>
        <pubDate>Wed, 12 Jun 2019 19:52:54 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-6</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>AWESOME post mate!</p>
<p>This is so helpful and just what I needed!</p>
<p>Keep up the great work <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Also - really well written!</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/5</link>
        <pubDate>Wed, 12 Jun 2019 08:56:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-5</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[icyphox]]></dc:creator>
        <description><![CDATA[
            <p>Whoa, TIL. Thanks for writing this.</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/4</link>
        <pubDate>Wed, 12 Jun 2019 01:40:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-4</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Cgboal]]></dc:creator>
        <description><![CDATA[
            <p>No problem, glad you enjoyed. All of Jame’s Kettle’s stuff is great, there’s an archive <a href="https://www.skeletonscribe.net/" rel="nofollow noopener">here</a>.</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/3</link>
        <pubDate>Tue, 11 Jun 2019 20:01:49 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-3</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[hacker_snail]]></dc:creator>
        <description><![CDATA[
            <p>Thanks for posting this, all I can say is <img src="https://0x00sec.org/images/emoji/twitter/exploding_head.png?v=9" title=":exploding_head:" class="emoji" alt=":exploding_head:"> &amp; I’ll definitely check out cracking the lens</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/2</link>
        <pubDate>Tue, 11 Jun 2019 20:00:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-2</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
      <item>
        <title>Achieving Persistent Access to Burp Collaborator Sessions</title>
        <dc:creator><![CDATA[Cgboal]]></dc:creator>
        <description><![CDATA[
            <h3>What?</h3>
<h4>Summary</h4>
<p>This post details the steps required to achieve persistent access to Burp Collaborator sessions which are usually volatile, and lost when current instance of Burpsuite collaborator client is closed.</p>
<h4>Burpsuite Collaborator</h4>
<p>In case you are currently unaware of the collaborator client in Burpsuite, it allows you to generate collaborator links and monitor DNS, HTTP, and SMTP interactions made by external services. This is an excellent feature which greatly simplifies testing for vulnerabilities such as Server-Side Request Forgery (SSRF), Blind-XSS, and various other issues which may cause external service interactions.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/3/34c92c52537e14516a0734c4a4ce9b5483734716.png" alt="example" data-base62-sha1="7wXQ4BRCENUb0uepWofpG4GPRjw" width="690" height="331"></p>
<h3>Why?</h3>
<p>Whilst attempting to re-create the research pipeline described by James Kettle, in the whitepaper <a href="https://portswigger.net/blog/cracking-the-lens-targeting-https-hidden-attack-surface" rel="noopener nofollow ugc">cracking the lens</a>, and integrate it into my enumeration/scanning tool Ardent (which I will release here another time). I was faced with a choice of rolling my own interaction server, or living with the limitations imposed by collaborator, in that, manually generated links are only usable as long as the collaborator client is open, and do not survive exiting Burp. As the latter was unfeasible due to my goals of scanning a large range of targets over an extended period of time, I decided to see if I could piggyback off Burp collaborator in a less obvious way before taking the plunge and implementing my own solution.</p>
<p>Initially, I found that you can run your own collaborator server, which I recommend if you follow this guide as to not piss off PortSwigger. However, even when using your own Collaborator server, there is not an obvious way to interact with it outside BurpSuite. Which leads me to the following…</p>
<h3>How?</h3>
<h4>Theory</h4>
<p>Through some research I discovered that in order to maintain a simple stateful collaborator implementation, they generate the collaborator subdomains using a key derivation function based on a secret key. This secret key is generated by the Burp collaborator client when you open it, and subsequently destroyed when you close it.</p>
<p>When polling for interactions, Burp’s collaborator server regenerates the list of collaborator domains from the secret key, and returns the interactions it has recorded against that subdomain. Thus, it is possible to capture a Collaborator secret, and use it to poll for interactions made against links generated from that secret key.</p>
<h4>Methodology</h4>
<p>To begin with, we must find a way to intercept a polling request from BurpSuite, to the Burp Collaborator server. As this is a HTTP based protocol, you can use two instances of BurpSuite to achieve this. However, it’s probably easier to use wireshark.</p>
<p>However, before we are able to capture the polling request sent by BurpSuite to collaborator, we must first go to <code>Project Options-&gt;misc</code>, and set Collaborator to poll over HTTP.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/6/619d4c7ea82d3f0e3eb0ea89e703cf98714225ed.png" alt="over_http" data-base62-sha1="dVxkchdomSLRCyIXagtDVr0mNit" width="687" height="500"></p>
<p>Once this has been achieved, and wireshark is listening on the appropriate interface, go to <code>Burp-&gt;Collaborator Client</code> and press <code>Poll now</code>. In wireshark, you should now see a HTTP request to <code>http://polling.burpcollaborator.net/burpresults?biid=SECRET_KEY_HERE</code>. Take note of the secret key value sent as the value of the <code>biid</code> parameter.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/2/2776ea6edba87fe2fccb85b39c91f164d5f6f4f5.png" alt="wireshark" data-base62-sha1="5D7oCK3Hv0rEqvq7MGvcX8sFdLD" width="690" height="341"></p>
<p>Now, it’s time to get some links to use with this secret in future. To do so, generate however many links you think you may need, and save them somewhere, along with the secret key.</p>
<p>It is now possible to retrieve interactions with any one of the generated collaborator links by sending a HTTP GET request to <code>http://polling.burpcollaborator.net/burpresults?biid=SECRET_KEY_HERE</code>. As the collaborator server generates the links using the secret key, they will never expire. However, the Burp collaborator server is ephemeral and thus may lose data if it is left there for prolonged periods. As such, it is recommended you poll regularly to collect your data.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/a/a61a01b4bc5bf5e453845d4e11f80ee785c452a5.png" alt="demo" data-base62-sha1="nHoYHIATmlmFvq2HheibG022b1H" width="690" height="179"></p>
<h4>Conclusion</h4>
<p>I hope this helps the researchers out there in some way, and if you haven’t already, I highly recommend watching James Kettle’s talk “cracking the lens” and messing about with it yourself, it’s bizarre some of the interactions you can get from services by placing links in weird places. Figuring out why you have so many pingbacks for China when you never sprayed there will keep you busy for a while ;).</p>
          <p><a href="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311/1</link>
        <pubDate>Tue, 11 Jun 2019 19:47:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14311-1</guid>
        <source url="https://0x00sec.org/t/achieving-persistent-access-to-burp-collaborator-sessions/14311.rss">Achieving Persistent Access to Burp Collaborator Sessions</source>
      </item>
  </channel>
</rss>
