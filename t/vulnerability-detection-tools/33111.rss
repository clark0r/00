<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Vulnerability detection tools</title>
    <link>https://0x00sec.org/t/vulnerability-detection-tools/33111</link>
    <description>Hello,
When a hacker finds a vulnerability in a program such as Signal or Telegram, did he\she use reverse engineering techniques to find the vulnerability or debugging or decompilation?
What tools are needed?

Thank you.</description>
    
    <lastBuildDate>Mon, 16 Oct 2023 06:25:45 +0000</lastBuildDate>
    <category>Beginner Guides</category>
    <atom:link href="https://0x00sec.org/t/vulnerability-detection-tools/33111.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Vulnerability detection tools</title>
        <dc:creator><![CDATA[Hack3rcon]]></dc:creator>
        <description><![CDATA[
            <p>Hello,<br>
Thank you so much for your reply.<br>
How to fuzzing .exe files?</p>
          <p><a href="https://0x00sec.org/t/vulnerability-detection-tools/33111/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/vulnerability-detection-tools/33111/6</link>
        <pubDate>Mon, 16 Oct 2023 06:25:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-33111-6</guid>
        <source url="https://0x00sec.org/t/vulnerability-detection-tools/33111.rss">Vulnerability detection tools</source>
      </item>
      <item>
        <title>Vulnerability detection tools</title>
        <dc:creator><![CDATA[0xbro]]></dc:creator>
        <description><![CDATA[
            <p>Let me premise that I am not an expert, especially in reversing and binary exploitation.</p>
<p>But anyway: for close source applications you use disassemblers and decompilers to try to get readable code. Some of the most popular ones are definitely IDA, Ghidra, BinaryNinja, and dnSpy. Some of these also act as debuggers, but in general, they are used precisely to debug errors, whether an open-source product or a close source product. Depending on the OS there are different debuggers: gdb on Linux, windbg, x64dbg, immunity, and others on windows.</p>
<p>On close source programs, fuzzing is also done to analyze how an application behaves when it receives unexpected characters. On open products, it is generally not necessary to do this because you can read from the code what would happen, but for closed products it is essential. To do fuzzing there are different tools depending on the type of application you need to fuzz: you can use burpsuite, wfuzz or ffuf to fuzz on the web, AFL or others to fuzz client applications</p>
<p>For open-source programs, you don’t need to use Ghidra or IDA because you already have the source code. Instead, it may come in handy to use a code review tool and then a debugger to check whether the identified vulnerabilities are false positives.</p>
          <p><a href="https://0x00sec.org/t/vulnerability-detection-tools/33111/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/vulnerability-detection-tools/33111/5</link>
        <pubDate>Fri, 03 Feb 2023 13:40:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-33111-5</guid>
        <source url="https://0x00sec.org/t/vulnerability-detection-tools/33111.rss">Vulnerability detection tools</source>
      </item>
      <item>
        <title>Vulnerability detection tools</title>
        <dc:creator><![CDATA[Hack3rcon]]></dc:creator>
        <description><![CDATA[
            <p>Hello,<br>
No idea? I’m thankful if anyone shares his\her ideas and opinions.</p>
          <p><a href="https://0x00sec.org/t/vulnerability-detection-tools/33111/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/vulnerability-detection-tools/33111/4</link>
        <pubDate>Sat, 28 Jan 2023 10:27:29 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-33111-4</guid>
        <source url="https://0x00sec.org/t/vulnerability-detection-tools/33111.rss">Vulnerability detection tools</source>
      </item>
      <item>
        <title>Vulnerability detection tools</title>
        <dc:creator><![CDATA[Hack3rcon]]></dc:creator>
        <description><![CDATA[
            <p>Hello,<br>
Thank you so much for your reply.<br>
So, for the close source program, the hacker uses Reverse Engineering, Decompilation and Fuzzing. Am I right? If yes, can you show me a list of programs?<br>
For open source program, hacker reads source code and find the bugs with a debugger like the GDB? For open source programs, a tool like the IDA Pro or Ghidra is not needed?</p>
          <p><a href="https://0x00sec.org/t/vulnerability-detection-tools/33111/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/vulnerability-detection-tools/33111/3</link>
        <pubDate>Wed, 25 Jan 2023 10:26:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-33111-3</guid>
        <source url="https://0x00sec.org/t/vulnerability-detection-tools/33111.rss">Vulnerability detection tools</source>
      </item>
      <item>
        <title>Vulnerability detection tools</title>
        <dc:creator><![CDATA[0xbro]]></dc:creator>
        <description><![CDATA[
            <p>It really depends on the effort and type of situation the researcher is facing. Generally speaking, when there is no source code available, practicing some sort of reverse engineering is always a good practice. Depending on the application then you may be able to get a very high-level decompiled source code or just a low-level disassembled one, however, in both cases, having something it’s better than nothing.<br>
Researchers usually also fuzz their target when possible, so that they can find some crashes and then investigate them through debugs, crash-dump, etc.<br>
Moreover, they hunt also for logic bugs, and in these situations, the reversed source code can be a very time-saving element.</p>
<p>To summarize, there isn’t just a single technique, but in most cases, it’s a combination of all of them that can you lead to finding a vuln.</p>
          <p><a href="https://0x00sec.org/t/vulnerability-detection-tools/33111/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/vulnerability-detection-tools/33111/2</link>
        <pubDate>Wed, 25 Jan 2023 08:23:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-33111-2</guid>
        <source url="https://0x00sec.org/t/vulnerability-detection-tools/33111.rss">Vulnerability detection tools</source>
      </item>
      <item>
        <title>Vulnerability detection tools</title>
        <dc:creator><![CDATA[Hack3rcon]]></dc:creator>
        <description><![CDATA[
            <p>Hello,<br>
When a hacker finds a vulnerability in a program such as Signal or Telegram, did he\she use reverse engineering techniques to find the vulnerability or debugging or decompilation?<br>
What tools are needed?</p>
<p>Thank you.</p>
          <p><a href="https://0x00sec.org/t/vulnerability-detection-tools/33111/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/vulnerability-detection-tools/33111/1</link>
        <pubDate>Tue, 24 Jan 2023 19:43:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-33111-1</guid>
        <source url="https://0x00sec.org/t/vulnerability-detection-tools/33111.rss">Vulnerability detection tools</source>
      </item>
  </channel>
</rss>
