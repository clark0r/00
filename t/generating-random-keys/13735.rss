<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Generating Random keys</title>
    <link>https://0x00sec.org/t/generating-random-keys/13735</link>
    <description>I am trying to generate a key from a given functions made by me, but I want to add randomize algorim without repetition similar as I do in python using ```secrets``` , but how can I do it in c++? my variable  ```seq``` which store ```one , two , three, four``` , but once I want to concatenate my functions to generate my key if I change to ```std::vector&lt;std::string``` my t it return an error of ```std::basic```


```
int main(){
	std::vector&lt;std::string&gt; seq{ &quot;One&quot;, &quot;Two&quot;, &quot;Three&quot;, &quot;Four&quot; };
	std::string t = reverse.ascii_lowercase() + reverse.ascii_uppercase() + reverse.digits() + reverse.punctuation();
	std::cout &lt;&lt; reverse.join(seq, &quot;--&quot;) &lt;&lt; std::endl;
	std::cin.get();
}
```

```python
t = string.ascii_lowercase + string.ascii_uppercase + string.digits + string.punctuation
key = &#39;&#39;.join([secrets.choice(t) for _ in range(20)])
```</description>
    
    <lastBuildDate>Mon, 20 May 2019 11:36:40 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/generating-random-keys/13735.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Generating Random keys</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed 3 days after the last reply. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/generating-random-keys/13735/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/generating-random-keys/13735/5</link>
        <pubDate>Thu, 23 May 2019 11:36:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13735-5</guid>
        <source url="https://0x00sec.org/t/generating-random-keys/13735.rss">Generating Random keys</source>
      </item>
      <item>
        <title>Generating Random keys</title>
        <dc:creator><![CDATA[fxbg]]></dc:creator>
        <description><![CDATA[
            <p>if you add the c++11 flag to the compiler</p>
          <p><a href="https://0x00sec.org/t/generating-random-keys/13735/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/generating-random-keys/13735/4</link>
        <pubDate>Mon, 20 May 2019 11:36:40 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13735-4</guid>
        <source url="https://0x00sec.org/t/generating-random-keys/13735.rss">Generating Random keys</source>
      </item>
      <item>
        <title>Generating Random keys</title>
        <dc:creator><![CDATA[blackleitus]]></dc:creator>
        <description><![CDATA[
            <p>is there a way to implement mt19937 ?</p>
          <p><a href="https://0x00sec.org/t/generating-random-keys/13735/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/generating-random-keys/13735/3</link>
        <pubDate>Sun, 19 May 2019 18:58:29 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13735-3</guid>
        <source url="https://0x00sec.org/t/generating-random-keys/13735.rss">Generating Random keys</source>
      </item>
      <item>
        <title>Generating Random keys</title>
        <dc:creator><![CDATA[fxbg]]></dc:creator>
        <description><![CDATA[
            <p>have you tried using srand(time()) ?</p>
          <p><a href="https://0x00sec.org/t/generating-random-keys/13735/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/generating-random-keys/13735/2</link>
        <pubDate>Sun, 19 May 2019 09:17:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13735-2</guid>
        <source url="https://0x00sec.org/t/generating-random-keys/13735.rss">Generating Random keys</source>
      </item>
      <item>
        <title>Generating Random keys</title>
        <dc:creator><![CDATA[blackleitus]]></dc:creator>
        <description><![CDATA[
            <p>I am trying to generate a key from a given functions made by me, but I want to add randomize algorim without repetition similar as I do in python using <code>secrets</code> , but how can I do it in c++? my variable  <code>seq</code> which store <code>one , two , three, four</code> , but once I want to concatenate my functions to generate my key if I change to <code>std::vector&lt;std::string</code> my t it return an error of <code>std::basic</code></p>
<pre><code class="lang-auto">int main(){
	std::vector&lt;std::string&gt; seq{ "One", "Two", "Three", "Four" };
	std::string t = reverse.ascii_lowercase() + reverse.ascii_uppercase() + reverse.digits() + reverse.punctuation();
	std::cout &lt;&lt; reverse.join(seq, "--") &lt;&lt; std::endl;
	std::cin.get();
}
</code></pre>
<pre><code class="lang-python">t = string.ascii_lowercase + string.ascii_uppercase + string.digits + string.punctuation
key = ''.join([secrets.choice(t) for _ in range(20)])
</code></pre>
          <p><a href="https://0x00sec.org/t/generating-random-keys/13735/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/generating-random-keys/13735/1</link>
        <pubDate>Fri, 17 May 2019 19:50:40 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13735-1</guid>
        <source url="https://0x00sec.org/t/generating-random-keys/13735.rss">Generating Random keys</source>
      </item>
  </channel>
</rss>
