<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Render UI [Reverse Engineering]</title>
    <link>https://0x00sec.org/t/render-ui-reverse-engineering/18138</link>
    <description>Hi, I would like to say &quot;hello to everyone&quot; from this forum judging that I&#39;m new here, I have a couple of questions about reverse engineering, and please excuse my ignorance If it may sound stupid.

A couple of months ago I started with &quot;game hacking&quot; it&#39;s a nice thing to create aimbot, wallhacks and stuff like this, but to be honest I was always wondering how to add an in-game button based on the same logic that the game used initially. 

Example 
for an in-game button, the game is using .tga files

- Bg .tga
- But .tga
- But-Active.tga

Also if there is any guide here that would be able to show me how to do such things I would really appreciate a link for, thank you for your time and I hope I did not say to much stupid stuff.</description>
    
    <lastBuildDate>Wed, 18 Dec 2019 16:27:14 +0000</lastBuildDate>
    <category>Reverse Engineering</category>
    <atom:link href="https://0x00sec.org/t/render-ui-reverse-engineering/18138.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Render UI [Reverse Engineering]</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/render-ui-reverse-engineering/18138/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/render-ui-reverse-engineering/18138/3</link>
        <pubDate>Sat, 18 Apr 2020 04:54:53 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-18138-3</guid>
        <source url="https://0x00sec.org/t/render-ui-reverse-engineering/18138.rss">Render UI [Reverse Engineering]</source>
      </item>
      <item>
        <title>Render UI [Reverse Engineering]</title>
        <dc:creator><![CDATA[hostile.node]]></dc:creator>
        <description><![CDATA[
            <p>Hello Prex.</p>
<p>I’m afraid that if what you want to do is to create a button using the same logic the game used, then the answer is heavily game dependent. In general you’d be looking into how the game packages its resources and how you can pack that with additional content. If the game is using something like HTML for its user interface, then modifying it and adding new buttons should be doable, but if they’re using Scaleform you’ll have to reverse the SWF files, edit that and then put it back together.</p>
<p>If the studio uses their own UI library, then you’ll have to figure that library out first and how they lay out their files.</p>
<p>Finally, if this is a small game and they’ve just hardcoded the UI… then that’s going to be painful. If you’re lucky the engine is separate and in a DLL with exported functions which you can play with.</p>
<p>If you want a game to fiddle with, you could check Skyrim as that’s mod friendly and the community has done some rather unspeakable things to that game. You could look into how <a href="https://www.nexusmods.com/skyrim/mods/3863" rel="nofollow noopener">SkyUI</a> creates user interface elements and how <a href="http://skse.silverlock.org/" rel="nofollow noopener">SKSE</a> extends the game to allow such behaviour.</p>
          <p><a href="https://0x00sec.org/t/render-ui-reverse-engineering/18138/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/render-ui-reverse-engineering/18138/2</link>
        <pubDate>Wed, 18 Dec 2019 16:27:14 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-18138-2</guid>
        <source url="https://0x00sec.org/t/render-ui-reverse-engineering/18138.rss">Render UI [Reverse Engineering]</source>
      </item>
      <item>
        <title>Render UI [Reverse Engineering]</title>
        <dc:creator><![CDATA[Prex_Coder]]></dc:creator>
        <description><![CDATA[
            <p>Hi, I would like to say “hello to everyone” from this forum judging that I’m new here, I have a couple of questions about reverse engineering, and please excuse my ignorance If it may sound stupid.</p>
<p>A couple of months ago I started with “game hacking” it’s a nice thing to create aimbot, wallhacks and stuff like this, but to be honest I was always wondering how to add an in-game button based on the same logic that the game used initially.</p>
<p>Example<br>
for an in-game button, the game is using .tga files</p>
<ul>
<li>Bg .tga</li>
<li>But .tga</li>
<li>But-Active.tga</li>
</ul>
<p>Also if there is any guide here that would be able to show me how to do such things I would really appreciate a link for, thank you for your time and I hope I did not say to much stupid stuff.</p>
          <p><a href="https://0x00sec.org/t/render-ui-reverse-engineering/18138/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/render-ui-reverse-engineering/18138/1</link>
        <pubDate>Wed, 18 Dec 2019 12:54:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-18138-1</guid>
        <source url="https://0x00sec.org/t/render-ui-reverse-engineering/18138.rss">Render UI [Reverse Engineering]</source>
      </item>
  </channel>
</rss>
