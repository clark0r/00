<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Twitter json to csv</title>
    <link>https://0x00sec.org/t/twitter-json-to-csv/6675</link>
    <description>I am trying to convert the twitter json data to csv. I am able to get the top level attributes perfectly but the attributes which are nested, I&#39;m not able to parse. The nested json is like this 
  

     &quot;entities&quot;:{

      &quot;hashtags&quot;:[

      ],
      &quot;urls&quot;:[
         {
            &quot;url&quot;:&quot;https:\/\/t.co\/ieON9yclmy&quot;,
            &quot;expanded_url&quot;:&quot;http:\/\/www.dailymail.co.uk\/news\/article-4044728\/Theresa-wants-use-army-computerised-Trump-mind-readers-help-win-Election.html#ixzz5AE6Hx3VW&quot;,
            &quot;display_url&quot;:&quot;dailymail.co.uk\/news\/article-4\u2026&quot;,
            &quot;indices&quot;:[
               39,
               62
            ]
         }
      ],
      &quot;user_mentions&quot;:[
         {
            &quot;screen_name&quot;:&quot;neonbubble&quot;,
            &quot;name&quot;:&quot;Mark H&quot;,
            &quot;id&quot;:10934622,
            &quot;id_str&quot;:&quot;10934622&quot;,
            &quot;indices&quot;:[
               0,
               11
            ]
         }

Right now my python code looks like this 

    from operator import itemgetter
    from StringIO import StringIO
    import csv
    import json
    import sys
    reload(sys)
    sys.setdefaultencoding(&#39;utf8&#39;)

    def get_leaves(item, key=None):
        if isinstance(item, dict):
            leaves = []
            for i in item.keys():
                leaves.extend(get_leaves(item[i], i))
            return leaves
        elif isinstance(item, list):
            leaves = []
            for i in item:
                leaves.extend(get_leaves(i, key))
            return get_leaves
        else:
            return [(key,item)]


    header = [&#39;created_at&#39;, &#39;id&#39;, &#39;id_str&#39;, &#39;in_reply_to_status_id&#39;, &#39;in_reply_to_user_id&#39;, &#39;text&#39;, &#39;source&#39;, &#39;truncated&#39;, &#39;in_reply_to_status_id_str&#39;, &#39;in_reply_to_user_id_str&#39;, &#39;in_reply_to_screen_name&#39;, &#39;user&#39;, &#39;entities&#39;]
    required_cols = itemgetter(*header)
 
    with open(&#39;twitter.json&#39;) as f_input, open(&#39;output.csv&#39;, &#39;wb&#39;) as f_output:
        csv_output = csv.writer(f_output)
        csv_output.writerow(header)
        write_header = True

        for entry in f_input:
            if entry.strip(): 
                leaf_entries = sorted(get_leaves(entry))
                csv_output.writerow(required_cols(json.loads(leaf_entries)))
  
How can I do it in python?</description>
    
    <lastBuildDate>Mon, 14 May 2018 18:36:39 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/twitter-json-to-csv/6675.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Twitter json to csv</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/twitter-json-to-csv/6675/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/twitter-json-to-csv/6675/6</link>
        <pubDate>Wed, 13 Jun 2018 16:49:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6675-6</guid>
        <source url="https://0x00sec.org/t/twitter-json-to-csv/6675.rss">Twitter json to csv</source>
      </item>
      <item>
        <title>Twitter json to csv</title>
        <dc:creator><![CDATA[g3troot]]></dc:creator>
        <description><![CDATA[
            <p>you can use the json file here <a href="https://pastebin.com/RxCJr871" rel="nofollow noopener">https://pastebin.com/RxCJr871</a></p>
          <p><a href="https://0x00sec.org/t/twitter-json-to-csv/6675/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/twitter-json-to-csv/6675/5</link>
        <pubDate>Mon, 14 May 2018 18:36:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6675-5</guid>
        <source url="https://0x00sec.org/t/twitter-json-to-csv/6675.rss">Twitter json to csv</source>
      </item>
      <item>
        <title>Twitter json to csv</title>
        <dc:creator><![CDATA[fxbg]]></dc:creator>
        <description><![CDATA[
            <pre><code class="lang-auto">#!/usr/bin/python
import csv
import json

with open('json', 'r') as myfile:
        jsonData = myfile.read()

data = json.loads(jsonData)
wfile = csv.writer(open("json.csv", "wb+"))

for data in data:
        ndata = json.dumps(data)
        wfile.writerow([
                ndata["entities"],ndata["urls"]
                ])
</code></pre>
<p>It errors:</p>
<pre><code class="lang-auto">Traceback (most recent call last):
  File "conv.py", line 14, in &lt;module&gt;
    ndata["entities"],ndata["urls"]
TypeError: string indices must be integers, not str
</code></pre>
<p>but maybe you can get it going, I suck at python, below is the <strong>json</strong> file I used.</p>
<pre><code class="lang-auto">[{ "entities":{

  "hashtags":[

  ],
  "urls":[
     {
        "url":"https:\/\/t.co\/ieON9yclmy",
        "expanded_url":"http:\/\/www.dailymail.co.uk\/news\/article-4044728\/Theresa-wants-use-army-computerised-Trump-mind-readers-help-win-Election.html#ixzz5AE6Hx3VW",
        "display_url":"dailymail.co.uk\/news\/article-4\u2026",
        "indices":[
           39,
           62
        ]
     }
  ],
  "user_mentions":[
     {
        "screen_name":"neonbubble",
        "name":"Mark H",
        "id":10934622,
        "id_str":"10934622",
        "indices":[
           0,
           11
        ]
     }
]
}
}]
</code></pre>
          <p><a href="https://0x00sec.org/t/twitter-json-to-csv/6675/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/twitter-json-to-csv/6675/4</link>
        <pubDate>Mon, 14 May 2018 18:01:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6675-4</guid>
        <source url="https://0x00sec.org/t/twitter-json-to-csv/6675.rss">Twitter json to csv</source>
      </item>
      <item>
        <title>Twitter json to csv</title>
        <dc:creator><![CDATA[g3troot]]></dc:creator>
        <description><![CDATA[
            <p>running a big data query requires that.</p>
          <p><a href="https://0x00sec.org/t/twitter-json-to-csv/6675/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/twitter-json-to-csv/6675/3</link>
        <pubDate>Mon, 14 May 2018 17:04:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6675-3</guid>
        <source url="https://0x00sec.org/t/twitter-json-to-csv/6675.rss">Twitter json to csv</source>
      </item>
      <item>
        <title>Twitter json to csv</title>
        <dc:creator><![CDATA[fxbg]]></dc:creator>
        <description><![CDATA[
            <p>I have to ask, before I give it a go, why convert it to CSV?</p>
          <p><a href="https://0x00sec.org/t/twitter-json-to-csv/6675/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/twitter-json-to-csv/6675/2</link>
        <pubDate>Mon, 14 May 2018 17:01:29 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6675-2</guid>
        <source url="https://0x00sec.org/t/twitter-json-to-csv/6675.rss">Twitter json to csv</source>
      </item>
      <item>
        <title>Twitter json to csv</title>
        <dc:creator><![CDATA[g3troot]]></dc:creator>
        <description><![CDATA[
            <p>I am trying to convert the twitter json data to csv. I am able to get the top level attributes perfectly but the attributes which are nested, Iâ€™m not able to parse. The nested json is like this</p>
<pre><code> "entities":{

  "hashtags":[

  ],
  "urls":[
     {
        "url":"https:\/\/t.co\/ieON9yclmy",
        "expanded_url":"http:\/\/www.dailymail.co.uk\/news\/article-4044728\/Theresa-wants-use-army-computerised-Trump-mind-readers-help-win-Election.html#ixzz5AE6Hx3VW",
        "display_url":"dailymail.co.uk\/news\/article-4\u2026",
        "indices":[
           39,
           62
        ]
     }
  ],
  "user_mentions":[
     {
        "screen_name":"neonbubble",
        "name":"Mark H",
        "id":10934622,
        "id_str":"10934622",
        "indices":[
           0,
           11
        ]
     }
</code></pre>
<p>Right now my python code looks like this</p>
<pre><code>from operator import itemgetter
from StringIO import StringIO
import csv
import json
import sys
reload(sys)
sys.setdefaultencoding('utf8')

def get_leaves(item, key=None):
    if isinstance(item, dict):
        leaves = []
        for i in item.keys():
            leaves.extend(get_leaves(item[i], i))
        return leaves
    elif isinstance(item, list):
        leaves = []
        for i in item:
            leaves.extend(get_leaves(i, key))
        return get_leaves
    else:
        return [(key,item)]


header = ['created_at', 'id', 'id_str', 'in_reply_to_status_id', 'in_reply_to_user_id', 'text', 'source', 'truncated', 'in_reply_to_status_id_str', 'in_reply_to_user_id_str', 'in_reply_to_screen_name', 'user', 'entities']
required_cols = itemgetter(*header)

with open('twitter.json') as f_input, open('output.csv', 'wb') as f_output:
    csv_output = csv.writer(f_output)
    csv_output.writerow(header)
    write_header = True

    for entry in f_input:
        if entry.strip(): 
            leaf_entries = sorted(get_leaves(entry))
            csv_output.writerow(required_cols(json.loads(leaf_entries)))
</code></pre>
<p>How can I do it in python?</p>
          <p><a href="https://0x00sec.org/t/twitter-json-to-csv/6675/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/twitter-json-to-csv/6675/1</link>
        <pubDate>Mon, 14 May 2018 16:48:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-6675-1</guid>
        <source url="https://0x00sec.org/t/twitter-json-to-csv/6675.rss">Twitter json to csv</source>
      </item>
  </channel>
</rss>
