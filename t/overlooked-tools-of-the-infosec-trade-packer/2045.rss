<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Overlooked tools of the infosec trade: Packer</title>
    <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045</link>
    <description>We spend a lot of time talking about the obvious infosec tools like fuzzers, VPNs, key loggers, and the &quot;sexy&quot; things. However, there are quite a few useful tools out there that can be used to maintain your lab, help your research, and help you get stuff done faster.

## Packer

[Packer by Hasicorp](https://www.packer.io/) is for building machine images that you can deploy on most any cloud or virtualization platform (Digitalocean, AWS, Hyper-V, VMware, you name it). Why does this matter?

Instead of the tedious process of maintaining a fleet of golden images that quickly go out of date and can be hard to pack for a series of different environment or maintaining storage for a bunch of said images (which can get costly if they&#39;re large or numerous), you simply use a packer script to build it shortly before you want to deploy it. Packer also allows you to build the same image suitable for a variety of virtualization environments. Have a packer script that you use for DO but want to use it in a VMware lab? Simple: Just change 2-3 lines and run it again.

### Speed matters

Let&#39;s say you don&#39;t want to pay the money to keep an SSH proxy, SFTP, or some other service running full time. Or maybe it was a pain in the butt to configure. Or maybe you have already automated the configuration through the world&#39;s most complex Cloud-init script ever, but don&#39;t want to wait 30 minutes for it to deploy. You want it NOW! If you&#39;re using a pre-baked image that you built with packer, your deployment and configuration time is only limited by how fast the platform and deploy a machine. For Digitalocean or Amazon, that&#39;s under a minute.

### Repeatability matters

I have bad news for you: You&#39;re probably human. I&#39;m sorry. And if you&#39;re human, you make mistakes (very sorry). Even in a process you&#39;ve done a hundred times before (very very sorry). Therefore, we do our best to do it right once and then automate the process thereafter. 

Packer also allows us to use our favorite tools like Ansible, Puppet, Chef, or terrible shell scripts to build the machines. Complicated tasks get boiled down to a couple lines of code!

### Sharing is caring

Have a packer build that you like? Have one that someone else wants? Put it in git, let them clone it down. Much easier than trying to share a VM image.

----

## Your first packer build

We&#39;re going to build our first Digitalocean image and [rip instructions straight from Packer&#39;s website to do it](https://www.packer.io/intro/getting-started/build-image.html). One small difference: Their guide uses AWS. We&#39;ll use DO instead.

I&#39;m going to assume you can read instructions and figure out how to install it from [their guide](https://www.packer.io/intro/getting-started/install.html). If you&#39;re on MacOS, it&#39;s just `brew install packer`.

Now, let&#39;s create a directory for our packer config. This can be within an existing project if you like. For example, you may have an application you want to deploy and frequently want to spin up virtual machines that are configured to use it. You can add a `packer/` directory that builds your application in an image and spits something out that&#39;s ready to use. Nifty, huh?

Before we write the config, it&#39;s probably best to obtain your API creds. Log into DigitalOcean and get creds here: https://cloud.digitalocean.com/settings/api/tokens (or click your profile pic in top right &gt; settings  &gt; API. Tokens is default pane). Stash those creds somewhere safe for a moment, we&#39;ll need them soon.

Drop the following config in a file named something like `my_super_awesome_packer_image.json`:

```json
{
  &quot;builders&quot;: [{
	  &quot;type&quot;: &quot;digitalocean&quot;,
	  &quot;api_token&quot;: &quot;aaaabbbbccccdddd1111222233334444&quot;,
	  &quot;image&quot;: &quot;ubuntu-16-04-x64&quot;,
	  &quot;region&quot;: &quot;nyc2&quot;,
	  &quot;size&quot;: &quot;512mb&quot;,
	  &quot;ssh_username&quot;:&quot;root&quot;,
	  &quot;snapshot_name&quot;: &quot;baseline-{{timestamp}}&quot;
  }],
  &quot;provisioners&quot;:[{
	  &quot;type&quot;:&quot;shell&quot;,
	  &quot;script&quot;:&quot;./scripts/base.sh&quot;
  }]
}
```

Let&#39;s breakdown what we&#39;re looking at. First, notice the whole thing is in JSON. Not much to explain there.

Next, notice that there are two top-level keys: `builders` and `provisioners`. Those two are the basis of the whole packer config: `builders` is an array of configs for each platform you want to build against. If you want to build the same config at the same time against AWS and DO, just add two builder fields after the builder key. The other is `provisioners`. Provisioners are what do the work of configuring the machine, and they run in order, first to last. You can use shell scripts, ansible, puppet, chef, or in-line shell commands. Notice here that I used a shell script.

Now run `packer build my_super_awesome_packer_image.json` (assuming you have a script in `scripts/base.sh`. If not, just remove that provisioner block) and let packer create the image for you! 

From here, you can go do the DO control panel, select the &quot;Images&quot; and you&#39;ll see your packer build available as a snapshot, ready to deploy.</description>
    
    <lastBuildDate>Fri, 08 Mar 2019 00:30:56 +0000</lastBuildDate>
    <category>Operations</category>
    <atom:link href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 3 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/11</link>
        <pubDate>Mon, 11 Mar 2019 18:00:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-11</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[binshift2]]></dc:creator>
        <description><![CDATA[
            <p>Thanks fraq,  I have been just cussing out having to keep on burning DVDs for my vm images<br>
I will have to check packer out.</p>
<p>Bin</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/10</link>
        <pubDate>Fri, 08 Mar 2019 00:30:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-10</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[TKBomber]]></dc:creator>
        <description><![CDATA[
            <p>That is very good to know. I will have a deeper look into this.</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/9</link>
        <pubDate>Thu, 07 Mar 2019 23:14:34 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-9</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Packer is completely different.</p>
<p>Packer is for creating images on servers.</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/8</link>
        <pubDate>Thu, 07 Mar 2019 23:13:08 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-8</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[TKBomber]]></dc:creator>
        <description><![CDATA[
            <p>What advantage would this have over say docker?</p>
<p>Edit:<br>
Apologies for digging up this thread I saw it was reopened and I assumed it was less than 30 days ago.</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/7</link>
        <pubDate>Thu, 07 Mar 2019 22:36:58 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-7</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Reopened this to comment:</p>
<p>I am creating a pentest box in GCP with packer.</p>
<p>So I can run “hackbox now” and it’ll give me a pentest environment premade. This is going to be invaluable for pentests.</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/6</link>
        <pubDate>Wed, 04 Jul 2018 19:29:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-6</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/5</link>
        <pubDate>Wed, 04 Jul 2018 19:28:14 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-5</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/4</link>
        <pubDate>Sun, 21 Jan 2018 00:34:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-4</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>You’re really only limited here by your creativity, but here are a couple of examples off the top of my head:</p>
<ol>
<li>Quick and disposable C2 infrastructure</li>
<li>Reusable/sharable lab VMs (such as demonstrating an exploit)</li>
<li>Creating a poisoned image and tricking someone into running it in their infra</li>
</ol>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/3</link>
        <pubDate>Tue, 16 May 2017 19:01:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-3</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>What would this be useful for in a pentesting/hacking enviornment?</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/2</link>
        <pubDate>Tue, 16 May 2017 18:38:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-2</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
      <item>
        <title>Overlooked tools of the infosec trade: Packer</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>We spend a lot of time talking about the obvious infosec tools like fuzzers, VPNs, key loggers, and the “sexy” things. However, there are quite a few useful tools out there that can be used to maintain your lab, help your research, and help you get stuff done faster.</p>
<h2>Packer</h2>
<p><a href="https://www.packer.io/" rel="nofollow noopener">Packer by Hasicorp</a> is for building machine images that you can deploy on most any cloud or virtualization platform (Digitalocean, AWS, Hyper-V, VMware, you name it). Why does this matter?</p>
<p>Instead of the tedious process of maintaining a fleet of golden images that quickly go out of date and can be hard to pack for a series of different environment or maintaining storage for a bunch of said images (which can get costly if they’re large or numerous), you simply use a packer script to build it shortly before you want to deploy it. Packer also allows you to build the same image suitable for a variety of virtualization environments. Have a packer script that you use for DO but want to use it in a VMware lab? Simple: Just change 2-3 lines and run it again.</p>
<h3>Speed matters</h3>
<p>Let’s say you don’t want to pay the money to keep an SSH proxy, SFTP, or some other service running full time. Or maybe it was a pain in the butt to configure. Or maybe you have already automated the configuration through the world’s most complex Cloud-init script ever, but don’t want to wait 30 minutes for it to deploy. You want it NOW! If you’re using a pre-baked image that you built with packer, your deployment and configuration time is only limited by how fast the platform and deploy a machine. For Digitalocean or Amazon, that’s under a minute.</p>
<h3>Repeatability matters</h3>
<p>I have bad news for you: You’re probably human. I’m sorry. And if you’re human, you make mistakes (very sorry). Even in a process you’ve done a hundred times before (very very sorry). Therefore, we do our best to do it right once and then automate the process thereafter.</p>
<p>Packer also allows us to use our favorite tools like Ansible, Puppet, Chef, or terrible shell scripts to build the machines. Complicated tasks get boiled down to a couple lines of code!</p>
<h3>Sharing is caring</h3>
<p>Have a packer build that you like? Have one that someone else wants? Put it in git, let them clone it down. Much easier than trying to share a VM image.</p>
<hr>
<h2>Your first packer build</h2>
<p>We’re going to build our first Digitalocean image and <a href="https://www.packer.io/intro/getting-started/build-image.html" rel="nofollow noopener">rip instructions straight from Packer’s website to do it</a>. One small difference: Their guide uses AWS. We’ll use DO instead.</p>
<p>I’m going to assume you can read instructions and figure out how to install it from <a href="https://www.packer.io/intro/getting-started/install.html" rel="nofollow noopener">their guide</a>. If you’re on MacOS, it’s just <code>brew install packer</code>.</p>
<p>Now, let’s create a directory for our packer config. This can be within an existing project if you like. For example, you may have an application you want to deploy and frequently want to spin up virtual machines that are configured to use it. You can add a <code>packer/</code> directory that builds your application in an image and spits something out that’s ready to use. Nifty, huh?</p>
<p>Before we write the config, it’s probably best to obtain your API creds. Log into DigitalOcean and get creds here: <a href="https://cloud.digitalocean.com/settings/api/tokens" rel="nofollow noopener">https://cloud.digitalocean.com/settings/api/tokens</a> (or click your profile pic in top right &gt; settings  &gt; API. Tokens is default pane). Stash those creds somewhere safe for a moment, we’ll need them soon.</p>
<p>Drop the following config in a file named something like <code>my_super_awesome_packer_image.json</code>:</p>
<pre><code class="lang-json">{
  "builders": [{
	  "type": "digitalocean",
	  "api_token": "aaaabbbbccccdddd1111222233334444",
	  "image": "ubuntu-16-04-x64",
	  "region": "nyc2",
	  "size": "512mb",
	  "ssh_username":"root",
	  "snapshot_name": "baseline-{{timestamp}}"
  }],
  "provisioners":[{
	  "type":"shell",
	  "script":"./scripts/base.sh"
  }]
}
</code></pre>
<p>Let’s breakdown what we’re looking at. First, notice the whole thing is in JSON. Not much to explain there.</p>
<p>Next, notice that there are two top-level keys: <code>builders</code> and <code>provisioners</code>. Those two are the basis of the whole packer config: <code>builders</code> is an array of configs for each platform you want to build against. If you want to build the same config at the same time against AWS and DO, just add two builder fields after the builder key. The other is <code>provisioners</code>. Provisioners are what do the work of configuring the machine, and they run in order, first to last. You can use shell scripts, ansible, puppet, chef, or in-line shell commands. Notice here that I used a shell script.</p>
<p>Now run <code>packer build my_super_awesome_packer_image.json</code> (assuming you have a script in <code>scripts/base.sh</code>. If not, just remove that provisioner block) and let packer create the image for you!</p>
<p>From here, you can go do the DO control panel, select the “Images” and you’ll see your packer build available as a snapshot, ready to deploy.</p>
          <p><a href="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045/1</link>
        <pubDate>Tue, 16 May 2017 14:43:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2045-1</guid>
        <source url="https://0x00sec.org/t/overlooked-tools-of-the-infosec-trade-packer/2045.rss">Overlooked tools of the infosec trade: Packer</source>
      </item>
  </channel>
</rss>
