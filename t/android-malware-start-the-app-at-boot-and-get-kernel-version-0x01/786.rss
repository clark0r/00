<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Android Malware - Start the app at boot and get kernel Version 0x01</title>
    <link>https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786</link>
    <description>#Introduction 

Hi everyone ! Today, we will start to making the malware application for the **Android OS**, before you begin with this tutorial. If you want to be confortable with the tutorial you should have some basic knowledge of Java/Android programming ( class, method, permission).

If you don&#39;t understand some part of the code feel free to ask me more information :D 

Let&#39;s begin !

# Part I - Check kernel Version
---
## Can I use towelroot to root the device ? 

Towelroot is an exploit made by geohot ( available here [TowelRoot](https://towelroot.com/) is you&#39;re want to root your device ). The exploit made by geohot exploit the futex_requeue function in kernel/futex.c in Linux kernel through 3.14.5. 

Our Malware today will be able to 

* Get the currentKernel of the device
* Check if the kernel is greater than 3.14.15

*I&#39;ll use Android studio on window platform but you can use eclipse or whatever IDE you like*

Here I create a new project : 

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/7186e82fa9aeed80d85d3a363ee78f530a61229f.png&quot; width=&quot;690&quot; height=&quot;370&quot;&gt;

Choose the minimun sdk 

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/6b76768aaa21f42bc0760e35e7e548ad75351ade.png&quot; width=&quot;690&quot; height=&quot;449&quot;&gt;

Start with Empty activity 
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/5ffb1b5c60a5a81c20e08d7f4f5fd7bed664068b.png&quot; width=&quot;690&quot; height=&quot;449&quot;&gt;


## Class GatherInformation

Now that our project is created we will create a class GatherInformation. The class will have a method *isExploitable*, if the device is exploitable by the towelroot exploit the method will return true.

Create a new class GatherInformation

```java
package com.android.malwaretutorial_test;

/**
 * Created by jphet on 22/07/2016.
 */
public class GatherInformation {
    /** Method to verify kernel version**/
    public static boolean isExploitable() {
        /** Kernel will stock the current kernel device**/
        String kernel = System.getProperty(&quot;os.version&quot;).split(&quot;-&quot;)[0];
        /** For a 3.12.5 kernel , the variable will have : 3.12.5 as a string value 
            We split the kernel variable into an array =&gt; [3, 12, 5 ]
            we parse the string as and integer and we compare the kernel to see if we can use futex ( towelroot )
        **/
        if (Integer.parseInt(kernel.split(&quot;\\.&quot;)[0]) &lt;= 3) {
            if (Integer.parseInt(kernel.split(&quot;\\.&quot;)[1]) &lt;= 14) {
                if (Integer.parseInt(kernel.split(&quot;\\.&quot;)[2]) &lt;= 15) {
                    return true;
                }
            }
        }
        return false;
    }
}


```

Now we will print this to the screen to test our code. In the MainActivity 

```java
public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        /** Create a textView **/
        TextView text = (TextView)findViewById(R.id.exploitable);
       /** If the function return true print Root the device on the app **/
        if(GatherInformation.isExploitable()){
            text.setText(&quot;Root the device ! :) &quot;);
        }
        else {
            text.setText(&quot;Nooo :( Towelroot won&#39;t work&quot;);
        }
    }
}
```
In the activity_main.xml you should add an id to your text view 
```xml
&lt;TextView
        android:id=&quot;@+id/exploitable&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Hello World!&quot; /&gt;
```
Here the result 

With a kernel &gt; 3.14.15 
![Imgur](//0x00sec.s3.amazonaws.com/original/1X/f3c182b3a8694f7812ce47c70e6f405a5d5a160f.png)

With a kernel &lt;= 3.14.15 

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/55516b0d45daa965119051766a780061b4697e98.png&quot; width=&quot;321&quot; height=&quot;484&quot;&gt;

# Part II - Start application everytime the phone boot
---
Now we will start the application everytime the phone boot. We will make a new class called BootReceiver, this class will inherit the Broadcast Receivcer 
## BroadcastReceiver
```java
package com.android.malwaretutorial_test;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;

public class BootReceiver extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        /** if the boot is completed **/
        if(Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())){
            /** Start the MainActivity.class everytime the phone boot**/
            Intent i = new Intent(context, MainActivity.class);
            context.startActivity(i);
        }
    }
}
```

## Permission

Now we need to add permission to the manifest :slight_smile: 
```xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.android.malwaretutorial_test&quot;&gt;
    &lt;!--PERMISSION--&gt;
    &lt;uses-permission android:name=&quot;android.permission.RECEIVE_BOOT_COMPLETED&quot;/&gt;
    &lt;!--PERMISSION--&gt;
    &lt;application
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:supportsRtl=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;
        &lt;activity android:name=&quot;.MainActivity&quot;&gt;

            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;action android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;

                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;

            &lt;/intent-filter&gt;

        &lt;/activity&gt;

    &lt;/application&gt;

&lt;/manifest&gt;


```

Good job ! :) Now everytime you boot your phone the app will launch and tell you if your device can be rooted.</description>
    
    <lastBuildDate>Tue, 16 Jan 2018 07:25:28 +0000</lastBuildDate>
    <category>Malware</category>
    <atom:link href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Android Malware - Start the app at boot and get kernel Version 0x01</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786/4</link>
        <pubDate>Sun, 21 Jan 2018 00:42:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-786-4</guid>
        <source url="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786.rss">Android Malware - Start the app at boot and get kernel Version 0x01</source>
      </item>
      <item>
        <title>Android Malware - Start the app at boot and get kernel Version 0x01</title>
        <dc:creator><![CDATA[REal0day]]></dc:creator>
        <description><![CDATA[
            <p>Did this tutorial and I LOVED it.<br>
I wanted to just add all the features of towelroot to my Malware Tutorial APK, but am running around decompiling tr.apk, looking at TowelRoot.smali, libexploit.so, and getting a bit confused.</p>
<p>Wondering if I’m approaching this correctly, or if maybe I should just request more permissions from the user, and somehow write some code the will</p>
<ol>
<li>Download towelroot</li>
<li>Run it to gain root</li>
<li>Hide that app, or make it not appear.</li>
</ol>
<p>Any advice on this would be great!<br>
Thanks!</p>
          <p><a href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786/3</link>
        <pubDate>Tue, 16 Jan 2018 07:25:28 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-786-3</guid>
        <source url="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786.rss">Android Malware - Start the app at boot and get kernel Version 0x01</source>
      </item>
      <item>
        <title>Android Malware - Start the app at boot and get kernel Version 0x01</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Well that’s a pretty good start! I’m exited to see it actually root the phone though!</p>
          <p><a href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786/2</link>
        <pubDate>Fri, 22 Jul 2016 11:37:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-786-2</guid>
        <source url="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786.rss">Android Malware - Start the app at boot and get kernel Version 0x01</source>
      </item>
      <item>
        <title>Android Malware - Start the app at boot and get kernel Version 0x01</title>
        <dc:creator><![CDATA[L3akM3-0day]]></dc:creator>
        <description><![CDATA[
            <p><span class="hashtag">#Introduction</span></p>
<p>Hi everyone ! Today, we will start to making the malware application for the <strong>Android OS</strong>, before you begin with this tutorial. If you want to be confortable with the tutorial you should have some basic knowledge of Java/Android programming ( class, method, permission).</p>
<p>If you don’t understand some part of the code feel free to ask me more information <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>Let’s begin !</p>
<h1>Part I - Check kernel Version</h1>
<hr>
<h2>Can I use towelroot to root the device ?</h2>
<p>Towelroot is an exploit made by geohot ( available here <a href="https://towelroot.com/" rel="noopener nofollow ugc">TowelRoot</a> is you’re want to root your device ). The exploit made by geohot exploit the futex_requeue function in kernel/futex.c in Linux kernel through 3.14.5.</p>
<p>Our Malware today will be able to</p>
<ul>
<li>Get the currentKernel of the device</li>
<li>Check if the kernel is greater than 3.14.15</li>
</ul>
<p><em>I’ll use Android studio on window platform but you can use eclipse or whatever IDE you like</em></p>
<p>Here I create a new project :</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/7186e82fa9aeed80d85d3a363ee78f530a61229f.png" width="690" height="370"></p>
<p>Choose the minimun sdk</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/6b76768aaa21f42bc0760e35e7e548ad75351ade.png" width="690" height="449"></p>
<p>Start with Empty activity<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/5ffb1b5c60a5a81c20e08d7f4f5fd7bed664068b.png" width="690" height="449"></p>
<h2>Class GatherInformation</h2>
<p>Now that our project is created we will create a class GatherInformation. The class will have a method <em>isExploitable</em>, if the device is exploitable by the towelroot exploit the method will return true.</p>
<p>Create a new class GatherInformation</p>
<pre><code class="lang-java">package com.android.malwaretutorial_test;

/**
 * Created by jphet on 22/07/2016.
 */
public class GatherInformation {
    /** Method to verify kernel version**/
    public static boolean isExploitable() {
        /** Kernel will stock the current kernel device**/
        String kernel = System.getProperty("os.version").split("-")[0];
        /** For a 3.12.5 kernel , the variable will have : 3.12.5 as a string value 
            We split the kernel variable into an array =&gt; [3, 12, 5 ]
            we parse the string as and integer and we compare the kernel to see if we can use futex ( towelroot )
        **/
        if (Integer.parseInt(kernel.split("\\.")[0]) &lt;= 3) {
            if (Integer.parseInt(kernel.split("\\.")[1]) &lt;= 14) {
                if (Integer.parseInt(kernel.split("\\.")[2]) &lt;= 15) {
                    return true;
                }
            }
        }
        return false;
    }
}


</code></pre>
<p>Now we will print this to the screen to test our code. In the MainActivity</p>
<pre><code class="lang-java">public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        /** Create a textView **/
        TextView text = (TextView)findViewById(R.id.exploitable);
       /** If the function return true print Root the device on the app **/
        if(GatherInformation.isExploitable()){
            text.setText("Root the device ! :) ");
        }
        else {
            text.setText("Nooo :( Towelroot won't work");
        }
    }
}
</code></pre>
<p>In the activity_main.xml you should add an id to your text view</p>
<pre><code class="lang-xml">&lt;TextView
        android:id="@+id/exploitable"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!" /&gt;
</code></pre>
<p>Here the result</p>
<p>With a kernel &gt; 3.14.15<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/f3c182b3a8694f7812ce47c70e6f405a5d5a160f.png" alt="Imgur" width="" height=""></p>
<p>With a kernel &lt;= 3.14.15</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/55516b0d45daa965119051766a780061b4697e98.png" width="321" height="484"></p>
<h1>Part II - Start application everytime the phone boot</h1>
<hr>
<p>Now we will start the application everytime the phone boot. We will make a new class called BootReceiver, this class will inherit the Broadcast Receivcer</p>
<h2>BroadcastReceiver</h2>
<pre><code class="lang-java">package com.android.malwaretutorial_test;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;

public class BootReceiver extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        /** if the boot is completed **/
        if(Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())){
            /** Start the MainActivity.class everytime the phone boot**/
            Intent i = new Intent(context, MainActivity.class);
            context.startActivity(i);
        }
    }
}
</code></pre>
<h2>Permission</h2>
<p>Now we need to add permission to the manifest <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<pre><code class="lang-xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.android.malwaretutorial_test"&gt;
    &lt;!--PERMISSION--&gt;
    &lt;uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/&gt;
    &lt;!--PERMISSION--&gt;
    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"&gt;
        &lt;activity android:name=".MainActivity"&gt;

            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;action android:name="android.intent.category.DEFAULT" /&gt;

                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;

            &lt;/intent-filter&gt;

        &lt;/activity&gt;

    &lt;/application&gt;

&lt;/manifest&gt;


</code></pre>
<p>Good job ! <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Now everytime you boot your phone the app will launch and tell you if your device can be rooted.</p>
          <p><a href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786/1</link>
        <pubDate>Fri, 22 Jul 2016 11:32:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-786-1</guid>
        <source url="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786.rss">Android Malware - Start the app at boot and get kernel Version 0x01</source>
      </item>
  </channel>
</rss>
