<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Multithreaded Remote Backup Scanner</title>
    <link>https://0x00sec.org/t/multithreaded-remote-backup-scanner/4308</link>
    <description>Hello all,

I am looking for feedback on my backup finding tool.

**What is it and what does it do?**
It&#39;s a Python script that utilizes requests and multiprocessing to concurrently scan a remote file to find a backup of it, given URLs.

**How does it do it?**
On a more detailed level, it takes any amount of URLs and then parses them to break them into pieces: The subdomain and domain is the first piece, then the path, then the file, then the file extension. So www.google.com/var/example.php would be broken up into www.google.com, /var/, example, and .php. From there it creates a process for each URL and uses its dictionary of extensions and name versions to test nearly 2500 possible backups of the given file. e.g., if www.google.com/var/example.php.old exists, it will find it. It then displays the results.

**How fast is it?**
This is something I am working on, because it takes 8 minutes. Not 8 minutes per URL, just 8 minutes flat because of the multiprocessing.

**Where is it?**
https://github.com/larkwiot/backupfinder

**What Python version is it?**
I wrote it 2.7, but tjcater made a port to 3.something.something.

Feel free to ask questions or give comments/suggestions.

Thanks!</description>
    
    <lastBuildDate>Sun, 12 Nov 2017 21:12:12 +0000</lastBuildDate>
    <category>Reconnaissance</category>
    <atom:link href="https://0x00sec.org/t/multithreaded-remote-backup-scanner/4308.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Multithreaded Remote Backup Scanner</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/multithreaded-remote-backup-scanner/4308/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/multithreaded-remote-backup-scanner/4308/3</link>
        <pubDate>Tue, 12 Dec 2017 21:12:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4308-3</guid>
        <source url="https://0x00sec.org/t/multithreaded-remote-backup-scanner/4308.rss">Multithreaded Remote Backup Scanner</source>
      </item>
      <item>
        <title>Multithreaded Remote Backup Scanner</title>
        <dc:creator><![CDATA[larkwiot]]></dc:creator>
        <description><![CDATA[
            <p>Hello all,</p>
<p>I am looking for feedback on my backup finding tool.</p>
<p><strong>What is it and what does it do?</strong><br>
Itâ€™s a Python script that utilizes requests and multiprocessing to concurrently scan a remote file to find a backup of it, given URLs.</p>
<p><strong>How does it do it?</strong><br>
On a more detailed level, it takes any amount of URLs and then parses them to break them into pieces: The subdomain and domain is the first piece, then the path, then the file, then the file extension. So <a href="http://www.google.com/var/example.php" rel="noopener nofollow ugc">www.google.com/var/example.php</a> would be broken up into <a href="http://www.google.com" rel="noopener nofollow ugc">www.google.com</a>, /var/, example, and .php. From there it creates a process for each URL and uses its dictionary of extensions and name versions to test nearly 2500 possible backups of the given file. e.g., if <a href="http://www.google.com/var/example.php.old" rel="noopener nofollow ugc">www.google.com/var/example.php.old</a> exists, it will find it. It then displays the results.</p>
<p><strong>How fast is it?</strong><br>
This is something I am working on, because it takes 8 minutes. Not 8 minutes per URL, just 8 minutes flat because of the multiprocessing.</p>
<p><strong>Where is it?</strong><br>
</p><aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">
      <a href="https://github.com/larkwiot/backupfinder" target="_blank" rel="noopener nofollow ugc">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/9/97c03c17a6ed37450cc26eeeb06eaeae0c3e8c32.png" class="thumbnail onebox-avatar" width="400" height="400">

<h3><a href="https://github.com/larkwiot/backupfinder" target="_blank" rel="noopener nofollow ugc">larkwiot/backupfinder</a></h3>

<p>Contribute to larkwiot/backupfinder development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<p></p>
<p><strong>What Python version is it?</strong><br>
I wrote it 2.7, but tjcater made a port to 3.something.something.</p>
<p>Feel free to ask questions or give comments/suggestions.</p>
<p>Thanks!</p>
          <p><a href="https://0x00sec.org/t/multithreaded-remote-backup-scanner/4308/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/multithreaded-remote-backup-scanner/4308/1</link>
        <pubDate>Sun, 12 Nov 2017 21:12:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4308-1</guid>
        <source url="https://0x00sec.org/t/multithreaded-remote-backup-scanner/4308.rss">Multithreaded Remote Backup Scanner</source>
      </item>
  </channel>
</rss>
