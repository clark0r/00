<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Clone Login Forms Manually to Capture Credientials</title>
    <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359</link>
    <description>SET is great when you have a short space of time at hand, however sometimes you want to know whats actually going on under the hood or have found a site you can&#39;t clone with SET.
### Step 1: Select Your Target!

The First Thing You&#39;re Going to Want to Do Is Select the Site Login You Wish to Clone! For This Tutorial I Will Be Using Facebook, However This Can Be Whatever You Like. Some Sites Use Some Javascript Obfuscation Magic to Hide the &lt;code&gt;Input&lt;/code&gt; Elements (Like the login.live.com Page). But Most Major Sites Use the Traditional &lt;code&gt;Input&lt;/code&gt; Element Method.
###Step 2: Use Wget to Download the Login Page

Now You Have Your Site in Mind, You Will Need to Download the Login Page. This Can Be Done with Wget.

wget -U &quot;Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0&quot; https://www.facebook.com/ -O facebook.html

![](//0x00sec.s3.amazonaws.com/original/1X/8786bf3f4b111dac02b0548a540908baeb1f0873.jpg)

Wget is the command used to download files.

-U means custom useragent, if we leave this out many sites will redirect us to other custom sites as Wget isn&#39;t a browser!

-O means we save the file with a custom name.
### Step 3: Modify the Exisiting Page Source.

This is where you will get your hands dirty, can be a little confusing at times, however is probably one of the most important steps. You will need to locate the form located on the page. My main editor is vim/atom, but I will be using atom for this tutorial. Open the facebook.html or file you downloaded with your editor and locate the form tag with a search.

![](//0x00sec.s3.amazonaws.com/original/1X/6d0f8e054d445e813e3227344b5cce4a599dfa57.jpg)

With a simple search I was able to locate the form, you will need to modify this to post to a custom PHP script. Our PHP script is called post.php, and is located in the same directory as our login html. So change the &lt;form&gt; tag to say. &lt;form method=&quot;post&quot; action=&quot;post.php&quot;&gt; and delete the rest of the items in the &lt;form tag&gt; between the first and second square angled brackets &lt;&gt;.

![](//0x00sec.s3.amazonaws.com/original/1X/ff27427474026106a582de723b979dc3c417fab8.jpg)

###Step 4: Write/Download a Credential Harvester.

So now, when you go to the page, click login, it will attempt to post the details entered to your post.php script... Which doesn&#39;t exist yet. You need to either write one or download one. I stole the one from SET and it works great. I have modifed it a little too. You can get this script from this fancy looking link or steal it from SET somewhere.
### Step 5: Do Some Server Magic!

Hopefully, you have a server with PHP and the like installed. Kali itself comes with Apache pre-installed and the directory is at /var/www/.

If you&#39;re like me, you use a hosted VPS. If you want one, you can upload a Kali ISO to it to make social engineering engagements more convincing and easier. I personally use a VPS hosting provider called Vultr, and you can get $5 free credit if you use [this link](http://www.vultr.com/?ref=6843429), which is easily enough for a quick engagement. You can also register a free-domain at freenom.com. This is great if you don&#39;t exactly want to spend a lot of money but just want to try it all out.

Anyway... Once you&#39;ve uploaded the files to a server, you may find you can enter your details to the page, and be re-directed, but no harvest files are created. To fix this, use chown to change the permissions of the folder.

chown -R www-data:www-data /var/www

This fixes most problems for me!
### Step 6: Social Engineer!

Now you will need to &quot;get creative!&quot;. Send the target an email or a message with something compelling on the other side that requires them to login. My common pretext is telling somebody about an extremely funny video that is 18+ rated, and they will need to re-login in order to watch it, I then edited the post.php to redirect to a funny video. By the time they&#39;ve finished laughing, you are already in their account.

Hopefully this is of help to you people! I learnt how do this by playing with it, and looking at what SET did, and it helped me to understand it all better :)

pry0cc</description>
    
    <lastBuildDate>Sun, 15 May 2016 20:37:55 +0000</lastBuildDate>
    <category>Social Engineering</category>
    <atom:link href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/9</link>
        <pubDate>Sun, 21 Jan 2018 00:38:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-9</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Thanks man! I wrote this a while ago!</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/8</link>
        <pubDate>Sun, 15 May 2016 20:37:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-8</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[n3xUs]]></dc:creator>
        <description><![CDATA[
            <p>Very good and interesting article. Keep it up!</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/7</link>
        <pubDate>Sun, 15 May 2016 20:17:42 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-7</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>I perhaps could do some tutorials? Would that be good?</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/6</link>
        <pubDate>Sun, 15 May 2016 07:07:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-6</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[Null]]></dc:creator>
        <description><![CDATA[
            <p>Thanks, I think I need to do some more reading about server hosting and especially Apache.</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/5</link>
        <pubDate>Sat, 14 May 2016 23:33:49 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-5</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Thanks! <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p>To serve up the cloned site, you need a server to host the content, otherwise nobody will be able to see it. Therefore you need to put the cloned &amp; modified html page, set it to index.html, and put the post.php script in there as well.</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/4</link>
        <pubDate>Sat, 14 May 2016 23:04:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-4</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[Merozey]]></dc:creator>
        <description><![CDATA[
            <p>good tut pry0cc. Might have to try this out!</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/3</link>
        <pubDate>Sat, 14 May 2016 23:04:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-3</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[Null]]></dc:creator>
        <description><![CDATA[
            <p>Well written! I have a couple questions mainly about the server/hosting process:</p>
<p>What do you mean by “Hopefully, you have a server with PHP and the like installed”, and what do I do with the pre-installed Apache directory (/var/www/)?</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/2</link>
        <pubDate>Sat, 14 May 2016 23:02:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-2</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
      <item>
        <title>Clone Login Forms Manually to Capture Credientials</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>SET is great when you have a short space of time at hand, however sometimes you want to know whats actually going on under the hood or have found a site you can’t clone with SET.</p>
<h3>Step 1: Select Your Target!</h3>
<p>The First Thing You’re Going to Want to Do Is Select the Site Login You Wish to Clone! For This Tutorial I Will Be Using Facebook, However This Can Be Whatever You Like. Some Sites Use Some Javascript Obfuscation Magic to Hide the <code>Input</code> Elements (Like the <a href="http://login.live.com">login.live.com</a> Page). But Most Major Sites Use the Traditional <code>Input</code> Element Method.<br>
##<span class="hashtag">#Step</span> 2: Use Wget to Download the Login Page</p>
<p>Now You Have Your Site in Mind, You Will Need to Download the Login Page. This Can Be Done with Wget.</p>
<p>wget -U “Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0” <a href="https://www.facebook.com/">https://www.facebook.com/</a> -O facebook.html</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/8786bf3f4b111dac02b0548a540908baeb1f0873.jpg" alt="" width="" height=""></p>
<p>Wget is the command used to download files.</p>
<p>-U means custom useragent, if we leave this out many sites will redirect us to other custom sites as Wget isn’t a browser!</p>
<p>-O means we save the file with a custom name.</p>
<h3>Step 3: Modify the Exisiting Page Source.</h3>
<p>This is where you will get your hands dirty, can be a little confusing at times, however is probably one of the most important steps. You will need to locate the form located on the page. My main editor is vim/atom, but I will be using atom for this tutorial. Open the facebook.html or file you downloaded with your editor and locate the form tag with a search.</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/6d0f8e054d445e813e3227344b5cce4a599dfa57.jpg" alt="" width="" height=""></p>
<p>With a simple search I was able to locate the form, you will need to modify this to post to a custom PHP script. Our PHP script is called post.php, and is located in the same directory as our login html. So change the  tag to say.  and delete the rest of the items in the  between the first and second square angled brackets &lt;&gt;.</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/1X/ff27427474026106a582de723b979dc3c417fab8.jpg" alt="" width="" height=""></p>
<p>##<span class="hashtag">#Step</span> 4: Write/Download a Credential Harvester.</p>
<p>So now, when you go to the page, click login, it will attempt to post the details entered to your post.php script… Which doesn’t exist yet. You need to either write one or download one. I stole the one from SET and it works great. I have modifed it a little too. You can get this script from this fancy looking link or steal it from SET somewhere.</p>
<h3>Step 5: Do Some Server Magic!</h3>
<p>Hopefully, you have a server with PHP and the like installed. Kali itself comes with Apache pre-installed and the directory is at /var/www/.</p>
<p>If you’re like me, you use a hosted VPS. If you want one, you can upload a Kali ISO to it to make social engineering engagements more convincing and easier. I personally use a VPS hosting provider called Vultr, and you can get $5 free credit if you use <a href="http://www.vultr.com/?ref=6843429">this link</a>, which is easily enough for a quick engagement. You can also register a free-domain at <a href="http://freenom.com">freenom.com</a>. This is great if you don’t exactly want to spend a lot of money but just want to try it all out.</p>
<p>Anyway… Once you’ve uploaded the files to a server, you may find you can enter your details to the page, and be re-directed, but no harvest files are created. To fix this, use chown to change the permissions of the folder.</p>
<p>chown -R www-data:www-data /var/www</p>
<p>This fixes most problems for me!</p>
<h3>Step 6: Social Engineer!</h3>
<p>Now you will need to “get creative!”. Send the target an email or a message with something compelling on the other side that requires them to login. My common pretext is telling somebody about an extremely funny video that is 18+ rated, and they will need to re-login in order to watch it, I then edited the post.php to redirect to a funny video. By the time they’ve finished laughing, you are already in their account.</p>
<p>Hopefully this is of help to you people! I learnt how do this by playing with it, and looking at what SET did, and it helped me to understand it all better <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>pry0cc</p>
          <p><a href="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359/1</link>
        <pubDate>Sat, 14 May 2016 21:12:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-359-1</guid>
        <source url="https://0x00sec.org/t/clone-login-forms-manually-to-capture-credientials/359.rss">Clone Login Forms Manually to Capture Credientials</source>
      </item>
  </channel>
</rss>
