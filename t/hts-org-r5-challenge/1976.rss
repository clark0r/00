<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>HTS.org R5 challenge</title>
    <link>https://0x00sec.org/t/hts-org-r5-challenge/1976</link>
    <description># Preface
I stated my reasoning behind this article series in the first article which can be found [here](https://0x00sec.org/t/hts-org-r1-challenge/). 
To avoid redundancy please check out the preface over there and let&#39;s get right into action!

_**note:**_ If I write non sense in this and the next following articles please correct me for the sake of me and others not getting confused and mixed up with things :) . 

#### Author Assigned Level: Newbie
#### Community Assigned Level:
[poll type=regular]
* Newbie
* Wannabe
* Hacker
* Wizard
* Guru
[/poll]

#### Required Skills
Since we&#39;re starting at the beginning not much knowledge is required at the moment. 

* basic HTML
* basic knowledge about hashing

#### Disclaimer
These write ups are only my 2 cents on the challenges. So don&#39;t take them too seriously. ;)

-----
# HTS.org realistic challenges

### [Realistic challenge 5](https://www.hackthissite.org/missions/realistic/5/)

#### Message:
&gt; Yo! This is Spiffomatic64 from HTS.org! I&#39;m a bit of a hacker myself as you can see, but I recently came upon a problem I couldn&#39;t resolve.....
Lately I&#39;ve been getting calls day and night from the telemarketing place. I&#39;ve gone to their website and hacked it once deleting all of their phone numbers so they wouldn&#39;t call me anymore. That was a temporary fix but they put their database back up, this time with an encrypted password. When I hacked them I noticed everything they used was 10 years out of date and the new password seems to be a &#39;message digest&#39;. I have done some research and I think it could be something like a so-called hash value. I think you could somehow reverse engineer it or brute force it. I also think it would be a good idea to look around the server for anything that may help you.

#### What can we extract from the message?

* Need to hack into an admin page (again DUH)
* we are dealing with password hashes not clear text passwords
* super old technologies used ;)

### The site:

The site is a little more &quot;complex&quot; in terms of buttons to click and sub pages.
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/e/e48239ecc084d6b76dafdce19044edbef03ba4fc.png&quot; width=&quot;690&quot; height=&quot;466&quot;&gt;

When clicking on &#39;Database&#39; we are greeted with a login screen, where just a password is needed:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/6/679397765a4cc3139883eba253b5ec1c6fba6740.png&quot; width=&quot;351&quot; height=&quot;138&quot;&gt;


### The source
Let&#39;s take a look at the source code of the main menu page where we landed first.
    &lt;html&gt;

    &lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=windows-1252&quot;&gt;
    &lt;meta name=&quot;GENERATOR&quot; content=&quot;Microsoft FrontPage 4.0&quot;&gt;
    &lt;meta name=&quot;ProgId&quot; content=&quot;FrontPage.Editor.Document&quot;&gt;
    &lt;title&gt;New Page 1&lt;/title&gt;
    &lt;base target=&quot;main&quot;&gt;
    &lt;/head&gt;

    &lt;body bgcolor=&quot;#000000&quot; text=&quot;#FFFFFF&quot;&gt;

    &lt;p&gt;&lt;a href=&quot;main.htm&quot; target=&quot;main&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;home.gif&quot; width=&quot;150&quot; height=&quot;20&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;&lt;a href=&quot;news.htm&quot; target=&quot;main&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;news.gif&quot; width=&quot;150&quot; height=&quot;20&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;&lt;a href=&quot;submit.html&quot; target=&quot;_top&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;data.gif&quot; width=&quot;150&quot; height=&quot;20&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;&lt;a href=&quot;contact.htm&quot; target=&quot;main&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;contact.gif&quot; width=&quot;150&quot; height=&quot;20&quot;&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/body&gt;

    &lt;/html&gt;
Nothing to interesting.. so let&#39;s check out the submit .html which corresponds to the &#39;Database&#39; sub page.

    &lt;html&gt;

    &lt;head&gt;

    &lt;title&gt;Log in&lt;/title&gt;
    &lt;/head&gt;

    &lt;body bgcolor=&quot;#000000&quot; text=&quot;#FFFFFF&quot;&gt;
    &lt;center&gt;&lt;br /&gt;&lt;br /&gt;
    Enter Password:
    &lt;form action=&quot;secret/admin.php&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot; size=&quot;20&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;submit&quot; name=&quot;submit&quot;&gt;&lt;/p&gt;
    &lt;/form&gt;
    &lt;/center&gt;
    &lt;/body&gt;

    &lt;/html&gt;
Oh boi a super /secret sub directory! sounds like christmas. Let&#39;s go there right away ignoring everything else!

    &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 3.2 Final//EN&quot;&gt;
	&lt;html&gt;
	 &lt;head&gt;
	  &lt;title&gt;Index of /missions/realistic/5/secret&lt;/title&gt;
	 &lt;/head&gt;
	 &lt;body&gt;
	&lt;h1&gt;Index of /missions/realistic/5/secret&lt;/h1&gt;
	&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;/missions/realistic/5/&quot;&gt; Parent Directory&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;admin.bak.php&quot;&gt; admin.bak.php&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;admin.php&quot;&gt; admin.php&lt;/a&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/body&gt;&lt;/html&gt;
So what do we have here?
We have the normal admin.php script which handles the login form and will validate the entered password.
But what&#39;s up with the admin.bak.php? 
Let&#39;s take a look!


### The &#39;hack&#39;
[spoiler]

    error matching hash b0dcda1d2a014b072c5e690b54ec3b27
Yay we found a flag! CTF complete!? Just kidding..
We found a 32 bit hash value. 
Now we could search the net for every hash algorithm which produces a 32 bit hash value and spend  an eternity on this OR we use something like [hashID](https://github.com/psypanda/hashID) which does exactly that for us in a breeze..
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/c/c058f811acad659751c21877490772cc322628ba.png&quot; width=&quot;410&quot; height=&quot;499&quot;&gt;

So the hashID outputs us these hashing algorithms which are likely to be used with our hash value, the most likely at the top.
So we have our hash and some possible hash algorithms. Let&#39;s try to crack it with [JohnTheRipper](https://github.com/magnumripper/JohnTheRipper). 
Let&#39;s try MD2 first:

    root@kali:~/Downloads# john --format=MD2 hash.txt 
    Using default input encoding: UTF-8
    Loaded 1 password hash (MD2 [MD2 32/64])
    Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status
    0g 0:00:04:26  3/3 0g/s 190609p/s 190609c/s 190609C/s hkmce1
    Session aborted

Next on our list is MD5

    root@kali:~/Downloads# john --format=RAW-MD5 hash.txt 
	Using default input encoding: UTF-8
	Loaded 1 password hash (Raw-MD5 [MD5 128/128 AVX 4x3])
	Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status
	0g 0:00:10:47  3/3 0g/s 29486Kp/s 29486Kc/s 29486KC/s peleekng7..peleest95
	Session aborted
I aborted these sessions because it took to long for such a password. So it seems unlikely. Next will be MD4
Just for fun I tried using the fork flag to use 4 CPU cores. Not needed for easy passwords tho.

    root@kali:~/Downloads# john --format=RAW-MD4 --fork=4 hash.txt 
    Using default input encoding: UTF-8
    Loaded 1 password hash (Raw-MD4 [MD4 128/128 AVX 4x3])
    Node numbers 1-4 of 4 (fork)
    Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status
    086f9            (?)
    4 1g 0:00:00:02 DONE 3/3 (2017-05-05 10:04) 0.4255g/s 13166Kp/s 13166Kc/s 13166KC/s 086c5..0832R
Ok John found something. Let&#39;s see:

    root@kali:~/Downloads# john --format=RAW-MD4 --show hash.txt 
    ?:086f9

    1 password hash cracked, 0 left
We found our password! It&#39;s **086f9**. We just don&#39;t know the username hence the **?**, but we don&#39;t even need a user.
So we can login and are don with the challenge here. :frowning: 
[/spoiler]


# Conclusions
This little challenge tried to make us play around with hash values. So for someone who doesn&#39;t have a clue about hashing: [take a look](https://en.wikipedia.org/wiki/Hash_function)!
And of course as always we had to do some html inspection with directory traversal.

The next article of the series can be found [here](https://0x00sec.org/t/hts-org-r6-challenge/) once it&#39;s up!!
 
Stay tuned ;)</description>
    
    <lastBuildDate>Fri, 05 May 2017 14:55:22 +0000</lastBuildDate>
    <category>Web Hacking</category>
    <atom:link href="https://0x00sec.org/t/hts-org-r5-challenge/1976.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>HTS.org R5 challenge</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/hts-org-r5-challenge/1976/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hts-org-r5-challenge/1976/4</link>
        <pubDate>Sun, 21 Jan 2018 00:41:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1976-4</guid>
        <source url="https://0x00sec.org/t/hts-org-r5-challenge/1976.rss">HTS.org R5 challenge</source>
      </item>
      <item>
        <title>HTS.org R5 challenge</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <p>Yes they sometimes generate different passwords or solutions depending on e.g. what browser youre using <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/hts-org-r5-challenge/1976/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hts-org-r5-challenge/1976/3</link>
        <pubDate>Fri, 05 May 2017 14:55:22 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1976-3</guid>
        <source url="https://0x00sec.org/t/hts-org-r5-challenge/1976.rss">HTS.org R5 challenge</source>
      </item>
      <item>
        <title>HTS.org R5 challenge</title>
        <dc:creator><![CDATA[SmartOne]]></dc:creator>
        <description><![CDATA[
            <p>Just a heads up, but HTS gave me another hash for this challenge! Seems that they randomly generate it for every user.</p>
<aside class="quote group-VIP" data-username="ricksanchez" data-post="1" data-topic="1976">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/ricksanchez/40/4625_2.png" class="avatar"> ricksanchez:</div>
<blockquote>
<p>the new password seems to be a ‘message digest’.</p>
</blockquote>
</aside>
<p>As they put it in the level description, I think that can been understood as a hint <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>But hey, nice writeup! Keep it up</p>
          <p><a href="https://0x00sec.org/t/hts-org-r5-challenge/1976/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hts-org-r5-challenge/1976/2</link>
        <pubDate>Fri, 05 May 2017 14:30:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1976-2</guid>
        <source url="https://0x00sec.org/t/hts-org-r5-challenge/1976.rss">HTS.org R5 challenge</source>
      </item>
      <item>
        <title>HTS.org R5 challenge</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <h1>Preface</h1>
<p>I stated my reasoning behind this article series in the first article which can be found <a href="https://0x00sec.org/t/hts-org-r1-challenge/">here</a>.<br>
To avoid redundancy please check out the preface over there and let’s get right into action!</p>
<p><em><strong>note:</strong></em> If I write non sense in this and the next following articles please correct me for the sake of me and others not getting confused and mixed up with things <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> .</p>
<h4>Author Assigned Level: Newbie</h4>
<h4>Community Assigned Level:</h4>
<p><a href="https://0x00sec.org/t/hts-org-r5-challenge/1976/1">Click to view the poll.</a></p>
<h4>Required Skills</h4>
<p>Since we’re starting at the beginning not much knowledge is required at the moment.</p>
<ul>
<li>basic HTML</li>
<li>basic knowledge about hashing</li>
</ul>
<h4>Disclaimer</h4>
<p>These write ups are only my 2 cents on the challenges. So don’t take them too seriously. <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<hr>
<h1>
<a href="http://HTS.org">HTS.org</a> realistic challenges</h1>
<h3><a href="https://www.hackthissite.org/missions/realistic/5/">Realistic challenge 5</a></h3>
<h4>Message:</h4>
<blockquote>
<p>Yo! This is Spiffomatic64 from <a href="http://HTS.org">HTS.org</a>! I’m a bit of a hacker myself as you can see, but I recently came upon a problem I couldn’t resolve…<br>
Lately I’ve been getting calls day and night from the telemarketing place. I’ve gone to their website and hacked it once deleting all of their phone numbers so they wouldn’t call me anymore. That was a temporary fix but they put their database back up, this time with an encrypted password. When I hacked them I noticed everything they used was 10 years out of date and the new password seems to be a ‘message digest’. I have done some research and I think it could be something like a so-called hash value. I think you could somehow reverse engineer it or brute force it. I also think it would be a good idea to look around the server for anything that may help you.</p>
</blockquote>
<h4>What can we extract from the message?</h4>
<ul>
<li>Need to hack into an admin page (again DUH)</li>
<li>we are dealing with password hashes not clear text passwords</li>
<li>super old technologies used <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">
</li>
</ul>
<h3>The site:</h3>
<p>The site is a little more “complex” in terms of buttons to click and sub pages.<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/e/e48239ecc084d6b76dafdce19044edbef03ba4fc.png" width="690" height="466"></p>
<p>When clicking on ‘Database’ we are greeted with a login screen, where just a password is needed:<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/6/679397765a4cc3139883eba253b5ec1c6fba6740.png" width="351" height="138"></p>
<h3>The source</h3>
<p>Let’s take a look at the source code of the main menu page where we landed first.<br>
</p>
<pre><code>&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 4.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;title&gt;New Page 1&lt;/title&gt;
&lt;base target="main"&gt;
&lt;/head&gt;

&lt;body bgcolor="#000000" text="#FFFFFF"&gt;

&lt;p&gt;&lt;a href="main.htm" target="main"&gt;&lt;img border="0" src="home.gif" width="150" height="20"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="news.htm" target="main"&gt;&lt;img border="0" src="news.gif" width="150" height="20"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="submit.html" target="_top"&gt;&lt;img border="0" src="data.gif" width="150" height="20"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="contact.htm" target="main"&gt;&lt;img border="0" src="contact.gif" width="150" height="20"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/body&gt;

&lt;/html&gt;
</code></pre>
<p>Nothing to interesting… so let’s check out the submit .html which corresponds to the ‘Database’ sub page.</p>
<pre><code>&lt;html&gt;

&lt;head&gt;

&lt;title&gt;Log in&lt;/title&gt;
&lt;/head&gt;

&lt;body bgcolor="#000000" text="#FFFFFF"&gt;
&lt;center&gt;&lt;br /&gt;&lt;br /&gt;
Enter Password:
&lt;form action="secret/admin.php"&gt;
&lt;p&gt;&lt;input type="password" name="password" size="20"&gt;&lt;input type="submit" value="submit" name="submit"&gt;&lt;/p&gt;
&lt;/form&gt;
&lt;/center&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre>
<p>Oh boi a super /secret sub directory! sounds like christmas. Let’s go there right away ignoring everything else!</p>
<pre><code>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"&gt;
&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;Index of /missions/realistic/5/secret&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
&lt;h1&gt;Index of /missions/realistic/5/secret&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="/missions/realistic/5/"&gt; Parent Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="admin.bak.php"&gt; admin.bak.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="admin.php"&gt; admin.php&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;&lt;/html&gt;
</code></pre>
<p>So what do we have here?<br>
We have the normal admin.php script which handles the login form and will validate the entered password.<br>
But what’s up with the admin.bak.php?<br>
Let’s take a look!</p>
<h3>The ‘hack’</h3>
<div class="spoiler"><a href="https://0x00sec.org/t/hts-org-r5-challenge/1976/1">spoiler</a></div>
<h1>Conclusions</h1>
<p>This little challenge tried to make us play around with hash values. So for someone who doesn’t have a clue about hashing: <a href="https://en.wikipedia.org/wiki/Hash_function">take a look</a>!<br>
And of course as always we had to do some html inspection with directory traversal.</p>
<p>The next article of the series can be found <a href="https://0x00sec.org/t/hts-org-r6-challenge/">here</a> once it’s up!!</p>
<p>Stay tuned <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/hts-org-r5-challenge/1976/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/hts-org-r5-challenge/1976/1</link>
        <pubDate>Fri, 05 May 2017 08:59:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1976-1</guid>
        <source url="https://0x00sec.org/t/hts-org-r5-challenge/1976.rss">HTS.org R5 challenge</source>
      </item>
  </channel>
</rss>
