<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Reversing challenge</title>
    <link>https://0x00sec.org/t/reversing-challenge/40297</link>
    <description>I came across a reverse engineering challenge ;

when i tried to run the comand file i got this :  
$ file cast.bin 
cast.bin: ELF 64-bit MSB *unknown arch 0x3e00* (SYSV)

lets run readelf;
$ readelf -h cast.bin 
ELF Header:
  Magic:   7f 45 4c 46 02 02 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2&#39;s complement, big endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              &lt;unknown&gt;: 300
  Machine:                           &lt;unknown&gt;: 0x3e00
  Version:                           0x1000000
  Entry point address:               0xc9c4010000000000
  Start of program headers:          4611686018427387904 (bytes into file)
  Start of section headers:          -3417382194685935616 (bytes into file)
  Flags:                             0x0
  Size of this header:               16384 (bytes)
  Size of program headers:           14336 (bytes)
  Number of program headers:         3328
  Size of section headers:           16384 (bytes)
  Number of section headers:         9728
  Section header string table index: 9472
readelf: Warning: The e_shentsize field in the ELF header is larger than the size of an ELF section header
readelf: Error: Reading 159383552 bytes extends past end of file for section headers
readelf: Warning: The e_phentsize field in the ELF header is larger than the size of an ELF program header
readelf: Error: Reading 47710208 bytes extends past end of file for program headers

i edited the 5 bit and rerun the command ;
$ file cast.bin 
cast.bin: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, stripped

when i  run objdump and readelf i get this : 
$ objdump -d cast.bin 
BFD: warning: cast.bin has a corrupt string table index
$ readelf -h cast.bin             
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2&#39;s complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Position-Independent Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x1c4c9
  Start of program headers:          64 (bytes into file)
  Start of section headers:          365520 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         13
  Size of section headers:           64 (bytes)
  Number of section headers:         38
  Section header string table index: 37
readelf: Error: no .dynamic section in the dynamic segment


any ressources or solution  that can help
this is the link for the unpatched  binary : 
https://gofile.io/d/s88DAl</description>
    
    <lastBuildDate>Sun, 12 May 2024 05:05:20 +0000</lastBuildDate>
    <category>Reverse Engineering</category>
    <atom:link href="https://0x00sec.org/t/reversing-challenge/40297.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Reversing challenge</title>
        <dc:creator><![CDATA[lei_yu]]></dc:creator>
        <description><![CDATA[
            <p>Do you have a TG account?</p>
          <p><a href="https://0x00sec.org/t/reversing-challenge/40297/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/reversing-challenge/40297/3</link>
        <pubDate>Sun, 12 May 2024 05:05:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-40297-3</guid>
        <source url="https://0x00sec.org/t/reversing-challenge/40297.rss">Reversing challenge</source>
      </item>
      <item>
        <title>Reversing challenge</title>
        <dc:creator><![CDATA[rvfet]]></dc:creator>
        <description><![CDATA[
            <p>Hello that looks sick, wish you the best in your career!!! <img src="https://0x00sec.org/images/emoji/twitter/heart.png?v=12" title=":heart:" class="emoji" alt=":heart:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/reversing-challenge/40297/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/reversing-challenge/40297/2</link>
        <pubDate>Tue, 30 Apr 2024 13:15:29 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-40297-2</guid>
        <source url="https://0x00sec.org/t/reversing-challenge/40297.rss">Reversing challenge</source>
      </item>
      <item>
        <title>Reversing challenge</title>
        <dc:creator><![CDATA[dedi0x90]]></dc:creator>
        <description><![CDATA[
            <p>I came across a reverse engineering challenge ;</p>
<p>when i tried to run the comand file i got this :<br>
$ file cast.bin<br>
cast.bin: ELF 64-bit MSB <em>unknown arch 0x3e00</em> (SYSV)</p>
<p>lets run readelf;<br>
$ readelf -h cast.bin<br>
ELF Header:<br>
Magic:   7f 45 4c 46 02 02 01 00 00 00 00 00 00 00 00 00<br>
Class:                             ELF64<br>
Data:                              2’s complement, big endian<br>
Version:                           1 (current)<br>
OS/ABI:                            UNIX - System V<br>
ABI Version:                       0<br>
Type:                              : 300<br>
Machine:                           : 0x3e00<br>
Version:                           0x1000000<br>
Entry point address:               0xc9c4010000000000<br>
Start of program headers:          4611686018427387904 (bytes into file)<br>
Start of section headers:          -3417382194685935616 (bytes into file)<br>
Flags:                             0x0<br>
Size of this header:               16384 (bytes)<br>
Size of program headers:           14336 (bytes)<br>
Number of program headers:         3328<br>
Size of section headers:           16384 (bytes)<br>
Number of section headers:         9728<br>
Section header string table index: 9472<br>
readelf: Warning: The e_shentsize field in the ELF header is larger than the size of an ELF section header<br>
readelf: Error: Reading 159383552 bytes extends past end of file for section headers<br>
readelf: Warning: The e_phentsize field in the ELF header is larger than the size of an ELF program header<br>
readelf: Error: Reading 47710208 bytes extends past end of file for program headers</p>
<p>i edited the 5 bit and rerun the command ;<br>
$ file cast.bin<br>
cast.bin: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, stripped</p>
<p>when i  run objdump and readelf i get this :<br>
$ objdump -d cast.bin<br>
BFD: warning: cast.bin has a corrupt string table index<br>
$ readelf -h cast.bin<br>
ELF Header:<br>
Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00<br>
Class:                             ELF64<br>
Data:                              2’s complement, little endian<br>
Version:                           1 (current)<br>
OS/ABI:                            UNIX - System V<br>
ABI Version:                       0<br>
Type:                              DYN (Position-Independent Executable file)<br>
Machine:                           Advanced Micro Devices X86-64<br>
Version:                           0x1<br>
Entry point address:               0x1c4c9<br>
Start of program headers:          64 (bytes into file)<br>
Start of section headers:          365520 (bytes into file)<br>
Flags:                             0x0<br>
Size of this header:               64 (bytes)<br>
Size of program headers:           56 (bytes)<br>
Number of program headers:         13<br>
Size of section headers:           64 (bytes)<br>
Number of section headers:         38<br>
Section header string table index: 37<br>
readelf: Error: no .dynamic section in the dynamic segment</p>
<p>any ressources or solution  that can help<br>
this is the link for the unpatched  binary :</p><aside class="onebox allowlistedgeneric" data-onebox-src="https://gofile.io/d/s88DAl">
  <header class="source">

      <a href="https://gofile.io/d/s88DAl" target="_blank" rel="noopener nofollow ugc">gofile.io</a>
  </header>

  <article class="onebox-body">
    <img src="https://gofile.io/dist/img/logo-small-og.png" class="thumbnail onebox-avatar" width="300" height="300">

<h3><a href="https://gofile.io/d/s88DAl" target="_blank" rel="noopener nofollow ugc">cast (copy 1).bin</a></h3>

  <p>359.3 KiB</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="https://0x00sec.org/t/reversing-challenge/40297/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/reversing-challenge/40297/1</link>
        <pubDate>Sun, 28 Apr 2024 23:36:28 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-40297-1</guid>
        <source url="https://0x00sec.org/t/reversing-challenge/40297.rss">Reversing challenge</source>
      </item>
  </channel>
</rss>
