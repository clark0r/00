<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
    <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894</link>
    <description>Now this is not a programming tutorial as most of you are probably hoping for, but I think most of you (if not all) ever had to use git. Wether it is to get involved in our [Gitlab](https://0x00sec.org/t/getting-involved-in-0x00sec-with-gitlab/1251) or to clone a nice little piece of software you found from GitHub, you&#39;ll most likely use it in the future. I am currently learning git, so to learn it better I always find it a good idea to write about it to help me memorize it. And this is why I am writing these articles.

We will first manage a local repository, and then we&#39;ll move on to managing code on Github later.

Everyone has their seatbelt on? Great, then ride along!

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/0/02e0c4e455677819785c22cfbef080ea64be7c5f.jpeg&quot; width=&quot;480&quot; height=&quot;360&quot;&gt;



----------

## What is git?

According to Git itself:

&gt; Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Now, what this basically means is that git is a program to manage file versions. Let&#39;s look at it using an example. Say that you are writing a piece of software. Ohh look at that, you got a bug! No problem, it can happen to the best of us. You decide to fix it. And as usual, fixing one bug comes with 80828948673273833267797976 extra bugs. You decide to fix those 80828948673273833267797976 bugs, but you end up creating even more bugs! After fixing so many bugs, you are left with so many versions of your program that you can&#39;t keep track of what you did anymore! Which one is the working one? Which one has the function you wanted?

Well, this is basically what git does. Git allows you to initialize your repository, then work on files without actually replacing them, and when you think they&#39;re good enough you can commit them. And best of all, you can always revert back!

&gt; Take note that git is not exclusively for coders. I like to use it too to work on electrical schematics for example!

Explanation is not my strongsuit, so we&#39;ll go jump in to explain it better



----------

## Prerequisites:

* You are running any Linux distribution
* You have git installed
* You have some basic knowledge of Linux commands (touch, mkdir, cd, etc...)



----------

## Making our first repository

As I said earlier, the first part of this tutorial we&#39;ll manage a local repository. But to do that, we&#39;ll need to make a directory first to host our repo in, using **mkdir**. After that we&#39;re gonna change into the newly created directory using **cd**, and then we&#39;ll enter this command:

**git init**

**git** is the program we are running
**init** is short for &quot;initialize&quot;, and it tells git to start a new repository in our current directory (the directory can also be given using a parameter).

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/c/c03884ae9488415395c3e691aad2d87d3526c609.png&quot; width=&quot;690&quot; height=&quot;459&quot;&gt;

Now, when we enter **git status**, we see that git has nothing to commit. Obviously, because we didn&#39;t enter any files yet!

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/8/8123f0d08f6a0e13ac47fac0542076535c7307c9.png&quot; width=&quot;690&quot; height=&quot;456&quot;&gt;

However, something happened though. When we enter **ls -la**, we can see git made a file called .git, which is normally invisible. **Don&#39;t touch this file!** This .git file basically tells git that this directory is a repo and it contains all the info about the repo, so you can give it to someone and they can immediatly start working with it out of the box. Deleting this file basically deletes your repo &amp; your commitment logs (which we will talk about later).

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/5/540821816f9166a1552c08ad935392e58843bbdd.png&quot; width=&quot;690&quot; height=&quot;456&quot;&gt;

Now, let&#39;s make some files using the **touch** command, and run **git status** again to see what happens.

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/9/98be454648b49c05d04c7a60fcc2e67abe8c725b.png&quot; width=&quot;690&quot; height=&quot;456&quot;&gt;

AHA! As you can see, git recognised we added 4 new files to the directory. Now we can start to add them to our staging area to finally commit them!



----------

## The End

So this will be the article for now. I know it is a short one, but I am short on time and I JUST HAD to upload something. In the next article, we&#39;ll look at how to add files &amp; commit them, aswell as changing them.

Stay tuned!

-Phoenix750</description>
    
    <lastBuildDate>Fri, 12 May 2017 21:16:16 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[anon79434934]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/9</link>
        <pubDate>Sun, 21 Jan 2018 00:30:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-9</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/anon79434934">@anon79434934</a> woop woop woop give the masses what they deserve. <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"> <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"></p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/8</link>
        <pubDate>Fri, 12 May 2017 21:16:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-8</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>/me chants “workflow! workflow!”</p>
<p>(I have a lot of opinions on workflow)</p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/7</link>
        <pubDate>Fri, 12 May 2017 18:01:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-7</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p><strong>NECROPOSTING ALERT</strong></p>
<p>Where’s number 2? Gotta give the people what they want!</p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/6</link>
        <pubDate>Fri, 12 May 2017 07:35:49 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-6</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[anon79434934]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="anon79434934" data-post="1" data-topic="1894">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/letter_avatar_proxy/v4/letter/a/9fc29f/40.png" class="avatar"> anon79434934:</div>
<blockquote>
<p>We will first manage a local repository, and then we’ll move on to managing code on Github later.</p>
</blockquote>
</aside>
<p>That is why I am not covering remote repositories right now. I first want to make sure I (and the readers) understand basic git use first.</p>
<p>-Phoenix750</p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/5</link>
        <pubDate>Wed, 19 Apr 2017 11:50:22 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-5</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[ricksanchez]]></dc:creator>
        <description><![CDATA[
            <p>nice little article about local git management. Pretty easy so far.<br>
When I first started using git this was no problem, but all that branch creating changing, local vs. remote stuff confused the shit out of me. Will be helpful for beginners if you will cover something like that in Git Gud 002.</p>
<p>~cheerios</p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/4</link>
        <pubDate>Tue, 18 Apr 2017 20:02:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-4</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>No <a class="mention" href="https://0x00sec.org/u/ioth1nkn0t">@IoTh1nkN0t</a>… Hmmm. I’m tasting bias here <a class="mention" href="https://0x00sec.org/u/_py">@_py</a> what do you think?</p>
<p>(jk)</p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/3</link>
        <pubDate>Tue, 18 Apr 2017 19:55:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-3</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <pre><code class="lang-nohighlight">touch pry.txt
touch oaktree.txt
touch 0x00sec.txt
</code></pre>
<p>Looks like someone is riding the 0x00sec train kek.</p>
<p>(jk)</p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/2</link>
        <pubDate>Tue, 18 Apr 2017 06:11:57 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-2</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
      <item>
        <title>Git Gud 001: Basic explanation &amp; creating our first repo</title>
        <dc:creator><![CDATA[anon79434934]]></dc:creator>
        <description><![CDATA[
            <p>Now this is not a programming tutorial as most of you are probably hoping for, but I think most of you (if not all) ever had to use git. Wether it is to get involved in our <a href="https://0x00sec.org/t/getting-involved-in-0x00sec-with-gitlab/1251">Gitlab</a> or to clone a nice little piece of software you found from GitHub, you’ll most likely use it in the future. I am currently learning git, so to learn it better I always find it a good idea to write about it to help me memorize it. And this is why I am writing these articles.</p>
<p>We will first manage a local repository, and then we’ll move on to managing code on Github later.</p>
<p>Everyone has their seatbelt on? Great, then ride along!</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/0/02e0c4e455677819785c22cfbef080ea64be7c5f.jpeg" width="480" height="360"></p>
<hr>
<h2>What is git?</h2>
<p>According to Git itself:</p>
<blockquote>
<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p>
</blockquote>
<p>Now, what this basically means is that git is a program to manage file versions. Let’s look at it using an example. Say that you are writing a piece of software. Ohh look at that, you got a bug! No problem, it can happen to the best of us. You decide to fix it. And as usual, fixing one bug comes with 80828948673273833267797976 extra bugs. You decide to fix those 80828948673273833267797976 bugs, but you end up creating even more bugs! After fixing so many bugs, you are left with so many versions of your program that you can’t keep track of what you did anymore! Which one is the working one? Which one has the function you wanted?</p>
<p>Well, this is basically what git does. Git allows you to initialize your repository, then work on files without actually replacing them, and when you think they’re good enough you can commit them. And best of all, you can always revert back!</p>
<blockquote>
<p>Take note that git is not exclusively for coders. I like to use it too to work on electrical schematics for example!</p>
</blockquote>
<p>Explanation is not my strongsuit, so we’ll go jump in to explain it better</p>
<hr>
<h2>Prerequisites:</h2>
<ul>
<li>You are running any Linux distribution</li>
<li>You have git installed</li>
<li>You have some basic knowledge of Linux commands (touch, mkdir, cd, etc…)</li>
</ul>
<hr>
<h2>Making our first repository</h2>
<p>As I said earlier, the first part of this tutorial we’ll manage a local repository. But to do that, we’ll need to make a directory first to host our repo in, using <strong>mkdir</strong>. After that we’re gonna change into the newly created directory using <strong>cd</strong>, and then we’ll enter this command:</p>
<p><strong>git init</strong></p>
<p><strong>git</strong> is the program we are running<br>
<strong>init</strong> is short for “initialize”, and it tells git to start a new repository in our current directory (the directory can also be given using a parameter).</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/c/c03884ae9488415395c3e691aad2d87d3526c609.png" width="690" height="459"></p>
<p>Now, when we enter <strong>git status</strong>, we see that git has nothing to commit. Obviously, because we didn’t enter any files yet!</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/8/8123f0d08f6a0e13ac47fac0542076535c7307c9.png" width="690" height="456"></p>
<p>However, something happened though. When we enter <strong>ls -la</strong>, we can see git made a file called .git, which is normally invisible. <strong>Don’t touch this file!</strong> This .git file basically tells git that this directory is a repo and it contains all the info about the repo, so you can give it to someone and they can immediatly start working with it out of the box. Deleting this file basically deletes your repo &amp; your commitment logs (which we will talk about later).</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/5/540821816f9166a1552c08ad935392e58843bbdd.png" width="690" height="456"></p>
<p>Now, let’s make some files using the <strong>touch</strong> command, and run <strong>git status</strong> again to see what happens.</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/9/98be454648b49c05d04c7a60fcc2e67abe8c725b.png" width="690" height="456"></p>
<p>AHA! As you can see, git recognised we added 4 new files to the directory. Now we can start to add them to our staging area to finally commit them!</p>
<hr>
<h2>The End</h2>
<p>So this will be the article for now. I know it is a short one, but I am short on time and I JUST HAD to upload something. In the next article, we’ll look at how to add files &amp; commit them, aswell as changing them.</p>
<p>Stay tuned!</p>
<p>-Phoenix750</p>
          <p><a href="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894/1</link>
        <pubDate>Mon, 17 Apr 2017 18:11:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1894-1</guid>
        <source url="https://0x00sec.org/t/git-gud-001-basic-explanation-creating-our-first-repo/1894.rss">Git Gud 001: Basic explanation &amp; creating our first repo</source>
      </item>
  </channel>
</rss>
