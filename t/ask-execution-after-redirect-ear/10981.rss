<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[ASK] Execution After Redirect ( EAR )</title>
    <link>https://0x00sec.org/t/ask-execution-after-redirect-ear/10981</link>
    <description>Hello everyone. I was doing challenges on the website that had a clue in challenges: 

There is a &quot;execution after redirect&quot; to one of the login pages

I&#39;ve done a test with burp, and get /user who&#39;s re-directed to the /user/login with the response 302 found, and /cmsadmin to / with the response 301 moved permanently, But when I went change request location to /admin/1 response was &quot;access denied&quot;. 
And I&#39;ve been crawling all over the website with a dirbuster.
![Screenshot_2019-01-19_13-38-20|483x323](upload://7RQMs1UNaKqeZUvD4mzC7qyml6I.png) 
How do I manipulate this EAR? And how do I know the possible files/dir for bypass?

Please, i need ur help. Thanks a lot :)</description>
    
    <lastBuildDate>Sun, 20 Jan 2019 20:23:16 +0000</lastBuildDate>
    <category>Web Hacking</category>
    <atom:link href="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[ASK] Execution After Redirect ( EAR )</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/6</link>
        <pubDate>Mon, 18 Feb 2019 07:08:02 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10981-6</guid>
        <source url="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981.rss">[ASK] Execution After Redirect ( EAR )</source>
      </item>
      <item>
        <title>[ASK] Execution After Redirect ( EAR )</title>
        <dc:creator><![CDATA[sp3tre]]></dc:creator>
        <description><![CDATA[
            <p>okay, now i understand. and then i scanning target, there’s no EAR vuln, but ii found another vulnerabilities… <img src="https://0x00sec.s3.amazonaws.com/original/2X/c/cabf542a1366c4290991975f653d7c592b5ced7a.png" alt="Screenshot_2019-01-21_03-07-26" data-base62-sha1="sVAmSwDFO9Js4R7UQkUNuHrF2qu" width="690" height="311"></p>
<p>maybe someone can help me to finish this vuln from above?</p>
          <p><a href="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/5</link>
        <pubDate>Sun, 20 Jan 2019 20:23:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10981-5</guid>
        <source url="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981.rss">[ASK] Execution After Redirect ( EAR )</source>
      </item>
      <item>
        <title>[ASK] Execution After Redirect ( EAR )</title>
        <dc:creator><![CDATA[Baud]]></dc:creator>
        <description><![CDATA[
            <p>Look at the example shown <a href="https://cwe.mitre.org/data/definitions/698.html" rel="nofollow noopener">here</a>:</p>
<pre><code class="lang-auto">$requestingIP = $_SERVER['REMOTE_ADDR'];

if(!in_array($requestingIP, $ipWhitelist))
{
    echo "You are not authorized to view this page";
    http_redirect($errorPageURL);
}

$status = getServerStatus();
echo $status;
</code></pre>
<p>This basic PHP code redirects every user who doesn’t have their IP inside a whitelist straight to an error page, but if said user is part of the whitelist the same page will display what’s supposed to be restricted content, without performing any actual session or identity check. This means that if a browser was to ignore the redirect, any user would be able to access that content without authorization.</p>
<p>It’s not too common and it derives from bad programming practices that any good developer should be aware of, mostly the lack of proper session management, but it definitely is a real flaw you may run into in the wild.</p>
          <p><a href="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/4</link>
        <pubDate>Sun, 20 Jan 2019 01:45:26 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10981-4</guid>
        <source url="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981.rss">[ASK] Execution After Redirect ( EAR )</source>
      </item>
      <item>
        <title>[ASK] Execution After Redirect ( EAR )</title>
        <dc:creator><![CDATA[f0ur]]></dc:creator>
        <description><![CDATA[
            <p>I am slightly confused at what the purpose of EAR is and I did look at <a href="https://www.owasp.org/index.php/Execution_After_Redirect_(EAR)" rel="nofollow noopener">OWASP</a> for some idea. Is this type of “vulnerability” still pausible since I haven’t seen any of this nature on any site?</p>
          <p><a href="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/3</link>
        <pubDate>Sat, 19 Jan 2019 21:26:34 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10981-3</guid>
        <source url="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981.rss">[ASK] Execution After Redirect ( EAR )</source>
      </item>
      <item>
        <title>[ASK] Execution After Redirect ( EAR )</title>
        <dc:creator><![CDATA[stromy]]></dc:creator>
        <description><![CDATA[
            <p>EAR means that you get access to a restricted site when you ignore redirects. If you see nothing other than “Moved Permanently” html page, than it’s not EAR.</p>
          <p><a href="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/2</link>
        <pubDate>Sat, 19 Jan 2019 15:29:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10981-2</guid>
        <source url="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981.rss">[ASK] Execution After Redirect ( EAR )</source>
      </item>
      <item>
        <title>[ASK] Execution After Redirect ( EAR )</title>
        <dc:creator><![CDATA[sp3tre]]></dc:creator>
        <description><![CDATA[
            <p>Hello everyone. I was doing challenges on the website that had a clue in challenges:</p>
<p>There is a “execution after redirect” to one of the login pages</p>
<p>I’ve done a test with burp, and get /user who’s re-directed to the /user/login with the response 302 found, and /cmsadmin to / with the response 301 moved permanently, But when I went change request location to /admin/1 response was “access denied”.<br>
And I’ve been crawling all over the website with a dirbuster.<br>
<img src="https://0x00sec.s3.amazonaws.com/original/2X/3/3725952d4850d14d1a7128e41965dc30033ef2e4.png" alt="Screenshot_2019-01-19_13-38-20" data-base62-sha1="7RQMs1UNaKqeZUvD4mzC7qyml6I" width="483" height="323"><br>
How do I manipulate this EAR? And how do I know the possible files/dir for bypass?</p>
<p>Please, i need ur help. Thanks a lot <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/ask-execution-after-redirect-ear/10981/1</link>
        <pubDate>Sat, 19 Jan 2019 07:08:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10981-1</guid>
        <source url="https://0x00sec.org/t/ask-execution-after-redirect-ear/10981.rss">[ASK] Execution After Redirect ( EAR )</source>
      </item>
  </channel>
</rss>
