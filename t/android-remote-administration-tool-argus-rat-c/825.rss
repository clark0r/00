<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
    <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825</link>
    <description>Hey mates!
After roughly 30 hours of work, I&#39;m now finished with my own Android Remote Administration Tool :slight_smile:. It was my holiday project, which I planned several weeks before. Argus - RAT is of course named after the giant in the Greek mythology. But... I think that&#39;s not interesting for you :wink:. Let&#39;s dive directly into it!

---
## Introduction
This is an Android application, which runs a background service on boot to receive commands. Sounds simple, is simple.

### Features
- Background service, which is able to receive commands
- Service is running on boot
- C&amp;C via E-Mail (And here we got the first point, which should get discussed... See below :wink:)
- Communication is encrypted with XOR (Yeeha, directly got the second discussion point :smile:)
- A solid error-handling, that our Client doesn&#39;t crash due to connection errors or invalid input :wink:
- Remote Administration via Windows application (Should run under Linux with Mono too... Maybe someone here want to test it?)

### Commands
At the moment I only included two POC commands to show how commands in generell can be added. Of course these ones are pretty boring, but you can easily extend the RAT with your one ones! And I&#39;ll add more useful commands in the next days/weeks.

- Show a Toast
- Open a webpage

### Why do you use E-Mail for C&amp;C?
Mmh... I didn&#39;t want to use Reverse TCP and have recently read about E-Mail C&amp;C, which I wanted to try out. At the moment I&#39;ve got no problems with this decision, but you should add FTP support, when you want to send files or big data back to your Server.

### XOR-encryption? Are you fuckin&#39; serious, man?
Of course that&#39;s not meant for real protection :smile:. I just wanted to have something to hide my communication from &quot;normal&quot; people. I&#39;ll add AES + Some sort of origin-validation, which takes us to the next point:

## WARNING
At the moment anyone can hijack the connection and send commands to our Client, who knows the Server&#39;s Mail address (Password&#39;s not needed; keyword is spoofing), the Client&#39;s Mail address **and** the XOR key! I don&#39;t think you want anyone to send weird messages to your Girlfriend, after you infected her with the RAT, so I&#39;ll fix this soon :wink:.

 ---
## Setup
Here comes the newbie friendly guide on how to build an APK out of the source code, setup the required Mail addresses and use the Control Server for sending commands! I use Win10 64-Bit with Visual Studio 2015. Other OSs and IDEs **could** work, but are **not supported!** Ok, now after I&#39;ve created a bad mood for the Linux and Mac users here, we can go further on :smile:.  *(Little side note: I would have used Linux, but sadly Xamarin is only available for Windows and MacOS... And programming in Java is out of discussion)*

### Client
First you have to install Visual Studio with Xamarin. Don&#39;t know how? See [here](https://developer.xamarin.com/guides/android/getting_started/installation/windows/). Now download the project from my [Github page](https://github.com/DoctorsHacking/Argus-RAT). Run Visual Studio and open the project:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/43d04c994a10f6cfe81f2753c834ee77548667bb.PNG&quot; width=&quot;690&quot; height=&quot;370&quot;&gt;
Select now the Project file:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/256cfb56db70827aa6398aa8563583eb27e5d426.PNG&quot; width=&quot;602&quot; height=&quot;110&quot;&gt;
Now you only have to open the Globals file from the project Argus - RAT. **Not Argus - RAT ~ Server!**
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/1863ee30da7860e6f0e71bede45d0c8dddf615e0.PNG&quot; width=&quot;328&quot; height=&quot;368&quot;&gt;
You should see the Globals.cs file now in the middle of your screen.
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/e6114873d26d3aeaee9c21e1676f3edfbfeb4a13.PNG&quot; width=&quot;690&quot; height=&quot;384&quot;&gt;
Here&#39;s the **only** place you have to edit. If you don&#39;t know what you&#39;re doing, don&#39;t touch other files! It&#39;s not needed.

Ok, as you see you&#39;ll need two Mail addresses, which you have to create on your own. As an example I use https://web.de, because they don&#39;t check anything, so you can easily create the addresses anonymously, but I don&#39;t know wether you understand the page, without a knowledge of german :smile:. Of course you can use Gmail too, but they always ask me for validation via phone call...

Anyway, **the important part is that you may have to allow POP &amp; IMAP access to your account in the Mail settings of your provider!** https://web.de needs it and I think others need it too! Just google around, if you don&#39;t know :wink:.

If you use another provider and not https://web.de, you&#39;ll have to change the Mail Server settings in Globals.cs too! And another time, just google around for POP &amp; SMTP address + ports and I&#39;m sure you&#39;ll find it :slight_smile:.

Ok, after you&#39;re done fill in your details in Globals.cs:
```
//-\\-//-\\-//-\\-//-\\-//- MAIL STUFF -\\-//-\\-//-\\-//-\\-//-\\

        // MAIL SERVER       Only needs to be changed, when you use another provider
        public String MailServerPopAddress  = &quot;pop3.web.de&quot;;
        public String MailServerSmtpAddress = &quot;smtp.web.de&quot;;
        public int MailServerSmtpPort       = 587;
        public int MailServerPort           = 995;

        // CLIENT
        public String ClientMailAddress     = &quot;Client@web.de&quot;;   // The address of the client
        public String ClientMailPass        = &quot;p455w0rd&quot;;    // The password of your Client&#39;s mail address

        // SERVER
        public String ServerMailAddress     = &quot;Server@web.de&quot;;    // The address of your Server

        // ENCRYPTION
        public String XorKey                = &quot;testKeyOfDoom&quot;;   // The key you use for encrypion. Please use something hard, because you won&#39;t have to fill it in any forms multiple times. You&#39;ll just have to fill it in, when you add the Client to your Server (See later) and then you can just forget it!
```
After you changed the relevant values check them **twice!** You won&#39;t get a second chance. When the .APK is sent to your victim and it doesn&#39;t work, it&#39;ll get interesting to tell him/her that he/she has to install your &quot;new&quot; version of the program, just because you filled in the wrong credentials...

Sure that you&#39;re ready? Then we come to the building process... First, change the mode to &quot;Release&quot;:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/e83e42800e4fb6ec66f14fddc272dca4fe387577.PNG&quot; width=&quot;406&quot; height=&quot;65&quot;&gt;
Then select Tools -&gt; Android -&gt; Publish Android App. Now you should get a screen like this one, if you do it the first time:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/af44465a6c1dc4c7f56d1997234ed2f9b1be968a.PNG&quot; width=&quot;558&quot; height=&quot;468&quot;&gt;
Just fill in whatever you like to create new keys for signing and continue. On the next screen choose the path to save it to and the name. Ready? Click Publish! Now it takes some time...

When it&#39;s finished, you got a fully working Android Remote Administration Tool! Just send the .APK to your victim and when he/she installs **and** opens it you&#39;re in!

### Server
The setup of our Server is much easier. Either open the Argus - RAT ~ Server project in Visual Studio and run it by pressing F5 or search the Argus - RAT ~ Server directory manually and run the executable in the Release directory. That&#39;s up to you :wink:. Anyway, you&#39;ll get this:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/4d92b3eb2f0151dd682b32822a59ac77ba23f3cc.PNG&quot; width=&quot;374&quot; height=&quot;174&quot;&gt;
Yes, not that great stuff... As I said above, I&#39;ve only added two POC commands, but I&#39;ll explain later how **you** can add your very own functions!

For now just click Add Client.
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/026ea91a4dc7a4c1130209a411bf5d928220f8d2.PNG&quot; width=&quot;354&quot; height=&quot;231&quot;&gt;
**Explanation**
Name: The name you want to call your Client. It&#39;s just a description and does not depend on anything, so you can choose whatever you want :smile:.

Client&#39;s Mail address: The address you chose for your Client.

Server&#39;s Mail address: The address you&#39;ll use for the Server.

Server&#39;s Mail password: :expressionless: Don&#39;t know what should be here? Please just go to http://hackforums.net or any other kids place...

Encryption Key: The key you used in the Globals.cs file! Upper and lower case is respected!

And that was it. Now you can select the Client via ComboBox and send him commands:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/bd462342953048b3bbccb2985657b51de6844e55.PNG&quot; width=&quot;484&quot; height=&quot;244&quot;&gt;

---
## Developer?
You are a developer and want to extend the RAT&#39;s features? Then you&#39;re exactly the kind of person I appreciate here :grin:. Ok, to make it easier for you I&#39;ll explain every step you have to make, when you want to add **your** function!

I hope you&#39;ve already opened the project in Visual Studio. If not, do so. The important files are:
**Argus - RAT**

- MainService.cs
- Commands.cs

**Argus - RAT ~ Server**

- Commands.cs

And you should add your own entry in the Form. That&#39;s up to you, how you want to do it, so I don&#39;t explain this step.

Every file is open? Great, let&#39;s go on.

### Think about it...
What do you want as a new function? What arguments are needed? Which name do you want to give the command? These questions have to be answered before you continue.

As an example I&#39;ll use the Toast command I already added.
Name: Toast
Argument(s): Text

### Server (Commands.cs)
In the Commands.cs file you only have to add a function like this one:
```
        /// &lt;summary&gt;
        /// Sends a Toast to Client
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;text&quot;&gt;The Toast to show&lt;/param&gt;
        public bool SendToast(String text)
        {
            String body = &quot;Toast:&quot; + text;
            return SendMail(body);
        }
```
*Please put it below the ``/* Commands*/`` comment, so that everything&#39;s in the right order :wink:.*

**Explanation**
The only thing I have to explain is the ``String body = &quot;Toast:&quot; + text;``. The ``&quot;Toast:&quot;`` is used to identify the command when it arrives at your client. Just change ``Toast`` with the name you&#39;ve chosen fo your function and the arguments behind with the ones you need. If you got any questions feel free to ask me :slight_smile:.

### Client
In the MainService.cs you just have to add an ``else if`` to the ``handleCommand()`` function. Example:
```
else if (cmd == &quot;toast&quot;)
                Commands.ShowWebsite(value);
```
Make sure to use lowercase even when you used uppercase at Server-side. The command will be made lowercase, when it arrives at the client!

``value`` is everything behind the colon.

And now the setup is finished and you can start writing your own function! Open Commands.cs and add your Code. For example:
```
        /// &lt;summary&gt;
        /// Shows the given text as toast
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;text&quot;&gt;Text to toast out&lt;/param&gt;
        public static void ShowToast(String text)
        {
            Application.SynchronizationContext.Post(_ =&gt; { Toast.MakeText(Android.App.Application.Context, text, ToastLength.Long).Show(); }, null);
        }
```

Now you&#39;ve made your own function within about 5 minutes!

## Conclusion
Wow, it got longer than I thought :smile:. I hope you&#39;re enjoying this and are interested in extending the features :slight_smile:. I&#39;ll add different  improvements in the next days, so make sure to check it out :wink:. For everyone who wants to test out his own features or just want to try the RAT without using any samrtphone, I can recommend [Bluestacks](http://www.bluestacks.com/de/index.html?__dlrd=1)! It is annoying as CAPTCHAs, but very helpfull, if you just want to easily test your apps in a nearly real environment.

|-TheDoctor-|</description>
    
    <lastBuildDate>Fri, 22 Dec 2017 00:41:56 +0000</lastBuildDate>
    <category>Malware</category>
    <atom:link href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/17">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/17</link>
        <pubDate>Fri, 22 Dec 2017 00:57:30 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-17</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/16">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/16</link>
        <pubDate>Fri, 22 Dec 2017 00:41:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-16</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 2 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/15</link>
        <pubDate>Sat, 18 Nov 2017 18:00:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-15</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[nuller]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/thedoctor">@TheDoctor</a> Nice post.For encryption you could use RSA with preexchanged public keys, if download is done through a secure channel or you installing it manually <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/14</link>
        <pubDate>Thu, 16 Nov 2017 09:05:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-14</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[zSec]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/thedoctor">@TheDoctor</a></p>
<p>This looks really cool! Have to try it soon <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
And I like the idea with <a href="http://web.de" rel="nofollow noopener">web.de</a>, have some accounts on there too <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/13</link>
        <pubDate>Sat, 30 Jul 2016 08:58:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-13</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[TheDoctor]]></dc:creator>
        <description><![CDATA[
            <p>As <a class="mention" href="https://0x00sec.org/u/oaktree">@oaktree</a> said: <strong>That’s not the 0x00sec RAT. 0x00sec is not responsible for it. If you have questions or errors talk to me and don’t blame the whole board!</strong></p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/12</link>
        <pubDate>Thu, 28 Jul 2016 14:10:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-12</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Insanely cool idea! Perhaps S^3 can look at hosting it, they have a spare server lying around <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"> <a class="mention" href="https://0x00sec.org/u/sstrykerr">@Sstrykerr</a> <a class="mention" href="https://0x00sec.org/u/suser">@Suser</a></p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/11</link>
        <pubDate>Thu, 28 Jul 2016 13:03:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-11</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Making a collaborative Git for 0x00sec’s devs sounds incredibly fun. I wonder what tools the community can create together…</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/10</link>
        <pubDate>Thu, 28 Jul 2016 12:52:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-10</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>While you may refer to this program as “0x00sec’s RAT,” 0x00sec is not liable for damages caused by malicious use of this program or any of its components.</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/9</link>
        <pubDate>Thu, 28 Jul 2016 12:19:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-9</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[SmartOne]]></dc:creator>
        <description><![CDATA[
            <p>So it would be to risky to get detected if you upload it to GitHub? Just an idea, but what about hosting a GitLab on 0x00sec for this sort of projects? <a class="mention" href="https://0x00sec.org/u/pry0cc">@pry0cc</a></p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/8</link>
        <pubDate>Thu, 28 Jul 2016 10:43:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-8</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[TheDoctor]]></dc:creator>
        <description><![CDATA[
            <p>Yes, 0x00sec’s own Android RAT <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">. I hope my explanation of adding functions is not too confusing; it would be great if <strong>the</strong> malware guy <a class="mention" href="https://0x00sec.org/u/dtm">@dtm</a> would join <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">. C# is a pretty easy language, so I think you won’t have problems with it <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">.</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/7</link>
        <pubDate>Thu, 28 Jul 2016 06:54:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-7</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Perhaps 0x00sec’s own Android RAT? I’m keen to contribute but I’ve only used C# for a few weeks so I’ll just lurk for now.</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/6</link>
        <pubDate>Thu, 28 Jul 2016 06:40:08 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-6</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[TheDoctor]]></dc:creator>
        <description><![CDATA[
            <p>Yep, this one won’t get detected, <strong>but please don’t upload to Virustotal or any other Scanner!!!</strong></p>
<p>I’ll work on the RAT, add more commands (useful ones <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">) and then it may really can be used <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">. At the moment it’s a  skeletal structure for anyone, who needs an Android RAT, but doesn’t want to build one outta nowhere <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">. As explained in the post, adding features is as simple as writing about 7 lines to “register” the new function and then you can already start straight with <strong>your</strong> code! You don’t have to worry about communication or any other stuff.</p>
<p>Finally I want to add, that <strong>every</strong> help is highly appreciated! If you know a way to improve one vital function, that it doesn’t crash that easy or just improve the speed, etc… just send me a Pull request and it gets added!</p>
<p>For example the points I already wrote in my post:</p>
<ul>
<li>Better encryption (Maybe AES + HMAC? <em>Knowledge level required: beginner</em>)</li>
<li>The webpage command doesn’t work, when the service is started on boot and not from within the app. Maybe someone wanna have a look at it? <em>Knowledge level required: intermediate? Or I’m just too dump to fix it on my own <img src="https://0x00sec.org/images/emoji/twitter/grin.png?v=9" title=":grin:" class="emoji" alt=":grin:"></em>
</li>
<li>Testing, testing and again: testing. I don’t know if some of you have the time, but this point would be very valuable, when it comes to real world use later on <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">.</li>
<li>And of course: commands! You want a command to be added? There’re two ways: Load the RAT into Visual Studio and get your hands dirty or just leave a comment!</li>
</ul>
<p>If you have any commands, which you think could be useful, just write a comment with a description and I’ll be glad to try adding it <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">. Maybe even other programmers here get interested in trying it out and join the developer team <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">.</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/5</link>
        <pubDate>Thu, 28 Jul 2016 06:26:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-5</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p><big><strong>MIND-BLOWN</strong></big> This is, really cool. So cool infact, I may have to go change. The best shells and rats are the least known ones - Because you don’t have to AV to worry about.</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/4</link>
        <pubDate>Wed, 27 Jul 2016 19:25:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-4</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[Cromical]]></dc:creator>
        <description><![CDATA[
            <p>Honestly I’m amazed. Great job mate! Thanks for sharing it too. <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/3</link>
        <pubDate>Wed, 27 Jul 2016 17:23:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-3</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>Nice post mate. You are getting there.</p>
<p>Love the name… the 100-eyed giant!</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/2</link>
        <pubDate>Wed, 27 Jul 2016 16:09:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-2</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
      <item>
        <title>Android Remote Administration Tool: Argus - RAT [C#]</title>
        <dc:creator><![CDATA[TheDoctor]]></dc:creator>
        <description><![CDATA[
            <p>Hey mates!<br>
After roughly 30 hours of work, I’m now finished with my own Android Remote Administration Tool <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">. It was my holiday project, which I planned several weeks before. Argus - RAT is of course named after the giant in the Greek mythology. But… I think that’s not interesting for you <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">. Let’s dive directly into it!</p>
<hr>
<h2>Introduction</h2>
<p>This is an Android application, which runs a background service on boot to receive commands. Sounds simple, is simple.</p>
<h3>Features</h3>
<ul>
<li>Background service, which is able to receive commands</li>
<li>Service is running on boot</li>
<li>C&amp;C via E-Mail (And here we got the first point, which should get discussed… See below <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">)</li>
<li>Communication is encrypted with XOR (Yeeha, directly got the second discussion point <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">)</li>
<li>A solid error-handling, that our Client doesn’t crash due to connection errors or invalid input <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">
</li>
<li>Remote Administration via Windows application (Should run under Linux with Mono too… Maybe someone here want to test it?)</li>
</ul>
<h3>Commands</h3>
<p>At the moment I only included two POC commands to show how commands in generell can be added. Of course these ones are pretty boring, but you can easily extend the RAT with your one ones! And I’ll add more useful commands in the next days/weeks.</p>
<ul>
<li>Show a Toast</li>
<li>Open a webpage</li>
</ul>
<h3>Why do you use E-Mail for C&amp;C?</h3>
<p>Mmh… I didn’t want to use Reverse TCP and have recently read about E-Mail C&amp;C, which I wanted to try out. At the moment I’ve got no problems with this decision, but you should add FTP support, when you want to send files or big data back to your Server.</p>
<h3>XOR-encryption? Are you fuckin’ serious, man?</h3>
<p>Of course that’s not meant for real protection <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">. I just wanted to have something to hide my communication from “normal” people. I’ll add AES + Some sort of origin-validation, which takes us to the next point:</p>
<h2>WARNING</h2>
<p>At the moment anyone can hijack the connection and send commands to our Client, who knows the Server’s Mail address (Password’s not needed; keyword is spoofing), the Client’s Mail address <strong>and</strong> the XOR key! I don’t think you want anyone to send weird messages to your Girlfriend, after you infected her with the RAT, so I’ll fix this soon <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">.</p>
<hr>
<h2>Setup</h2>
<p>Here comes the newbie friendly guide on how to build an APK out of the source code, setup the required Mail addresses and use the Control Server for sending commands! I use Win10 64-Bit with Visual Studio 2015. Other OSs and IDEs <strong>could</strong> work, but are <strong>not supported!</strong> Ok, now after I’ve created a bad mood for the Linux and Mac users here, we can go further on <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">.  <em>(Little side note: I would have used Linux, but sadly Xamarin is only available for Windows and MacOS… And programming in Java is out of discussion)</em></p>
<h3>Client</h3>
<p>First you have to install Visual Studio with Xamarin. Don’t know how? See <a href="https://developer.xamarin.com/guides/android/getting_started/installation/windows/" rel="noopener nofollow ugc">here</a>. Now download the project from my <a href="https://github.com/DoctorsHacking/Argus-RAT" rel="noopener nofollow ugc">Github page</a>. Run Visual Studio and open the project:<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/43d04c994a10f6cfe81f2753c834ee77548667bb.PNG" width="690" height="370"><br>
Select now the Project file:<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/256cfb56db70827aa6398aa8563583eb27e5d426.PNG" width="602" height="110"><br>
Now you only have to open the Globals file from the project Argus - RAT. <strong>Not Argus - RAT ~ Server!</strong><br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/1863ee30da7860e6f0e71bede45d0c8dddf615e0.PNG" width="328" height="368"><br>
You should see the Globals.cs file now in the middle of your screen.<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/e6114873d26d3aeaee9c21e1676f3edfbfeb4a13.PNG" width="690" height="384"><br>
Here’s the <strong>only</strong> place you have to edit. If you don’t know what you’re doing, don’t touch other files! It’s not needed.</p>
<p>Ok, as you see you’ll need two Mail addresses, which you have to create on your own. As an example I use <a href="https://web.de" rel="noopener nofollow ugc">https://web.de</a>, because they don’t check anything, so you can easily create the addresses anonymously, but I don’t know wether you understand the page, without a knowledge of german <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">. Of course you can use Gmail too, but they always ask me for validation via phone call…</p>
<p>Anyway, <strong>the important part is that you may have to allow POP &amp; IMAP access to your account in the Mail settings of your provider!</strong> <a href="https://web.de" rel="noopener nofollow ugc">https://web.de</a> needs it and I think others need it too! Just google around, if you don’t know <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">.</p>
<p>If you use another provider and not <a href="https://web.de" rel="noopener nofollow ugc">https://web.de</a>, you’ll have to change the Mail Server settings in Globals.cs too! And another time, just google around for POP &amp; SMTP address + ports and I’m sure you’ll find it <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">.</p>
<p>Ok, after you’re done fill in your details in Globals.cs:</p>
<pre><code class="lang-auto">//-\\-//-\\-//-\\-//-\\-//- MAIL STUFF -\\-//-\\-//-\\-//-\\-//-\\

        // MAIL SERVER       Only needs to be changed, when you use another provider
        public String MailServerPopAddress  = "pop3.web.de";
        public String MailServerSmtpAddress = "smtp.web.de";
        public int MailServerSmtpPort       = 587;
        public int MailServerPort           = 995;

        // CLIENT
        public String ClientMailAddress     = "Client@web.de";   // The address of the client
        public String ClientMailPass        = "p455w0rd";    // The password of your Client's mail address

        // SERVER
        public String ServerMailAddress     = "Server@web.de";    // The address of your Server

        // ENCRYPTION
        public String XorKey                = "testKeyOfDoom";   // The key you use for encrypion. Please use something hard, because you won't have to fill it in any forms multiple times. You'll just have to fill it in, when you add the Client to your Server (See later) and then you can just forget it!
</code></pre>
<p>After you changed the relevant values check them <strong>twice!</strong> You won’t get a second chance. When the .APK is sent to your victim and it doesn’t work, it’ll get interesting to tell him/her that he/she has to install your “new” version of the program, just because you filled in the wrong credentials…</p>
<p>Sure that you’re ready? Then we come to the building process… First, change the mode to “Release”:<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/e83e42800e4fb6ec66f14fddc272dca4fe387577.PNG" width="406" height="65"><br>
Then select Tools -&gt; Android -&gt; Publish Android App. Now you should get a screen like this one, if you do it the first time:<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/af44465a6c1dc4c7f56d1997234ed2f9b1be968a.PNG" width="558" height="468"><br>
Just fill in whatever you like to create new keys for signing and continue. On the next screen choose the path to save it to and the name. Ready? Click Publish! Now it takes some time…</p>
<p>When it’s finished, you got a fully working Android Remote Administration Tool! Just send the .APK to your victim and when he/she installs <strong>and</strong> opens it you’re in!</p>
<h3>Server</h3>
<p>The setup of our Server is much easier. Either open the Argus - RAT ~ Server project in Visual Studio and run it by pressing F5 or search the Argus - RAT ~ Server directory manually and run the executable in the Release directory. That’s up to you <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">. Anyway, you’ll get this:<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/4d92b3eb2f0151dd682b32822a59ac77ba23f3cc.PNG" width="374" height="174"><br>
Yes, not that great stuff… As I said above, I’ve only added two POC commands, but I’ll explain later how <strong>you</strong> can add your very own functions!</p>
<p>For now just click Add Client.<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/026ea91a4dc7a4c1130209a411bf5d928220f8d2.PNG" width="354" height="231"><br>
<strong>Explanation</strong><br>
Name: The name you want to call your Client. It’s just a description and does not depend on anything, so you can choose whatever you want <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">.</p>
<p>Client’s Mail address: The address you chose for your Client.</p>
<p>Server’s Mail address: The address you’ll use for the Server.</p>
<p>Server’s Mail password: <img src="https://0x00sec.org/images/emoji/twitter/expressionless.png?v=9" title=":expressionless:" class="emoji" alt=":expressionless:"> Don’t know what should be here? Please just go to <a href="http://hackforums.net" rel="noopener nofollow ugc">http://hackforums.net</a> or any other kids place…</p>
<p>Encryption Key: The key you used in the Globals.cs file! Upper and lower case is respected!</p>
<p>And that was it. Now you can select the Client via ComboBox and send him commands:<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/bd462342953048b3bbccb2985657b51de6844e55.PNG" width="484" height="244"></p>
<hr>
<h2>Developer?</h2>
<p>You are a developer and want to extend the RAT’s features? Then you’re exactly the kind of person I appreciate here <img src="https://0x00sec.org/images/emoji/twitter/grin.png?v=9" title=":grin:" class="emoji" alt=":grin:">. Ok, to make it easier for you I’ll explain every step you have to make, when you want to add <strong>your</strong> function!</p>
<p>I hope you’ve already opened the project in Visual Studio. If not, do so. The important files are:<br>
<strong>Argus - RAT</strong></p>
<ul>
<li>MainService.cs</li>
<li>Commands.cs</li>
</ul>
<p><strong>Argus - RAT ~ Server</strong></p>
<ul>
<li>Commands.cs</li>
</ul>
<p>And you should add your own entry in the Form. That’s up to you, how you want to do it, so I don’t explain this step.</p>
<p>Every file is open? Great, let’s go on.</p>
<h3>Think about it…</h3>
<p>What do you want as a new function? What arguments are needed? Which name do you want to give the command? These questions have to be answered before you continue.</p>
<p>As an example I’ll use the Toast command I already added.<br>
Name: Toast<br>
Argument(s): Text</p>
<h3>Server (Commands.cs)</h3>
<p>In the Commands.cs file you only have to add a function like this one:</p>
<pre><code class="lang-auto">        /// &lt;summary&gt;
        /// Sends a Toast to Client
        /// &lt;/summary&gt;
        /// &lt;param name="text"&gt;The Toast to show&lt;/param&gt;
        public bool SendToast(String text)
        {
            String body = "Toast:" + text;
            return SendMail(body);
        }
</code></pre>
<p><em>Please put it below the <code>/* Commands*/</code> comment, so that everything’s in the right order <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">.</em></p>
<p><strong>Explanation</strong><br>
The only thing I have to explain is the <code>String body = "Toast:" + text;</code>. The <code>"Toast:"</code> is used to identify the command when it arrives at your client. Just change <code>Toast</code> with the name you’ve chosen fo your function and the arguments behind with the ones you need. If you got any questions feel free to ask me <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">.</p>
<h3>Client</h3>
<p>In the MainService.cs you just have to add an <code>else if</code> to the <code>handleCommand()</code> function. Example:</p>
<pre><code class="lang-auto">else if (cmd == "toast")
                Commands.ShowWebsite(value);
</code></pre>
<p>Make sure to use lowercase even when you used uppercase at Server-side. The command will be made lowercase, when it arrives at the client!</p>
<p><code>value</code> is everything behind the colon.</p>
<p>And now the setup is finished and you can start writing your own function! Open Commands.cs and add your Code. For example:</p>
<pre><code class="lang-auto">        /// &lt;summary&gt;
        /// Shows the given text as toast
        /// &lt;/summary&gt;
        /// &lt;param name="text"&gt;Text to toast out&lt;/param&gt;
        public static void ShowToast(String text)
        {
            Application.SynchronizationContext.Post(_ =&gt; { Toast.MakeText(Android.App.Application.Context, text, ToastLength.Long).Show(); }, null);
        }
</code></pre>
<p>Now you’ve made your own function within about 5 minutes!</p>
<h2>Conclusion</h2>
<p>Wow, it got longer than I thought <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">. I hope you’re enjoying this and are interested in extending the features <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">. I’ll add different  improvements in the next days, so make sure to check it out <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">. For everyone who wants to test out his own features or just want to try the RAT without using any samrtphone, I can recommend <a href="http://www.bluestacks.com/de/index.html?__dlrd=1" rel="noopener nofollow ugc">Bluestacks</a>! It is annoying as CAPTCHAs, but very helpfull, if you just want to easily test your apps in a nearly real environment.</p>
<p>|-TheDoctor-|</p>
          <p><a href="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825/1</link>
        <pubDate>Wed, 27 Jul 2016 08:31:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-825-1</guid>
        <source url="https://0x00sec.org/t/android-remote-administration-tool-argus-rat-c/825.rss">Android Remote Administration Tool: Argus - RAT [C#]</source>
      </item>
  </channel>
</rss>
