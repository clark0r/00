<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Python] Trouble Downloading PDFs with Selenium</title>
    <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311</link>
    <description>## Objective
* Scrape course evaluation PDFs from my university&#39;s website.

## Technologies
* Python 2.7
* Selenium Webdriver

## Problem
This code allows me to download 101 PDFs with the name download.pdf, download(1).pdf, download(2).pdf, etc. It works up until download(100).pdf, and then the Chrome driver pops up a save as dialog and slowly starts to crash the program. 

## Attempted Solutions

1. I&#39;ve tried renaming the download.pdf file that gets downloaded and moving it, but for some reason the next download ends up being named download(1).pdf, even though download.pdf should be an available name.

2. I&#39;ve tried moving all files from the download directory to a permanent directory, but all that does is move the problem to another directory.

## Code

https://gist.github.com/zachbellay/d0449c67edd1db7dff61eeb47b7c8d76

#EDIT: Solution

Thanks to [usandfriends](https://usandfriends.github.com) and @oaktree for helping me figure out that I needed to use cookies. I rewrote the script and use urllib instead of selenium. Thanks guys! 

https://gist.github.com/zachbellay/46bf13c354f2e6acae873637be70e868

## Thank You!

Thank you for taking the time to read this. I&#39;m new to 0x00sec and have really loved it so far. This is a great community and plan to stay. Thanks in advance for your help.</description>
    
    <lastBuildDate>Mon, 13 Nov 2017 18:35:08 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Python] Trouble Downloading PDFs with Selenium</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/8</link>
        <pubDate>Mon, 13 Nov 2017 22:54:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4311-8</guid>
        <source url="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss">[Python] Trouble Downloading PDFs with Selenium</source>
      </item>
      <item>
        <title>[Python] Trouble Downloading PDFs with Selenium</title>
        <dc:creator><![CDATA[Sirius]]></dc:creator>
        <description><![CDATA[
            <p>There’s a ton of ways, i think the easiest is opening up the dev console in your browser of choice and then just use copy and paste, but you could also use an intercept proxy to catch things on the fly (My Preferred Method). Additionally there exist browser plugins you can use to manage cookies way more easily than by default dev console shit.</p>
          <p><a href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/7</link>
        <pubDate>Mon, 13 Nov 2017 18:35:08 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4311-7</guid>
        <source url="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss">[Python] Trouble Downloading PDFs with Selenium</source>
      </item>
      <item>
        <title>[Python] Trouble Downloading PDFs with Selenium</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Selenium doesn’t let you manipulate your cookies?</p>
<p>Disclaimer: Idk anything about selenium. I just know cookies exist.</p>
          <p><a href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/6</link>
        <pubDate>Mon, 13 Nov 2017 00:05:27 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4311-6</guid>
        <source url="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss">[Python] Trouble Downloading PDFs with Selenium</source>
      </item>
      <item>
        <title>[Python] Trouble Downloading PDFs with Selenium</title>
        <dc:creator><![CDATA[Scrim]]></dc:creator>
        <description><![CDATA[
            <p>How would I go about getting that cookie? Could I run wireshark while authing and get the cookie that way?</p>
          <p><a href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/5</link>
        <pubDate>Mon, 13 Nov 2017 00:04:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4311-5</guid>
        <source url="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss">[Python] Trouble Downloading PDFs with Selenium</source>
      </item>
      <item>
        <title>[Python] Trouble Downloading PDFs with Selenium</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Well once you’ve authed you have the cookie and can do whatever.</p>
          <p><a href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/4</link>
        <pubDate>Mon, 13 Nov 2017 00:01:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4311-4</guid>
        <source url="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss">[Python] Trouble Downloading PDFs with Selenium</source>
      </item>
      <item>
        <title>[Python] Trouble Downloading PDFs with Selenium</title>
        <dc:creator><![CDATA[Scrim]]></dc:creator>
        <description><![CDATA[
            <p>I probably could, but you can’t access the url until you’ve entered your student credentials. The reason why I was using Selenium instead of urllib was so that I could enter my username and password.</p>
          <p><a href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/3</link>
        <pubDate>Mon, 13 Nov 2017 00:00:40 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4311-3</guid>
        <source url="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss">[Python] Trouble Downloading PDFs with Selenium</source>
      </item>
      <item>
        <title>[Python] Trouble Downloading PDFs with Selenium</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Ya can’t just GET the pdf and write to disk?</p>
          <p><a href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/2</link>
        <pubDate>Sun, 12 Nov 2017 23:57:15 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4311-2</guid>
        <source url="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss">[Python] Trouble Downloading PDFs with Selenium</source>
      </item>
      <item>
        <title>[Python] Trouble Downloading PDFs with Selenium</title>
        <dc:creator><![CDATA[Scrim]]></dc:creator>
        <description><![CDATA[
            <h2>Objective</h2>
<ul>
<li>Scrape course evaluation PDFs from my university’s website.</li>
</ul>
<h2>Technologies</h2>
<ul>
<li>Python 2.7</li>
<li>Selenium Webdriver</li>
</ul>
<h2>Problem</h2>
<p>This code allows me to download 101 PDFs with the name download.pdf, download(1).pdf, download(2).pdf, etc. It works up until download(100).pdf, and then the Chrome driver pops up a save as dialog and slowly starts to crash the program.</p>
<h2>Attempted Solutions</h2>
<ol>
<li>
<p>I’ve tried renaming the download.pdf file that gets downloaded and moving it, but for some reason the next download ends up being named download(1).pdf, even though download.pdf should be an available name.</p>
</li>
<li>
<p>I’ve tried moving all files from the download directory to a permanent directory, but all that does is move the problem to another directory.</p>
</li>
</ol>
<h2>Code</h2>
<aside class="onebox githubgist">
  <header class="source">
      <a href="https://gist.github.com/zachbellay/d0449c67edd1db7dff61eeb47b7c8d76" target="_blank" rel="nofollow noopener">gist.github.com</a>
  </header>
  <article class="onebox-body">
    <h4><a href="https://gist.github.com/zachbellay/d0449c67edd1db7dff61eeb47b7c8d76" target="_blank" rel="nofollow noopener">https://gist.github.com/zachbellay/d0449c67edd1db7dff61eeb47b7c8d76</a></h4>
<h5>download_pdf_from_id_list.py</h5>
<pre><code class="Python">from selenium import webdriver
from time import sleep
import yaml
import os
import shutil
import textract
import re
from selenium.common.exceptions import NoSuchElementException
from time import sleep
</code></pre>
This file has been truncated. <a href="https://gist.github.com/zachbellay/d0449c67edd1db7dff61eeb47b7c8d76" target="_blank" rel="nofollow noopener">show original</a>

<p>
</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p><span class="hashtag">#EDIT:</span> Solution</p>
<p>Thanks to <a href="https://usandfriends.github.com" rel="nofollow noopener">usandfriends</a> and <a class="mention" href="https://0x00sec.org/u/oaktree">@oaktree</a> for helping me figure out that I needed to use cookies. I rewrote the script and use urllib instead of selenium. Thanks guys!</p>
<aside class="onebox githubgist">
  <header class="source">
      <a href="https://gist.github.com/zachbellay/46bf13c354f2e6acae873637be70e868" target="_blank" rel="nofollow noopener">gist.github.com</a>
  </header>
  <article class="onebox-body">
    <h4><a href="https://gist.github.com/zachbellay/46bf13c354f2e6acae873637be70e868" target="_blank" rel="nofollow noopener">https://gist.github.com/zachbellay/46bf13c354f2e6acae873637be70e868</a></h4>
<h5>download_pdfs.py</h5>
<pre><code class="Python">import urllib2

with open('valid_ids.txt') as f:
	mylist = f.read().splitlines()
	for i in mylist:
		url = 'https://evaluations.scu.edu/?vclass=' + str(i) + '&amp;vtrm=3820'
		opener = urllib2.build_opener()
		opener.addheaders.append(('Cookie', 'SimpleSAMLAuthToken=EXAMPLE; PHPSESSID=EXAMPLE'))
		response = opener.open(url)
		filename = str(i) + '.pdf'</code></pre>
This file has been truncated. <a href="https://gist.github.com/zachbellay/46bf13c354f2e6acae873637be70e868" target="_blank" rel="nofollow noopener">show original</a>

<p>
</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<h2>Thank You!</h2>
<p>Thank you for taking the time to read this. I’m new to 0x00sec and have really loved it so far. This is a great community and plan to stay. Thanks in advance for your help.</p>
          <p><a href="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311/1</link>
        <pubDate>Sun, 12 Nov 2017 23:25:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-4311-1</guid>
        <source url="https://0x00sec.org/t/python-trouble-downloading-pdfs-with-selenium/4311.rss">[Python] Trouble Downloading PDFs with Selenium</source>
      </item>
  </channel>
</rss>
