<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Stupid Nix Tricks with Fraq: Part 1</title>
    <link>https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357</link>
    <description>## Part 1: Pimp my SSH

`~/.ssh/config` is a blank canvas full of possibility. Over the next couple posts I&#39;m going to talk about fun things you can do with SSH and the config file.

Most of the time the use case for SSH is pretty simple: `ssh foo@bar` and done. Every once in a while we need to get slightly more complicated: change a port, user, or specify a key. We&#39;re going to go just a tad deeper today and talk about making your SSH really work for you by using a config file.

You may have a few servers you connect to regularly for fun and profit. What if they have special parameters. Do you want to have to remember every time that your machine at foo.io uses a different hostname than your system user on your laptop? Nah, that&#39;s too much work. Enter the SSH config file.

### The config file

In this post, we&#39;re keeping it simple: specifying a couple of easy connection params so you don&#39;t keep forgetting the dang things. Here&#39;s an example of setting these values:

    Host chat
        Port 12345
        Hostname foo.bar.io
        User baz
        IdentityFile ~/.ssh/other_key
        ForwardAgent yes


### The Breakdown

Let&#39;s break this down line by line.

`Host chat` specifies a host that the ssh client will search for in the config file. This can either be a short DNS name, an FQDN, or a nickname. If the `Hostname` parameter is provided, the ssh client will match on the `Host` field and then resolve the DNS name using the `Hostname` field. This is a handy way to specify machines using nicknames without adding them to `/etc/hosts`

`Port 12345` is pretty self-explanatory. It specifies the port that the SSH client should connect to. Defaults to 22

`User baz` is similarly easy to guess. It connects to the target as the user `baz`

`IdentityFile ~/.ssh/other_key` specifies some SSH key to use when connecting. Useful when connecting to a machine that uses a keypair other than what&#39;s in `~/.ssh/id_rsa`

`ForwardAgent yes` is a fun one. What if you have a bastion/pivot/jumpbox that you want to connect to other machines from, but don&#39;t want to store your keys on it? Maybe it&#39;s a shared machine or you just don&#39;t trust it? Easy*! Use `ForwardAgent`!

*Terms and conditions apply

This is just a short intro to what I&#39;ll be explaining later: How to make your SSH config file work for you. In upcoming posts I&#39;ll be explaining how to do SSH tunnels using your config file, why they&#39;re useful, and a deeper look at ForwardAgent.

For now, get playing around with the config file and learn to appreciate how much time it saves you, even if you&#39;re just using it as a substitute for `/etc/hosts` to nickname your boxen.</description>
    
    <lastBuildDate>Wed, 14 Dec 2016 15:25:31 +0000</lastBuildDate>
    <category>Networking</category>
    <atom:link href="https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Stupid Nix Tricks with Fraq: Part 1</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357/3</link>
        <pubDate>Sun, 21 Jan 2018 00:37:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1357-3</guid>
        <source url="https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357.rss">Stupid Nix Tricks with Fraq: Part 1</source>
      </item>
      <item>
        <title>Stupid Nix Tricks with Fraq: Part 1</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Really liked this article! I am a big fan of ForwardAgent! Cannot literally wait until that next article comes out!</p>
<p>Guys. SSH is really really cool.</p>
<p>- pry0cc</p>
          <p><a href="https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357/2</link>
        <pubDate>Wed, 14 Dec 2016 15:25:31 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1357-2</guid>
        <source url="https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357.rss">Stupid Nix Tricks with Fraq: Part 1</source>
      </item>
      <item>
        <title>Stupid Nix Tricks with Fraq: Part 1</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <h2>Part 1: Pimp my SSH</h2>
<p><code>~/.ssh/config</code> is a blank canvas full of possibility. Over the next couple posts I’m going to talk about fun things you can do with SSH and the config file.</p>
<p>Most of the time the use case for SSH is pretty simple: <code>ssh foo@bar</code> and done. Every once in a while we need to get slightly more complicated: change a port, user, or specify a key. We’re going to go just a tad deeper today and talk about making your SSH really work for you by using a config file.</p>
<p>You may have a few servers you connect to regularly for fun and profit. What if they have special parameters. Do you want to have to remember every time that your machine at <a href="http://foo.io" rel="nofollow noopener">foo.io</a> uses a different hostname than your system user on your laptop? Nah, that’s too much work. Enter the SSH config file.</p>
<h3>The config file</h3>
<p>In this post, we’re keeping it simple: specifying a couple of easy connection params so you don’t keep forgetting the dang things. Here’s an example of setting these values:</p>
<pre><code>Host chat
    Port 12345
    Hostname foo.bar.io
    User baz
    IdentityFile ~/.ssh/other_key
    ForwardAgent yes
</code></pre>
<h3>The Breakdown</h3>
<p>Let’s break this down line by line.</p>
<p><code>Host chat</code> specifies a host that the ssh client will search for in the config file. This can either be a short DNS name, an FQDN, or a nickname. If the <code>Hostname</code> parameter is provided, the ssh client will match on the <code>Host</code> field and then resolve the DNS name using the <code>Hostname</code> field. This is a handy way to specify machines using nicknames without adding them to <code>/etc/hosts</code></p>
<p><code>Port 12345</code> is pretty self-explanatory. It specifies the port that the SSH client should connect to. Defaults to 22</p>
<p><code>User baz</code> is similarly easy to guess. It connects to the target as the user <code>baz</code></p>
<p><code>IdentityFile ~/.ssh/other_key</code> specifies some SSH key to use when connecting. Useful when connecting to a machine that uses a keypair other than what’s in <code>~/.ssh/id_rsa</code></p>
<p><code>ForwardAgent yes</code> is a fun one. What if you have a bastion/pivot/jumpbox that you want to connect to other machines from, but don’t want to store your keys on it? Maybe it’s a shared machine or you just don’t trust it? Easy*! Use <code>ForwardAgent</code>!</p>
<p>*Terms and conditions apply</p>
<p>This is just a short intro to what I’ll be explaining later: How to make your SSH config file work for you. In upcoming posts I’ll be explaining how to do SSH tunnels using your config file, why they’re useful, and a deeper look at ForwardAgent.</p>
<p>For now, get playing around with the config file and learn to appreciate how much time it saves you, even if you’re just using it as a substitute for <code>/etc/hosts</code> to nickname your boxen.</p>
          <p><a href="https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357/1</link>
        <pubDate>Tue, 13 Dec 2016 22:45:35 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1357-1</guid>
        <source url="https://0x00sec.org/t/stupid-nix-tricks-with-fraq-part-1/1357.rss">Stupid Nix Tricks with Fraq: Part 1</source>
      </item>
  </channel>
</rss>
