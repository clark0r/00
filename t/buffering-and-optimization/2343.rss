<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Buffering and optimization</title>
    <link>https://0x00sec.org/t/buffering-and-optimization/2343</link>
    <description>One of the best article on buffering (buffer cache) / optimization I ever have read. 

[How is GNU yes so fast?](https://www.reddit.com/r/unix/comments/6gxduc/how_is_gnu_yes_so_fast/)</description>
    
    <lastBuildDate>Wed, 14 Jun 2017 15:50:52 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/buffering-and-optimization/2343.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Buffering and optimization</title>
        <dc:creator><![CDATA[twyK]]></dc:creator>
        <description><![CDATA[
            <p>This article is such interesting, if you have got others like this please post them <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/buffering-and-optimization/2343/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/buffering-and-optimization/2343/8</link>
        <pubDate>Wed, 14 Jun 2017 15:50:52 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2343-8</guid>
        <source url="https://0x00sec.org/t/buffering-and-optimization/2343.rss">Buffering and optimization</source>
      </item>
      <item>
        <title>Buffering and optimization</title>
        <dc:creator><![CDATA[B3h3m0th]]></dc:creator>
        <description><![CDATA[
            <p>You’re right <a class="mention" href="https://0x00sec.org/u/kowalski">@kowalski</a>, It’s a <a href="https://www.openbsd.org/papers/hackfest2015-pledge/mgp00001.html" rel="nofollow noopener">new risk mitigation feature</a> for OpenBSD, however  pledge() was born for security purposes, it is not for optimization.</p>
<p>It works really well <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/buffering-and-optimization/2343/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/buffering-and-optimization/2343/7</link>
        <pubDate>Wed, 14 Jun 2017 12:38:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2343-7</guid>
        <source url="https://0x00sec.org/t/buffering-and-optimization/2343.rss">Buffering and optimization</source>
      </item>
      <item>
        <title>Buffering and optimization</title>
        <dc:creator><![CDATA[kowalski]]></dc:creator>
        <description><![CDATA[
            <p>but OpenBSD does have something cool, pledge(). <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/buffering-and-optimization/2343/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/buffering-and-optimization/2343/6</link>
        <pubDate>Wed, 14 Jun 2017 10:51:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2343-6</guid>
        <source url="https://0x00sec.org/t/buffering-and-optimization/2343.rss">Buffering and optimization</source>
      </item>
      <item>
        <title>Buffering and optimization</title>
        <dc:creator><![CDATA[B3h3m0th]]></dc:creator>
        <description><![CDATA[
            <p>Great work <a class="mention" href="https://0x00sec.org/u/sagittarius-a">@sagittarius-a</a></p>
<p>just for info, GNU coreutils  is still the fastest because it works on buffer cache directly.</p>
<p>I have an old ibook G3 (late 2001, 256MB RAM, 750fx PPC cpu) with OpenBSD -current on it.</p>
<p>The result is: <strong>3.08MiB/s</strong>, really really slow.</p>
          <p><a href="https://0x00sec.org/t/buffering-and-optimization/2343/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/buffering-and-optimization/2343/5</link>
        <pubDate>Wed, 14 Jun 2017 10:00:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2343-5</guid>
        <source url="https://0x00sec.org/t/buffering-and-optimization/2343.rss">Buffering and optimization</source>
      </item>
      <item>
        <title>Buffering and optimization</title>
        <dc:creator><![CDATA[sagittarius-a]]></dc:creator>
        <description><![CDATA[
            <p>Very good article indeed. I stumbled across this this morning. I found it quite interesting.</p>

yes source code comparison <a href="https://0x00sec.org/t/buffering-and-optimization/2343/4">(click for more details)</a>
          <p><a href="https://0x00sec.org/t/buffering-and-optimization/2343/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/buffering-and-optimization/2343/4</link>
        <pubDate>Wed, 14 Jun 2017 07:00:22 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2343-4</guid>
        <source url="https://0x00sec.org/t/buffering-and-optimization/2343.rss">Buffering and optimization</source>
      </item>
      <item>
        <title>Buffering and optimization</title>
        <dc:creator><![CDATA[B3h3m0th]]></dc:creator>
        <description><![CDATA[
            <p>Hello. The link is now fixed.</p>
          <p><a href="https://0x00sec.org/t/buffering-and-optimization/2343/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/buffering-and-optimization/2343/3</link>
        <pubDate>Tue, 13 Jun 2017 11:51:02 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2343-3</guid>
        <source url="https://0x00sec.org/t/buffering-and-optimization/2343.rss">Buffering and optimization</source>
      </item>
      <item>
        <title>Buffering and optimization</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>Hello there,</p>
<p>Thank you for sharing it! I’d like to request from now on not to post URL shorteners because this is an InfoSec community and some folks might be intimidated/skeptical about clicking it.</p>
<p>I hope you understand. Take care and enjoy our community!</p>
          <p><a href="https://0x00sec.org/t/buffering-and-optimization/2343/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/buffering-and-optimization/2343/2</link>
        <pubDate>Tue, 13 Jun 2017 11:40:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2343-2</guid>
        <source url="https://0x00sec.org/t/buffering-and-optimization/2343.rss">Buffering and optimization</source>
      </item>
      <item>
        <title>Buffering and optimization</title>
        <dc:creator><![CDATA[B3h3m0th]]></dc:creator>
        <description><![CDATA[
            <p>One of the best article on buffering (buffer cache) / optimization I ever have read.</p>
<p><a href="https://www.reddit.com/r/unix/comments/6gxduc/how_is_gnu_yes_so_fast/" rel="nofollow noopener">How is GNU yes so fast?</a></p>
          <p><a href="https://0x00sec.org/t/buffering-and-optimization/2343/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/buffering-and-optimization/2343/1</link>
        <pubDate>Tue, 13 Jun 2017 11:27:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2343-1</guid>
        <source url="https://0x00sec.org/t/buffering-and-optimization/2343.rss">Buffering and optimization</source>
      </item>
  </channel>
</rss>
