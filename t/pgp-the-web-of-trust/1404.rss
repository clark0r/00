<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PGP: The Web Of Trust</title>
    <link>https://0x00sec.org/t/pgp-the-web-of-trust/1404</link>
    <description>Hi fellas, 

Following the practical cases of @VoidAccess, I wanted to introduce you the reputation trust model and a piece of history behind PGP.

As you probably already know, PGP, which stands for “Pretty Good Privacy”, has been developed by Phil Zimmermann in 1991. The general purpose of this technology was to protect data by applying a strong and unbreakable encryption. It is only later that it has been widely applied to email exchange area. Following the release of PGP, Phil was an indictment by the United States Customs Services for violation of the Arms Export Control Act. Indeed, by this time, encryption was considered as a war weapon, at the same level that nuke. The government dropped the case in 1997, resulting in a new release of PGP (Welcome Backdoors !!! :imp:)

PGP, considered as the first, widely distributed cryptographic scheme implementing the public key algorithm, is, by default, highly vulnerable to masquerade when come the time to share its public key. Indeed, once your key pair generated, the public key has to be sent to the receiver, allowing to decrypt the protected information. During the distribution process, this key could be intercepted and changed in order to impersonate the original sender, allowing the attacker to spoof the exchange between the two protagonists in an undetectable manner.

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/5/5363f82479897001df49ce140a891a65926abc05.jpeg&quot; width=&quot;690&quot; height=&quot;290&quot;&gt;

Two solutions have been implemented to avoid this issue.

The cryptographic solution is the signature. Indeed, even if Bob sends a message encrypted with Alice public key, Alice will not be certain that the message comes from Bob. The signature consists to encrypt the encrypted message with his own private key, which must be kept secret, in order to ensure the origin of the message. For further security, a timestamp is added to the signature to prevent any data tampering during the transfert.

The second way relies on the community around PGP, with the implementation of the Web Of Trust.

However, before describing this concept, I would like to explain you the X.509 certificate format in order to give you a better overview of the different trust model used over the internet.

## X.509

X.509 certificates are widely used over the internet to secure your communications with web services and encrypt your emails through S/MIME. Each certificate is signed by a CA (certificate authority), which is signed by another CA or a root CA, ensuring that the signed certificate is trustworthy. 

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/4/47b8e76397e3621ac3c389fae2fa4bbe290911d3.gif&quot; width=&quot;473&quot; height=&quot;242&quot;&gt;

As you can see on the picture above, this trust system is hierarchical and rely on the integrity of the CA chain. In case of certificate corruption, the CA must revoke the certificate and update the CRL (certificate revocation list) then dispatch the update to the other CAs.  However, can we really trust them? Do they really ensure security? Basically, we have no choice … In the past, a few examples showed the limitation of this trust model.

&gt; On March 23, 2011, Comodo reported that 8 days earlier, on 15 March 2011, a user account with an affiliate registration authority had been compromised and was used to create a new user account that issued nine certificate signing requests. Nine certificates for seven domains were issued. The attack was traced to IP address 212.95.136.18, which originates in Tehran, Iran. Though the firm initially reported that the breach was the result of a &quot;state-driven attack&quot;, it subsequently stated that the origin of the attack may be the &quot;result of an attacker attempting to lay a false trail.&quot;. Such issues have been widely reported, and has led to criticism of how certificates are issued and revoked. As of 2015, all of the certificates have been revoked. Microsoft has issued a security advisory and update to address the issue.
&gt; On March 26, 2011, a person under the username &quot;ComodoHacker&quot; made several posts to Pastebin.com claiming to be an Iranian responsible for the attacks.

##Web of trust

Here we go, now that you know how other certificates works and the principal problematic of public key algorithm, you will be able to appreciate the formidable concept of Web Of Trust :P

The Web Of Trust is a community based trust model that entirely rely on its users. Each PGP user has a pair of keyring (public and private). Let’s takes a look on the public keyring.

The public keyring references each user that signed the owner public key. Each signature contains a timestamp, an expiration date, the user ID, the public key, the user trust level and a few other flags.
The concept is simple, higher is the trust level of the signature owner, higher will be the trust level of the public key owner. There are two different levels of trust: partial and full, which are declined in several degrees. Consequently, a user fully trusted will more impactful on the public key trust level than three or four partial trusted users.

The Web Of Trust implement the basic aspects of trust e.g transitivity and reciprocality. Here is a nice schematic representation of this model.

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/f/fb75041c9607f30b2e7718283f8ccef4bc805e96.gif&quot; width=&quot;500&quot; height=&quot;368&quot;&gt;

To continue with, the public key sharing can be done through multiple vectors:

- Physically
- via keyservers
- via emails or friends, etc.

This model has the particularity to not only rely on a single entity but on a set of people, trustworthy or not, that confirmed the origin and belonging of the key. It results in a better trust assessment of the key owner than the classical X.509 format. 

However, PGP has some downsides too. Indeed, in case of revocation, the user have to revoke his key then update the revocation on the keyservers in order to prevent any further usage of his key. Moreover, he has to warn his friends or colleagues that his key has been revoked. 

We can also wonder about the efficiency of this model. Indeed, does the trust is really transitive? Can you really trust someone that you don’t know personaly? I think that the concept of trust should lead to an other intensive debate. Anyway, this domain is complexe as hell and difficult to define. Nevertheless, it’s nice to see that this scheme works pretty nice :)

Despite those cons and thanks to its unique trust model, PGP is a good trade off for anyone that want to protect his personal data and his emails.

I hope you enjoyed this article.

Best,
Nitrax

P.S: Don’t forget to take a look on the great @VoidAccess articles :

- [How to signe and verify a document or file using PGP/GPG](https://0x00sec.org/t/how-to-sign-and-verify-a-document-or-file-using-pgp-gpg/1337)
- [GPG (PGP) Command Line - Basic Tutorial](https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341)
- [How to Clearsign and Verify a Message using PGP/GPG](https://0x00sec.org/t/how-to-clearsign-and-verify-a-message-using-pgp-gpg/1370)

## Would you like an article about X.509 trust system and its downsides?
[poll public=true]
* Yes
* No
[/poll]</description>
    
    <lastBuildDate>Thu, 29 Dec 2016 16:30:18 +0000</lastBuildDate>
    <category>Cryptology</category>
    <atom:link href="https://0x00sec.org/t/pgp-the-web-of-trust/1404.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PGP: The Web Of Trust</title>
        <dc:creator><![CDATA[VoidAccess]]></dc:creator>
        <description><![CDATA[
            <p>Hi <a class="mention" href="https://0x00sec.org/u/nitrax">@Nitrax</a> <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"> , Very good write-up! We definitely need more articles about privacy, encryption and internet safety in general.</p>
          <p><a href="https://0x00sec.org/t/pgp-the-web-of-trust/1404/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pgp-the-web-of-trust/1404/4</link>
        <pubDate>Thu, 29 Dec 2016 16:30:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1404-4</guid>
        <source url="https://0x00sec.org/t/pgp-the-web-of-trust/1404.rss">PGP: The Web Of Trust</source>
      </item>
      <item>
        <title>PGP: The Web Of Trust</title>
        <dc:creator><![CDATA[Nitrax]]></dc:creator>
        <description><![CDATA[
            <aside class="quote group-VIP" data-username="pry0cc" data-post="2" data-topic="1404">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/pry0cc/40/6_2.png" class="avatar"> pry0cc:</div>
<blockquote>
<p>Could you just make loads of people and get them to trust a false pub key?</p>
</blockquote>
</aside>
<p>In this scenario, each signature comes from an untrusted user. Even with a bunch of “fake” signatures, it will not provide a sufficient level of trust. Moreover, the good practice encourages a prior analysis of the public keyring in order to verify from where come the existing signatures.</p>
<aside class="quote group-VIP" data-username="pry0cc" data-post="2" data-topic="1404">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/pry0cc/40/6_2.png" class="avatar"> pry0cc:</div>
<blockquote>
<p>Also what happens if you can compromise one of the more trusted people?</p>
</blockquote>
</aside>
<p>What do you mean by compromised? Cause, even once you have access to the machine you must be able to retrieve the PGP passphrase. If it’s the case (keylogger, etc.), then yes you can start social engineering <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          <p><a href="https://0x00sec.org/t/pgp-the-web-of-trust/1404/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pgp-the-web-of-trust/1404/3</link>
        <pubDate>Thu, 29 Dec 2016 14:19:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1404-3</guid>
        <source url="https://0x00sec.org/t/pgp-the-web-of-trust/1404.rss">PGP: The Web Of Trust</source>
      </item>
      <item>
        <title>PGP: The Web Of Trust</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Very nice article <a class="mention" href="https://0x00sec.org/u/nitrax">@Nitrax</a>. I am a fan.</p>
<p>So how would one go about exploiting the web of trust? Could you just make loads of people and get them to trust a false pub key? Also what happens if you can compromise one of the more trusted people?</p>
          <p><a href="https://0x00sec.org/t/pgp-the-web-of-trust/1404/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pgp-the-web-of-trust/1404/2</link>
        <pubDate>Thu, 29 Dec 2016 13:15:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1404-2</guid>
        <source url="https://0x00sec.org/t/pgp-the-web-of-trust/1404.rss">PGP: The Web Of Trust</source>
      </item>
      <item>
        <title>PGP: The Web Of Trust</title>
        <dc:creator><![CDATA[Nitrax]]></dc:creator>
        <description><![CDATA[
            <p>Hi fellas,</p>
<p>Following the practical cases of <a class="mention" href="https://0x00sec.org/u/voidaccess">@VoidAccess</a>, I wanted to introduce you the reputation trust model and a piece of history behind PGP.</p>
<p>As you probably already know, PGP, which stands for “Pretty Good Privacy”, has been developed by Phil Zimmermann in 1991. The general purpose of this technology was to protect data by applying a strong and unbreakable encryption. It is only later that it has been widely applied to email exchange area. Following the release of PGP, Phil was an indictment by the United States Customs Services for violation of the Arms Export Control Act. Indeed, by this time, encryption was considered as a war weapon, at the same level that nuke. The government dropped the case in 1997, resulting in a new release of PGP (Welcome Backdoors !!! <img src="https://0x00sec.org/images/emoji/twitter/imp.png?v=9" title=":imp:" class="emoji" alt=":imp:">)</p>
<p>PGP, considered as the first, widely distributed cryptographic scheme implementing the public key algorithm, is, by default, highly vulnerable to masquerade when come the time to share its public key. Indeed, once your key pair generated, the public key has to be sent to the receiver, allowing to decrypt the protected information. During the distribution process, this key could be intercepted and changed in order to impersonate the original sender, allowing the attacker to spoof the exchange between the two protagonists in an undetectable manner.</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/5/5363f82479897001df49ce140a891a65926abc05.jpeg" width="690" height="290"></p>
<p>Two solutions have been implemented to avoid this issue.</p>
<p>The cryptographic solution is the signature. Indeed, even if Bob sends a message encrypted with Alice public key, Alice will not be certain that the message comes from Bob. The signature consists to encrypt the encrypted message with his own private key, which must be kept secret, in order to ensure the origin of the message. For further security, a timestamp is added to the signature to prevent any data tampering during the transfert.</p>
<p>The second way relies on the community around PGP, with the implementation of the Web Of Trust.</p>
<p>However, before describing this concept, I would like to explain you the X.509 certificate format in order to give you a better overview of the different trust model used over the internet.</p>
<h2>X.509</h2>
<p>X.509 certificates are widely used over the internet to secure your communications with web services and encrypt your emails through S/MIME. Each certificate is signed by a CA (certificate authority), which is signed by another CA or a root CA, ensuring that the signed certificate is trustworthy.</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/4/47b8e76397e3621ac3c389fae2fa4bbe290911d3.gif" width="473" height="242"></p>
<p>As you can see on the picture above, this trust system is hierarchical and rely on the integrity of the CA chain. In case of certificate corruption, the CA must revoke the certificate and update the CRL (certificate revocation list) then dispatch the update to the other CAs.  However, can we really trust them? Do they really ensure security? Basically, we have no choice … In the past, a few examples showed the limitation of this trust model.</p>
<blockquote>
<p>On March 23, 2011, Comodo reported that 8 days earlier, on 15 March 2011, a user account with an affiliate registration authority had been compromised and was used to create a new user account that issued nine certificate signing requests. Nine certificates for seven domains were issued. The attack was traced to IP address 212.95.136.18, which originates in Tehran, Iran. Though the firm initially reported that the breach was the result of a “state-driven attack”, it subsequently stated that the origin of the attack may be the “result of an attacker attempting to lay a false trail.”. Such issues have been widely reported, and has led to criticism of how certificates are issued and revoked. As of 2015, all of the certificates have been revoked. Microsoft has issued a security advisory and update to address the issue.<br>
On March 26, 2011, a person under the username “ComodoHacker” made several posts to <a href="http://Pastebin.com" rel="noopener nofollow ugc">Pastebin.com</a> claiming to be an Iranian responsible for the attacks.</p>
</blockquote>
<p>#<span class="hashtag">#Web</span> of trust</p>
<p>Here we go, now that you know how other certificates works and the principal problematic of public key algorithm, you will be able to appreciate the formidable concept of Web Of Trust <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>The Web Of Trust is a community based trust model that entirely rely on its users. Each PGP user has a pair of keyring (public and private). Let’s takes a look on the public keyring.</p>
<p>The public keyring references each user that signed the owner public key. Each signature contains a timestamp, an expiration date, the user ID, the public key, the user trust level and a few other flags.<br>
The concept is simple, higher is the trust level of the signature owner, higher will be the trust level of the public key owner. There are two different levels of trust: partial and full, which are declined in several degrees. Consequently, a user fully trusted will more impactful on the public key trust level than three or four partial trusted users.</p>
<p>The Web Of Trust implement the basic aspects of trust e.g transitivity and reciprocality. Here is a nice schematic representation of this model.</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/f/fb75041c9607f30b2e7718283f8ccef4bc805e96.gif" width="500" height="368"></p>
<p>To continue with, the public key sharing can be done through multiple vectors:</p>
<ul>
<li>Physically</li>
<li>via keyservers</li>
<li>via emails or friends, etc.</li>
</ul>
<p>This model has the particularity to not only rely on a single entity but on a set of people, trustworthy or not, that confirmed the origin and belonging of the key. It results in a better trust assessment of the key owner than the classical X.509 format.</p>
<p>However, PGP has some downsides too. Indeed, in case of revocation, the user have to revoke his key then update the revocation on the keyservers in order to prevent any further usage of his key. Moreover, he has to warn his friends or colleagues that his key has been revoked.</p>
<p>We can also wonder about the efficiency of this model. Indeed, does the trust is really transitive? Can you really trust someone that you don’t know personaly? I think that the concept of trust should lead to an other intensive debate. Anyway, this domain is complexe as hell and difficult to define. Nevertheless, it’s nice to see that this scheme works pretty nice <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Despite those cons and thanks to its unique trust model, PGP is a good trade off for anyone that want to protect his personal data and his emails.</p>
<p>I hope you enjoyed this article.</p>
<p>Best,<br>
Nitrax</p>
<p>P.S: Don’t forget to take a look on the great <a class="mention" href="https://0x00sec.org/u/voidaccess">@VoidAccess</a> articles :</p>
<ul>
<li><a href="https://0x00sec.org/t/how-to-sign-and-verify-a-document-or-file-using-pgp-gpg/1337">How to signe and verify a document or file using PGP/GPG</a></li>
<li><a href="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341">GPG (PGP) Command Line - Basic Tutorial</a></li>
<li><a href="https://0x00sec.org/t/how-to-clearsign-and-verify-a-message-using-pgp-gpg/1370">How to Clearsign and Verify a Message using PGP/GPG</a></li>
</ul>
<h2>Would you like an article about X.509 trust system and its downsides?</h2>
<p><a href="https://0x00sec.org/t/pgp-the-web-of-trust/1404/1">Click to view the poll.</a></p>
          <p><a href="https://0x00sec.org/t/pgp-the-web-of-trust/1404/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pgp-the-web-of-trust/1404/1</link>
        <pubDate>Thu, 29 Dec 2016 12:21:15 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1404-1</guid>
        <source url="https://0x00sec.org/t/pgp-the-web-of-trust/1404.rss">PGP: The Web Of Trust</source>
      </item>
  </channel>
</rss>
