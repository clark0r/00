<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Encryption &amp; Bruteforcing</title>
    <link>https://0x00sec.org/t/encryption-bruteforcing/9108</link>
    <description>Hi y &#39;all. So I am currently trying to do a project in python2 and python3. Basically I&#39;m trying to study how to bruteforce a encrypted &#39;password&#39; in lets say SHA-1 and MD5. I&#39;m not asking for the answer, but I&#39;m trying to understand why it&#39;s important to use hashes and salts along with the hashes. 

Btw, my &#39;encryption&#39; program is here: 

https://bin.0x00sec.org/?b60c9c1e45fe8e56#rSCqD1Xosm+xKfbpiOEcosm6gJ7rKTW+4TRd/hJyeBk=

Anyways, yeah. I just am confused and have no idea if my sources are correct. Any help is appreciated. Thanks! 

With that all being said, ~Cheers!

--Techno Forg--</description>
    
    <lastBuildDate>Mon, 22 Oct 2018 11:32:17 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/encryption-bruteforcing/9108.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Encryption &amp; Bruteforcing</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed 3 days after the last reply. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/encryption-bruteforcing/9108/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/encryption-bruteforcing/9108/4</link>
        <pubDate>Thu, 25 Oct 2018 11:32:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9108-4</guid>
        <source url="https://0x00sec.org/t/encryption-bruteforcing/9108.rss">Encryption &amp; Bruteforcing</source>
      </item>
      <item>
        <title>Encryption &amp; Bruteforcing</title>
        <dc:creator><![CDATA[sir1ous]]></dc:creator>
        <description><![CDATA[
            <p>Well, you are not really using SHA1MD5 with and without salt but plain SHA1/MD5 and bcrypt (which is completely different hashing method).</p>
<p>If you want to implement a simple bruteforce, you can use python’s itertools:</p>
<pre><code class="lang-python">    from itertools import product
    from hashlib import md5

    test_hash = '098f6bcd4621d373cade4e832627b4f6' # md5(test)
    n = 4
    chars = 'abcdefghijklmnoprstuvxyz'
    for i in range(1,n+1):
        for j in product(list(chars), repeat=i):
            s = ''.join(j)
            m = md5()
            m.update(s)
            if m.hexdigest() == test_hash:
                print "Found: %s" % s
                exit(0)
</code></pre>
          <p><a href="https://0x00sec.org/t/encryption-bruteforcing/9108/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/encryption-bruteforcing/9108/3</link>
        <pubDate>Mon, 22 Oct 2018 11:32:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9108-3</guid>
        <source url="https://0x00sec.org/t/encryption-bruteforcing/9108.rss">Encryption &amp; Bruteforcing</source>
      </item>
      <item>
        <title>Encryption &amp; Bruteforcing</title>
        <dc:creator><![CDATA[VVid0w]]></dc:creator>
        <description><![CDATA[
            <p>You might wanna check out the theory and explanation behind a hash and a salt in cryptography. Here’s a couple of links I found that I thought explained it quite well.</p>
<p></p><aside class="onebox wikipedia">
  <header class="source">
      <a href="https://simple.wikipedia.org/wiki/Cryptographic_hash_function" target="_blank" rel="noopener nofollow ugc">simple.wikipedia.org</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/1/134384ab3792448314c72d1590aeebf7a90a94ee.png" class="thumbnail" width="" height="">

<h3><a href="https://simple.wikipedia.org/wiki/Cryptographic_hash_function" target="_blank" rel="noopener nofollow ugc">Cryptographic hash function</a></h3>

<p>A cryptographic hash function is a hash function which takes an input (or 'message') and returns a fixed-size  string of bytes. The string is called the 'hash value', 'message digest', 'digital fingerprint', 'digest' or 'checksum'.
 The ideal hash function has three main properties:
 Functions with these properties are used as hash functions for a variety of purposes, not only in cryptography. Practical applications include message integrity checks, digital signatures, authentication, and various...</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
<aside class="onebox wikipedia">
  <header class="source">
      <a href="https://en.wikipedia.org/wiki/Salt_(cryptography)" target="_blank" rel="noopener nofollow ugc">en.wikipedia.org</a>
  </header>
  <article class="onebox-body">
    

<h3><a href="https://en.wikipedia.org/wiki/Salt_(cryptography)" target="_blank" rel="noopener nofollow ugc">Salt (cryptography)</a></h3>

<p>In cryptography, a salt is random data that is used as an additional input to a one-way function that hashes data, a password or passphrase. Salts are used to safeguard passwords in storage. Historically a password was stored in plaintext on a system, but over time additional safeguards were developed to protect a user's password against being read from the system. A salt is one of those methods.
 A new salt is randomly generated for each password. In a typical setting, the salt and the password ...</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<p></p>
          <p><a href="https://0x00sec.org/t/encryption-bruteforcing/9108/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/encryption-bruteforcing/9108/2</link>
        <pubDate>Mon, 22 Oct 2018 11:22:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9108-2</guid>
        <source url="https://0x00sec.org/t/encryption-bruteforcing/9108.rss">Encryption &amp; Bruteforcing</source>
      </item>
      <item>
        <title>Encryption &amp; Bruteforcing</title>
        <dc:creator><![CDATA[Techno_Forg]]></dc:creator>
        <description><![CDATA[
            <p>Hi y 'all. So I am currently trying to do a project in python2 and python3. Basically I’m trying to study how to bruteforce a encrypted ‘password’ in lets say SHA-1 and MD5. I’m not asking for the answer, but I’m trying to understand why it’s important to use hashes and salts along with the hashes.</p>
<p>Btw, my ‘encryption’ program is here:</p>
<p><a href="https://bin.0x00sec.org/?b60c9c1e45fe8e56#rSCqD1Xosm+xKfbpiOEcosm6gJ7rKTW+4TRd/hJyeBk=" class="onebox" target="_blank">https://bin.0x00sec.org/?b60c9c1e45fe8e56#rSCqD1Xosm+xKfbpiOEcosm6gJ7rKTW+4TRd/hJyeBk=</a></p>
<p>Anyways, yeah. I just am confused and have no idea if my sources are correct. Any help is appreciated. Thanks!</p>
<p>With that all being said, ~Cheers!</p>
<p>–Techno Forg–</p>
          <p><a href="https://0x00sec.org/t/encryption-bruteforcing/9108/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/encryption-bruteforcing/9108/1</link>
        <pubDate>Mon, 22 Oct 2018 10:47:15 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9108-1</guid>
        <source url="https://0x00sec.org/t/encryption-bruteforcing/9108.rss">Encryption &amp; Bruteforcing</source>
      </item>
  </channel>
</rss>
