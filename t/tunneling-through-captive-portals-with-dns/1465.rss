<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Tunneling through captive portals with DNS</title>
    <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465</link>
    <description>Imagine you are sitting in an airport, and you feel a sudden urge to browse the Internet. You take out your phone, and there seems to be an open network for travelers. Having safety in mind, you fire up your VPN client. But wait - It can&#39;t connect? You open your browser and witness a horrible sight when you try to look something up in DuckDuckGo...
&lt;img src=&#39;//0x00sec.s3.amazonaws.com/original/2X/c/cb450eae91c6973f4710c3d15a9ec75b23d14908.png&#39;&gt;

&quot;Damn!&quot;, you say to yourself. &quot;I don&#39;t want to pay for that! There has to be a way...&quot;

Enter DNS tunneling!

[DNS](https://en.wikipedia.org/wiki/Domain_Name_System) is, in short, a service to translate domain names, such as 0x00sec.org, to IP adresses, such as 104.18.49.48. A typical exchange looks like this: 

1. Client sends a UDP packet containing the domain name to translate.
2. Server replies with the IP address corresponding to the domain.

There are more [DNS record types](https://en.wikipedia.org/wiki/List_of_DNS_record_types), for example TXT, which allow the server to respond with arbitrary data instead of an IP. Now, someone smart thought to themselves, would it be possible to communicate using DNS requests and replies? As it turns out, it is! Imagine something like the following:

1. Client sends a DNS packet of type TXT containing &quot;hello-server.domain.tld&quot;
2. Server receives the packet, reads data from the request and sends back &quot;hello-client&quot;

See where this is going? Now, let&#39;s go a step further and create (almost) a full blown VPN! With some base64 or other encoding sprinkled in, you can send whole IP packets encapsulated in DNS requests. Here&#39;s an example:

1. Client reads a packet from a [TUN device](https://en.wikipedia.org/wiki/TUN/TAP), encodes it and sends a request containing the packet to the server. Let&#39;s say it&#39;s a SYN packet to 0x00sec.org.
2. Server receives the request, and decodes the packet.
3. The packet&#39;s source address is changed to indicate the server&#39;s address, so replies go back to the server instead of the client.
4. The packet is then sent on its way, and a reply shortly arrives: a SYN/ACK packet!
5. Packet source is changed back to client so his networking software doesn&#39;t bitch about malformed packets and other such frivolities. It&#39;s then encoded into a DNS reply and sent back.
6. Client receives the SYN/ACK and writes it into the tun device. 

Now the client&#39;s browser/netcat/metasploit will respond with an ACK packet and a connection will be estabilished. There&#39;s a caveat, though. What if the server needs to send data? It can&#39;t just send another DNS reply, as the client&#39;s router won&#39;t route it to the client anymore. The solution is a bit hacky but simple: the client just needs to send an empty DNS request every so often, so the server can reply with the data.

It might look simple on paper, but the implementation is somewhat difficult. Trust me, I tried. Thankfully, there already are programs for DNS tunneling. The one I&#39;m using is called [Iodine](http://code.kryo.se/iodine/). You can install it by using `apt-get install iodine`. Here&#39;s what you will need:

1. A server and client. They&#39;re both included in the `iodine` package.
2. A domain name, with the ability to set nameservers. You can get one from dot.tk.
3. Another couple domains to set up nameservers. 
4. A computer you can forward port 53 to.

You&#39;ll have to set up nameservers to domains which point to your iodine server.

Setting up is quite simple. On the server, run:
`iodined -P &lt;strong password&gt; &lt;IP of tun device&gt; &lt;domain&gt;`
for example, `iodined -P 1234 10.0.0.1 tunnel.tk`

On the client, run:
`iodine -P &lt;password&gt; &lt;domain&gt;`
for example, ` iodine -P 1234 tunnel.tk`

And voila! Free internet access everywhere! (Unless the router doesn&#39;t fall for it and blocks all DNS queries, but shh...)</description>
    
    <lastBuildDate>Sat, 10 Sep 2022 00:35:24 +0000</lastBuildDate>
    <category>Networking</category>
    <atom:link href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[Richie]]></dc:creator>
        <description><![CDATA[
            <p>Isn’t DNScrypt not a lot easier? Or do I get this wrong.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/22">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/22</link>
        <pubDate>Sat, 10 Sep 2022 00:31:34 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-22</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[c0z]]></dc:creator>
        <description><![CDATA[
            <p>“Allegedly” borrowed mac-addresses of people who already paid lol</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/20">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/20</link>
        <pubDate>Mon, 22 Aug 2022 06:24:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-20</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <p>hahaha I would never!</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/19">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/19</link>
        <pubDate>Mon, 22 Aug 2022 06:09:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-19</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[messede]]></dc:creator>
        <description><![CDATA[
            <p>I know this is one hell of a necrobump and im probably going to get beaten up by <a class="mention" href="https://0x00sec.org/u/vict0ni">@vict0ni</a> ,<br>
but anyways here it is …</p>
<ol>
<li>
<p>Most captive portal have some whitelisted hosts which are allowed though it.<br>
Ex:  the website of a hotel so that customers can access it without paying for the wifi, or the<br>
website of a university which guests can access without logging in.</p>
</li>
<li>
<p>Good News!, this can be abused</p>
</li>
</ol>
<ul>
<li>
<p>Incase of Http connections :  if a arbitrary website does not have virtual hosts configured<br>
while visiting it you could just rewrite the host header to that of a allowed site, and the<br>
captive portal should allow you to visit that site.</p>
</li>
<li>
<p>Incase of Https connections : you can change the SNI header(in the TLS client hello) to that of a allowed site, this should result in the webserver giving you some default TLS certificate and will generate a warning in the browser, but since the host header is unchanged the website should be accessible as usual. (This might not be possible in all captive portal scenarios)</p>
</li>
</ul>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/18">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/18</link>
        <pubDate>Sun, 21 Aug 2022 07:03:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-18</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[Fust3rCluck]]></dc:creator>
        <description><![CDATA[
            <p>I do this also. It works in most hotels.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/17">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/17</link>
        <pubDate>Sun, 22 Jan 2017 01:29:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-17</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[Valentine]]></dc:creator>
        <description><![CDATA[
            <p>Nice post. This might come useful. Muahhaha! <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"></p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/16">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/16</link>
        <pubDate>Sun, 22 Jan 2017 00:02:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-16</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[Valkyr]]></dc:creator>
        <description><![CDATA[
            <p>I read this a few months ago in my online newspaper. Maybe a time saver, a lot less l33t way to get on the airport wifi: <a href="http://mashable.com/2016/10/06/airport-wifi-map/#2eMsSLDm7qqw" rel="nofollow noopener">http://mashable.com/2016/10/06/airport-wifi-map/#2eMsSLDm7qqw</a></p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/15</link>
        <pubDate>Thu, 19 Jan 2017 10:53:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-15</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Perhaps I was lucky? Where that person had left just as I connected? Or perhaps the access point would disconnect the user in favour for the new user?</p>
<p>Hm who knows. Does anybody know the rules around what happens when a device connects to an access point with the mac address of an exisiting device?</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/14</link>
        <pubDate>Wed, 18 Jan 2017 18:34:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-14</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/pry0cc">@pry0cc</a>:</p>
<p>It is possible. The way you described it seemed like you and the victim were sharing the same MAC address while BOTH connected, which will fail.</p>
<p><a class="mention" href="https://0x00sec.org/u/fraq">@fraq</a>’s description sounds feasible because the user will be kicked off the network.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/13</link>
        <pubDate>Tue, 17 Jan 2017 15:30:23 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-13</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>That sort of attack is in theory not that hard to pull off. Just sniff for someone who is clearly browsing past the paywall, send a ton of DEAUTH frames, wait until they get pissed and give up, then take over their mac.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/12</link>
        <pubDate>Tue, 17 Jan 2017 14:54:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-12</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>DNS records man! Cmon.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/11</link>
        <pubDate>Tue, 17 Jan 2017 14:54:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-11</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>That’s what I do the majority of the time.  In the past I have spoofed Mac addresses of of the people who have paid,  but <span class="mention">@py</span> doesn’t believe I pulled it off.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/10</link>
        <pubDate>Tue, 17 Jan 2017 14:53:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-10</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>However, if we’re strictly talking about evading captive portals, most have a free tier that lasts 30 mins or so. Use <a href="https://github.com/alobbs/macchanger" rel="nofollow noopener">macchanger</a> to generate a new mac and refresh your session</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/9</link>
        <pubDate>Tue, 17 Jan 2017 14:32:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-9</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>Iodine is pretty dope, but the thing that killed me with it is that you need to be prepared <em>ahead of time</em> to use it. I found myself stuck in an airport and wanted to tunnel out, but didn’t have iodine or a gateway. RIP.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/8</link>
        <pubDate>Tue, 17 Jan 2017 14:31:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-8</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/joe_schmoe">@Joe_Schmoe</a>  What does changing nameservers entail?</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/7</link>
        <pubDate>Mon, 16 Jan 2017 20:39:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-7</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[Joe_Schmoe]]></dc:creator>
        <description><![CDATA[
            <p>You can run iodined on your main computer while away on holidays or a raspberry pi. It takes up barely any resources.</p>
<p>If you don’t want to use dot.tk domains you can use any other free domain services, but you need to be able to change nameservers.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/6</link>
        <pubDate>Mon, 16 Jan 2017 20:38:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-6</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Computers aren’t, though. And I would <strong>not</strong> wanna use one of those <code>dot.tk</code> spam domains.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/5</link>
        <pubDate>Mon, 16 Jan 2017 20:31:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-5</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[Joe_Schmoe]]></dc:creator>
        <description><![CDATA[
            <p>.tk domains are free.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/4</link>
        <pubDate>Mon, 16 Jan 2017 20:30:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-4</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>This can’t be real. The legend himself <a class="mention" href="https://0x00sec.org/u/joe_schmoe">@Joe_Schmoe</a> made a write-up? Dayum!</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/3</link>
        <pubDate>Mon, 16 Jan 2017 20:22:14 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-3</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>This is pretty 1337, but it sounds expensive.</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/2</link>
        <pubDate>Mon, 16 Jan 2017 20:07:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-2</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
      <item>
        <title>Tunneling through captive portals with DNS</title>
        <dc:creator><![CDATA[Joe_Schmoe]]></dc:creator>
        <description><![CDATA[
            <p>Imagine you are sitting in an airport, and you feel a sudden urge to browse the Internet. You take out your phone, and there seems to be an open network for travelers. Having safety in mind, you fire up your VPN client. But wait - It can’t connect? You open your browser and witness a horrible sight when you try to look something up in DuckDuckGo…<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/c/cb450eae91c6973f4710c3d15a9ec75b23d14908.png" width="" height=""></p>
<p>“Damn!”, you say to yourself. “I don’t want to pay for that! There has to be a way…”</p>
<p>Enter DNS tunneling!</p>
<p><a href="https://en.wikipedia.org/wiki/Domain_Name_System" rel="noopener nofollow ugc">DNS</a> is, in short, a service to translate domain names, such as <a href="http://0x00sec.org">0x00sec.org</a>, to IP adresses, such as 104.18.49.48. A typical exchange looks like this:</p>
<ol>
<li>Client sends a UDP packet containing the domain name to translate.</li>
<li>Server replies with the IP address corresponding to the domain.</li>
</ol>
<p>There are more <a href="https://en.wikipedia.org/wiki/List_of_DNS_record_types" rel="noopener nofollow ugc">DNS record types</a>, for example TXT, which allow the server to respond with arbitrary data instead of an IP. Now, someone smart thought to themselves, would it be possible to communicate using DNS requests and replies? As it turns out, it is! Imagine something like the following:</p>
<ol>
<li>Client sends a DNS packet of type TXT containing “hello-server.domain.tld”</li>
<li>Server receives the packet, reads data from the request and sends back “hello-client”</li>
</ol>
<p>See where this is going? Now, let’s go a step further and create (almost) a full blown VPN! With some base64 or other encoding sprinkled in, you can send whole IP packets encapsulated in DNS requests. Here’s an example:</p>
<ol>
<li>Client reads a packet from a <a href="https://en.wikipedia.org/wiki/TUN/TAP" rel="noopener nofollow ugc">TUN device</a>, encodes it and sends a request containing the packet to the server. Let’s say it’s a SYN packet to <a href="http://0x00sec.org">0x00sec.org</a>.</li>
<li>Server receives the request, and decodes the packet.</li>
<li>The packet’s source address is changed to indicate the server’s address, so replies go back to the server instead of the client.</li>
<li>The packet is then sent on its way, and a reply shortly arrives: a SYN/ACK packet!</li>
<li>Packet source is changed back to client so his networking software doesn’t bitch about malformed packets and other such frivolities. It’s then encoded into a DNS reply and sent back.</li>
<li>Client receives the SYN/ACK and writes it into the tun device.</li>
</ol>
<p>Now the client’s browser/netcat/metasploit will respond with an ACK packet and a connection will be estabilished. There’s a caveat, though. What if the server needs to send data? It can’t just send another DNS reply, as the client’s router won’t route it to the client anymore. The solution is a bit hacky but simple: the client just needs to send an empty DNS request every so often, so the server can reply with the data.</p>
<p>It might look simple on paper, but the implementation is somewhat difficult. Trust me, I tried. Thankfully, there already are programs for DNS tunneling. The one I’m using is called <a href="http://code.kryo.se/iodine/" rel="noopener nofollow ugc">Iodine</a>. You can install it by using <code>apt-get install iodine</code>. Here’s what you will need:</p>
<ol>
<li>A server and client. They’re both included in the <code>iodine</code> package.</li>
<li>A domain name, with the ability to set nameservers. You can get one from dot.tk.</li>
<li>Another couple domains to set up nameservers.</li>
<li>A computer you can forward port 53 to.</li>
</ol>
<p>You’ll have to set up nameservers to domains which point to your iodine server.</p>
<p>Setting up is quite simple. On the server, run:<br>
<code>iodined -P &lt;strong password&gt; &lt;IP of tun device&gt; &lt;domain&gt;</code><br>
for example, <code>iodined -P 1234 10.0.0.1 tunnel.tk</code></p>
<p>On the client, run:<br>
<code>iodine -P &lt;password&gt; &lt;domain&gt;</code><br>
for example, <code> iodine -P 1234 tunnel.tk</code></p>
<p>And voila! Free internet access everywhere! (Unless the router doesn’t fall for it and blocks all DNS queries, but shh…)</p>
          <p><a href="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465/1</link>
        <pubDate>Mon, 16 Jan 2017 19:06:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1465-1</guid>
        <source url="https://0x00sec.org/t/tunneling-through-captive-portals-with-dns/1465.rss">Tunneling through captive portals with DNS</source>
      </item>
  </channel>
</rss>
