<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>FIsher Price “My First SS7 attack”</title>
    <link>https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731</link>
    <description># FIsher Price “My First SS7 attack”

I got a pm today asking me if I had “fully figured out and gained access to SS7 ?” Sadly the answer to parts A and B of that question is no, but I could have, I think.  After much searching &amp; scanning, I stumbled across a SGFW running default creds. 
Winner johnny.. Full card.. 

*I followed the guide here*: [best ss7 post ever](https://0x00sec.org/t/into-the-wild-gaining-access-to-ss7-part-1-finding-an-access-point/12418/66)

Unfortunately, to log in would have been crossing a line I’m not interested in crossing right now, so its treasures will remain a mystery.  Fortunately, I have less illegal way to get my SS7 fix.

My whole interest in SS7 is location data.  I don’t want to intercept password resets or OTP, I just want to be able to know the location of my POI.  Turns out there is an easier way than an AnytimeInterrogation attack to get that data.  My friends, let me introduce:

[img]https://imgur.com/a/2ZjPVSr[/img]

## **SMS Type 0**

Originally, it was intended for specific tasks such as debugging or updating software on a mobile device without disturbing the user.  Turns out it&#39;s pretty handy for getting location data too. Silent SMS for the win.  Here’s how it works.

A silent SMS is delivered to the target phone. This SMS, like all others, passes through the signaling system of the mobile network. When the SMS reaches its intended recipient, the phone automatically notifies the network that it has arrived, even though it does not sound an alert or appear in the recipient&#39;s message list. Lucky us, this is a standard message delivery feature of the GSM protocol.

Information about the cell tower the message was routed through is included in the network&#39;s response to this silent SMS. This can contain information that is essential for determining the precise location of the mobile device, such as the cell ID and location area code (LAC).

The device&#39;s approximate location can be ascertained by examining the cell tower that was utilised to transmit the message. [OpenCellid.org](http://opencellid.org/) is great for this, as is [maprad.io](http://maprad.io/).

How are we going to send our silent SMS? With our very own SMSC. 

## Part 1. Setting up the server

**Kannel** is a powerful and widely used open source SMSC that supports various communication protocols including SMPP, HTTP, and UDP. I chose this option as it is actively maintained by a community of great developers and I just dig the vibe of the site.  A momentary flash of an internet gone by. Ok lets rumble.

1. You can find the latest version on the Kannel website at **http://www.kannel.org/download.shtml**.
2. **Getting Kannel:**
The daily snapshots are what you are looking for.  Grab yourself some documentation while you at it, will probably come in handy.
3. **Step-by-Step Guide to Getting It Up and Running:**
    - **Install Dependencies:**
        - Ensure you have the necessary build tools and libraries installed. On a Debian-based system, you might need to run:
            
            ```bash
            sudo apt-get install build-essential libssl-dev libcurl4-openssl-dev libdbi-dev libpcre3-dev libspeex-dev libspeexdsp-dev libgsm1-dev libasound2-dev libusb-dev libsctp-dev libqmi-dev libgps-dev libgoogle-glog-dev libopencv-dev libgcrypt20-dev libgnutls28-dev libmysqlclient-dev libpq-dev libradcli-dev libsctp-dev libspandsp-dev libtalloc-dev libvorbis-dev libxslt1-dev libyaml-dev portaudio19-dev python-dev python-pip python-setuptools python-twisted-bin python-zope.interface swig unixodbc-dev
            ```
            
4. **Navigate to the Kannel directory:**
    - Extract you code to /kannel and cd in..
    
    ```bash
    mkdir kannel
    cd kannel
    wget https://www.kannel.org/download/kannel-snapshot.tar.gz
    chmod +x kannel-snaphot.tar.gz
    tar -xzvf kannel-snaphot.tar.gz
    ```
    
5. **Run the configure script:**
    - Run the **`./configure`** script to start the configuration process.
    
    ```bash
    ./configure
    ```
    
6. **Choose the options for your system:**
    - The **`./configure`** script will prompt you to choose options for your system. Here are some common options:
    - **Adding MySQL support:**
        
        ```bash
        --with-mysql=/usr/local/mysql
        ```
        
    - **Adding PostgreSQL support:**
        
        ```bash
        --with-postgresql=/usr/local/pgsql
        ```
        
    - **Enabling SSL support:**
        
        ```bash
        --enable-ssl
        ```
        
    - **Enabling shared libraries:**
        
        ```bash
        --enable-shared
        ```
        
    - **Enabling debugging:**
        
        ```bash
        --enable-debug
        ```
        
    - **Adding a prefix for installation:**
        
        ```bash
        --prefix=/usr/local/kannel
        ```
        
    - You can also see all the options by running **`./configure --help`**.
7. **Continue with the configuration process:**
    - After setting the options, the script will continue to run and check for dependencies and other configurations.
8. **Compile Kannel:**
    - After configuring Kannel, you can compile it by running **`make`**.
9. **Install Kannel:**
    - Install Kannel by running **`sudo make install`**.
10. **Configure Kannel Daemon:**
    - Edit the **`/etc/kannel/kannel.conf`** file to configure the SMSC settings.
11. **Start the Kannel Daemon:**
    - Run **`sudo kannel start`** to start the Kannel daemon.
12. **Test the SMSC:**
- Use the **`sendsms`** or **`bearerbox`** command to test the SMSC.

Please note that the actual options and configurations may vary depending on your system and the features you need. Refer to the Kannel documentation for the most up-to-date information.

In our next installment.... setting up our SMS gateway &amp; the moneyshot..  See you then.</description>
    
    <lastBuildDate>Fri, 23 Feb 2024 05:37:53 +0000</lastBuildDate>
    <category>Phone Hacking</category>
    <atom:link href="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>FIsher Price “My First SS7 attack”</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731/5</link>
        <pubDate>Mon, 13 May 2024 06:58:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-38731-5</guid>
        <source url="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731.rss">FIsher Price “My First SS7 attack”</source>
      </item>
      <item>
        <title>FIsher Price “My First SS7 attack”</title>
        <dc:creator><![CDATA[cicada]]></dc:creator>
        <description><![CDATA[
            <p>Yet more incredible content. Thanks!</p>
          <p><a href="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731/3</link>
        <pubDate>Sat, 13 Jan 2024 00:18:40 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-38731-3</guid>
        <source url="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731.rss">FIsher Price “My First SS7 attack”</source>
      </item>
      <item>
        <title>FIsher Price “My First SS7 attack”</title>
        <dc:creator><![CDATA[d8rh8r]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="d8rh8r" data-post="1" data-topic="38731">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://0x00sec.org/user_avatar/0x00sec.org/d8rh8r/48/48771_2.png" class="avatar"> d8rh8r:</div>
<blockquote>
<p><code>wget https://www.kannel.org/download/kannel-snapshot.tar.gz</code></p>
</blockquote>
</aside>
<p>You can also apt-get install kannel on Debian devices but I prefer to DL the snapshots <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731/2</link>
        <pubDate>Fri, 12 Jan 2024 15:24:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-38731-2</guid>
        <source url="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731.rss">FIsher Price “My First SS7 attack”</source>
      </item>
      <item>
        <title>FIsher Price “My First SS7 attack”</title>
        <dc:creator><![CDATA[d8rh8r]]></dc:creator>
        <description><![CDATA[
            <h1><a name="fisher-price-my-first-ss7-attack-1" class="anchor" href="https://0x00sec.org#fisher-price-my-first-ss7-attack-1"></a>FIsher Price “My First SS7 attack”</h1>
<p>I got a pm today asking me if I had “fully figured out and gained access to SS7 ?” Sadly the answer to parts A and B of that question is no, but I could have, I think.  After much searching &amp; scanning, I stumbled across a SGFW running default creds.<br>
Winner johnny… Full card…</p>
<p><em>I followed the guide here</em>: <a href="https://0x00sec.org/t/into-the-wild-gaining-access-to-ss7-part-1-finding-an-access-point/12418/66">best ss7 post ever</a></p>
<p>Unfortunately, to log in would have been crossing a line I’m not interested in crossing right now, so its treasures will remain a mystery.  Fortunately, I have less illegal way to get my SS7 fix.</p>
<p>My whole interest in SS7 is location data.  I don’t want to intercept password resets or OTP, I just want to be able to know the location of my POI.  Turns out there is an easier way than an AnytimeInterrogation attack to get that data.  My friends, let me introduce:</p>
<p><span alt="" role="presentation" class="broken-image" title="This image is broken"><svg class="fa d-icon d-icon-unlink svg-icon" aria-hidden="true"><use href="#unlink"></use></svg></span></p>
<h2><a name="sms-type-0-2" class="anchor" href="https://0x00sec.org#sms-type-0-2"></a><strong>SMS Type 0</strong></h2>
<p>Originally, it was intended for specific tasks such as debugging or updating software on a mobile device without disturbing the user.  Turns out it’s pretty handy for getting location data too. Silent SMS for the win.  Here’s how it works.</p>
<p>A silent SMS is delivered to the target phone. This SMS, like all others, passes through the signaling system of the mobile network. When the SMS reaches its intended recipient, the phone automatically notifies the network that it has arrived, even though it does not sound an alert or appear in the recipient’s message list. Lucky us, this is a standard message delivery feature of the GSM protocol.</p>
<p>Information about the cell tower the message was routed through is included in the network’s response to this silent SMS. This can contain information that is essential for determining the precise location of the mobile device, such as the cell ID and location area code (LAC).</p>
<p>The device’s approximate location can be ascertained by examining the cell tower that was utilised to transmit the message. <a href="http://opencellid.org/" rel="noopener nofollow ugc">OpenCellid.org</a> is great for this, as is <a href="http://maprad.io/" rel="noopener nofollow ugc">maprad.io</a>.</p>
<p>How are we going to send our silent SMS? With our very own SMSC.</p>
<h2><a name="part-1-setting-up-the-server-3" class="anchor" href="https://0x00sec.org#part-1-setting-up-the-server-3"></a>Part 1. Setting up the server</h2>
<p><strong>Kannel</strong> is a powerful and widely used open source SMSC that supports various communication protocols including SMPP, HTTP, and UDP. I chose this option as it is actively maintained by a community of great developers and I just dig the vibe of the site.  A momentary flash of an internet gone by. Ok lets rumble.</p>
<ol>
<li>
<p>You can find the latest version on the Kannel website at <strong><a href="http://www.kannel.org/download.shtml" rel="noopener nofollow ugc">http://www.kannel.org/download.shtml</a></strong>.</p>
</li>
<li>
<p><strong>Getting Kannel:</strong><br>
The daily snapshots are what you are looking for.  Grab yourself some documentation while you at it, will probably come in handy.</p>
</li>
<li>
<p><strong>Step-by-Step Guide to Getting It Up and Running:</strong></p>
<ul>
<li><strong>Install Dependencies:</strong>
<ul>
<li>
<p>Ensure you have the necessary build tools and libraries installed. On a Debian-based system, you might need to run:</p>
<pre><code class="lang-bash">sudo apt-get install build-essential libssl-dev libcurl4-openssl-dev libdbi-dev libpcre3-dev libspeex-dev libspeexdsp-dev libgsm1-dev libasound2-dev libusb-dev libsctp-dev libqmi-dev libgps-dev libgoogle-glog-dev libopencv-dev libgcrypt20-dev libgnutls28-dev libmysqlclient-dev libpq-dev libradcli-dev libsctp-dev libspandsp-dev libtalloc-dev libvorbis-dev libxslt1-dev libyaml-dev portaudio19-dev python-dev python-pip python-setuptools python-twisted-bin python-zope.interface swig unixodbc-dev
</code></pre>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>Navigate to the Kannel directory:</strong></p>
<ul>
<li>Extract you code to /kannel and cd in…</li>
</ul>
<pre><code class="lang-bash">mkdir kannel
cd kannel
wget https://www.kannel.org/download/kannel-snapshot.tar.gz
chmod +x kannel-snaphot.tar.gz
tar -xzvf kannel-snaphot.tar.gz
</code></pre>
</li>
<li>
<p><strong>Run the configure script:</strong></p>
<ul>
<li>Run the <strong><code>./configure</code></strong> script to start the configuration process.</li>
</ul>
<pre><code class="lang-bash">./configure
</code></pre>
</li>
<li>
<p><strong>Choose the options for your system:</strong></p>
<ul>
<li>
<p>The <strong><code>./configure</code></strong> script will prompt you to choose options for your system. Here are some common options:</p>
</li>
<li>
<p><strong>Adding MySQL support:</strong></p>
<pre><code class="lang-bash">--with-mysql=/usr/local/mysql
</code></pre>
</li>
<li>
<p><strong>Adding PostgreSQL support:</strong></p>
<pre><code class="lang-bash">--with-postgresql=/usr/local/pgsql
</code></pre>
</li>
<li>
<p><strong>Enabling SSL support:</strong></p>
<pre><code class="lang-bash">--enable-ssl
</code></pre>
</li>
<li>
<p><strong>Enabling shared libraries:</strong></p>
<pre><code class="lang-bash">--enable-shared
</code></pre>
</li>
<li>
<p><strong>Enabling debugging:</strong></p>
<pre><code class="lang-bash">--enable-debug
</code></pre>
</li>
<li>
<p><strong>Adding a prefix for installation:</strong></p>
<pre><code class="lang-bash">--prefix=/usr/local/kannel
</code></pre>
</li>
<li>
<p>You can also see all the options by running <strong><code>./configure --help</code></strong>.</p>
</li>
</ul>
</li>
<li>
<p><strong>Continue with the configuration process:</strong></p>
<ul>
<li>After setting the options, the script will continue to run and check for dependencies and other configurations.</li>
</ul>
</li>
<li>
<p><strong>Compile Kannel:</strong></p>
<ul>
<li>After configuring Kannel, you can compile it by running <strong><code>make</code></strong>.</li>
</ul>
</li>
<li>
<p><strong>Install Kannel:</strong></p>
<ul>
<li>Install Kannel by running <strong><code>sudo make install</code></strong>.</li>
</ul>
</li>
<li>
<p><strong>Configure Kannel Daemon:</strong></p>
<ul>
<li>Edit the <strong><code>/etc/kannel/kannel.conf</code></strong> file to configure the SMSC settings.</li>
</ul>
</li>
<li>
<p><strong>Start the Kannel Daemon:</strong></p>
<ul>
<li>Run <strong><code>sudo kannel start</code></strong> to start the Kannel daemon.</li>
</ul>
</li>
<li>
<p><strong>Test the SMSC:</strong></p>
</li>
</ol>
<ul>
<li>Use the <strong><code>sendsms</code></strong> or <strong><code>bearerbox</code></strong> command to test the SMSC.</li>
</ul>
<p>Please note that the actual options and configurations may vary depending on your system and the features you need. Refer to the Kannel documentation for the most up-to-date information.</p>
<p>In our next installment… setting up our SMS gateway &amp; the moneyshot…  See you then.</p>
          <p><a href="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731/1</link>
        <pubDate>Fri, 12 Jan 2024 14:57:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-38731-1</guid>
        <source url="https://0x00sec.org/t/fisher-price-my-first-ss7-attack/38731.rss">FIsher Price “My First SS7 attack”</source>
      </item>
  </channel>
</rss>
