<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The 0x00sec Package Manager: Agora! Introduction &amp; How to use</title>
    <link>https://0x00sec.org/t/the-0x00sec-package-manager-agora-introduction-how-to-use/1114</link>
    <description>Hi all! Recently we have been able to get our own GitLab server, made possible by @anon3236228! Since then we have moved all of 0x00sec&#39;s project there. You can find us at https://gitlab.s-3.tech/groups/0x00sec 

In this tutorial I will going over how to use Agora to get packages from NullHub.

## Explanation
---
So [NullHub](https://gitlab.s-3.tech/0x00sec/NullHub) is a GitLab repo, inside this repo (as you will see) there are lots of JSON files. We call these files &quot;Jasons&quot;, affectively named by me and @Joe_Schmoe. Inside these files are essentially just a description of the package, and a git url to where we can find them. An example is DTM&#39;s k3kbot

```
{
    &quot;k3kbot&quot;: [{
        &quot;repo-url&quot;:&quot;https://github.com/0x00sec/k3kBot&quot;,
        &quot;description&quot;:&quot;Badass Malware started by DTM&quot;,
        &quot;version&quot;:1.0,
        &quot;contributors&quot;:[
            &quot;@93aef0ce4dd141ece6f5 (dtm)&quot;
        ]
    }]
}
```

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/9/92050408fc53ba065f7dac6ce63cf0b48e201a46.jpg&quot; width=&quot;590&quot; height=&quot;249&quot;&gt; 

When we run agora for the first time, it clones (Downloads) the repo, and imports the Jasons.  When we install a package, it clones the git repo that is supplied in repo-url. It&#39;s really that simple. When we run an update, it iterates through the installed packages and runs `git pull`. And of course, when we delete, it `rm -r`&#39;s the folder it got cloned into.

## How to use Agora
---
First off, you&#39;re going to want to clone the repo, ensuring you have git installed run 

```bash
git clone https://gitlab.s-3.tech/0x00sec/Agora
```

This will create a directory called &quot;Agora&quot;, type `cd Agora`.

On first run, Agora will detect that it is a new installation, and will automagically create the directories needed, and update the package list. To see a list of commands type 

```
./agora -h
```

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/b/b1f9621cf3a5964a041a9735c663afa62106e3d2.jpg&quot; width=&quot;429&quot; height=&quot;228&quot;&gt;

Now, you&#39;re going to update your package list, so you can be sure everything is up to date.

```
./agora -y
```
This will update the Jason list. (In the image, I was fully up to date so it did nothing apart from check.)

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/e/e01bc866bef509684967d3960f27f28394c2cee3.jpg&quot; width=&quot;348&quot; height=&quot;67&quot;&gt;

Okay! Now you&#39;re good to go! Lets see whats available...

```
./agora -l
```

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/f/fac27a1cba2895e606f8f82c127ec345a90d270e.jpg&quot; width=&quot;690&quot; height=&quot;192&quot;&gt;

(If you look next to &quot;JavaSocketPortscan&quot; notice the &#39;[installed]&#39; label? This shows that I have that package installed. )

So, I&#39;m in the mood for some 1337 DoS&#39;ing &lt;small&gt;(@dtm) &lt;/small&gt;, so I will try sockstress.  Installing packages with Agora is as easy as

```
./agora -S sockstress
```

This is will download sockstress and put it in the Packages directory.

I could have found this tool equally by using the search function. 

```
./agora -s dos
```
This will return all packages with &quot;dos&quot; either in the name or in the description. &lt;small&gt;(another reason why agora is better than null-get)&lt;/small&gt;

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/a/a66f3784f459cb8449012c022b77d3bc4e0fe72d.jpg&quot; width=&quot;583&quot; height=&quot;67&quot;&gt;

To uninstall a package, just type

```
./agora -R sockstress
```

This will uninstall sockstress.


## Submitting packages to NullHub
---
Submitting packages to NullHub is fairly simple once you get the hang of it. I won&#39;t spoonfeed you it so what you need to do is - Fork NullHub, upload your Jason to your repo, make a pull request. You can generate Jasons with the genjason.rb script. 

I hope this all helped you out! I look forward to seeing what packages get uploaded to NullHub!

pry0cc</description>
    
    <lastBuildDate>Thu, 27 Oct 2016 23:13:13 +0000</lastBuildDate>
    <category>Linux</category>
    <atom:link href="https://0x00sec.org/t/the-0x00sec-package-manager-agora-introduction-how-to-use/1114.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The 0x00sec Package Manager: Agora! Introduction &amp; How to use</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/the-0x00sec-package-manager-agora-introduction-how-to-use/1114/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/the-0x00sec-package-manager-agora-introduction-how-to-use/1114/2</link>
        <pubDate>Sun, 21 Jan 2018 00:36:47 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1114-2</guid>
        <source url="https://0x00sec.org/t/the-0x00sec-package-manager-agora-introduction-how-to-use/1114.rss">The 0x00sec Package Manager: Agora! Introduction &amp; How to use</source>
      </item>
      <item>
        <title>The 0x00sec Package Manager: Agora! Introduction &amp; How to use</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Hi all! Recently we have been able to get our own GitLab server, made possible by <a class="mention" href="https://0x00sec.org/u/anon3236228">@anon3236228</a>! Since then we have moved all of 0x00sec’s project there. You can find us at <a href="https://gitlab.s-3.tech/groups/0x00sec">https://gitlab.s-3.tech/groups/0x00sec</a></p>
<p>In this tutorial I will going over how to use Agora to get packages from NullHub.</p>
<h2>Explanation</h2>
<hr>
<p>So <a href="https://gitlab.s-3.tech/0x00sec/NullHub">NullHub</a> is a GitLab repo, inside this repo (as you will see) there are lots of JSON files. We call these files “Jasons”, affectively named by me and <a class="mention" href="https://0x00sec.org/u/joe_schmoe">@Joe_Schmoe</a>. Inside these files are essentially just a description of the package, and a git url to where we can find them. An example is DTM’s k3kbot</p>
<pre><code class="lang-auto">{
    "k3kbot": [{
        "repo-url":"https://github.com/0x00sec/k3kBot",
        "description":"Badass Malware started by DTM",
        "version":1.0,
        "contributors":[
            "@93aef0ce4dd141ece6f5 (dtm)"
        ]
    }]
}
</code></pre>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/9/92050408fc53ba065f7dac6ce63cf0b48e201a46.jpg" width="590" height="249"> </p>
<p>When we run agora for the first time, it clones (Downloads) the repo, and imports the Jasons.  When we install a package, it clones the git repo that is supplied in repo-url. It’s really that simple. When we run an update, it iterates through the installed packages and runs <code>git pull</code>. And of course, when we delete, it <code>rm -r</code>'s the folder it got cloned into.</p>
<h2>How to use Agora</h2>
<hr>
<p>First off, you’re going to want to clone the repo, ensuring you have git installed run</p>
<pre><code class="lang-bash">git clone https://gitlab.s-3.tech/0x00sec/Agora
</code></pre>
<p>This will create a directory called “Agora”, type <code>cd Agora</code>.</p>
<p>On first run, Agora will detect that it is a new installation, and will automagically create the directories needed, and update the package list. To see a list of commands type</p>
<pre><code class="lang-auto">./agora -h
</code></pre>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/b/b1f9621cf3a5964a041a9735c663afa62106e3d2.jpg" width="429" height="228"></p>
<p>Now, you’re going to update your package list, so you can be sure everything is up to date.</p>
<pre><code class="lang-auto">./agora -y
</code></pre>
<p>This will update the Jason list. (In the image, I was fully up to date so it did nothing apart from check.)</p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/e/e01bc866bef509684967d3960f27f28394c2cee3.jpg" width="348" height="67"></p>
<p>Okay! Now you’re good to go! Lets see whats available…</p>
<pre><code class="lang-auto">./agora -l
</code></pre>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/f/fac27a1cba2895e606f8f82c127ec345a90d270e.jpg" width="690" height="192"></p>
<p>(If you look next to “JavaSocketPortscan” notice the ‘[installed]’ label? This shows that I have that package installed. )</p>
<p>So, I’m in the mood for some 1337 DoS’ing <small>(<a class="mention" href="https://0x00sec.org/u/dtm">@dtm</a>) </small>, so I will try sockstress.  Installing packages with Agora is as easy as</p>
<pre><code class="lang-auto">./agora -S sockstress
</code></pre>
<p>This is will download sockstress and put it in the Packages directory.</p>
<p>I could have found this tool equally by using the search function.</p>
<pre><code class="lang-auto">./agora -s dos
</code></pre>
<p>This will return all packages with “dos” either in the name or in the description. <small>(another reason why agora is better than null-get)</small></p>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/a/a66f3784f459cb8449012c022b77d3bc4e0fe72d.jpg" width="583" height="67"></p>
<p>To uninstall a package, just type</p>
<pre><code class="lang-auto">./agora -R sockstress
</code></pre>
<p>This will uninstall sockstress.</p>
<h2>Submitting packages to NullHub</h2>
<hr>
<p>Submitting packages to NullHub is fairly simple once you get the hang of it. I won’t spoonfeed you it so what you need to do is - Fork NullHub, upload your Jason to your repo, make a pull request. You can generate Jasons with the genjason.rb script.</p>
<p>I hope this all helped you out! I look forward to seeing what packages get uploaded to NullHub!</p>
<p>pry0cc</p>
          <p><a href="https://0x00sec.org/t/the-0x00sec-package-manager-agora-introduction-how-to-use/1114/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/the-0x00sec-package-manager-agora-introduction-how-to-use/1114/1</link>
        <pubDate>Sun, 18 Sep 2016 14:40:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1114-1</guid>
        <source url="https://0x00sec.org/t/the-0x00sec-package-manager-agora-introduction-how-to-use/1114.rss">The 0x00sec Package Manager: Agora! Introduction &amp; How to use</source>
      </item>
  </channel>
</rss>
