<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Favorite debuggers, disassemblers, extensions?</title>
    <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851</link>
    <description>On Windows I use WinDBG with PyKd, for simple things and patching I sometimes use x64dbg with x64dbgpy.
On Linux, mostly gdb with pwndbg (IDA integration is nice) and pwntools, trying to get into radare.

And of course for static analysis, I think as of today nothing beats IDA Pro. Sark is a good upgrade from IDAPython.

What are your favorite debuggers for Windows / Linux?</description>
    
    <lastBuildDate>Tue, 19 Mar 2019 00:32:04 +0000</lastBuildDate>
    <category>Reverse Engineering</category>
    <atom:link href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/15</link>
        <pubDate>Tue, 26 Mar 2019 22:24:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-15</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[TKBomber]]></dc:creator>
        <description><![CDATA[
            <p>Shush the over lords are watching, they are always watching listening always. (Couldn’t help but play along.)</p>
<p>But really the fact it is supposed to open a port and could be threat was why I took a light step. (Note I didn’t bother to look I do draw the line somewhere) Plus I don’t think the NSA would risk that kind of law suit or at least that much bad PR to attempt to slip malware in something like that. I have not sat down and looked it over yet beyond the basics. Really its less utilitarian than I expected it has just in odd ways flash.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/14</link>
        <pubDate>Tue, 19 Mar 2019 00:32:04 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-14</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[hoboscientist]]></dc:creator>
        <description><![CDATA[
            <p>Oh the paranoia, the sweet sweet paranoia.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/13</link>
        <pubDate>Fri, 15 Mar 2019 12:51:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-13</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[TKBomber]]></dc:creator>
        <description><![CDATA[
            <p>I have only been messing with it for a short time but I am likeing GHIRDA. (I know) Before that I was loyal to x64 debug but never like liked it, for some reason it just felt lacking. GHIRDA is a blank canvas, you can really tell it was either released in a supper stripped down version or what I believe. It was meant to be as bare bones as possible to allow for customization on a case by case bases. (Think about who this was developed for and by, writing your own plug in’s is a assumed skill.) I see me sticking with GHIRDA from now on.</p>
<p>~TKBomber</p>
<p>EDIT:<br>
Two things I think should be said there is no debugger and I only downloaded this on to a qube that was disposable and copied to a reasonably well isolated qube. (Qube being a vm on Qubes.)</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/12</link>
        <pubDate>Wed, 13 Mar 2019 05:32:35 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-12</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[Noswis]]></dc:creator>
        <description><![CDATA[
            <p>Yes, thank you, I am aware of cutter but I have not really used it yet. I think it may become a nice open-source alternative to Binary Ninja or IDA Pro at some point. At least on Linux, good GUI alternatives to BN and IDA seem to be lacking.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/11</link>
        <pubDate>Mon, 11 Mar 2019 08:35:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-11</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[_k_h]]></dc:creator>
        <description><![CDATA[
            <p>I should mention radare2 now have a GUI still in dev phase know as cutter check it out it resembles x64dbg very much</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/10</link>
        <pubDate>Sat, 09 Mar 2019 14:10:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-10</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <p>I don’t deal a lot with binary exploitation so I stick with the basics: radare2 for the execution flow and gdb for altering registers etc., as radare2 is a bit hard to learn if you don’t invest much time on it. Althought I’m trying to go full radare2</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/9</link>
        <pubDate>Sat, 09 Mar 2019 12:43:34 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-9</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[hoboscientist]]></dc:creator>
        <description><![CDATA[
            <p>I for myself am learning to use gdb just very recently. Having installed the peda framework it really helps in terms of visibility of the stack and registers. Also the commands are self intuitive fairly easy to remember after a few interactions as far as learning goes. Being a novice reverser, I am finding it quite easy to learn about inner workings of machine code using peda.<br>
Peda : Python Exploit Development Assistance<br>
GitHub: <a href="https://github.com/longld/peda" rel="nofollow noopener">https://github.com/longld/peda</a></p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/8</link>
        <pubDate>Sat, 09 Mar 2019 12:28:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-8</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[Septimus]]></dc:creator>
        <description><![CDATA[
            <p>I m an IDA and Radare2 fan, I use IDA to understand de flow of execution and find the path I want to follow, then to reverse complex logic and understand what each functions actually does I use radare2.<br>
I should add that Ghidra decompiler is very impressive. It gives a really better code than IDA.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/7</link>
        <pubDate>Sat, 09 Mar 2019 11:06:11 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-7</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[hunter]]></dc:creator>
        <description><![CDATA[
            <p>IDA has been my favorite disassembler so far. Naming, Xrefs, colorizing blocks, comments and graph view make my job a lot of easier. You see, I’m the type of guy that likes static code analysis better <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> I’ve recently tried out IDA’s debugger (yeah just recently <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:">) it’s pretty neat but I like Immunity’s stack view better.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/6</link>
        <pubDate>Sat, 09 Mar 2019 10:26:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-6</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[pr0digy]]></dc:creator>
        <description><![CDATA[
            <p>I definitely have to agree with the complex logic. Where Binary Ninja and IDA provide easy to navigate flow graphs and tracing of execution, radare2 is within the terminal and can get hairy navigating through large code.</p>
<p>All in all, radare2 is great once you get to learning it and can be used on all platforms so it makes it very versatile. Also why learn 4 different tools to do the job that one can.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/5</link>
        <pubDate>Mon, 25 Feb 2019 15:13:35 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-5</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[Noswis]]></dc:creator>
        <description><![CDATA[
            <p>My favourite disassember is radare2, I’ve mainly used this for reverse engineering and a little bit for pwning. Besides radare2, I’ve worked with the following programs in varying degrees: ollydbg, x64dbg, IDA Pro, Binary Ninja(the trial version), gdb and a few others. Let me point out why I especially like radare2:</p>
<ul>
<li>
<p>It is a commandline tool. The advantage of this is that it allows you to quickly display important information. For instance, in debugging mode, the registers can be shown quickly with the “dr” command, instead of going through a few GUI views. Furthermore, there are no distracting views with redundant information; everything you want to know can easily be requested with a few keystrokes. Besides efficiency, there may be situations where using a GUI is not an option, for instance on a headless server. Lastly, it allows you to work soley with the keyboard and makes you look like a hacker <img src="https://0x00sec.org/images/emoji/twitter/sunglasses.png?v=9" title=":sunglasses:" class="emoji" alt=":sunglasses:"></p>
</li>
<li>
<p>Very efficient commands: As hinted earlier with the ‘‘dr’’ command, almost all commands are short and follow a command hierarchy. The commands are usually composed of a few letters such as ‘‘pxw’’. Here the first letter ‘‘p’’ means print, this includes all printing commands. The second letter is to further specify the exact printing command; in this case the ‘‘x’’ indicates print in hex. The next letter again further specifies the print command to print the hexadecimals as 32 bits words. At any point in the command, the question mark can be inserted to show all possible options. For instance, the ‘‘p?’’ command can be used to show all possible printing commands. In this way, radare2 is to a large extend self documented, although there are options that can be hard to find in the hierarchy.</p>
</li>
<li>
<p>File formats and architectures: One of the cool things of radare2 is that it supports a large number of different computer architectures and file formats to disassemble. With radare2 it is, for instance, possible to open files for the SNES, Nintendo 3DS firmware, Web Assembly, brainfuck and all other sorts of cool architectures. I believe that there are no other disassemblers that provide the same number of options regarding this aspect.</p>
</li>
<li>
<p>Opensource: Ofcourse, it is always nice to have an opensource tool, what else do I need to say here <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
</li>
</ul>
<p>A few disadvantages:</p>
<ul>
<li>A common critique is the steep learning curve of radare2; this I will not deny. I think learning radare2 can be compared with learning vim, at the start it is frustrating as it is hard to figure out how to perform even the most simple operations such as writing or even exiting the file. Eventually, you will start to appreciate the elegance of vim and radare2 once you are over the initial struggles, at least that is how I look at both programs.</li>
<li>With radare, you can get lost if a program has very complex logic. It may be nice to use a disassembler with a GUI to have a better overview of the program in these cases.</li>
</ul>
<p>There are probably more advantages and disadvantages that I forgot to include. Please, let me know if you have anything to add or disagree with me; that is, of course, also fine.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/4</link>
        <pubDate>Mon, 25 Feb 2019 14:19:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-4</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[Nitrax]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Tac0caT" data-post="2" data-topic="11851">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/letter_avatar_proxy/v4/letter/t/439d5e/40.png" class="avatar"> Tac0caT:</div>
<blockquote>
<p>Another cool one is <a href="https://binary.ninja/" rel="noopener nofollow ugc">Binary Ninja</a>, never used it myself though. But it’s supposed to come close to IDA in terms of utility.</p>
</blockquote>
</aside>
<p>Yes and no, BN does not provide any dynamic analysis as IDA does.</p>
<p>More information in the thread below <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p><a href="https://0x00sec.org/t/re-guide-for-beginners-methodology-and-tools/2242/32" class="inline-onebox">RE guide for beginners: Methodology and tools</a></p>
<p>Best,<br>
NItrax</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/3</link>
        <pubDate>Mon, 25 Feb 2019 09:31:49 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-3</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[Tac0caT]]></dc:creator>
        <description><![CDATA[
            <p>Personally I’m a huge fan of radare but since I usually don’t use vi, the interaction with the program is still a little strange to me.<br>
Other than that I believe it’s just a very clean and concise program for re.<br>
Another cool one is <a href="https://binary.ninja/" rel="nofollow noopener">Binary Ninja</a>, never used it myself though. But it’s supposed to come close to IDA in terms of utility.<br>
Would love to hear from someone who actually used them what the big differences are between IDA and BN, or r2 and BN.</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/2</link>
        <pubDate>Mon, 25 Feb 2019 09:15:51 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-2</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
      <item>
        <title>Favorite debuggers, disassemblers, extensions?</title>
        <dc:creator><![CDATA[EternalEclipse]]></dc:creator>
        <description><![CDATA[
            <p>On Windows I use WinDBG with PyKd, for simple things and patching I sometimes use x64dbg with x64dbgpy.<br>
On Linux, mostly gdb with pwndbg (IDA integration is nice) and pwntools, trying to get into radare.</p>
<p>And of course for static analysis, I think as of today nothing beats IDA Pro. Sark is a good upgrade from IDAPython.</p>
<p>What are your favorite debuggers for Windows / Linux?</p>
          <p><a href="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851/1</link>
        <pubDate>Sun, 24 Feb 2019 22:24:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11851-1</guid>
        <source url="https://0x00sec.org/t/favorite-debuggers-disassemblers-extensions/11851.rss">Favorite debuggers, disassemblers, extensions?</source>
      </item>
  </channel>
</rss>
