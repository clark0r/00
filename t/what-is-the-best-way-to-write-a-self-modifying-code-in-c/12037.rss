<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What is the best way to write a self-modifying code in c++</title>
    <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037</link>
    <description>How can I fix my code to spwn a shellcode (spawn a shell), and fixing the access violation cause the encryption function?</description>
    
    <lastBuildDate>Thu, 07 Mar 2019 18:03:16 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/11</link>
        <pubDate>Thu, 04 Apr 2019 02:57:27 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-11</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[Septimus]]></dc:creator>
        <description><![CDATA[
            <p>I’m no expert on windows, i m really more proeficient on linux. But i know that there are many security features for memory on currents OS. The only time i managed to play with self modifying code was on Fedora with all features deactivated to bypass adress randomization etc …</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/10</link>
        <pubDate>Thu, 07 Mar 2019 18:03:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-10</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[NOTWORKS]]></dc:creator>
        <description><![CDATA[
            <p>Lol @ your lab. Whatever happened to debugging? I guess the errors are clearly stated during compile time, did you actually code this?.</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/8</link>
        <pubDate>Thu, 07 Mar 2019 15:56:08 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-8</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[BeHappy_ykx]]></dc:creator>
        <description><![CDATA[
            <p>Modify the code segment attribute of the pe file after compilation.</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/7</link>
        <pubDate>Thu, 07 Mar 2019 07:53:02 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-7</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[Septimus]]></dc:creator>
        <description><![CDATA[
            <pre><code>Error #1: UNADDRESSABLE ACCESS beyond heap bounds: reading 0x00e4064c-0x00e40650 4 byte(s)
0 atcuf32.dll!?                       +0x0      (0x688477f7 &lt;atcuf32.dll+0x77f7&gt;)
1 atcuf32.dll!?                       +0x0      (0x68842ccc &lt;atcuf32.dll+0x2ccc&gt;)
2 KERNELBASE.dll!StrRChrA             +0x66e    (0x75cdaf9f &lt;KERNELBASE.dll+0x10af9f&gt;)
3 KERNELBASE.dll!StrRChrA             +0x66e    (0x75cdaf9f &lt;KERNELBASE.dll+0x10af9f&gt;)
4 KERNELBASE.dll!StrRChrA             +0x7d9    (0x75cdb10a &lt;KERNELBASE.dll+0x10b10a&gt;)
5 KERNELBASE.dll!GetNamedLocaleHashNode+0x65     (0x75cda886 &lt;KERNELBASE.dll+0x10a886&gt;)
6 KERNELBASE.dll!InternalLcidToName   +0x1b7    (0x75cddd08 &lt;KERNELBASE.dll+0x10dd08&gt;)
7 KERNELBASE.dll!GetUserDefaultLCID   +0x7d     (0x75cdefde &lt;KERNELBASE.dll+0x10efde&gt;)
8 gdi32full.dll!GetTextFaceW          +0x57f    (0x77994610 &lt;gdi32full.dll+0xa4610&gt;)
9 gdi32full.dll!GetTextExtentPoint32W +0x680    (0x77999f01 &lt;gdi32full.dll+0xa9f01&gt;)
10 gdi32full.dll!GdiGetCharDimensions  +0x132    (0x77996733 &lt;gdi32full.dll+0xa6733&gt;)
11 USER32.dll!gapfnScSendMessage       +0x1cadc  (0x7776e0ad &lt;USER32.dll+0x1e0ad&gt;)
12 USER32.dll!SoftModalMessageBox      +0x208    (0x777d25d9 &lt;USER32.dll+0x825d9&gt;)
13 USER32.dll!DrawStateA               +0x1406   (0x777d1987 &lt;USER32.dll+0x81987&gt;)
14 USER32.dll!MessageBoxTimeoutW       +0x164    (0x777d2375 &lt;USER32.dll+0x82375&gt;)
15 USER32.dll!MessageBoxTimeoutA       +0x7a     (0x777d21db &lt;USER32.dll+0x821db&gt;)
16 USER32.dll!MessageBoxA              +0x19     (0x777d1f8a &lt;USER32.dll+0x81f8a&gt;)
17 TestFunction                         [malware.cpp:42]
18 main                                 [malware.cpp:97]
Note: @0:00:00.594 in thread 19212
Note: instruction: mov    0x04(%edi,%eax,8) -&gt; %ebx


Error #1083: UNADDRESSABLE ACCESS: reading 0xcfcca44d-0xcfcca451 4 byte(s)
0 ILT+800(?TestFunctionYAXXZ)
1 main                                      [malware.cpp:99]
Note: @0:00:12.168 in thread 19212
Note: instruction: cmp    %esp 0xcfcca44d(,%ecx,2)
</code></pre>
<p>The first error came more than a 1000 times</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/6</link>
        <pubDate>Wed, 06 Mar 2019 22:15:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-6</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[Septimus]]></dc:creator>
        <description><![CDATA[
            <p>Yep it’s basicaly a Segfault, the best way is to run the code in valgrind if you are on linux, and check memory alocation and size that you write. It could just be that you went too far in your</p>
<pre><code class="lang-auto">unsigned char buff[17];
</code></pre>
<p>Valgrind is your friend, if you need help pm me</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/5</link>
        <pubDate>Tue, 05 Mar 2019 15:55:34 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-5</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="RedFishTeam8" data-post="3" data-topic="12037" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/redfishteam8/40/5626_2.png" class="avatar"> RedFishTeam8:</div>
<blockquote>
<p>Let me tell you something about the <code>ACCESS VIOLATION</code> , Access violation is not related to protection or anything, It always happens when the shell code size or bytes or incorrect, So either your encryption makes your shell code corrupted or the size or datatype of shell code is not correct. When your program want to access the shell code it just don’t understand it and throws this error.</p>
</blockquote>
</aside>
<p>From MSDN’s <a href="https://docs.microsoft.com/en-us/dotnet/api/system.accessviolationexception?view=netframework-4.7.2">AccessViolationException Class</a> for .NET:</p>
<aside class="quote no-group" data-username="MSDN">
<div class="title">
<div class="quote-controls"></div>
 MSDN:</div>
<blockquote>
<p>“The exception that is thrown when there is an attempt to read or write protected memory.”</p>
</blockquote>
</aside>
<p>or, from Wikipedia’s <a href="https://0x00sec.org">Segmentation Fault</a>:</p>
<aside class="quote no-group" data-username="Wikipedia">
<div class="title">
<div class="quote-controls"></div>
 Wikipedia:</div>
<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computing">computing</a>, a <strong>segmentation fault</strong> (often shortened to <strong>segfault</strong> ) or <strong>access violation</strong> is a <a href="https://en.wikipedia.org/wiki/Fault_(computing)">fault</a>, or failure condition, raised by hardware with <a href="https://en.wikipedia.org/wiki/Memory_protection">memory protection</a>, notifying an <a href="https://en.wikipedia.org/wiki/Operating_system">operating system</a> (OS) the software has attempted to access a restricted area of memory (a memory access violation).</p>
</blockquote>
</aside>
<p>or, from a random <a href="https://www.quora.com/What-does-unhandled-exception-0xC0000005-Access-Violation-mean-in-a-C-Embedded-C-code">Quora question</a> titled “What does unhandled exception 0xC0000005: Access Violation mean in a C/Embedded C code?”:</p>
<aside class="quote no-group" data-username="Suraj Vasantrao Binorkar">
<div class="title">
<div class="quote-controls"></div>
 Suraj Vasantrao Binorkar:</div>
<blockquote>
<p>… This address is in a protected region of the address space and you are not allowed to write (or read) there. Hence the access violation. …</p>
</blockquote>
</aside>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/a/a4aeb658116cc48151f7cf00c69600796f67c5c4.gif" width="" height=""></p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/4</link>
        <pubDate>Tue, 05 Mar 2019 08:27:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-4</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[RedFishTeam8]]></dc:creator>
        <description><![CDATA[
            <p>Let me tell you something about the <code>ACCESS VIOLATION</code>, Access violation is not related to protection or anything, It always happens when the shell code size or bytes or incorrect, So either your encryption makes your shell code corrupted or the size or datatype of shell code is not correct. When your program want to access the shell code it just don’t understand it and throws this error.</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/3</link>
        <pubDate>Tue, 05 Mar 2019 07:12:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-3</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>The best way to write self-modifying code is writing one that works (this is the secret!). If you’re getting an access violation, it means that it’s access or writing data where it’s not allowed. Have you checked that the page where <code>TestFunction</code> executes has the executable protection? If it does, then I assume some instructions are triggering the violation. Check that the instructions are correct and whatever data you are accessing actually exists.</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/2</link>
        <pubDate>Tue, 05 Mar 2019 06:52:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-2</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
      <item>
        <title>What is the best way to write a self-modifying code in c++</title>
        <dc:creator><![CDATA[blackleitus]]></dc:creator>
        <description><![CDATA[
            <p>How can I fix my code to spwn a shellcode (spawn a shell), and fixing the access violation cause the encryption function?</p>
          <p><a href="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037/1</link>
        <pubDate>Tue, 05 Mar 2019 02:57:26 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-12037-1</guid>
        <source url="https://0x00sec.org/t/what-is-the-best-way-to-write-a-self-modifying-code-in-c/12037.rss">What is the best way to write a self-modifying code in c++</source>
      </item>
  </channel>
</rss>
