<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[KeygenMe] Creating Your Own Key Generator</title>
    <link>https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172</link>
    <description>Suh dudes, been a while since I posted a challenge, so here we go!

## Difficulty

The difficulty depends on how well you can think and apply your knowledge.

[poll type=regular max=20]
* EZPZ
* Not bad
* Challenging
* Dark Souls
* M/o/Vfuscator
[/poll]

## Goal

The aim of this task is to create your own keygen, i.e. you must program an application or write a script which will output a correct key. You must show at least 3 working keys (post a screenshot or some evidence) using your keygen.
**Note**: Long inputs seem buggy, so smaller inputs are accepted.

### Example Keygen

&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/8/804c60fda6e6c43aa52ee46e6d60b96c26d9d9c9.JPG&quot; width=&quot;489&quot; height=&quot;41&quot;&gt;

## Rules of Engagement

This is a KeygenMe, there is to be no tampering with the binary in any way, shape or form such that its behaviour is different from the original.

## Hints

Hint #1: [spoiler]There is a correlation between the registrant name and the serial key.[/spoiler]
Hint #2: [spoiler]If you haven&#39;t located the key check routine, try to identify a particular control structure.[/spoiler]
Hint #3: [spoiler]Perhaps you can replicate the key check routine somehow.[/spoiler]
Hint #4: [spoiler]Git gud, lern2reverse.[/spoiler]

## Binaries

Use the following command to recover the binary:
```bash
cat out | base64 -d | gunzip &gt; a.out &amp;&amp; chmod +x a.out
```

### Easy mode (not stripped)
```makefile
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
```

### Hard mode (stripped)
```makefile
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
```

Good luck.</description>
    
    <lastBuildDate>Sun, 04 Jun 2017 22:09:59 +0000</lastBuildDate>
    <category>Challenges</category>
    <atom:link href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[KeygenMe] Creating Your Own Key Generator</title>
        <dc:creator><![CDATA[neolex]]></dc:creator>
        <description><![CDATA[
            <p>Thanks for the challenge;<br>
here is my solution :</p>
<p><span class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/5">spoiler</a></span></p>
<p>[spoiler][code]#!/usr/bin/env python2</p>
<p>import struct<br>
import sys</p>
<p>pseudo = str(sys.argv[1])</p>
<p>key= 0<br>
for letter in pseudo:<br>
edx = ord(letter)<br>
ebx = edx<em>2<br>
edx = (edx</em>ebx)/2<br>
edx = ebx*edx<br>
key = (edx+key) *2<br>
sys.stdout.write(struct.pack("&lt;I",key))[/code][/spoiler]</p>
          <p><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/5</link>
        <pubDate>Sun, 04 Jun 2017 19:54:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2172-5</guid>
        <source url="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172.rss">[KeygenMe] Creating Your Own Key Generator</source>
      </item>
      <item>
        <title>[KeygenMe] Creating Your Own Key Generator</title>
        <dc:creator><![CDATA[Wunkolo]]></dc:creator>
        <description><![CDATA[
            <p>Come get ya keys</p>
<div class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/4">spoiler</a></div>
<p>My “Keygen” using python</p>
<div class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/4">spoiler</a></div>
          <p><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/4</link>
        <pubDate>Sun, 04 Jun 2017 16:26:27 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2172-4</guid>
        <source url="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172.rss">[KeygenMe] Creating Your Own Key Generator</source>
      </item>
      <item>
        <title>[KeygenMe] Creating Your Own Key Generator</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>You’re too good, dude! You stole my serial key too! <img src="https://0x00sec.org/images/emoji/twitter/fearful.png?v=9" title=":fearful:" class="emoji" alt=":fearful:"></p>
<p>I’ll make the next one a bit more challenging.</p>
<p>P.S. This isn’t how you use Perl! <img src="https://0x00sec.org/images/emoji/twitter/sweat_smile.png?v=9" title=":sweat_smile:" class="emoji" alt=":sweat_smile:"></p>
          <p><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/3</link>
        <pubDate>Sun, 04 Jun 2017 00:24:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2172-3</guid>
        <source url="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172.rss">[KeygenMe] Creating Your Own Key Generator</source>
      </item>
      <item>
        <title>[KeygenMe] Creating Your Own Key Generator</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>My three keys ;)…</p>
<p><span class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/2">spoiler</a></span></p>
<p>Thanks for taking the time to write this challenge!!!</p>
<p>For the LuLz… this is my keygen code, after some obfuscation <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">. It works in my box, but that is not the right way to write code <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<div class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/2">spoiler</a></div>
          <p><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/2</link>
        <pubDate>Sat, 03 Jun 2017 16:30:07 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2172-2</guid>
        <source url="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172.rss">[KeygenMe] Creating Your Own Key Generator</source>
      </item>
      <item>
        <title>[KeygenMe] Creating Your Own Key Generator</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Suh dudes, been a while since I posted a challenge, so here we go!</p>
<h2>Difficulty</h2>
<p>The difficulty depends on how well you can think and apply your knowledge.</p>
<p><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/1">Click to view the poll.</a></p>
<h2>Goal</h2>
<p>The aim of this task is to create your own keygen, i.e. you must program an application or write a script which will output a correct key. You must show at least 3 working keys (post a screenshot or some evidence) using your keygen.<br>
<strong>Note</strong>: Long inputs seem buggy, so smaller inputs are accepted.</p>
<h3>Example Keygen</h3>
<p><img src="//0x00sec.s3.amazonaws.com/original/2X/8/804c60fda6e6c43aa52ee46e6d60b96c26d9d9c9.JPG" width="489" height="41"></p>
<h2>Rules of Engagement</h2>
<p>This is a KeygenMe, there is to be no tampering with the binary in any way, shape or form such that its behaviour is different from the original.</p>
<h2>Hints</h2>
<p>Hint <span class="hashtag">#1:</span> <span class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/1">spoiler</a></span><br>
Hint <span class="hashtag">#2:</span> <span class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/1">spoiler</a></span><br>
Hint <span class="hashtag">#3:</span> <span class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/1">spoiler</a></span><br>
Hint <span class="hashtag">#4:</span> <span class="spoiler"><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/1">spoiler</a></span></p>
<h2>Binaries</h2>
<p>Use the following command to recover the binary:</p>
<pre><code class="lang-bash">cat out | base64 -d | gunzip &gt; a.out &amp;&amp; chmod +x a.out
</code></pre>
<h3>Easy mode (not stripped)</h3>
<pre><code class="lang-makefile">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
</code></pre>
<h3>Hard mode (stripped)</h3>
<pre><code class="lang-makefile">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
</code></pre>
<p>Good luck.</p>
          <p><a href="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172/1</link>
        <pubDate>Sat, 03 Jun 2017 13:32:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2172-1</guid>
        <source url="https://0x00sec.org/t/keygenme-creating-your-own-key-generator/2172.rss">[KeygenMe] Creating Your Own Key Generator</source>
      </item>
  </channel>
</rss>
