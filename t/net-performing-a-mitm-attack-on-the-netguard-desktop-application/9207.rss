<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[.NET] Performing a MITM attack on the .NETGuard desktop application</title>
    <link>https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207</link>
    <description># Performing a MITM attack on the .NETGuard desktop application
## Authors: 
Washi, 766F6964
## Abstract:
Code obfuscation is a method of preventing third parties from reverse engineering the inner workings of software. One cloud-based service that provides this kind of protection for .NET applications is .NETGuard. .NETGuard distributes a desktop application that interacts with .NETGuard’s API. In this paper, we show that the protocol used by the desktop application has several security flaws. The most serious flaws include the possibility of leaking account credentials and/or the original binary being restored from the generated network traffic. Additionally, the protocol performs no verification on the network traffic, which allows a Man In the Middle (MITM) attack to modify packets and send malicious content back to the client.

## Video Showcase

A video showcase of the attack can be found [here](https://www.youtube.com/watch?v=J6Qn9k7NMfg).

## Required Skills
We expect the reader to have a basic understanding in networking and network analysis with Wireshark.

## Disclaimer
The intent of this article is not to determine or conclude whether .NETGuard is a good or a bad obfuscator, nor as a means of attacking the developer personally. Rather, the content of this paper focuses on critical security issues found within the .NETGuard desktop client, and the communication between the desktop client and the .NETGuard servers. The main purpose of this paper is to raise awareness about the security concerns identified and inform .NETGuard&#39;s
users that their data may be at risk.

We have communicated these security issues to the .NETGuard team, but they have fallen on deaf ears. Other than changing the plain-text passwords to a double MD5 hash, no further action was taken. A month in, the vulnerabilities are still un-patched, so we took it upon ourselves to
communicate our findings to the community. Now it is for the public to decide whether or not to continue using this software.

-----
# The paper

The paper is located here: [GitLab](https://gitlab.com/rtn-team.cc/public/netguard-mitm/blob/master/NETGuard%20MITM%20Attack.pdf). It is structured in the following sections:

1. Introduction
2. Background 
3. Methodology 
4. Results
5. Discussion
5.1 Credential Leakage
5.2 Intellectual property theft
5.3 Absence of verification
5.4 Proof of Concept
6. Conclusion
7. Acknowledgments

# Conclusions
.NETGuard  is  a  cloud  code  obfuscation  tool  that  distributes  a  desktop  application  for  commu-
nicating  with  the  remote  server.   We  have  shown  that,  at  the  time  of  writing  this  report,  the
communication between the application and the server is highly vulnerable to MITM attacks.  We
demonstrated that with some very rudimentary traffic analysis, an attacker is able to steal account
credentials,  as well as the intellectual property of the programmer.  We also provided a proof of
concept that shows that the protocols used lack any form of authentication and/or verification of
the traffic to prevent tampering, allowing an adversary to modify the packets in such a way that
the final obfuscated file is replaced with malicious content.

The attacking script and more information can be found at the papers GitLab repository.</description>
    
    <lastBuildDate>Fri, 02 Nov 2018 16:13:46 +0000</lastBuildDate>
    <category>Reverse Engineering</category>
    <atom:link href="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[.NET] Performing a MITM attack on the .NETGuard desktop application</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207/4</link>
        <pubDate>Wed, 28 Nov 2018 13:47:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9207-4</guid>
        <source url="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207.rss">[.NET] Performing a MITM attack on the .NETGuard desktop application</source>
      </item>
      <item>
        <title>[.NET] Performing a MITM attack on the .NETGuard desktop application</title>
        <dc:creator><![CDATA[766F6964]]></dc:creator>
        <description><![CDATA[
            <p>The system in the showcase video was running Ubuntu 18.04 with Gnome and the theme used was <em>materia-dark</em> with <em>FlatIcons</em>.</p>
          <p><a href="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207/3</link>
        <pubDate>Fri, 02 Nov 2018 16:13:46 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9207-3</guid>
        <source url="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207.rss">[.NET] Performing a MITM attack on the .NETGuard desktop application</source>
      </item>
      <item>
        <title>[.NET] Performing a MITM attack on the .NETGuard desktop application</title>
        <dc:creator><![CDATA[Virgula]]></dc:creator>
        <description><![CDATA[
            <p>It looks very interesting… Good share but personally I prefer ConfuserEx that does not interact with any server.<br>
P.s what distro of linux did you use in the video? I liked it very much</p>
          <p><a href="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207/2</link>
        <pubDate>Mon, 29 Oct 2018 18:19:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9207-2</guid>
        <source url="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207.rss">[.NET] Performing a MITM attack on the .NETGuard desktop application</source>
      </item>
      <item>
        <title>[.NET] Performing a MITM attack on the .NETGuard desktop application</title>
        <dc:creator><![CDATA[766F6964]]></dc:creator>
        <description><![CDATA[
            <h1>Performing a MITM attack on the .NETGuard desktop application</h1>
<h2>Authors:</h2>
<p>Washi, 766F6964</p>
<h2>Abstract:</h2>
<p>Code obfuscation is a method of preventing third parties from reverse engineering the inner workings of software. One cloud-based service that provides this kind of protection for .NET applications is .NETGuard. .NETGuard distributes a desktop application that interacts with .NETGuard’s API. In this paper, we show that the protocol used by the desktop application has several security flaws. The most serious flaws include the possibility of leaking account credentials and/or the original binary being restored from the generated network traffic. Additionally, the protocol performs no verification on the network traffic, which allows a Man In the Middle (MITM) attack to modify packets and send malicious content back to the client.</p>
<h2>Video Showcase</h2>
<p>A video showcase of the attack can be found <a href="https://www.youtube.com/watch?v=J6Qn9k7NMfg" rel="nofollow noopener">here</a>.</p>
<h2>Required Skills</h2>
<p>We expect the reader to have a basic understanding in networking and network analysis with Wireshark.</p>
<h2>Disclaimer</h2>
<p>The intent of this article is not to determine or conclude whether .NETGuard is a good or a bad obfuscator, nor as a means of attacking the developer personally. Rather, the content of this paper focuses on critical security issues found within the .NETGuard desktop client, and the communication between the desktop client and the .NETGuard servers. The main purpose of this paper is to raise awareness about the security concerns identified and inform .NETGuard’s<br>
users that their data may be at risk.</p>
<p>We have communicated these security issues to the .NETGuard team, but they have fallen on deaf ears. Other than changing the plain-text passwords to a double MD5 hash, no further action was taken. A month in, the vulnerabilities are still un-patched, so we took it upon ourselves to<br>
communicate our findings to the community. Now it is for the public to decide whether or not to continue using this software.</p>
<hr>
<h1>The paper</h1>
<p>The paper is located here: <a href="https://gitlab.com/rtn-team.cc/public/netguard-mitm/blob/master/NETGuard%20MITM%20Attack.pdf" rel="nofollow noopener">GitLab</a>. It is structured in the following sections:</p>
<ol>
<li>Introduction</li>
<li>Background</li>
<li>Methodology</li>
<li>Results</li>
<li>Discussion<br>
5.1 Credential Leakage<br>
5.2 Intellectual property theft<br>
5.3 Absence of verification<br>
5.4 Proof of Concept</li>
<li>Conclusion</li>
<li>Acknowledgments</li>
</ol>
<h1>Conclusions</h1>
<p>.NETGuard  is  a  cloud  code  obfuscation  tool  that  distributes  a  desktop  application  for  commu-<br>
nicating  with  the  remote  server.   We  have  shown  that,  at  the  time  of  writing  this  report,  the<br>
communication between the application and the server is highly vulnerable to MITM attacks.  We<br>
demonstrated that with some very rudimentary traffic analysis, an attacker is able to steal account<br>
credentials,  as well as the intellectual property of the programmer.  We also provided a proof of<br>
concept that shows that the protocols used lack any form of authentication and/or verification of<br>
the traffic to prevent tampering, allowing an adversary to modify the packets in such a way that<br>
the final obfuscated file is replaced with malicious content.</p>
<p>The attacking script and more information can be found at the papers GitLab repository.</p>
          <p><a href="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207/1</link>
        <pubDate>Mon, 29 Oct 2018 13:47:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-9207-1</guid>
        <source url="https://0x00sec.org/t/net-performing-a-mitm-attack-on-the-netguard-desktop-application/9207.rss">[.NET] Performing a MITM attack on the .NETGuard desktop application</source>
      </item>
  </channel>
</rss>
