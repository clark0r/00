<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>GPG (PGP) Command Line - Basic Tutorial</title>
    <link>https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341</link>
    <description>We live in a post-Snowden world. For many, that means assuming none of your digital assets are safe from surveillance.

There are ways, however, to use the internet and insane mathematics in your favor to ensure that no one can see whatever it is that you&#39;re sending to someone else.

It&#39;s called PGP, which stands for &quot;pretty good privacy,&quot; and it&#39;s a way to encrypt your messages. Encryption, at its most basic form, is a way to cypher a message so that if anyone that sees the data in transit they have no way to know what the message says. OpenPGP is the most popular standard for digital encryption.

In fact, Edward Snowden first contacted journalist Laura Poitras to inform her of his trove of documents using PGP.

So let&#39;s take a look at what PGP is and how easy it is to use.

So what is encryption?
Encryption is basically a way of jumbling digital data so that no one can see what it really says while it&#39;s being sent. For the purposes of this explainer, we&#39;re going to focus on what&#39;s called &quot;public key encryption&quot;. This uses a multitude of cryptographic techniques to cipher every message using two factors that are constant to every person using PGP: a public key and a private key.

A public key is the information that is needed to encrypt a message. People wishing to receive encrypted messages make their public key readily available, as it&#39;s the only way for sources to begin the process of sending secure messages.

[How it works](https://www.youtube.com/watch?v=GSIDS_lvRv4)

There are gui apps to do this process simpler and easier, but here we are using the Command Line to achieve the same.

**First, you&#39;ll want to generate a key for yourself:**
&gt;gpg --gen-key

You&#39;ll be asked to enter a few details. **Don&#39;t forget these details.**

**To list your public keys:**
&gt;gpg --list-keys

**To list your private keys:**
&gt;gpg --list-secret-keys

Now, let&#39;s say your name is John Doe, and you want to send a message to Jane Doe. This is how you would do it (note that all names used must be the names you see when listing the keys).

**First, export your public key:**
&gt;gpg --export --armor youremail@example.com &gt; publickey.asc

_Example: gpg --export --armor john@gmail.com &gt; mypublickey.asc_
or
&gt;gpg --export --armor yourname &gt; publickey.asc

Example: gpg --export --armor John Doe &gt; mypublickey.asc

Send this file to Jane Doe. Get her to do the same.

**To import someone else&#39;s public key:**
&gt;gpg --import publickey.asc

Now that you&#39;ve imported Jane Doe&#39;s key, let&#39;s send her an encrypted message.
**To encrypt a file to send to Jane Doe:**
&gt;gpg --encrypt --recipient receiversname filename.txt

_Example: gpg --encrypt --recipient Jane Doe secretmessage.txt_
or, if the previous command doesn&#39;t work:
&gt;gpg -e -u &quot;sender&#39;s name (you)&quot; -r &quot;name of the receiver&#39;s key&quot; filename.txt

Example: gpg -e -u &quot;John Doe&quot; -r &quot;Jane Doe&quot; secretmessage.txt
This will create a file called secretmessage.txt.pgp. Send this to Jane Doe.

Now Jane has received your file. This is how she decrypts it:

**To decrypt to command line** (meaning that you&#39;ll only see the message in the command line, and it won&#39;t be saved decrypted to your hard drive):
&gt;gpg --decrypt filename.txt.gpg

**To decrypt to disk:**
&gt;gpg filename.txt.gpg

Done!</description>
    
    <lastBuildDate>Sat, 10 Dec 2016 13:05:50 +0000</lastBuildDate>
    <category>Cryptology</category>
    <atom:link href="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>GPG (PGP) Command Line - Basic Tutorial</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Agreed. General security hygiene is very important.</p>
          <p><a href="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341/4</link>
        <pubDate>Sat, 10 Dec 2016 13:05:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1341-4</guid>
        <source url="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341.rss">GPG (PGP) Command Line - Basic Tutorial</source>
      </item>
      <item>
        <title>GPG (PGP) Command Line - Basic Tutorial</title>
        <dc:creator><![CDATA[n3xUs]]></dc:creator>
        <description><![CDATA[
            <p>Nice work man! I think we need more cryptology and encryption tutorials like this.</p>
<p>EDIT: Thanks for the link. That video you really helps to better understand this whole process.</p>
          <p><a href="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341/3</link>
        <pubDate>Sat, 10 Dec 2016 12:53:58 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1341-3</guid>
        <source url="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341.rss">GPG (PGP) Command Line - Basic Tutorial</source>
      </item>
      <item>
        <title>GPG (PGP) Command Line - Basic Tutorial</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Yay! This is what I was looking for! Sweet reference man! It’s nice to have all the information consolidated.</p>
          <p><a href="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341/2</link>
        <pubDate>Sat, 10 Dec 2016 11:35:58 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1341-2</guid>
        <source url="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341.rss">GPG (PGP) Command Line - Basic Tutorial</source>
      </item>
      <item>
        <title>GPG (PGP) Command Line - Basic Tutorial</title>
        <dc:creator><![CDATA[VoidAccess]]></dc:creator>
        <description><![CDATA[
            <p>We live in a post-Snowden world. For many, that means assuming none of your digital assets are safe from surveillance.</p>
<p>There are ways, however, to use the internet and insane mathematics in your favor to ensure that no one can see whatever it is that you’re sending to someone else.</p>
<p>It’s called PGP, which stands for “pretty good privacy,” and it’s a way to encrypt your messages. Encryption, at its most basic form, is a way to cypher a message so that if anyone that sees the data in transit they have no way to know what the message says. OpenPGP is the most popular standard for digital encryption.</p>
<p>In fact, Edward Snowden first contacted journalist Laura Poitras to inform her of his trove of documents using PGP.</p>
<p>So let’s take a look at what PGP is and how easy it is to use.</p>
<p>So what is encryption?<br>
Encryption is basically a way of jumbling digital data so that no one can see what it really says while it’s being sent. For the purposes of this explainer, we’re going to focus on what’s called “public key encryption”. This uses a multitude of cryptographic techniques to cipher every message using two factors that are constant to every person using PGP: a public key and a private key.</p>
<p>A public key is the information that is needed to encrypt a message. People wishing to receive encrypted messages make their public key readily available, as it’s the only way for sources to begin the process of sending secure messages.</p>
<p><a href="https://www.youtube.com/watch?v=GSIDS_lvRv4" rel="nofollow noopener">How it works</a></p>
<p>There are gui apps to do this process simpler and easier, but here we are using the Command Line to achieve the same.</p>
<p><strong>First, you’ll want to generate a key for yourself:</strong></p>
<blockquote>
<p>gpg --gen-key</p>
</blockquote>
<p>You’ll be asked to enter a few details. <strong>Don’t forget these details.</strong></p>
<p><strong>To list your public keys:</strong></p>
<blockquote>
<p>gpg --list-keys</p>
</blockquote>
<p><strong>To list your private keys:</strong></p>
<blockquote>
<p>gpg --list-secret-keys</p>
</blockquote>
<p>Now, let’s say your name is John Doe, and you want to send a message to Jane Doe. This is how you would do it (note that all names used must be the names you see when listing the keys).</p>
<p><strong>First, export your public key:</strong></p>
<blockquote>
<p>gpg --export --armor <a href="mailto:youremail@example.com">youremail@example.com</a> &gt; publickey.asc</p>
</blockquote>
<p><em>Example: gpg --export --armor <a href="mailto:john@gmail.com">john@gmail.com</a> &gt; mypublickey.asc</em><br>
or</p>
<blockquote>
<p>gpg --export --armor yourname &gt; publickey.asc</p>
</blockquote>
<p>Example: gpg --export --armor John Doe &gt; mypublickey.asc</p>
<p>Send this file to Jane Doe. Get her to do the same.</p>
<p><strong>To import someone else’s public key:</strong></p>
<blockquote>
<p>gpg --import publickey.asc</p>
</blockquote>
<p>Now that you’ve imported Jane Doe’s key, let’s send her an encrypted message.<br>
<strong>To encrypt a file to send to Jane Doe:</strong></p>
<blockquote>
<p>gpg --encrypt --recipient receiversname filename.txt</p>
</blockquote>
<p><em>Example: gpg --encrypt --recipient Jane Doe secretmessage.txt</em><br>
or, if the previous command doesn’t work:</p>
<blockquote>
<p>gpg -e -u “sender’s name (you)” -r “name of the receiver’s key” filename.txt</p>
</blockquote>
<p>Example: gpg -e -u “John Doe” -r “Jane Doe” secretmessage.txt<br>
This will create a file called secretmessage.txt.pgp. Send this to Jane Doe.</p>
<p>Now Jane has received your file. This is how she decrypts it:</p>
<p><strong>To decrypt to command line</strong> (meaning that you’ll only see the message in the command line, and it won’t be saved decrypted to your hard drive):</p>
<blockquote>
<p>gpg --decrypt filename.txt.gpg</p>
</blockquote>
<p><strong>To decrypt to disk:</strong></p>
<blockquote>
<p>gpg filename.txt.gpg</p>
</blockquote>
<p>Done!</p>
          <p><a href="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341/1</link>
        <pubDate>Sat, 10 Dec 2016 11:27:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1341-1</guid>
        <source url="https://0x00sec.org/t/gpg-pgp-command-line-basic-tutorial/1341.rss">GPG (PGP) Command Line - Basic Tutorial</source>
      </item>
  </channel>
</rss>
