<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Programming language for Remote Access Toolkit</title>
    <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290</link>
    <description>Hey, 

I was just wondering which programming language would be the proper one to use for a RAT. 

One would obviously want the program to be hard to reverse engineer but also to be deployed on different systems (cross-platform). Network traffic should be hidden as good as possible too.

My (some what) educated guess here is that Java would make sense for a cross-platform tool but is pretty easy to reverse engineer. C/C++ could be hard to reverse engineer but hard to write cross-platform. C# could be a good option but I don&#39;t know enough about this language.

Are there any other languages that would make sense or what do you guys think?</description>
    
    <lastBuildDate>Fri, 08 Feb 2019 19:59:37 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/13</link>
        <pubDate>Mon, 04 Mar 2019 03:27:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-13</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[mirage]]></dc:creator>
        <description><![CDATA[
            <p>Go language is good, but its output file is large.</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/12</link>
        <pubDate>Fri, 08 Feb 2019 19:59:37 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-12</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>I’ve not used Go’s windows bindings extensively yet. Just when I cross-compile a pure-Go app.</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/11</link>
        <pubDate>Mon, 04 Feb 2019 14:29:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-11</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[EternalEclipse]]></dc:creator>
        <description><![CDATA[
            <p>The w32 bindings are quite reliable actually.  It should be noted that as of now Go DLLs are officially supported and easy to generate, and other APIs received a decent makeover and things keep improving.</p>
<p>I agree Go has some downsides, especially when it comes to things like messing with the loader things get pretty involved. Rust is superior in that aspect.</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/10</link>
        <pubDate>Mon, 04 Feb 2019 00:17:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-10</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>Late last year when I was looking to learn Go, I browsed around to find some libraries for WinAPI and didn’t really find many that were, or seemed, complete. I might be wrong. ¯\_(ツ)_/¯</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/9</link>
        <pubDate>Sun, 03 Feb 2019 11:43:58 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-9</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Any sources to suggest Go is not mature?</p>
<p>Do you mean like WinAPI?</p>
<p><a class="mention" href="https://0x00sec.org/u/fraq">@fraq</a></p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/8</link>
        <pubDate>Sun, 03 Feb 2019 11:32:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-8</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>I might be wrong but it looks like there are two issues with your question:</p>
<ol>
<li>You don’t know what you want except that you want to infect as many people as possible, for whatever (malicious?) reason,</li>
<li>You don’t know how you want it because you don’t understand the underlying technology.</li>
</ol>
<p>I’m going to assume you haven’t properly thought out your scope <strong>and</strong> your threat model, though you may just be hiding it from us to, say, conceal intent. Repeating what <a class="mention" href="https://0x00sec.org/u/eternaleclipse">@EternalEclipse</a> has already stated, there are multiple solutions to one problem, that’s what engineering is, coming up with <em>multiple</em> solutions for a <em>single</em> problem. What’s also engineering is the process of designing the solution to tackle the issue sufficiently and effectively. Each problem has its own unique set of circumstances and rules and so everything “depends” on the situation - there is usually no universal and generic answer. It seems that you’ve addressed none of these before asking for assistance, so I ask you, what exactly do you want us to say? We don’t even know what you’re looking for. Do <em>you</em> know what you’re looking for?</p>
<aside class="quote no-group" data-username="EternalEclipse" data-post="2" data-topic="11290">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/eternaleclipse/40/6590_2.png" class="avatar"> EternalEclipse:</div>
<blockquote>
<p>I’d also consider Rust and Go</p>
</blockquote>
</aside>
<aside class="quote group-VIP" data-username="pry0cc" data-post="4" data-topic="11290" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/pry0cc/40/6_2.png" class="avatar"> pry0cc:</div>
<blockquote>
<p>Go!</p>
<p>Go is largely under-valued IMO in the malware space as it can be fully cross-compiled.</p>
</blockquote>
</aside>
<p>From what I know, Go’s OS API libraries aren’t quite mature or developed and so unless you want to spend time to define things yourself, I can’t see it as being a decent language to go towards for malware development except maybe for the sole purpose of creating a unique sample. If anything, I’d say Rust is the more appropriate language(?)</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/7</link>
        <pubDate>Sun, 03 Feb 2019 03:19:27 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-7</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[fxbg]]></dc:creator>
        <description><![CDATA[
            <p>Java and any .NET related language is definitely not the choice here. But it has already been said, it’s not so much about the language. I read a topic on here the other day that was exactly like this thread, I suggest doing a little bit of searching on this forum. Also, I suggest you look into something about RSA or PGP since the unlocking whatever is on the end of the RAT is what people want.</p>
<p>Recently there was a counterfeiter involved in a shootout, he died, but the Secret Service is still trying to unlock his computers because of the encryption on them. The same principles could apply to any malware. The encryption is the key. (no pun intended)</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://0x00sec.s3.amazonaws.com/original/2X/2/251c130e52a28e7945d82aa15fd01c4bdf586324.png" class="site-icon" width="32" height="32">
      <a href="https://www.latimes.com/nation/la-na-pol-dark-web-counterfeiter-20190201-story.html" target="_blank" rel="noopener nofollow ugc" title="11:00AM - 01 February 2019">Los Angeles Times – 1 Feb 19</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/362;"><img src="https://ca-times.brightspotcdn.com/dims4/default/e0ba860/2147483647/strip/true/crop/2047x1075+0+38/resize/1200x630!/quality/90/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F63%2F12%2F8e232b9e9b4d4130971e4d46f7e3%2Fla-1548956076-arcot1vovu-snap-image" class="thumbnail" width="690" height="362"></div>

<h3><a href="https://www.latimes.com/nation/la-na-pol-dark-web-counterfeiter-20190201-story.html" target="_blank" rel="noopener nofollow ugc">Glowing reviews tout counterfeit cash on the dark web</a></h3>

<p>When Secret Service Agent Matthew Britsch began trawling for major counterfeiters in the shadowy marketplaces of the dark web, he acted like any smart consumer on eBay — he studied the reviews.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/6</link>
        <pubDate>Sat, 02 Feb 2019 20:36:52 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-6</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[offsec1]]></dc:creator>
        <description><![CDATA[
            <p>That’s really interesting. Go didn’t come to my mind here but I wanted to learn it anyways. Thanks for all the responses!</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/5</link>
        <pubDate>Sat, 02 Feb 2019 15:49:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-5</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Go!</p>
<p>Go is largely under-valued IMO in the malware space as it can be fully cross-compiled.</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/4</link>
        <pubDate>Sat, 02 Feb 2019 15:36:33 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-4</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[hunter]]></dc:creator>
        <description><![CDATA[
            <p>Reversing C applications is usually easier than one written in an object oriented language.</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/3</link>
        <pubDate>Sat, 02 Feb 2019 10:32:31 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-3</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[EternalEclipse]]></dc:creator>
        <description><![CDATA[
            <p>It depends on the purpose of this RAT and the techniques you intend to use. Using low level languages like C or C++ is not going to automatically make reverse engineering your binary harder. The key here is to understand what scenarios it’s designed to evade (Getting caught by AV, Network analysis, Manual reverse engineering), thinking about what techniques you want to use and then looking at your options.</p>
<p>If you want to do low-level stuff like import and section encryption, in-memory image loading, API hooks, code injection etc then yeah, C / C++ with some Assembly modules is probably the easiest way to go because they communicate directly with the native OS interfaces. Any of that stuff is obviously going to be OS-specific but you can encapsulate these parts.</p>
<p>C# and Powershell are not very far away from these interfaces, the CLR is very flexible and you can call any Windows API you’d like and load native code. There are PE and shellcode loaders for them, it just requires dealing with another layer of abstraction, casting data types, pointers and such. Detecting and dealing with different .Net versions is also quite a hassle. As for Powershell, it suffers from the same problems but at least your code runs under a recognized process.</p>
<p>I’d also consider Rust and Go, since they are both low-level (Rust is equivalent to C, Go has a GC and does some things in the background but still basically compiles to native code), modern, have good libraries / docs and nice wrappers for network and IO.</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/2</link>
        <pubDate>Sat, 02 Feb 2019 04:09:31 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-2</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
      <item>
        <title>Programming language for Remote Access Toolkit</title>
        <dc:creator><![CDATA[offsec1]]></dc:creator>
        <description><![CDATA[
            <p>Hey,</p>
<p>I was just wondering which programming language would be the proper one to use for a RAT.</p>
<p>One would obviously want the program to be hard to reverse engineer but also to be deployed on different systems (cross-platform). Network traffic should be hidden as good as possible too.</p>
<p>My (some what) educated guess here is that Java would make sense for a cross-platform tool but is pretty easy to reverse engineer. C/C++ could be hard to reverse engineer but hard to write cross-platform. C# could be a good option but I don’t know enough about this language.</p>
<p>Are there any other languages that would make sense or what do you guys think?</p>
          <p><a href="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290/1</link>
        <pubDate>Sat, 02 Feb 2019 03:13:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-11290-1</guid>
        <source url="https://0x00sec.org/t/programming-language-for-remote-access-toolkit/11290.rss">Programming language for Remote Access Toolkit</source>
      </item>
  </channel>
</rss>
