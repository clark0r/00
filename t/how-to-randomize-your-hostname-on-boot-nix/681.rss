<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How-to randomize your hostname on boot (nix)</title>
    <link>https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681</link>
    <description>Usability of a hostname is a relative thing; from generic ones, which seldom hold any meaning, to production ones, which can even tell you a physical location of a server. But all hostnames have one thing in common: they get logged.

Around the site you&#39;ll find various topics on *why* you should care &#39;bout anonymity, so I won&#39;t repeat such points here.

[details=Viability of random hostnames]
Some can argue that a random hostname is like a &#39;fist to the eye&#39; - that it&#39;s bound to get noticed.
And they would be right.
But always try to guess &#39;who is on the other side&#39;.
A standard user could not even know what a hostname is, or if he/she sees it: &quot;it&#39;s just some computer gibberish&quot;.
An admin could think that it&#39;s a malformed string in a log, or not even see it among other stuff he/she looks at.
And all the possible scenarios in between...
On the plus side, you&#39;ll have one more random identifier. You can circumvent hostname blacklisting (still happens). IMHO, in various use cases which can be found around this site, a random hostname is better than a static one. In the end, the choice is yours =)
[/details]


----------
*Logical steps:*
boot &gt; invoke script &gt; script changes hostname (optional: log change) &gt; resume boot &gt; login
*Inventory:*
nix (debianesque distro (check below for feedback))
bash + rc.local for invocation
[details=rc.local]
Don&#39;t use it for daemons and daemon-like (service-like) scripts. Lookup the subject of custom daemons if it interests you.
[/details]
----------
**namechanger.sh**

    #!/bin/bash
    
    # old hostname
    # if -a (alias) is blank, you can use it without a
    # switch, or with -s (short)
    ALDN=$(hostname -a)
    # number of chars in new hostname from hour
    PMHR=$(date +%-I)
    #  path to log
    LGFL=&quot;/some/dir/logs/namechanger.log&quot;
    HSFL=&quot;/etc/hosts&quot;
    # add ipv6 loopback if you use it
    DEFL=&quot;127.0.0.1       localhost&quot;

    # if too short, add some len
    if [ $PMHR -lt &#39;4&#39; ]
    then
      PMHR=$((PMHR+3))
    fi

    # pull a random alnum str from with spec len from urandom
    NWDN=$(cat /dev/urandom | tr -dc [:alnum:] | head -c$PMHR)

    # push to hosts, incl. defaults
    echo &quot;$DEFL $NWDN&quot; &gt; $HSFL
   
    # log if you want/need
    NOW=$(date +%y-%m-%d&#39; &#39;%H:%M:%S)
    echo &quot;$NOW Changed from $ALDN to $NWDN&quot; &gt;&gt; $LGFL

    # service-type set
    hostnamectl set-hostname $NWDN

    # restart networking
    service networking stop
    sleep 1
    service networking start

    # whitelist with X serv
    xhost +$NWDN
    exit

**/etc/rc.local**

    # has some stuff.... skip
    /some/dir/namechanger.sh

    exit 0

[details=Optional log output]
`&lt;date&gt; &lt;time&gt; Changed from kSVv8pG to cOFCzw6HvkB`
[/details]
----------
**Feedback**

I hope that this snippet will prove useful to you, and I appreciate any feedback u give, especially if you test it / adapt it for a RHELoesque distro.</description>
    
    <lastBuildDate>Fri, 01 Jul 2016 21:29:25 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How-to randomize your hostname on boot (nix)</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/6</link>
        <pubDate>Sun, 21 Jan 2018 00:30:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-681-6</guid>
        <source url="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681.rss">How-to randomize your hostname on boot (nix)</source>
      </item>
      <item>
        <title>How-to randomize your hostname on boot (nix)</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p><span class="mention">@airth</span> and <a class="mention" href="https://0x00sec.org/u/pry0cc">@pry0cc</a>: I mean “mess” as in leave a screwy-looking trail if/when someone is checking for it.</p>
          <p><a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/5</link>
        <pubDate>Fri, 01 Jul 2016 21:29:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-681-5</guid>
        <source url="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681.rss">How-to randomize your hostname on boot (nix)</source>
      </item>
      <item>
        <title>How-to randomize your hostname on boot (nix)</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>I don’t know if you’re aware, but I believe the access points rely on Mac Addresses for identification rather than hostname. Technically no two Mac addresses should exist, but two hostnames certainly could since it’s often user configured.</p>
          <p><a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/4</link>
        <pubDate>Fri, 01 Jul 2016 18:06:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-681-4</guid>
        <source url="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681.rss">How-to randomize your hostname on boot (nix)</source>
      </item>
      <item>
        <title>How-to randomize your hostname on boot (nix)</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>I don’t know what you mean by “messing”, but it all comes down to your IP (or the MAC in a LAN). Oaktree or oaktits as a hostname won’t really mess with anything.</p>
          <p><a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/3</link>
        <pubDate>Fri, 01 Jul 2016 17:12:30 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-681-3</guid>
        <source url="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681.rss">How-to randomize your hostname on boot (nix)</source>
      </item>
      <item>
        <title>How-to randomize your hostname on boot (nix)</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>This is cool. Maybe I’ll try to port this to OS X just to mess with network logging at Starbucks, etc.</p>
          <p><a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/2</link>
        <pubDate>Fri, 01 Jul 2016 14:36:15 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-681-2</guid>
        <source url="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681.rss">How-to randomize your hostname on boot (nix)</source>
      </item>
      <item>
        <title>How-to randomize your hostname on boot (nix)</title>
        <dc:creator><![CDATA[ivlb]]></dc:creator>
        <description><![CDATA[
            <p>Usability of a hostname is a relative thing; from generic ones, which seldom hold any meaning, to production ones, which can even tell you a physical location of a server. But all hostnames have one thing in common: they get logged.</p>
<p>Around the site you’ll find various topics on <em>why</em> you should care 'bout anonymity, so I won’t repeat such points here.</p>

Viability of random hostnames <a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/1">(click for more details)</a>
<hr>
<p><em>Logical steps:</em><br>
boot &gt; invoke script &gt; script changes hostname (optional: log change) &gt; resume boot &gt; login<br>
<em>Inventory:</em><br>
nix (debianesque distro (check below for feedback))<br>
bash + rc.local for invocation</p>

rc.local <a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/1">(click for more details)</a>
<hr>
<p><strong>namechanger.sh</strong></p>
<pre><code>#!/bin/bash

# old hostname
# if -a (alias) is blank, you can use it without a
# switch, or with -s (short)
ALDN=$(hostname -a)
# number of chars in new hostname from hour
PMHR=$(date +%-I)
#  path to log
LGFL="/some/dir/logs/namechanger.log"
HSFL="/etc/hosts"
# add ipv6 loopback if you use it
DEFL="127.0.0.1       localhost"

# if too short, add some len
if [ $PMHR -lt '4' ]
then
  PMHR=$((PMHR+3))
fi

# pull a random alnum str from with spec len from urandom
NWDN=$(cat /dev/urandom | tr -dc [:alnum:] | head -c$PMHR)

# push to hosts, incl. defaults
echo "$DEFL $NWDN" &gt; $HSFL

# log if you want/need
NOW=$(date +%y-%m-%d' '%H:%M:%S)
echo "$NOW Changed from $ALDN to $NWDN" &gt;&gt; $LGFL

# service-type set
hostnamectl set-hostname $NWDN

# restart networking
service networking stop
sleep 1
service networking start

# whitelist with X serv
xhost +$NWDN
exit
</code></pre>
<p><strong>/etc/rc.local</strong></p>
<pre><code># has some stuff.... skip
/some/dir/namechanger.sh

exit 0
</code></pre>

Optional log output <a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/1">(click for more details)</a>
<hr>
<p><strong>Feedback</strong></p>
<p>I hope that this snippet will prove useful to you, and I appreciate any feedback u give, especially if you test it / adapt it for a RHELoesque distro.</p>
          <p><a href="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681/1</link>
        <pubDate>Fri, 01 Jul 2016 08:05:27 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-681-1</guid>
        <source url="https://0x00sec.org/t/how-to-randomize-your-hostname-on-boot-nix/681.rss">How-to randomize your hostname on boot (nix)</source>
      </item>
  </channel>
</rss>
