<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Android Malware - Start the App at Boot and get Kernel Version 0x01 [C#]</title>
    <link>https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01-c/793</link>
    <description>Hey mates,
no that&#39;s not a bad plagiarism :grin:. I wrote with @L3akM3-0day and we&#39;ll try to work together on this series. My part will be to translate his Java codes to C#, which I&#39;ll try to do as good as I can, although I&#39;m not that experienced with Android programming :wink:. I would also add the part of Android programming on linux, but sadly Xamarin is not available for linux (But for OSX... This cruel, cruel world :disappointed:), so these parts will focus on Windows with Visual Studio. I don&#39;t just recommend, but require you to read [his part](https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786) first! Already finished? Okay, let&#39;s begin!

---
## Part I - Check Kernel Version
Xamarin should be installed in Visual Studio to follow this tutorial. If not already installed, see [here](https://developer.xamarin.com/guides/android/getting_started/installation/windows/).

Create a new project:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/1X/02cab26e4af13245e118d03fea229aa95f2f1022.PNG&quot; width=&quot;690&quot; height=&quot;478&quot;&gt;

Warning: I have the German Version :wink:. Select Blank App and continue.

### Class GatherInformation
Ok, here we come to the first C# code!
```
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Android.App;
using Android.Content;
using Android.OS;
using Android.Runtime;
using Android.Views;
using Android.Widget;

namespace MalwareTutorial
{
    static class GatherInformation
    {
        public static bool IsExploitable()
        {
            String kernel = Java.Lang.JavaSystem.GetProperty(&quot;os.Version&quot;).Split(&#39;-&#39;)[0];

            char[] seperator = &quot;\\.&quot;.ToCharArray();
            if (int.Parse(kernel.Split(seperator)[0]) &lt;= 3)
            {
                if (int.Parse(kernel.Split(seperator)[1]) &lt;= 14)
                {
                    if (int.Parse(kernel.Split(seperator)[2]) &lt;= 15)
                    {
                        return true;
                    }
                }
            }

            return false;
        }
    }
}
```
And print it to the screen:
```
using System;
using Android.App;
using Android.Content;
using Android.Runtime;
using Android.Views;
using Android.Widget;
using Android.OS;

namespace MalwareTutorial
{
    [Activity(Label = &quot;MalwareTutorial&quot;, MainLauncher = true, Icon = &quot;@drawable/icon&quot;)]
    public class MainActivity : Activity
    {
        protected override void OnCreate(Bundle bundle)
        {
            base.OnCreate(bundle);

            // Set our view from the &quot;main&quot; layout resource
            SetContentView(Resource.Layout.Main);

            // Create a textView
            TextView text = FindViewById&lt;TextView&gt;(Resource.Id.exploitable);

            //If the function returns true print Root the device on the app
            if (GatherInformation.IsExploitable())
            {
                text.Text = &quot;Root the device ! :) &quot;;
            }
            else
            {
                text.Text = &quot;Nooo :( Towelroot won&#39;t work&quot;;
            }
        }
    }
}
```

---
## Part II - Start Application everytime the Phone boots
And don&#39;t forget to start the application, when your phone boots :slight_smile:.  We&#39;ll use a BootReceiver class to get ACTION_BOOT_COMPLETED.
```
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Android.App;
using Android.Content;
using Android.OS;
using Android.Runtime;
using Android.Views;
using Android.Widget;

namespace MalwareTutorial
{
    /// &lt;summary&gt;
    /// Waits for Boot to start the MainActivity
    /// &lt;/summary&gt;
    [BroadcastReceiver]
    [IntentFilter(new[] { Intent.ActionBootCompleted })]
    partial class BootReceiver : BroadcastReceiver
    {
        public override void OnReceive(Context context, Intent intent)
        {
            if (intent.Action == Intent.ActionBootCompleted)
            {         
                context.StartActivity(typeof(MainActivity));
            }
        }
    }
}
```

And finally just add ``&lt;uses-permission android:name=&quot;android.permission.RECEIVE_BOOT_COMPLETED&quot; /&gt;`` to your AndroidManifest.xml.

I heard of some great stuff @L3akM3-0day will write about, so stay tuned for his next parts!

|-TheDoctor-|</description>
    
    <lastBuildDate>Fri, 22 Jul 2016 20:04:49 +0000</lastBuildDate>
    <category>Malware</category>
    <atom:link href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01-c/793.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Android Malware - Start the App at Boot and get Kernel Version 0x01 [C#]</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01-c/793/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01-c/793/2</link>
        <pubDate>Sun, 21 Jan 2018 00:42:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-793-2</guid>
        <source url="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01-c/793.rss">Android Malware - Start the App at Boot and get Kernel Version 0x01 [C#]</source>
      </item>
      <item>
        <title>Android Malware - Start the App at Boot and get Kernel Version 0x01 [C#]</title>
        <dc:creator><![CDATA[TheDoctor]]></dc:creator>
        <description><![CDATA[
            <p>Hey mates,<br>
no that’s not a bad plagiarism <img src="https://0x00sec.org/images/emoji/twitter/grin.png?v=9" title=":grin:" class="emoji" alt=":grin:">. I wrote with <a class="mention" href="https://0x00sec.org/u/l3akm3-0day">@L3akM3-0day</a> and we’ll try to work together on this series. My part will be to translate his Java codes to C#, which I’ll try to do as good as I can, although I’m not that experienced with Android programming <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">. I would also add the part of Android programming on linux, but sadly Xamarin is not available for linux (But for OSX… This cruel, cruel world <img src="https://0x00sec.org/images/emoji/twitter/disappointed.png?v=9" title=":disappointed:" class="emoji" alt=":disappointed:">), so these parts will focus on Windows with Visual Studio. I don’t just recommend, but require you to read <a href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01/786">his part</a> first! Already finished? Okay, let’s begin!</p>
<hr>
<h2>Part I - Check Kernel Version</h2>
<p>Xamarin should be installed in Visual Studio to follow this tutorial. If not already installed, see <a href="https://developer.xamarin.com/guides/android/getting_started/installation/windows/" rel="nofollow noopener">here</a>.</p>
<p>Create a new project:<br>
<img src="//0x00sec.s3.amazonaws.com/original/1X/02cab26e4af13245e118d03fea229aa95f2f1022.PNG" width="690" height="478"></p>
<p>Warning: I have the German Version <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">. Select Blank App and continue.</p>
<h3>Class GatherInformation</h3>
<p>Ok, here we come to the first C# code!</p>
<pre><code class="lang-auto">using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Android.App;
using Android.Content;
using Android.OS;
using Android.Runtime;
using Android.Views;
using Android.Widget;

namespace MalwareTutorial
{
    static class GatherInformation
    {
        public static bool IsExploitable()
        {
            String kernel = Java.Lang.JavaSystem.GetProperty("os.Version").Split('-')[0];

            char[] seperator = "\\.".ToCharArray();
            if (int.Parse(kernel.Split(seperator)[0]) &lt;= 3)
            {
                if (int.Parse(kernel.Split(seperator)[1]) &lt;= 14)
                {
                    if (int.Parse(kernel.Split(seperator)[2]) &lt;= 15)
                    {
                        return true;
                    }
                }
            }

            return false;
        }
    }
}
</code></pre>
<p>And print it to the screen:</p>
<pre><code class="lang-auto">using System;
using Android.App;
using Android.Content;
using Android.Runtime;
using Android.Views;
using Android.Widget;
using Android.OS;

namespace MalwareTutorial
{
    [Activity(Label = "MalwareTutorial", MainLauncher = true, Icon = "@drawable/icon")]
    public class MainActivity : Activity
    {
        protected override void OnCreate(Bundle bundle)
        {
            base.OnCreate(bundle);

            // Set our view from the "main" layout resource
            SetContentView(Resource.Layout.Main);

            // Create a textView
            TextView text = FindViewById&lt;TextView&gt;(Resource.Id.exploitable);

            //If the function returns true print Root the device on the app
            if (GatherInformation.IsExploitable())
            {
                text.Text = "Root the device ! :) ";
            }
            else
            {
                text.Text = "Nooo :( Towelroot won't work";
            }
        }
    }
}
</code></pre>
<hr>
<h2>Part II - Start Application everytime the Phone boots</h2>
<p>And don’t forget to start the application, when your phone boots <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">.  We’ll use a BootReceiver class to get ACTION_BOOT_COMPLETED.</p>
<pre><code class="lang-auto">using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Android.App;
using Android.Content;
using Android.OS;
using Android.Runtime;
using Android.Views;
using Android.Widget;

namespace MalwareTutorial
{
    /// &lt;summary&gt;
    /// Waits for Boot to start the MainActivity
    /// &lt;/summary&gt;
    [BroadcastReceiver]
    [IntentFilter(new[] { Intent.ActionBootCompleted })]
    partial class BootReceiver : BroadcastReceiver
    {
        public override void OnReceive(Context context, Intent intent)
        {
            if (intent.Action == Intent.ActionBootCompleted)
            {         
                context.StartActivity(typeof(MainActivity));
            }
        }
    }
}
</code></pre>
<p>And finally just add <code>&lt;uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /&gt;</code> to your AndroidManifest.xml.</p>
<p>I heard of some great stuff <a class="mention" href="https://0x00sec.org/u/l3akm3-0day">@L3akM3-0day</a> will write about, so stay tuned for his next parts!</p>
<p>|-TheDoctor-|</p>
          <p><a href="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01-c/793/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01-c/793/1</link>
        <pubDate>Fri, 22 Jul 2016 20:04:49 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-793-1</guid>
        <source url="https://0x00sec.org/t/android-malware-start-the-app-at-boot-and-get-kernel-version-0x01-c/793.rss">Android Malware - Start the App at Boot and get Kernel Version 0x01 [C#]</source>
      </item>
  </channel>
</rss>
