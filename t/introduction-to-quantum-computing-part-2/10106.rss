<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Introduction to Quantum Computing :: Part #2</title>
    <link>https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106</link>
    <description>## Suggestion
Psst, Thirsty-Robot here. Download the HTML document for full power on the mathematical notation here, https://github.com/Thirsty-Robot/Quantum-Computing-Guide. Enjoy :slight_smile:.

# Introduction to Quantum Computing :: Part #2

Hello again, I&#39;m back with another guide. Last chapter we discussed some basic principles of Quantum physics, I really encourage you to read the [first chapter](https://0x00sec.org/t/introduction-to-quantum-computing-part-1/7996/4) before diving into this one. This chapter will cover the bases of quantum computing, I recommend being familiar with unitary matrices, vectors, basic linear algebra and basic computer logic. Also, my guide will be hosted on GitHub, I will use Jupyter notebook to show some mathematical notation, so you can clone the repository and read from there, I think it&#39;s more comfy.

So now, in this tutorial we are going to review:

&gt; 2.1. Basic Math Concepts and Some Feedback Links
&gt;
&gt;
&gt;
&gt; 2.2. A Brief History of Quantum Computing
&gt;
&gt;
&gt;
&gt; 2.3. The Qubit
&gt;
&gt;
&gt;
&gt; 2.2. Getting the Record Straight

## Basic Math Concepts

So, math. It&#39;s maybe the most important part of quantum computing. We are gonna see absolute values and complex number. Remember this is gonna be a basic overview of this, just for you to remember some basic conceps we dont use in day-to-day life.

### Complex numbers

In day-to-day life we use real numbers, numbers on a one-dimensional matter if you will, you can imagine them as numbers on a two directional line, where 0 is the center of this line, left are negative numbers and right are positive numbers. Like this:

![alt-text](//0x00sec.s3.dualstack.us-east-1.amazonaws.com/original/2X/b/bd03e0b45b4cc921d0be5d41268c75ac24cfc35f.png)

When you are at the center of this imaginary number line (meaning your position is zero) and then you add five, you are gonna be at position 5. This is the basics of group theory. We can interpret this field as an additive field, in which we can add to our original position (which is zero), and we are going to move to another position in our number line, streeching it (see reference links for a visual interpretetion). But, this is only in a two-dimensional matter. Are there any numbers in a three-dimensional matter?

The answer is yes, they are called imaginary numbers. You can imagine this numbers as numbers in another dimension, we don&#39;t only have 1 or -1. We have 1i 2i etc... This numbers are useful enough to show quantum states as we are gonna do.

![alt-text](//0x00sec.s3.dualstack.us-east-1.amazonaws.com/original/2X/1/1655a2f901956acf2ddd051495f052551ccbf3a1.png)

In here our A or X axis are real numbers and the B or Y axis are imaginary numbers. So instead of representing this as a normal equation, we are going to add a i at the end of out b or i axis. Because imaginary numbers are represented by an i, so our equation is:

Real:a+b

Complex:a+bi

### Basic Matrices

In computer science we use matrices for representing arrays, but in physics they are for representing vectors. Also, we are gonna see them alot of times, so try your best to read the feedback links. Here is a matrix example:

α=[0110]

## A Brief History of Quantum Computing

I gave you a brief history of quantum physics, now I&#39;m gonna give lecture you about quantum computing history.

#### 1965

Richard Feynman developed quantum electrodynamics. Which is the way electrons interact with each other trough photons.

#### 1980

Feynman and others started to investigate on conventional information, and the computation of quantum states with binary data.

#### 1985

David Deutsch, described the &#39;Univeral Quantum Computer&#39; on a theorical paper. In this paper he proved that a two-state system could be use to simulate a quantum system. The operations of this computer were called Quantum Gates.

#### 1994

Peter Shor proposed a method of using entangled qubits for finding the prime factor of integer. This is known as the Shor&#39;s Algorithm. This algorithm whill surpass the efficency of any known computer when executed on a quantum computing.

#### Present day

Quantum Computing is a big field now at days. New quantum gates come around every now and then.

## The Qubit

Finally we are actually gonna learn quantum computing. Okey, so what is a Qubit. Remember last post? When I talked about some crazy cat and the Copenhagen interpretation? Well, in normal computing, computers can have a bit. Meaning they can only be a zero and a one, our bit is going to be represented by alpha:

α=[01]

In a physical manner, a bit is represented by an electrical current. 0 is no current and 1 is current. This controls the motherboard of your computer with the help of chemical transistors.

Well, in quantum computing our bit can be a 0 and a 1 at the same time. Just like in the copenhagen interpretetion, quantum computing takes advantage of super position, so our bit is in both states at the same time. Now let&#39;s visualize this as alpha and let&#39;s introduce another qubit, beta:

α=[01]β=[10]

Now, our qubit is 0 and a 1 at the same time. How do we represent the possibility of this? This can be represented in the following way:

|ψ⟩=|α⟩+|β⟩

So we have psi equal alpha plus beta. Remember that psi is the way to represent the wave function of a quantum system. All the posiblities on a quantum system. And does weird parentesis are called the bra-ket notation. This notation is used to represent a quantum state. Alpha and beta are complex numbers that obey:

|α|2+|β|2=1

At the begining, our ground qubit will always be zero. Why? normally quantum computers use a type of hardware qubit named a superconducting transmon qubit, which is made of superconducting materials like aluminum or nobium. For this to behave as our abstract notion of the qubit it needs to be cooled at super frosty temperatures. It takes some days to reach perfect equilibrium, and when is does our &quot;ground qubit&quot; will be zero.

Well, our qubit needs to be other things too, not only a 0. So how do we manage our qubit. There are certain ways of doing these. In normal computers you use logic gates, gates like AND, OR, NOT, XOR, NOR etc. In the quantum world we use quantum gates (we will see them with more detail on the next chapter). For now we are going to learn one. Typical gates are represented by a 2x2 unitary matrix.

We are going to talk about the bit-flip gate which is denoted by X.

|0⟩→X|0⟩=|1⟩

It simply flips the bit. Meaning, zero to one and vice versa. This has a matrix representation of it:

X=(0110)

This is it for now. On the next chapter there is gonna be hard math so I recommend getting familiar with linear algebra again.

## Getting the Record Straight

Quantum computing has been in everyones mind. It has been in on news report, movies ans series. Since the idea of thinking in to things at the same time it&#39;s difficult for everyone, quantum computing has been misunderstude and by this it was plagued by myths and speculations. I will try to get the record straight with this myths and facts.

## 1. Quantum computers can get all posibilities at once

This is a myth. There are several quantum algorithms out there, each one target different fields, but none of them check &quot;all posibilities&quot; at once. This myth comes from the RSA algorithm breaking. The Shor Algorithm doesnt go over all primes at the same time, this algorithm just finds a quantum way or trick for getting the prime.

## 2. D-Wave is the first quantum computer

Again, not at all. D-Wave is a quantum annealer. It’s great for optimizing solutions to problems by quickly searching over a space and finding a minimum (or “solution”) by running adiabatic quantum algorithms. However, quantum annealing will never be able to run Shor’s algorithm, which breaks common forms of modern cryptography, like RSA and ECC.

## Conclusion

Thanks for reading and waiting for this little guide. If you have any question go ahead and talk to me, no problem. In the next chapter we will use a quantum computer in the cloud, trust me, it&#39;s gonna be fun. This is it for now, have fun and never stop searching.

* Thirsty-Robot

## Feedback Links

https://www.youtube.com/watch?v=MzRCDLre1b4

https://www.youtube.com/watch?v=MBnnXbOM5S4

https://www.youtube.com/watch?v=mvmuCPvRoWQ</description>
    
    <lastBuildDate>Wed, 12 Dec 2018 20:08:54 +0000</lastBuildDate>
    <category>Uncategorized</category>
    <atom:link href="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Introduction to Quantum Computing :: Part #2</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106/4</link>
        <pubDate>Wed, 09 Jan 2019 20:49:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10106-4</guid>
        <source url="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106.rss">Introduction to Quantum Computing :: Part #2</source>
      </item>
      <item>
        <title>Introduction to Quantum Computing :: Part #2</title>
        <dc:creator><![CDATA[binshift2]]></dc:creator>
        <description><![CDATA[
            <p>Yes very awesome article.  This morning I just found out that IBM is offering free computer time on their IBM Q site.  <a href="https://www.research.ibm.com/ibm-q/network/" rel="nofollow noopener">https://www.research.ibm.com/ibm-q/network/</a></p>
          <p><a href="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106/3</link>
        <pubDate>Wed, 12 Dec 2018 20:08:54 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10106-3</guid>
        <source url="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106.rss">Introduction to Quantum Computing :: Part #2</source>
      </item>
      <item>
        <title>Introduction to Quantum Computing :: Part #2</title>
        <dc:creator><![CDATA[monk]]></dc:creator>
        <description><![CDATA[
            <p>Awesome!!! Super interesting!</p>
<p>Thank you for this!</p>
          <p><a href="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106/2</link>
        <pubDate>Tue, 11 Dec 2018 14:50:04 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10106-2</guid>
        <source url="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106.rss">Introduction to Quantum Computing :: Part #2</source>
      </item>
      <item>
        <title>Introduction to Quantum Computing :: Part #2</title>
        <dc:creator><![CDATA[Thirsty-Robot]]></dc:creator>
        <description><![CDATA[
            <h2><a name="suggestion-1" class="anchor" href="https://0x00sec.org#suggestion-1"></a>Suggestion</h2>
<p>Psst, Thirsty-Robot here. Download the HTML document for full power on the mathematical notation here, <a href="https://github.com/Thirsty-Robot/Quantum-Computing-Guide" class="inline-onebox" rel="noopener nofollow ugc">GitHub - Thirsty-Robot/Quantum-Computing-Guide</a>. Enjoy <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20">.</p>
<h1><a name="introduction-to-quantum-computing-part-2-2" class="anchor" href="https://0x00sec.org#introduction-to-quantum-computing-part-2-2"></a>Introduction to Quantum Computing :: Part <span class="hashtag-raw">#2</span></h1>
<p>Hello again, I’m back with another guide. Last chapter we discussed some basic principles of Quantum physics, I really encourage you to read the <a href="https://0x00sec.org/t/introduction-to-quantum-computing-part-1/7996/4">first chapter</a> before diving into this one. This chapter will cover the bases of quantum computing, I recommend being familiar with unitary matrices, vectors, basic linear algebra and basic computer logic. Also, my guide will be hosted on GitHub, I will use Jupyter notebook to show some mathematical notation, so you can clone the repository and read from there, I think it’s more comfy.</p>
<p>So now, in this tutorial we are going to review:</p>
<blockquote>
<p>2.1. Basic Math Concepts and Some Feedback Links</p>
<p>2.2. A Brief History of Quantum Computing</p>
<p>2.3. The Qubit</p>
<p>2.2. Getting the Record Straight</p>
</blockquote>
<h2><a name="basic-math-concepts-3" class="anchor" href="https://0x00sec.org#basic-math-concepts-3"></a>Basic Math Concepts</h2>
<p>So, math. It’s maybe the most important part of quantum computing. We are gonna see absolute values and complex number. Remember this is gonna be a basic overview of this, just for you to remember some basic conceps we dont use in day-to-day life.</p>
<h3><a name="complex-numbers-4" class="anchor" href="https://0x00sec.org#complex-numbers-4"></a>Complex numbers</h3>
<p>In day-to-day life we use real numbers, numbers on a one-dimensional matter if you will, you can imagine them as numbers on a two directional line, where 0 is the center of this line, left are negative numbers and right are positive numbers. Like this:</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/b/bd03e0b45b4cc921d0be5d41268c75ac24cfc35f.png" alt="alt-text" width="513" height="261"></p>
<p>When you are at the center of this imaginary number line (meaning your position is zero) and then you add five, you are gonna be at position 5. This is the basics of group theory. We can interpret this field as an additive field, in which we can add to our original position (which is zero), and we are going to move to another position in our number line, streeching it (see reference links for a visual interpretetion). But, this is only in a two-dimensional matter. Are there any numbers in a three-dimensional matter?</p>
<p>The answer is yes, they are called imaginary numbers. You can imagine this numbers as numbers in another dimension, we don’t only have 1 or -1. We have 1i 2i etc… This numbers are useful enough to show quantum states as we are gonna do.</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/2X/1/1655a2f901956acf2ddd051495f052551ccbf3a1.png" alt="alt-text" width="220" height="237"></p>
<p>In here our A or X axis are real numbers and the B or Y axis are imaginary numbers. So instead of representing this as a normal equation, we are going to add a i at the end of out b or i axis. Because imaginary numbers are represented by an i, so our equation is:</p>
<p>Real:a+b</p>
<p>Complex:a+bi</p>
<h3><a name="basic-matrices-5" class="anchor" href="https://0x00sec.org#basic-matrices-5"></a>Basic Matrices</h3>
<p>In computer science we use matrices for representing arrays, but in physics they are for representing vectors. Also, we are gonna see them alot of times, so try your best to read the feedback links. Here is a matrix example:</p>
<p>α=[0110]</p>
<h2><a name="a-brief-history-of-quantum-computing-6" class="anchor" href="https://0x00sec.org#a-brief-history-of-quantum-computing-6"></a>A Brief History of Quantum Computing</h2>
<p>I gave you a brief history of quantum physics, now I’m gonna give lecture you about quantum computing history.</p>
<h4><a name="h-1965-7" class="anchor" href="https://0x00sec.org#h-1965-7"></a>1965</h4>
<p>Richard Feynman developed quantum electrodynamics. Which is the way electrons interact with each other trough photons.</p>
<h4><a name="h-1980-8" class="anchor" href="https://0x00sec.org#h-1980-8"></a>1980</h4>
<p>Feynman and others started to investigate on conventional information, and the computation of quantum states with binary data.</p>
<h4><a name="h-1985-9" class="anchor" href="https://0x00sec.org#h-1985-9"></a>1985</h4>
<p>David Deutsch, described the ‘Univeral Quantum Computer’ on a theorical paper. In this paper he proved that a two-state system could be use to simulate a quantum system. The operations of this computer were called Quantum Gates.</p>
<h4><a name="h-1994-10" class="anchor" href="https://0x00sec.org#h-1994-10"></a>1994</h4>
<p>Peter Shor proposed a method of using entangled qubits for finding the prime factor of integer. This is known as the Shor’s Algorithm. This algorithm whill surpass the efficency of any known computer when executed on a quantum computing.</p>
<h4><a name="present-day-11" class="anchor" href="https://0x00sec.org#present-day-11"></a>Present day</h4>
<p>Quantum Computing is a big field now at days. New quantum gates come around every now and then.</p>
<h2><a name="the-qubit-12" class="anchor" href="https://0x00sec.org#the-qubit-12"></a>The Qubit</h2>
<p>Finally we are actually gonna learn quantum computing. Okey, so what is a Qubit. Remember last post? When I talked about some crazy cat and the Copenhagen interpretation? Well, in normal computing, computers can have a bit. Meaning they can only be a zero and a one, our bit is going to be represented by alpha:</p>
<p>α=[01]</p>
<p>In a physical manner, a bit is represented by an electrical current. 0 is no current and 1 is current. This controls the motherboard of your computer with the help of chemical transistors.</p>
<p>Well, in quantum computing our bit can be a 0 and a 1 at the same time. Just like in the copenhagen interpretetion, quantum computing takes advantage of super position, so our bit is in both states at the same time. Now let’s visualize this as alpha and let’s introduce another qubit, beta:</p>
<p>α=[01]β=[10]</p>
<p>Now, our qubit is 0 and a 1 at the same time. How do we represent the possibility of this? This can be represented in the following way:</p>
<p>|ψ⟩=|α⟩+|β⟩</p>
<p>So we have psi equal alpha plus beta. Remember that psi is the way to represent the wave function of a quantum system. All the posiblities on a quantum system. And does weird parentesis are called the bra-ket notation. This notation is used to represent a quantum state. Alpha and beta are complex numbers that obey:</p>
<p>|α|2+|β|2=1</p>
<p>At the begining, our ground qubit will always be zero. Why? normally quantum computers use a type of hardware qubit named a superconducting transmon qubit, which is made of superconducting materials like aluminum or nobium. For this to behave as our abstract notion of the qubit it needs to be cooled at super frosty temperatures. It takes some days to reach perfect equilibrium, and when is does our “ground qubit” will be zero.</p>
<p>Well, our qubit needs to be other things too, not only a 0. So how do we manage our qubit. There are certain ways of doing these. In normal computers you use logic gates, gates like AND, OR, NOT, XOR, NOR etc. In the quantum world we use quantum gates (we will see them with more detail on the next chapter). For now we are going to learn one. Typical gates are represented by a 2x2 unitary matrix.</p>
<p>We are going to talk about the bit-flip gate which is denoted by X.</p>
<p>|0⟩→X|0⟩=|1⟩</p>
<p>It simply flips the bit. Meaning, zero to one and vice versa. This has a matrix representation of it:</p>
<p>X=(0110)</p>
<p>This is it for now. On the next chapter there is gonna be hard math so I recommend getting familiar with linear algebra again.</p>
<h2><a name="getting-the-record-straight-13" class="anchor" href="https://0x00sec.org#getting-the-record-straight-13"></a>Getting the Record Straight</h2>
<p>Quantum computing has been in everyones mind. It has been in on news report, movies ans series. Since the idea of thinking in to things at the same time it’s difficult for everyone, quantum computing has been misunderstude and by this it was plagued by myths and speculations. I will try to get the record straight with this myths and facts.</p>
<h2><a name="h-1-quantum-computers-can-get-all-posibilities-at-once-14" class="anchor" href="https://0x00sec.org#h-1-quantum-computers-can-get-all-posibilities-at-once-14"></a>1. Quantum computers can get all posibilities at once</h2>
<p>This is a myth. There are several quantum algorithms out there, each one target different fields, but none of them check “all posibilities” at once. This myth comes from the RSA algorithm breaking. The Shor Algorithm doesnt go over all primes at the same time, this algorithm just finds a quantum way or trick for getting the prime.</p>
<h2><a name="h-2-d-wave-is-the-first-quantum-computer-15" class="anchor" href="https://0x00sec.org#h-2-d-wave-is-the-first-quantum-computer-15"></a>2. D-Wave is the first quantum computer</h2>
<p>Again, not at all. D-Wave is a quantum annealer. It’s great for optimizing solutions to problems by quickly searching over a space and finding a minimum (or “solution”) by running adiabatic quantum algorithms. However, quantum annealing will never be able to run Shor’s algorithm, which breaks common forms of modern cryptography, like RSA and ECC.</p>
<h2><a name="conclusion-16" class="anchor" href="https://0x00sec.org#conclusion-16"></a>Conclusion</h2>
<p>Thanks for reading and waiting for this little guide. If you have any question go ahead and talk to me, no problem. In the next chapter we will use a quantum computer in the cloud, trust me, it’s gonna be fun. This is it for now, have fun and never stop searching.</p>
<ul>
<li>Thirsty-Robot</li>
</ul>
<h2><a name="feedback-links-17" class="anchor" href="https://0x00sec.org#feedback-links-17"></a>Feedback Links</h2>
<p><a href="https://www.youtube.com/watch?v=MzRCDLre1b4">Some light quantum mechanics (with minutephysics)</a></p>

<p><a href="https://www.youtube.com/watch?v=MBnnXbOM5S4">The more general uncertainty principle, regarding Fourier transforms</a></p>

<p><a href="https://www.youtube.com/watch?v=mvmuCPvRoWQ">Euler's formula with introductory group theory</a></p>

          <p><a href="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106/1</link>
        <pubDate>Mon, 10 Dec 2018 20:43:26 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-10106-1</guid>
        <source url="https://0x00sec.org/t/introduction-to-quantum-computing-part-2/10106.rss">Introduction to Quantum Computing :: Part #2</source>
      </item>
  </channel>
</rss>
