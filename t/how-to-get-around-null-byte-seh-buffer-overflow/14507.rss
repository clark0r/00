<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How to get around null byte SEH buffer overflow</title>
    <link>https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507</link>
    <description>hello all .. 
why i prepare my self for OSCP ... i start to write SEH exploit for an FTP server but ASLR enabled on all .dll libraries , anyway i found some tut. how to get around this NULL address like this :

&gt; After some calculations I’ve came up with the following commands that are going to generate “003E3988” in EAX for us :
&gt; 
&gt; AND EAX,41414141 “ZERO OUT EAX”
&gt; AND EAX,3E3E3E3E “ZERO OUT EAX”
&gt; SUB EAX,4B4A687D
&gt; SUB EAX,6A3C0951
&gt; SUB EAX,4A3B5468 “=&amp;gt; EAX=003E3988”

can u please explain for me how me did it ?? what is the calc process !!</description>
    
    <lastBuildDate>Sat, 22 Jun 2019 13:16:39 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How to get around null byte SEH buffer overflow</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed 3 days after the last reply. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507/3</link>
        <pubDate>Tue, 25 Jun 2019 13:16:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14507-3</guid>
        <source url="https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507.rss">How to get around null byte SEH buffer overflow</source>
      </item>
      <item>
        <title>How to get around null byte SEH buffer overflow</title>
        <dc:creator><![CDATA[dtm]]></dc:creator>
        <description><![CDATA[
            <p>What’s the initial value of <code>eax</code>?</p>
          <p><a href="https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507/2</link>
        <pubDate>Sat, 22 Jun 2019 13:16:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14507-2</guid>
        <source url="https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507.rss">How to get around null byte SEH buffer overflow</source>
      </item>
      <item>
        <title>How to get around null byte SEH buffer overflow</title>
        <dc:creator><![CDATA[evilcode1]]></dc:creator>
        <description><![CDATA[
            <p>hello all …<br>
why i prepare my self for OSCP … i start to write SEH exploit for an FTP server but ASLR enabled on all .dll libraries , anyway i found some tut. how to get around this NULL address like this :</p>
<blockquote>
<p>After some calculations I’ve came up with the following commands that are going to generate “003E3988” in EAX for us :</p>
<p>AND EAX,41414141 “ZERO OUT EAX”<br>
AND EAX,3E3E3E3E “ZERO OUT EAX”<br>
SUB EAX,4B4A687D<br>
SUB EAX,6A3C0951<br>
SUB EAX,4A3B5468 “=&gt; EAX=003E3988”</p>
</blockquote>
<p>can u please explain for me how me did it ?? what is the calc process !!</p>
          <p><a href="https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507/1</link>
        <pubDate>Sat, 22 Jun 2019 09:13:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-14507-1</guid>
        <source url="https://0x00sec.org/t/how-to-get-around-null-byte-seh-buffer-overflow/14507.rss">How to get around null byte SEH buffer overflow</source>
      </item>
  </channel>
</rss>
