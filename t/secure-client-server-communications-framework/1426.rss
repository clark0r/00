<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
    <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426</link>
    <description>With the recent &quot;burst&quot; in cryptography posts on 0x00sec, I&#39;ve decided to start a, more or less, point of concept framework. Nothing in the program is going to be groundbreaking new security measures, but a collection of many of the best.

* The framework is going to be written in Python, and Cython. 
* Hosted on Github, I&#39;m taking all suggestions and criticism that I can to make it better
##Features
As with all my projects, they are open source. It will provide as much flexibility as possible.
&lt;br/&gt;
* Server-client model

* 2048 bit RSA encryption (can be lowered or raised based on user needs)
* The data is hashed before being sent, and the hash is encrypted with the sender&#39;s private key, proving that the message came from the person that we believed sent it.

* The hash, providing it was decrypted, will make sure the message wasn&#39;t corrupted along the way 
* Data is decrypted within the server to perform, if configured, to filter data or search for keywords.

&lt;hr/&gt;

It&#39;s been a while since I programmed and my skills are a bit rusty, so code checks are welcome.
&lt;a href=&quot;https://github.com/0x00secJinx/PAIN-framework&quot;&gt;Github for Project&lt;/a&gt; (Updated first, but updates will be moved to GitLab after thorough testing)
&lt;a href=&quot;https://git.0x00sec.org/0x00secJINX/PAIN-framework&quot;&gt;GitLab for Project&lt;/a&gt;
&lt;hr/&gt;
## Edit
Secure key exchange is absolutely something I am going to implement, but after the base form of the framework is complete. Any more suggestions of implementations are going into consideration.</description>
    
    <lastBuildDate>Thu, 05 Jan 2017 05:50:36 +0000</lastBuildDate>
    <category>Cryptology</category>
    <atom:link href="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[Cal0X]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/smartone">@SmartOne</a> As Joe_Schmoe told, it’s a <strong>way of exchanging</strong> keys and is popular for it’s application in AES. Where as Rijndael is the block cipher algorithm used in AES. Hope this cleared up my ambiguous statement I made above. My bad!</p>
<p>Regards,</p>
<p>Cal0X</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/11</link>
        <pubDate>Thu, 05 Jan 2017 05:50:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-11</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[SmartOne]]></dc:creator>
        <description><![CDATA[
            <p>I might be wrong, but did you mistake Diffie Hellman with Rijndael?</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/10</link>
        <pubDate>Wed, 04 Jan 2017 17:45:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-10</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[Joe_Schmoe]]></dc:creator>
        <description><![CDATA[
            <p>Diffie Hellman key exchange is a way to share an encryption key over an insecure channel. An example from wikipedia:</p>
<p>Alice and Bob agree on a prime modulus P = 23 and a base G = 5. Alice then chooses a secret integer, A = 6. Bob also chooses a secret number, B = 15.</p>
<p>Alice then computes C = G^A mod P, and Bob computes D = G^B mod P.</p>
<p>C and D are then exchanged over the insecure channel. They can now compute the shared secret: Alice computes S = D^A mod P, and Bob computes S = C^B mod P. S can now be used as a symmetric key, i.e. for AES.</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/9</link>
        <pubDate>Wed, 04 Jan 2017 17:07:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-9</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[Cal0X]]></dc:creator>
        <description><![CDATA[
            <p>As far as I understood from the script, it’s SHA256 hashing and RSA encryption. Diffie Hellman is the well known AES encryption.</p>
<p>Regards,</p>
<p>Cal0X</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/8</link>
        <pubDate>Wed, 04 Jan 2017 16:26:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-8</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>C++ is beginning to win my over. And I must say. Ruby is bae.</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/7</link>
        <pubDate>Wed, 04 Jan 2017 14:34:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-7</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Awesome! Are you using diffie hellman? <a class="mention" href="https://0x00sec.org/u/joe_schmoe">@Joe_Schmoe</a> is a python freak and loves Diffie xD</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/6</link>
        <pubDate>Wed, 04 Jan 2017 14:33:52 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-6</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[Cal0X]]></dc:creator>
        <description><![CDATA[
            <p>Nice project! I was meaning to do hashing and RSA encryption soon. Glad you posted.</p>
<p>Regards,</p>
<p>Cal0X</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/5</link>
        <pubDate>Wed, 04 Jan 2017 04:04:11 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-5</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[Joe_Schmoe]]></dc:creator>
        <description><![CDATA[
            <p>I’ll take a looksie, can’t resist reading best language</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/4</link>
        <pubDate>Tue, 03 Jan 2017 22:59:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-4</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[0x00_Jinx]]></dc:creator>
        <description><![CDATA[
            <p>Thanks <a class="mention" href="https://0x00sec.org/u/oaktree">@oaktree</a>. I’ll move it over there right away!</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/3</link>
        <pubDate>Tue, 03 Jan 2017 22:37:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-3</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Hi, maybe you should move the codebase over to <a href="https://git.0x00sec.org">https://git.0x00sec.org</a>? That’s where we host our community projects.</p>
<p>This looks like an interesting start!</p>
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/2</link>
        <pubDate>Tue, 03 Jan 2017 22:21:47 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-2</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
      <item>
        <title>&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</title>
        <dc:creator><![CDATA[0x00_Jinx]]></dc:creator>
        <description><![CDATA[
            <p>With the recent “burst” in cryptography posts on 0x00sec, I’ve decided to start a, more or less, point of concept framework. Nothing in the program is going to be groundbreaking new security measures, but a collection of many of the best.</p>
<ul>
<li>
<p>The framework is going to be written in Python, and Cython.</p>
</li>
<li>
<p>Hosted on Github, I’m taking all suggestions and criticism that I can to make it better<br>
#<span class="hashtag">#Features</span><br>
As with all my projects, they are open source. It will provide as much flexibility as possible.<br>
<br></p>
</li>
<li>
<p>Server-client model</p>
</li>
<li>
<p>2048 bit RSA encryption (can be lowered or raised based on user needs)</p>
</li>
<li>
<p>The data is hashed before being sent, and the hash is encrypted with the sender’s private key, proving that the message came from the person that we believed sent it.</p>
</li>
<li>
<p>The hash, providing it was decrypted, will make sure the message wasn’t corrupted along the way</p>
</li>
<li>
<p>Data is decrypted within the server to perform, if configured, to filter data or search for keywords.</p>
</li>
</ul>
<hr>
<p>It’s been a while since I programmed and my skills are a bit rusty, so code checks are welcome.<br>
<a href="https://github.com/0x00secJinx/PAIN-framework" rel="nofollow noopener">Github for Project</a> (Updated first, but updates will be moved to GitLab after thorough testing)<br>
<a href="https://git.0x00sec.org/0x00secJINX/PAIN-framework">GitLab for Project</a></p>
<hr>
## Edit
Secure key exchange is absolutely something I am going to implement, but after the base form of the framework is complete. Any more suggestions of implementations are going into consideration.
          <p><a href="https://0x00sec.org/t/secure-client-server-communications-framework/1426/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/secure-client-server-communications-framework/1426/1</link>
        <pubDate>Tue, 03 Jan 2017 22:16:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1426-1</guid>
        <source url="https://0x00sec.org/t/secure-client-server-communications-framework/1426.rss">&quot;Secure&quot; Client-Server Communications &quot;framework&quot;</source>
      </item>
  </channel>
</rss>
