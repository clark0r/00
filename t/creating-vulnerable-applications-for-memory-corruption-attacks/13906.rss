<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Creating vulnerable applications for memory corruption attacks</title>
    <link>https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906</link>
    <description>I am trying to create vulnerable applications to practice ``` stack overflow ``` , ``` SEH ``` vulnerabilities , but however I got this code. my main issue or struggling is how can I add SEH vulnerability to my code and pop a calculator? my original code it is vulnerable to stack overflow , but the the most action. it can be done is triggering `jackpot()` function , how can I fix it ?

```c
int game(int user_pick) {
	int rand_pick;
	if ((user_pick &gt; 0 &amp;&amp; user_pick &lt;= 32000)) {
		printf(&quot;Playing the game of chance..\n&quot;);
		rand_pick = (rand() % 32000) + 1;
		printf(&quot;You picked: %d\n&quot;, user_pick);
		printf(&quot;Random Value: %d\n&quot;, rand_pick);
		
		if (user_pick == rand_pick)
			jackpot();
		else
			printf(&quot;Sorry, you didn&#39;t win this time..\n&quot;);
	}
	else {
		printf(&quot;You must pick a value from 1 - 32000\n&quot;);
		printf(&quot;Use help or -h for help\n&quot;);
		return 0;
	}
}

int jackpot() {
	printf(&quot;You just won!\n&quot;);
	printf(&quot;Congratulations!\n&quot;);
	return 0;
}

void foo(char* input) {
	int(*function_ptr) (int user_pick);
	char buffer[20];
	srand(time(NULL));
	function_ptr = game;
	strcpy(buffer, input);
	if ((!strcmp(buffer, &quot;help&quot;)) || (!strcmp(buffer, &quot;-h&quot;))){
		printf(&quot;Help Text:\n\n&quot;);
		printf(&quot;This is a game of chance.\n&quot;);
		printf(&quot;To play, simply guess a number 1 through 32000\n&quot;);
		printf(&quot;If you guess the number I am thinking of you win.\n&quot;);
	}
	else
		function_ptr(atoi(buffer));
}

int main(int argc, char* argv[]) {
	if (argc &lt; 2) {
		printf(&quot;Usage: %s &lt;a number 1 - 32000&gt;\n&quot;, argv[0]);
		printf(&quot;use %s help or %s -h for more help.\n&quot;, argv[0], argv[0]);
		exit(0);
	}
	foo(argv[1]);
	return 0;
}

```</description>
    
    <lastBuildDate>Sun, 26 May 2019 06:06:59 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Creating vulnerable applications for memory corruption attacks</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906/4</link>
        <pubDate>Tue, 25 Jun 2019 03:40:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13906-4</guid>
        <source url="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906.rss">Creating vulnerable applications for memory corruption attacks</source>
      </item>
      <item>
        <title>Creating vulnerable applications for memory corruption attacks</title>
        <dc:creator><![CDATA[KR_Nails]]></dc:creator>
        <description><![CDATA[
            <p>I thought it was by the content about the tag category , sorry.</p>
          <p><a href="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906/3</link>
        <pubDate>Sun, 26 May 2019 06:06:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13906-3</guid>
        <source url="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906.rss">Creating vulnerable applications for memory corruption attacks</source>
      </item>
      <item>
        <title>Creating vulnerable applications for memory corruption attacks</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Hi <a class="mention" href="https://0x00sec.org/u/kr_nails">@KR_Nails</a>, please post questions in the “Questions” category in future. I’ve notice you’ve posted a lot of questions not in that category. For now we’ve recategorized them ourselves.</p>
<p>Thanks <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906/2</link>
        <pubDate>Sun, 26 May 2019 05:50:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13906-2</guid>
        <source url="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906.rss">Creating vulnerable applications for memory corruption attacks</source>
      </item>
      <item>
        <title>Creating vulnerable applications for memory corruption attacks</title>
        <dc:creator><![CDATA[KR_Nails]]></dc:creator>
        <description><![CDATA[
            <p>I am trying to create vulnerable applications to practice <code>stack overflow</code> , <code>SEH</code> vulnerabilities , but however I got this code. my main issue or struggling is how can I add SEH vulnerability to my code and pop a calculator? my original code it is vulnerable to stack overflow , but the the most action. it can be done is triggering <code>jackpot()</code> function , how can I fix it ?</p>
<pre><code class="lang-auto">int game(int user_pick) {
	int rand_pick;
	if ((user_pick &gt; 0 &amp;&amp; user_pick &lt;= 32000)) {
		printf("Playing the game of chance..\n");
		rand_pick = (rand() % 32000) + 1;
		printf("You picked: %d\n", user_pick);
		printf("Random Value: %d\n", rand_pick);
		
		if (user_pick == rand_pick)
			jackpot();
		else
			printf("Sorry, you didn't win this time..\n");
	}
	else {
		printf("You must pick a value from 1 - 32000\n");
		printf("Use help or -h for help\n");
		return 0;
	}
}

int jackpot() {
	printf("You just won!\n");
	printf("Congratulations!\n");
	return 0;
}

void foo(char* input) {
	int(*function_ptr) (int user_pick);
	char buffer[20];
	srand(time(NULL));
	function_ptr = game;
	strcpy(buffer, input);
	if ((!strcmp(buffer, "help")) || (!strcmp(buffer, "-h"))){
		printf("Help Text:\n\n");
		printf("This is a game of chance.\n");
		printf("To play, simply guess a number 1 through 32000\n");
		printf("If you guess the number I am thinking of you win.\n");
	}
	else
		function_ptr(atoi(buffer));
}

int main(int argc, char* argv[]) {
	if (argc &lt; 2) {
		printf("Usage: %s &lt;a number 1 - 32000&gt;\n", argv[0]);
		printf("use %s help or %s -h for more help.\n", argv[0], argv[0]);
		exit(0);
	}
	foo(argv[1]);
	return 0;
}

</code></pre>
          <p><a href="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906/1</link>
        <pubDate>Sun, 26 May 2019 03:40:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-13906-1</guid>
        <source url="https://0x00sec.org/t/creating-vulnerable-applications-for-memory-corruption-attacks/13906.rss">Creating vulnerable applications for memory corruption attacks</source>
      </item>
  </channel>
</rss>
