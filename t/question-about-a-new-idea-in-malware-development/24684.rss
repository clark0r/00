<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>QUESTION about a new idea in malware development</title>
    <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684</link>
    <description>hiiii, this is a question in the field of malware development, i want to ask about a possibility of a technique i thought of, i want to know if it is possible or not, so if we got a loader.exe and a payload.dll, in which the payload.dll  contains the shellcode we want to execute, and the loader.exe loads this .dll file into the memory...

is there a way to place the loader&#39;s code inside another legit .dll file inside windows,
for example to inject the following line &quot;PayloadDLL = LoadLibrary(L&quot;Payload.dll&quot;);&quot;
that is takin from the loader.exe and place it inside a function like CreateProcess();
so that when CreateProcess() is called, the following line will be called too &quot;PayloadDLL = LoadLibrary(L&quot;Payload.dll&quot;);&quot;..

the idea here is to load my payload.dll from another .dll file, it can be something different from User32.dll or Kernel32.dll or whatever.

i read an article about a malware that infected a software engineering company, the malware waited for a specific function to be launched and then started executing its code, everyday it did the same...

i dont know that much about api hooking but i can say that i know the basics, the idea may be the same,idk, but we are not unhooking our code at the end.

does this idea about api functions injection work? and thank you !!!</description>
    
    <lastBuildDate>Mon, 01 Feb 2021 14:28:03 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/9</link>
        <pubDate>Mon, 24 May 2021 21:36:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-9</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[alexa]]></dc:creator>
        <description><![CDATA[
            <p>i didnt get it what do you want to do ??</p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/8</link>
        <pubDate>Mon, 01 Feb 2021 14:28:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-8</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[qyq]]></dc:creator>
        <description><![CDATA[
            <p>looks like you understand it better. can i gave a project</p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/7</link>
        <pubDate>Sat, 30 Jan 2021 18:02:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-7</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[alexa]]></dc:creator>
        <description><![CDATA[
            <p>thank you man, i really appreciate your help, but i think i just given up, the big idea is so complicated, and will need more people.<br>
i am building a all in one malware, it is a very nice idea and so complicated one,</p>
<p>till now i built code to detect virtual machines, sandboxes, and debuggers, i built a custom aes 256 encryption / decryption algorithm for the shellcode. and a super nice way to inject it, but i still need to bypass the dynamic analysis, the run time check… so i went to use api hooking technique, same idea as here <a href="https://labs.f-secure.com/blog/bypassing-windows-defender-runtime-scanning/" class="inline-onebox" rel="noopener nofollow ugc">Bypassing Windows Defender Runtime Scanning</a> but ill use create a process that will hook createprocess (from the av) and then trigger CREATE_SUSPENDED to suspend it. (if i was late to detect createprocess launched by windows defender i will create a remote thread from the last process i created so that i’ll make sure windows defender called createprocess) and then i am going to hook ntcreatefile or some api related to files and ill launch notpad.exe</p>
<p>the reason why is that i want to place my shellcode in notepad.exe, this will get me persistence, in which every time notepad is launched my shellcode is luanched back again.</p>
<p>now the only part that i need help with is with api hooking cz i am not that good using windows api functions, and i searched a lot , for months , and yet no result, but everytime a new idea keeps flushing into my mind and that gives me hope but again i fk up again.</p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/6</link>
        <pubDate>Sat, 30 Jan 2021 05:11:14 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-6</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[blkbeak]]></dc:creator>
        <description><![CDATA[
            <p>So 1.)  Yes, absolutely. It’s even borderline trivial to do so IMO.<br>
If you insist on carrying this out via hooking, I’d advise you at least do so via IAT on PE files. IAT/EAT methods still remain undetected long past their heyday.</p>
<p>Now, I’d advise you avoid API all together. Try VMT hooking or pointer redirection.<br>
There’s also stack hooking, heap hooking, context hooking, forced exception hooking, and more if you’re explicit on hooking / using messagebox. I’d advise you look into DLL replace/rename leveraged in conjunction with DLL proxying, that’s always a fav for max stealth.</p>
<p>Then you could backdoor PE files via shellcode, module stomping for shell injection, inject .net to unmanaged process, etc.</p>
<p>If learning DLLs or wanting to leverage THAT ONE: look into search order hijacking, phantom DLL hijack, rel path hijack, and WinSxS  replacement.</p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/5</link>
        <pubDate>Sat, 30 Jan 2021 03:29:53 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-5</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[lfontesm]]></dc:creator>
        <description><![CDATA[
            <p>ahh gotcha. Sorry for the bad answer</p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/4</link>
        <pubDate>Thu, 28 Jan 2021 12:40:22 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-4</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[alexa]]></dc:creator>
        <description><![CDATA[
            <p>much respect man, although i am familiar with this tech, what i want to achieve is persistence, it is like placing a global hook and not unhooking it so that every time this hooked function is called my code is activated, i am going to try this tech on “messagebox”  function and see what will happen, ill post the result <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> .</p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/3</link>
        <pubDate>Sun, 24 Jan 2021 05:21:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-3</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[lfontesm]]></dc:creator>
        <description><![CDATA[
            <p>hmm sounds like you are looking for something like <a href="https://www.researchgate.net/publication/319970632_A_Survey_on_Function_and_System_Call_Hooking_Approaches" rel="noopener nofollow ugc">system call hooking</a>, try taking a look at it and see if that would help.</p>
<p>The above reading is big so <a href="https://www.drdobbs.com/windows/windows-nt-system-call-hooking/184410109" rel="noopener nofollow ugc">theres also this one</a></p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/2</link>
        <pubDate>Sat, 23 Jan 2021 15:09:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-2</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
      <item>
        <title>QUESTION about a new idea in malware development</title>
        <dc:creator><![CDATA[alexa]]></dc:creator>
        <description><![CDATA[
            <p>hiiii, this is a question in the field of malware development, i want to ask about a possibility of a technique i thought of, i want to know if it is possible or not, so if we got a loader.exe and a payload.dll, in which the payload.dll  contains the shellcode we want to execute, and the loader.exe loads this .dll file into the memory…</p>
<p>is there a way to place the loader’s code inside another legit .dll file inside windows,<br>
for example to inject the following line “PayloadDLL = LoadLibrary(L"Payload.dll”);"<br>
that is takin from the loader.exe and place it inside a function like CreateProcess();<br>
so that when CreateProcess() is called, the following line will be called too “PayloadDLL = LoadLibrary(L"Payload.dll”);"…</p>
<p>the idea here is to load my payload.dll from another .dll file, it can be something different from User32.dll or Kernel32.dll or whatever.</p>
<p>i read an article about a malware that infected a software engineering company, the malware waited for a specific function to be launched and then started executing its code, everyday it did the same…</p>
<p>i dont know that much about api hooking but i can say that i know the basics, the idea may be the same,idk, but we are not unhooking our code at the end.</p>
<p>does this idea about api functions injection work? and thank you !!!</p>
          <p><a href="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684/1</link>
        <pubDate>Sat, 23 Jan 2021 05:36:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24684-1</guid>
        <source url="https://0x00sec.org/t/question-about-a-new-idea-in-malware-development/24684.rss">QUESTION about a new idea in malware development</source>
      </item>
  </channel>
</rss>
