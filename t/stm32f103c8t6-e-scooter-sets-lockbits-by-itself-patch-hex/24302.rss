<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>STM32F103C8T6 E Scooter sets Lockbits by itself, patch .hex</title>
    <link>https://0x00sec.org/t/stm32f103c8t6-e-scooter-sets-lockbits-by-itself-patch-hex/24302</link>
    <description>Hello folks, 

I am actually try to reverse a Ninebot G30, but i am not very lucky with it, and theres some sort of strange behavior the ESC of the scooter shows: The firmware sets the read out protection by itself. I tried to disable that to set command to jump over the instruction, but this does not work. I have readed that:https://lujji.github.io/blog/reverse-engineering-stlink-firmware-part2/

And found the adresses for the lockbits in my firmware, but every attempt to change the program so it will jump over the instruction does not work. Is there a way to patch a binary directly in IDA?

Here I have a screenshot from IDA, I think the rad framed function part sets the lockbits.
![STM32F103 Lockbit.|690x460](upload://8UFStFoTzEqVeOO2JaDlA7OcGTe.png)</description>
    
    <lastBuildDate>Sun, 20 Dec 2020 21:27:47 +0000</lastBuildDate>
    <category>Uncategorized</category>
    <atom:link href="https://0x00sec.org/t/stm32f103c8t6-e-scooter-sets-lockbits-by-itself-patch-hex/24302.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>STM32F103C8T6 E Scooter sets Lockbits by itself, patch .hex</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/stm32f103c8t6-e-scooter-sets-lockbits-by-itself-patch-hex/24302/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/stm32f103c8t6-e-scooter-sets-lockbits-by-itself-patch-hex/24302/2</link>
        <pubDate>Wed, 21 Apr 2021 13:05:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24302-2</guid>
        <source url="https://0x00sec.org/t/stm32f103c8t6-e-scooter-sets-lockbits-by-itself-patch-hex/24302.rss">STM32F103C8T6 E Scooter sets Lockbits by itself, patch .hex</source>
      </item>
      <item>
        <title>STM32F103C8T6 E Scooter sets Lockbits by itself, patch .hex</title>
        <dc:creator><![CDATA[Bastler]]></dc:creator>
        <description><![CDATA[
            <p>Hello folks,</p>
<p>I am actually try to reverse a Ninebot G30, but i am not very lucky with it, and theres some sort of strange behavior the ESC of the scooter shows: The firmware sets the read out protection by itself. I tried to disable that to set command to jump over the instruction, but this does not work. I have readed that:<a href="https://lujji.github.io/blog/reverse-engineering-stlink-firmware-part2/" rel="noopener nofollow ugc">https://lujji.github.io/blog/reverse-engineering-stlink-firmware-part2/</a></p>
<p>And found the adresses for the lockbits in my firmware, but every attempt to change the program so it will jump over the instruction does not work. Is there a way to patch a binary directly in IDA?</p>
<p>Here I have a screenshot from IDA, I think the rad framed function part sets the lockbits.<br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/3/e/3e797b9340415a7fd5c38e0783c957a69c90ab68.png" data-download-href="/uploads/short-url/8UFStFoTzEqVeOO2JaDlA7OcGTe.png?dl=1" title="STM32F103 Lockbit." rel="noopener nofollow ugc"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/3/e/3e797b9340415a7fd5c38e0783c957a69c90ab68_2_690x460.png" alt="STM32F103 Lockbit." data-base62-sha1="8UFStFoTzEqVeOO2JaDlA7OcGTe" width="690" height="460" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/3/e/3e797b9340415a7fd5c38e0783c957a69c90ab68_2_690x460.png, https://0x00sec.s3.amazonaws.com/optimized/3X/3/e/3e797b9340415a7fd5c38e0783c957a69c90ab68_2_1035x690.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/3/e/3e797b9340415a7fd5c38e0783c957a69c90ab68.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/3/e/3e797b9340415a7fd5c38e0783c957a69c90ab68_2_10x10.png"></a></div><p></p>
          <p><a href="https://0x00sec.org/t/stm32f103c8t6-e-scooter-sets-lockbits-by-itself-patch-hex/24302/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/stm32f103c8t6-e-scooter-sets-lockbits-by-itself-patch-hex/24302/1</link>
        <pubDate>Sun, 20 Dec 2020 21:05:08 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-24302-1</guid>
        <source url="https://0x00sec.org/t/stm32f103c8t6-e-scooter-sets-lockbits-by-itself-patch-hex/24302.rss">STM32F103C8T6 E Scooter sets Lockbits by itself, patch .hex</source>
      </item>
  </channel>
</rss>
