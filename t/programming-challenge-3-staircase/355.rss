<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Programming Challenge #3: Staircase</title>
    <link>https://0x00sec.org/t/programming-challenge-3-staircase/355</link>
    <description>**The Task**: Implement a function that will
print out a staircase of desired length.

**Example**: If I call some function `print_staircase(6)`, I should get something like this:

         #
        ##
       ###
      ####
     #####
    ######

----
#### Tips:
* The language you use is your choice.
* Think about spacing.

----
_This activity is taken from Harvard&#39;s CS50 pset1_.</description>
    
    <lastBuildDate>Tue, 17 May 2016 20:38:27 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/9</link>
        <pubDate>Sun, 21 Jan 2018 00:31:22 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-9</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Yeah that C program is definitely an abuse of <code>for</code>s.</p>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/8</link>
        <pubDate>Tue, 17 May 2016 20:38:27 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-8</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>May have bugs, but they seem to work.</p>
<p>A Perl version</p>
<pre><code class="lang-auto">#!/usr/bin/perl

sub print_staircase
{
  for ($i = 0; $i &lt; $_[0] + 1; $i++)
  {
    printf "%*s", $_[0] + 1, ("#" x $i) . "\n";
  }
}
print_staircase(6);
</code></pre>
<p>As a one-liner function</p>
<pre><code class="lang-auto">sub print_staircase{for($i=0;$i&lt;$_[0]+1;$i++){printf "%*s",$_[0]+1,("#"x$i)."\n";}}
</code></pre>
<p>A C version abusing <code>for</code> syntax:</p>
<pre><code class="lang-auto">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

int print_staircase (int n)
{
  int  i;
  char *p = malloc (n);
  memset ((void*)p, ' ', n);

  for (i = 0, p[n -1] = 0, p[n - i - 1] = '#'; 
       i &lt; n; 
       p[n - i - 1] = '#', i++, (printf ("%s\n", p)));


}

int main (void)
{
  print_staircase (6);
}

</code></pre>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/7</link>
        <pubDate>Tue, 17 May 2016 18:40:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-7</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[EnergyWolf]]></dc:creator>
        <description><![CDATA[
            <p>Ok, I bit. I think I’ve taken care of that.</p>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/6</link>
        <pubDate>Tue, 17 May 2016 13:42:31 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-6</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[_py]]></dc:creator>
        <description><![CDATA[
            <p>Buffer Overflow incoming</p>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/5</link>
        <pubDate>Tue, 17 May 2016 08:09:58 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-5</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[EnergyWolf]]></dc:creator>
        <description><![CDATA[
            <p>Attempt at a python one liner… hard not to use str.join() like Joe_Schmoe, but different innards</p>
<pre><code class="lang-python">
def stairs(x): print '\n'.join((' '*(x-i)+'#'*i for i in range(1,x+1)))
</code></pre>
<p>Here’s a go in C:</p>
<pre><code class="lang-auto">#include &lt;stdio.h&gt;

void stairs(int x)
{
    int i, j, k;
    for (i = 1; i &lt; x+1; i++)
    {
        j = x - i;
        k = i;
        
        while(j &gt; 0)
        {
            printf(" ");
            j--;
        }
        
        while (k &gt; 0)
        {
            printf("#");
            k--;
        }
        
        printf("\n");
    }
}

int main(void)
{
    int x = 0;
    while ((x &lt; 1) || (x &gt; 100))
    {   // avoiding that buffer overflow!
        printf("\nEnter an integer(1-100): ");
        scanf("%d", &amp;x);
    }
    stairs(x);
    return 0;
}
</code></pre>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/4</link>
        <pubDate>Tue, 17 May 2016 00:51:35 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-4</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Brevity ftw! You really are a god xD</p>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/3</link>
        <pubDate>Sat, 14 May 2016 18:29:38 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-3</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[Joe_Schmoe]]></dc:creator>
        <description><![CDATA[
            <pre><code class="lang-python">def print_staircase(length): print "\n".join([str("#"*i).rjust(length) for i in range(length+1)])
</code></pre>
<p>E: Now actually a function.</p>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/2</link>
        <pubDate>Sat, 14 May 2016 16:17:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-2</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
      <item>
        <title>Programming Challenge #3: Staircase</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p><strong>The Task</strong>: Implement a function that will<br>
print out a staircase of desired length.</p>
<p><strong>Example</strong>: If I call some function <code>print_staircase(6)</code>, I should get something like this:</p>
<pre><code>     #
    ##
   ###
  ####
 #####
######
</code></pre>
<hr>
<h4>Tips:</h4>
<ul>
<li>The language you use is your choice.</li>
<li>Think about spacing.</li>
</ul>
<hr>
<p><em>This activity is taken from Harvard’s CS50 pset1</em>.</p>
          <p><a href="https://0x00sec.org/t/programming-challenge-3-staircase/355/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/programming-challenge-3-staircase/355/1</link>
        <pubDate>Sat, 14 May 2016 15:48:09 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-355-1</guid>
        <source url="https://0x00sec.org/t/programming-challenge-3-staircase/355.rss">Programming Challenge #3: Staircase</source>
      </item>
  </channel>
</rss>
