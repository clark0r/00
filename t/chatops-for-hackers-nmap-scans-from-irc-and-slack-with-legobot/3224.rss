<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Chatops for hackers: Nmap scans from IRC and Slack with Legobot</title>
    <link>https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224</link>
    <description># Running Nmap from Chat with Legobot 
_Chatops for hackers!_

For those of you who saw my shenanigans in IRC earlier, this is the promised post on what I was doing. For those who missed it or don&#39;t hang out in IRC, shame! This is an announcement of a new package I released today, description of how to use it, and solicitation for feedback. We&#39;re going to talk about running Nmap from chat mediums such as Slack and IRC.

#### Required Skills
Understanding of nmap and python will be helpful for this, but not essential.

#### Disclaimer
If you leave this bot in an IRC or Slack with other people, whoever sends it a scan command will launch a scan from your IP. You don&#39;t want that.


-----
# Introduction
[Nmap](https://nmap.org/) is a favorite tool among securitry professionals and system administrators alike, providing a powerful and comparatively simple* tool for testing network connections, listening services, and more. 

Chatops, as defined quite well by Atlassian:
&gt; ChatOps is a collaboration model that connects people, tools, process, and automation into a transparent workflow

For the hacker unacquainted wth ChatOps and what that might mean, one of the major principles of ChatOps involves consolidating flow of information to a single location. You may have many sources of information (we&#39;ll call them signal), and going out to the various sources of the signals  to gather information for analysis can result in a lot of work. 

_*Try writing your own port scanner that does what Nmap does._

Now imagine yourself in a team context, where you need to generate the information, collect it, share it, and then process it with everyone, you can see the need for what we call a &quot;shared context&quot; for information. Imagine Alice and Bob are on a red team. Alice runs an nmap scan and Bob runs some work in SQLmap. Those results should automatically come back to chat so that both Alice and Bob can see all the information generated.

#### But why?
Applying ChatOps to red team and blue team operations means invoking security tools from chat, consolidating information, reducing turnaround time for iterating to the next step in attack or analysis, improving analysis by improving access to information, and ultimately looking really freaking cool by pwning a box from a couple commands on irc

# The Framework

Now that I&#39;ve hopefully sold you on that one area of ChatOps (there are many more good reasons to adopt it), let&#39;s look at the framework we&#39;ll use for this.

A couple of years ago, I started [Legobot](https://github.com/bbriggs/Legobot) with a friend. Over time, it has grown into my own favorite tool for integrating any task I want into chat and a generally useful ChatOps framework. I&#39;ve used for tracking pull requests from FOSS communities, keeping people up to date on version numbers, publishing Gists on Github, querying Kubernetes for deployment status of applications at work, keeping track of karma points in a community, and managing queue rotations for on-call engineers. I love it. I won&#39;t dig too deep into how Legobot works here, though. This post is about an nmap plugin I wrote for it.

# The plugin (Lego)
What better name for a plugin to Legobot than a Lego? Our lego here is a wrapper for [python-nmap](http://xael.org/pages/python-nmap-en.html). Python-nmap is crazy easy to use, Python 3 compatible, and results are easily parsable. In other words, a perfect candidate.

https://github.com/bbriggs/legos.nmap

In order to make it easy to add or modify scan behavior for the intrepid hacker, I have used what I call a &quot;dispatcher&quot; pattern that allows the programmer to drop in a new `argv[1]` parameter to be executed without much trouble.

```python
    def _dispatcher(self, message):
        command = message[&#39;text&#39;].split()[1]
        commands = {&#39;simple&#39;: self._basic_scan, &#39;os&#39;: self._os_detect}
        if command in commands:
            commands[command](message)
            return True
        else:
            self.reply(message, &#39;Command not supported. RTFM.&#39;,
                       self._handle_opts(message))
            return False
```

After extracting the command from the message, we compare that with the commands in the `commands` dict. The value for each of those keys is the corresponding method that handles whatever command we&#39;re asking for. Therefore, adding a new command is a matter of adding a new key and value to the dictionary in `self._dispatcher()` and adding the corresponding method to handle it.

# Usage

Now to see it in action. 

OS detection (bot must be running as root):
```
“22:34”     fraq ╡ !nmap os 127.0.0.1
“22:34” mmp-test ╡ Host: 127.0.0.1 | tcp [22, 25, 445, 587, 6969, 8081, 8443] |OS best guess (100% confidence): Apple macOS 10.12 (Sierra) (Darwin 16.0.0) |
```

Simple scans:
```
“21:25”            fraq ╡ !nmap 127.0.0.1 22-1024
“21:26”        mmp-test ╡ Host: localhost | tcp  [22, 25, 445, 587] |
```

All host arguments can accept ranges in the same way the nmap CLI can. 
Over the next little bit I will continue to improve this. I have successfully tested running built-in nmap scripts as well. I also plan to allow for raw nmap queries 

## Conclusion

While on the surface, this paper is about using nmap from Legobot, which is cool but simple, it&#39;s really about introducing security type people to the sort of possibilities offered by chat as a medium for getting crap done and not just talking.

I&#39;ve long championed the sharing of techniques and principles between Ops and Infosec. In this instance, I feel that for group engagements or blue-team work, ChatOps can be a powerful method for working faster and more accurately. 

Launching commands and receiving input in chat lets everyone collaborate and participate in real-time. Additionally, wrapping commands with shorthand like this provides less opportunity for error by simplfying the invocation. Finally, by abstracting the data you&#39;re after from the tool you&#39;re using (not a technique we did here), you can change magic in the middle without users having to change workflows. Example: &#39;who is google.com` could use nmap, dig, or nslookup on the backend. As long as information is presented back to the user with a consistent format, it doesn&#39;t matter. 

I hope you enjoyed this and that it gets you thinking about all the cool things you can do with bots (and hopefully use Legobot to do them!)</description>
    
    <lastBuildDate>Thu, 17 Aug 2017 01:49:28 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Chatops for hackers: Nmap scans from IRC and Slack with Legobot</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>WE ARE A GO FOR LAUNCH</p>
<aside class="onebox githubissue">
  <header class="source">
      <a href="https://github.com/Legobot/Legobot/issues/158" target="_blank" rel="noopener nofollow ugc">github.com/Legobot/Legobot</a>
  </header>
  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Issue">
	  <svg width="60" height="60" class="github-icon" viewBox="0 0 14 16" aria-hidden="true"><path d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/Legobot/Legobot/issues/158" target="_blank" rel="noopener nofollow ugc">Add support for high-level access of shells</a>
    </h4>

    <div class="github-info">
      <div class="date">
        opened <span class="discourse-local-date" data-format="ll" data-date="2017-08-16" data-time="21:27:49" data-timezone="UTC">09:27PM - 16 Aug 17 UTC</span>
      </div>

        <div class="date">
          closed <span class="discourse-local-date" data-format="ll" data-date="2020-03-17" data-time="23:07:37" data-timezone="UTC">11:07PM - 17 Mar 20 UTC</span>
        </div>

      <div class="user">
        <a href="https://github.com/pry0cc" target="_blank" rel="noopener nofollow ugc">
          <img alt="pry0cc" src="https://0x00sec.s3.amazonaws.com/original/2X/8/8c53d39cff05a290a56f68adaedff917d18760ac.png" class="onebox-avatar-inline" width="20" height="20">
          pry0cc
        </a>
      </div>
    </div>
  </div>
</div>

<div class="github-row">
  <p class="github-content">When a shell is initiated, we should be able to access the shell in some sort of terminal multiplexer via SSH,...</p>
</div>

<div class="labels">
    <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">Needs diagnosis</span>
    <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">OffSec toolkit</span>
    <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">Plugin Request</span>
    <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">Priority: Normal</span>
    <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">help wanted</span>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/7</link>
        <pubDate>Thu, 17 Aug 2017 01:49:28 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3224-7</guid>
        <source url="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224.rss">Chatops for hackers: Nmap scans from IRC and Slack with Legobot</source>
      </item>
      <item>
        <title>Chatops for hackers: Nmap scans from IRC and Slack with Legobot</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>After some thinking. Chatops for hackers hasn’t been done before. It’s a new concept. We should pioneer this concept, and make a kickass bot for hacking.</p>
<p>Think everything we do on a CTF, in a chat bot automated. Are you in?</p>
          <p><a href="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/6</link>
        <pubDate>Wed, 16 Aug 2017 10:32:47 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3224-6</guid>
        <source url="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224.rss">Chatops for hackers: Nmap scans from IRC and Slack with Legobot</source>
      </item>
      <item>
        <title>Chatops for hackers: Nmap scans from IRC and Slack with Legobot</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>Update: We’ll be talking a little about devops for hackers tonight on the show. Makes sure to tune in and download the podcast!</p>
          <p><a href="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/5</link>
        <pubDate>Fri, 11 Aug 2017 13:54:52 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3224-5</guid>
        <source url="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224.rss">Chatops for hackers: Nmap scans from IRC and Slack with Legobot</source>
      </item>
      <item>
        <title>Chatops for hackers: Nmap scans from IRC and Slack with Legobot</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>How could we not do that?</p>
          <p><a href="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/4</link>
        <pubDate>Mon, 07 Aug 2017 18:42:06 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3224-4</guid>
        <source url="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224.rss">Chatops for hackers: Nmap scans from IRC and Slack with Legobot</source>
      </item>
      <item>
        <title>Chatops for hackers: Nmap scans from IRC and Slack with Legobot</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Love this. Want me to weaponize pine too and then we can have an IRC bot arms race? (Only for giggles, obviously)</p>
          <p><a href="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/3</link>
        <pubDate>Mon, 07 Aug 2017 18:41:37 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3224-3</guid>
        <source url="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224.rss">Chatops for hackers: Nmap scans from IRC and Slack with Legobot</source>
      </item>
      <item>
        <title>Chatops for hackers: Nmap scans from IRC and Slack with Legobot</title>
        <dc:creator><![CDATA[ohxeighty]]></dc:creator>
        <description><![CDATA[
            <p>ahhh abstraction, I’m getting assignment flashbacks</p>
          <p><a href="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/2</link>
        <pubDate>Mon, 07 Aug 2017 04:13:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3224-2</guid>
        <source url="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224.rss">Chatops for hackers: Nmap scans from IRC and Slack with Legobot</source>
      </item>
      <item>
        <title>Chatops for hackers: Nmap scans from IRC and Slack with Legobot</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <h1>Running Nmap from Chat with Legobot</h1>
<p><em>Chatops for hackers!</em></p>
<p>For those of you who saw my shenanigans in IRC earlier, this is the promised post on what I was doing. For those who missed it or don’t hang out in IRC, shame! This is an announcement of a new package I released today, description of how to use it, and solicitation for feedback. We’re going to talk about running Nmap from chat mediums such as Slack and IRC.</p>
<h4>Required Skills</h4>
<p>Understanding of nmap and python will be helpful for this, but not essential.</p>
<h4>Disclaimer</h4>
<p>If you leave this bot in an IRC or Slack with other people, whoever sends it a scan command will launch a scan from your IP. You don’t want that.</p>
<hr>
<h1>Introduction</h1>
<p><a href="https://nmap.org/" rel="noopener nofollow ugc">Nmap</a> is a favorite tool among securitry professionals and system administrators alike, providing a powerful and comparatively simple* tool for testing network connections, listening services, and more.</p>
<p>Chatops, as defined quite well by Atlassian:</p>
<blockquote>
<p>ChatOps is a collaboration model that connects people, tools, process, and automation into a transparent workflow</p>
</blockquote>
<p>For the hacker unacquainted wth ChatOps and what that might mean, one of the major principles of ChatOps involves consolidating flow of information to a single location. You may have many sources of information (we’ll call them signal), and going out to the various sources of the signals  to gather information for analysis can result in a lot of work.</p>
<p><em>*Try writing your own port scanner that does what Nmap does.</em></p>
<p>Now imagine yourself in a team context, where you need to generate the information, collect it, share it, and then process it with everyone, you can see the need for what we call a “shared context” for information. Imagine Alice and Bob are on a red team. Alice runs an nmap scan and Bob runs some work in SQLmap. Those results should automatically come back to chat so that both Alice and Bob can see all the information generated.</p>
<h4>But why?</h4>
<p>Applying ChatOps to red team and blue team operations means invoking security tools from chat, consolidating information, reducing turnaround time for iterating to the next step in attack or analysis, improving analysis by improving access to information, and ultimately looking really freaking cool by pwning a box from a couple commands on irc</p>
<h1>The Framework</h1>
<p>Now that I’ve hopefully sold you on that one area of ChatOps (there are many more good reasons to adopt it), let’s look at the framework we’ll use for this.</p>
<p>A couple of years ago, I started <a href="https://github.com/bbriggs/Legobot" rel="noopener nofollow ugc">Legobot</a> with a friend. Over time, it has grown into my own favorite tool for integrating any task I want into chat and a generally useful ChatOps framework. I’ve used for tracking pull requests from FOSS communities, keeping people up to date on version numbers, publishing Gists on Github, querying Kubernetes for deployment status of applications at work, keeping track of karma points in a community, and managing queue rotations for on-call engineers. I love it. I won’t dig too deep into how Legobot works here, though. This post is about an nmap plugin I wrote for it.</p>
<h1>The plugin (Lego)</h1>
<p>What better name for a plugin to Legobot than a Lego? Our lego here is a wrapper for <a href="http://xael.org/pages/python-nmap-en.html" rel="noopener nofollow ugc">python-nmap</a>. Python-nmap is crazy easy to use, Python 3 compatible, and results are easily parsable. In other words, a perfect candidate.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">
      <a href="https://github.com/Legobot/legos.nmap" target="_blank" rel="noopener nofollow ugc">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://0x00sec.s3.amazonaws.com/original/2X/9/9649c999d17db2e14c628ab8f6d6723c2cf57ccf.png" class="thumbnail onebox-avatar" width="420" height="420">

<h3><a href="https://github.com/Legobot/legos.nmap" target="_blank" rel="noopener nofollow ugc">Legobot/legos.nmap</a></h3>

<p>Run nmap scans right from legobot. Contribute to Legobot/legos.nmap development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>In order to make it easy to add or modify scan behavior for the intrepid hacker, I have used what I call a “dispatcher” pattern that allows the programmer to drop in a new <code>argv[1]</code> parameter to be executed without much trouble.</p>
<pre><code class="lang-python">    def _dispatcher(self, message):
        command = message['text'].split()[1]
        commands = {'simple': self._basic_scan, 'os': self._os_detect}
        if command in commands:
            commands[command](message)
            return True
        else:
            self.reply(message, 'Command not supported. RTFM.',
                       self._handle_opts(message))
            return False
</code></pre>
<p>After extracting the command from the message, we compare that with the commands in the <code>commands</code> dict. The value for each of those keys is the corresponding method that handles whatever command we’re asking for. Therefore, adding a new command is a matter of adding a new key and value to the dictionary in <code>self._dispatcher()</code> and adding the corresponding method to handle it.</p>
<h1>Usage</h1>
<p>Now to see it in action.</p>
<p>OS detection (bot must be running as root):</p>
<pre><code class="lang-auto">“22:34”     fraq ╡ !nmap os 127.0.0.1
“22:34” mmp-test ╡ Host: 127.0.0.1 | tcp [22, 25, 445, 587, 6969, 8081, 8443] |OS best guess (100% confidence): Apple macOS 10.12 (Sierra) (Darwin 16.0.0) |
</code></pre>
<p>Simple scans:</p>
<pre><code class="lang-auto">“21:25”            fraq ╡ !nmap 127.0.0.1 22-1024
“21:26”        mmp-test ╡ Host: localhost | tcp  [22, 25, 445, 587] |
</code></pre>
<p>All host arguments can accept ranges in the same way the nmap CLI can.<br>
Over the next little bit I will continue to improve this. I have successfully tested running built-in nmap scripts as well. I also plan to allow for raw nmap queries</p>
<h2>Conclusion</h2>
<p>While on the surface, this paper is about using nmap from Legobot, which is cool but simple, it’s really about introducing security type people to the sort of possibilities offered by chat as a medium for getting crap done and not just talking.</p>
<p>I’ve long championed the sharing of techniques and principles between Ops and Infosec. In this instance, I feel that for group engagements or blue-team work, ChatOps can be a powerful method for working faster and more accurately.</p>
<p>Launching commands and receiving input in chat lets everyone collaborate and participate in real-time. Additionally, wrapping commands with shorthand like this provides less opportunity for error by simplfying the invocation. Finally, by abstracting the data you’re after from the tool you’re using (not a technique we did here), you can change magic in the middle without users having to change workflows. Example: 'who is google.com` could use nmap, dig, or nslookup on the backend. As long as information is presented back to the user with a consistent format, it doesn’t matter.</p>
<p>I hope you enjoyed this and that it gets you thinking about all the cool things you can do with bots (and hopefully use Legobot to do them!)</p>
          <p><a href="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224/1</link>
        <pubDate>Mon, 07 Aug 2017 03:32:14 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3224-1</guid>
        <source url="https://0x00sec.org/t/chatops-for-hackers-nmap-scans-from-irc-and-slack-with-legobot/3224.rss">Chatops for hackers: Nmap scans from IRC and Slack with Legobot</source>
      </item>
  </channel>
</rss>
