<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Bypassing the IPinfo API (feat. pry0cc)</title>
    <link>https://0x00sec.org/t/bypassing-the-ipinfo-api-feat-pry0cc/26656</link>
    <description>Around October 2020, I was pretty active in the bug hunting community. And of course, I was hunting too, as a form of training and learning process. Around that time, my friend [@pry0cc](https://twitter.com/pry0cc) made a utility named [ipi](https://github.com/pry0cc/ipi)

![ipi README](upload://i4iCV2c1ws1Z16bvyENLxBgMvHi.png)

As explained in the README file, this utility was based on the ipinfo.io API. IPinfo is a company providing trusted ASN and IP address data. Its usage is pretty simple: you purchase a subscription and then you use the API, along with the token they provide you when you subscribe.

```bash
# Taken from https://ipinfo.io/developers:

# With Basic Auth
$ curl -u $TOKEN: ipinfo.io

# With Bearer token
$ curl -H &quot;Authorization: Bearer $TOKEN&quot; ipinfo.io

# With token query parameter
$ curl ipinfo.io?token=$TOKEN

# E.g. $ curl ipinfo.io/8.8.8.8?token=$TOKEN
```

There&#39;s also a widget on their website for everyone to test out the API.

![widget](upload://j9YN29KWqA98miABctttcSiC7jZ.png)

This is the part where I thought: if the widget is not secure enough, then that&#39;s free IPinfo API, right? Well, after tweaking it, there were two problems with that:

1. There had to be a way to make a request to access the widget from the terminal
2. The widget was heavily rate-limited

Resolving the first issue was quite easy. All I had to do is to see how the request was made to the widget, so I can move it to my terminal.

![request](upload://m0Uh9kNSXP3WfcCOGZLMEgKb32z.png)

Apparently, there is a `/widget/[IP]` endpoint, where anyone can make a request and get the IP data. Moving this from the browser to the terminal wasn&#39;t successful at the beginning

```bash
op@ghost:~$ curl https://ipinfo.io/widget/8.8.8.8
Not Foundop@ghost:~$
```

Of course, since the widget is hosted on their website, it should only listen to requests originating from them. One way to do this is by adding the Referer header. That way, the request &quot;says&quot; to the server &quot;hey, I&#39;m making this request by using your website, so I&#39;m totally legal&quot;

```bash
op@ghost:~$ curl -H &quot;Referer: https://ipinfo.io/&quot; https://ipinfo.io/widget/8.8.8.8
{
  &quot;ip&quot;: &quot;8.8.8.8&quot;,
  &quot;hostname&quot;: &quot;dns.google&quot;,
  &quot;anycast&quot;: true,
  &quot;city&quot;: &quot;Mountain View&quot;,
  &quot;region&quot;: &quot;California&quot;,
  ...
  ...
```

Well, there you have it, the first part&#39;s done. But the second problem still existed: the rate-limiting mechanism was allowing 10 requests per user. By that time I had already mentioned that to pry to check this out since he&#39;s been using the API. After around 10 (maybe 15?) seconds he came up with an idea about the rate-limiting problem: using the `X-Forwarded-For` header.

Acourding to [developer.mozilla.org](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)

&gt; The X-Forwarded-For (XFF) header is a de-facto standard header for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or a load balancer.

You see, when a server is using a reverse proxy or a load balancer, the user&#39;s IP address is contained in the `X-Forwarded-For` header and passed from the proxy to the main server. If that&#39;s the case for IPinfo&#39;s server, there might be a chance for the `X-Forwarded-For` header value to be overwritten by our value. Changing the header value on every request would look to the server as each request is made each time from a different user/IP. And that worked!

![BRUH](upload://1IP8bKDOnFrq5VOr0IttduqRtYO.png)

We had a rate limit and enterprise bypass. Once we reported it, it got fixed the same day. And IPinfo&#39;s response was awesome

![twittercomment](upload://diPiqrXMc91XJdMBIoscgzezg6V.png)

TL;DR: [https://twitter.com/vict0ni/status/1417162552266661893](https://twitter.com/vict0ni/status/1417162552266661893)</description>
    
    <lastBuildDate>Sat, 24 Jul 2021 08:56:57 +0000</lastBuildDate>
    <category>Web Hacking</category>
    <atom:link href="https://0x00sec.org/t/bypassing-the-ipinfo-api-feat-pry0cc/26656.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Bypassing the IPinfo API (feat. pry0cc)</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/bypassing-the-ipinfo-api-feat-pry0cc/26656/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/bypassing-the-ipinfo-api-feat-pry0cc/26656/3</link>
        <pubDate>Tue, 23 Nov 2021 00:40:04 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-26656-3</guid>
        <source url="https://0x00sec.org/t/bypassing-the-ipinfo-api-feat-pry0cc/26656.rss">Bypassing the IPinfo API (feat. pry0cc)</source>
      </item>
      <item>
        <title>Bypassing the IPinfo API (feat. pry0cc)</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <p>Around October 2020, I was pretty active in the bug hunting community. And of course, I was hunting too, as a form of training and learning process. Around that time, my friend <a href="https://twitter.com/pry0cc">@pry0cc</a> made a utility named <a href="https://github.com/pry0cc/ipi">ipi</a></p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/7/e/7ea3943b939d0acdf846c69e62499558d14f3c98.png" data-download-href="/uploads/short-url/i4iCV2c1ws1Z16bvyENLxBgMvHi.png?dl=1" title="ipi README"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/7/e/7ea3943b939d0acdf846c69e62499558d14f3c98_2_690x82.png" alt="ipi README" data-base62-sha1="i4iCV2c1ws1Z16bvyENLxBgMvHi" width="690" height="82" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/7/e/7ea3943b939d0acdf846c69e62499558d14f3c98_2_690x82.png, https://0x00sec.s3.amazonaws.com/original/3X/7/e/7ea3943b939d0acdf846c69e62499558d14f3c98.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/7/e/7ea3943b939d0acdf846c69e62499558d14f3c98.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/7/e/7ea3943b939d0acdf846c69e62499558d14f3c98_2_10x10.png"></a></div><p></p>
<p>As explained in the README file, this utility was based on the <a href="http://ipinfo.io">ipinfo.io</a> API. IPinfo is a company providing trusted ASN and IP address data. Its usage is pretty simple: you purchase a subscription and then you use the API, along with the token they provide you when you subscribe.</p>
<pre><code class="lang-bash"># Taken from https://ipinfo.io/developers:

# With Basic Auth
$ curl -u $TOKEN: ipinfo.io

# With Bearer token
$ curl -H "Authorization: Bearer $TOKEN" ipinfo.io

# With token query parameter
$ curl ipinfo.io?token=$TOKEN

# E.g. $ curl ipinfo.io/8.8.8.8?token=$TOKEN
</code></pre>
<p>There’s also a widget on their website for everyone to test out the API.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/8/6/864a1fbb972fb50bcf1368a48dca1970670850a3.png" data-download-href="/uploads/short-url/j9YN29KWqA98miABctttcSiC7jZ.png?dl=1" title="widget"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/8/6/864a1fbb972fb50bcf1368a48dca1970670850a3_2_690x311.png" alt="widget" data-base62-sha1="j9YN29KWqA98miABctttcSiC7jZ" width="690" height="311" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/8/6/864a1fbb972fb50bcf1368a48dca1970670850a3_2_690x311.png, https://0x00sec.s3.amazonaws.com/optimized/3X/8/6/864a1fbb972fb50bcf1368a48dca1970670850a3_2_1035x466.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/8/6/864a1fbb972fb50bcf1368a48dca1970670850a3.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/8/6/864a1fbb972fb50bcf1368a48dca1970670850a3_2_10x10.png"></a></div><p></p>
<p>This is the part where I thought: if the widget is not secure enough, then that’s free IPinfo API, right? Well, after tweaking it, there were two problems with that:</p>
<ol>
<li>There had to be a way to make a request to access the widget from the terminal</li>
<li>The widget was heavily rate-limited</li>
</ol>
<p>Resolving the first issue was quite easy. All I had to do is to see how the request was made to the widget, so I can move it to my terminal.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/9/a/9a4a181ffcf4ed1355ad996604dfb56f76601e33.png" data-download-href="/uploads/short-url/m0Uh9kNSXP3WfcCOGZLMEgKb32z.png?dl=1" title="request"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/9/a/9a4a181ffcf4ed1355ad996604dfb56f76601e33_2_690x325.png" alt="request" data-base62-sha1="m0Uh9kNSXP3WfcCOGZLMEgKb32z" width="690" height="325" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/9/a/9a4a181ffcf4ed1355ad996604dfb56f76601e33_2_690x325.png, https://0x00sec.s3.amazonaws.com/optimized/3X/9/a/9a4a181ffcf4ed1355ad996604dfb56f76601e33_2_1035x487.png 1.5x, https://0x00sec.s3.amazonaws.com/optimized/3X/9/a/9a4a181ffcf4ed1355ad996604dfb56f76601e33_2_1380x650.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/9/a/9a4a181ffcf4ed1355ad996604dfb56f76601e33_2_10x10.png"></a></div><p></p>
<p>Apparently, there is a <code>/widget/[IP]</code> endpoint, where anyone can make a request and get the IP data. Moving this from the browser to the terminal wasn’t successful at the beginning</p>
<pre><code class="lang-bash">op@ghost:~$ curl https://ipinfo.io/widget/8.8.8.8
Not Foundop@ghost:~$
</code></pre>
<p>Of course, since the widget is hosted on their website, it should only listen to requests originating from them. One way to do this is by adding the Referer header. That way, the request “says” to the server “hey, I’m making this request by using your website, so I’m totally legal”</p>
<pre><code class="lang-bash">op@ghost:~$ curl -H "Referer: https://ipinfo.io/" https://ipinfo.io/widget/8.8.8.8
{
  "ip": "8.8.8.8",
  "hostname": "dns.google",
  "anycast": true,
  "city": "Mountain View",
  "region": "California",
  ...
  ...
</code></pre>
<p>Well, there you have it, the first part’s done. But the second problem still existed: the rate-limiting mechanism was allowing 10 requests per user. By that time I had already mentioned that to pry to check this out since he’s been using the API. After around 10 (maybe 15?) seconds he came up with an idea about the rate-limiting problem: using the <code>X-Forwarded-For</code> header.</p>
<p>Acourding to <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For">developer.mozilla.org</a></p>
<blockquote>
<p>The X-Forwarded-For (XFF) header is a de-facto standard header for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or a load balancer.</p>
</blockquote>
<p>You see, when a server is using a reverse proxy or a load balancer, the user’s IP address is contained in the <code>X-Forwarded-For</code> header and passed from the proxy to the main server. If that’s the case for IPinfo’s server, there might be a chance for the <code>X-Forwarded-For</code> header value to be overwritten by our value. Changing the header value on every request would look to the server as each request is made each time from a different user/IP. And that worked!</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://0x00sec.s3.amazonaws.com/original/3X/0/c/0c13530f2f8d0eb6e006c7c2e2fd818c00676726.png" data-download-href="/uploads/short-url/1IP8bKDOnFrq5VOr0IttduqRtYO.png?dl=1" title="BRUH"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/0/c/0c13530f2f8d0eb6e006c7c2e2fd818c00676726_2_690x195.png" alt="BRUH" data-base62-sha1="1IP8bKDOnFrq5VOr0IttduqRtYO" width="690" height="195" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/0/c/0c13530f2f8d0eb6e006c7c2e2fd818c00676726_2_690x195.png, https://0x00sec.s3.amazonaws.com/original/3X/0/c/0c13530f2f8d0eb6e006c7c2e2fd818c00676726.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/0/c/0c13530f2f8d0eb6e006c7c2e2fd818c00676726.png 2x" data-small-upload="https://0x00sec.s3.amazonaws.com/optimized/3X/0/c/0c13530f2f8d0eb6e006c7c2e2fd818c00676726_2_10x10.png"></a></div><p></p>
<p>We had a rate limit and enterprise bypass. Once we reported it, it got fixed the same day. And IPinfo’s response was awesome</p>
<p><img src="https://0x00sec.s3.amazonaws.com/original/3X/5/d/5d3d17f6b552355d05088e8b6a086c2ecad95455.png" alt="twittercomment" data-base62-sha1="diPiqrXMc91XJdMBIoscgzezg6V" width="589" height="199"></p>
<p>TL;DR: <a href="https://twitter.com/vict0ni/status/1417162552266661893">https://twitter.com/vict0ni/status/1417162552266661893</a></p>
          <p><a href="https://0x00sec.org/t/bypassing-the-ipinfo-api-feat-pry0cc/26656/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/bypassing-the-ipinfo-api-feat-pry0cc/26656/1</link>
        <pubDate>Sat, 24 Jul 2021 08:39:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-26656-1</guid>
        <source url="https://0x00sec.org/t/bypassing-the-ipinfo-api-feat-pry0cc/26656.rss">Bypassing the IPinfo API (feat. pry0cc)</source>
      </item>
  </channel>
</rss>
