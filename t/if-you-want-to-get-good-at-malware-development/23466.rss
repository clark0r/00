<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>If you Want to get good at Malware Development</title>
    <link>https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466</link>
    <description>This is just for the people which lack passion, and maybe have a skewed view of Malware, And hacking. This has just been my experience, And You have to delve into this stuff **with the right mindset I feel**. I&#39;m no crazy Hacker, Or malware developer, But **I&#39;m learning**. And I have learnt A lot. And Have Learnt A lot about Trojans and ELF binary files(A never ending fun endeavor)

It&#39;s Very simple actually. You need to have the urge to learn more about how a computer works, and really enjoy learning the low information of how a computer works, It will gravitate to you writing low level applications, learning more about the operating system, the Linux API, especially C, and also assembler are both important and provide different ways of learning about computers. And writing Assembly is really great. And then combining the both in writing Both C and embedded/Inline assembler, **It&#39;s Like C is the Knife, And Assembly is the Gun. Combine With Data structures and Algorithm knowledge, I think are all powerful tools. For Creating efficient programs**

Assembler is great, It gets rid of all the levels of abstraction of the computer that A lot of languages have(Not bad, But not useful if you want to learn how a computer works), and you WILL learn how a computer works. How memory works, How the CPU works etc. And C is great When you learn the concepts in assembler, Will help your C programming.

Read Books, You can pirate books from this website: [pdfdrive](https://www.pdfdrive.com/)

Books are way better than tutorials, because unlike tutorials, Authors are paid lots of money to write these computer textbooks, It&#39;s their job, they&#39;re are gonna make sure they invest the time to research and learn and write that textbook to the best of their ability. And what&#39;s great Even books a decade ago are still useful, Because Low level never really changes and For whatever legacy stuff you learn, Emulators , Virtual machines are great for that.) And The best ones Are written by University professors IMO, But there are many great authors Who are just great programmers and share the knowledge. (Not to Say tutorials are bad, Use, and learn from both).

And also theoretical knowledge and Practical knowledge is important, so it&#39;s good to read up on the theory and apply the theory into practice through projects. For instance I&#39;ve been learning a lot about the ELF Binary in Linux, As well as delving into embedded programming for micro controllers.

This knowledge of the system will help with malware development, and If you already have a strong interest in low level programming, Then you&#39;ll learn a lot, if you&#39;re determined enough to learn. 

What I&#39;m saying is you gotta trust the process, You have to enjoy every part a long the way,Each step in the learning you need to **enjoy and write applications that you are proud off**. If you don&#39;t enjoy it, you won&#39;t be good at it. At all.

This has been my current roadmap(journey so far):

1. Learn C and Linux API and write fun user space Terminal applications. (Did loads of projects before going to step 2, Still do). Get Better at C, memory management, Getting Good at debugging (GDB)

2. Learn and read up on Computer Theory, learn  a CPU instruction set(arm assembler), Bytes, bit shifting, how arithmetic work,Logical Operations ,CPU, CPU registers, Memory etc. etc.

3. Learn and Read up on computer Malware, And Learn to Read other people&#39;s code and learning from other people&#39;s source code, Learn the theory and Creating projects Using that Learnt Knowledge. **(Incredibly important skill in an Area of learning advanced topics with not much practical resources online)**

4. Currently Learning embedded micro controller programming, To learn more about computers and writing programs on bare metal(No operating system) etc etc. 

This is What I&#39;ve done so far. If it helps people who are unsure about What it takes to learn Hacking , and This stuff to the source code, binary level. And honestly **You gotta enjoy the process more than the outcome**, especially in this Area. Most of the stuff you learn, especially at the beginning, Will be minimal and always be caught by anti virus measures. But you should still be proud when you do something as significant such as embedded a basic payload into an Elf binary and printing some text to the screen.

**Enjoy the process More than the Result.** As What Seems insignificant to others, Is A big step for myself, In learning and understanding a new concept, which may of taken months of learning, and Writing a lot of lines of code for some small result.

As well of having a strong interest in Low level programming, Regardless Of hacking and writing Malware.

I just feel A good mindset is important,  and A bit of self reflection, Which has helped me at least.</description>
    
    <lastBuildDate>Mon, 16 Nov 2020 13:18:08 +0000</lastBuildDate>
    <category>Inspiration</category>
    <atom:link href="https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>If you Want to get good at Malware Development</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466/6</link>
        <pubDate>Mon, 08 Feb 2021 05:13:18 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-23466-6</guid>
        <source url="https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466.rss">If you Want to get good at Malware Development</source>
      </item>
      <item>
        <title>If you Want to get good at Malware Development</title>
        <dc:creator><![CDATA[FormatC]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="digitalXmage" data-post="1" data-topic="23466">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://0x00sec.org/user_avatar/0x00sec.org/digitalxmage/40/41214_2.png" class="avatar"> digitalXmage:</div>
<blockquote>
<p>Learn C and Linux API and write fun user space Terminal applications. (Did loads of projects before going to step 2, Still do). Get Better at C, memory management, Getting Good at debugging (GDB)</p>
</blockquote>
</aside>
<p>Why Linux? Malware are written for Windows, because her use more users, than Linux…</p>
          <p><a href="https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466/2</link>
        <pubDate>Sat, 10 Oct 2020 21:42:32 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-23466-2</guid>
        <source url="https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466.rss">If you Want to get good at Malware Development</source>
      </item>
      <item>
        <title>If you Want to get good at Malware Development</title>
        <dc:creator><![CDATA[digitalXmage]]></dc:creator>
        <description><![CDATA[
            <p>This is just for the people which lack passion, and maybe have a skewed view of Malware, And hacking. This has just been my experience, And You have to delve into this stuff <strong>with the right mindset I feel</strong>. I’m no crazy Hacker, Or malware developer, But <strong>I’m learning</strong>. And I have learnt A lot. And Have Learnt A lot about Trojans and ELF binary files(A never ending fun endeavor)</p>
<p>It’s Very simple actually. You need to have the urge to learn more about how a computer works, and really enjoy learning the low information of how a computer works, It will gravitate to you writing low level applications, learning more about the operating system, the Linux API, especially C, and also assembler are both important and provide different ways of learning about computers. And writing Assembly is really great. And then combining the both in writing Both C and embedded/Inline assembler, <strong>It’s Like C is the Knife, And Assembly is the Gun. Combine With Data structures and Algorithm knowledge, I think are all powerful tools. For Creating efficient programs</strong></p>
<p>Assembler is great, It gets rid of all the levels of abstraction of the computer that A lot of languages have(Not bad, But not useful if you want to learn how a computer works), and you WILL learn how a computer works. How memory works, How the CPU works etc. And C is great When you learn the concepts in assembler, Will help your C programming.</p>
<p>Read Books, You can pirate books from this website: <a href="https://www.pdfdrive.com/" rel="noopener nofollow ugc">pdfdrive</a></p>
<p>Books are way better than tutorials, because unlike tutorials, Authors are paid lots of money to write these computer textbooks, It’s their job, they’re are gonna make sure they invest the time to research and learn and write that textbook to the best of their ability. And what’s great Even books a decade ago are still useful, Because Low level never really changes and For whatever legacy stuff you learn, Emulators , Virtual machines are great for that.) And The best ones Are written by University professors IMO, But there are many great authors Who are just great programmers and share the knowledge. (Not to Say tutorials are bad, Use, and learn from both).</p>
<p>And also theoretical knowledge and Practical knowledge is important, so it’s good to read up on the theory and apply the theory into practice through projects. For instance I’ve been learning a lot about the ELF Binary in Linux, As well as delving into embedded programming for micro controllers.</p>
<p>This knowledge of the system will help with malware development, and If you already have a strong interest in low level programming, Then you’ll learn a lot, if you’re determined enough to learn.</p>
<p>What I’m saying is you gotta trust the process, You have to enjoy every part a long the way,Each step in the learning you need to <strong>enjoy and write applications that you are proud off</strong>. If you don’t enjoy it, you won’t be good at it. At all.</p>
<p>This has been my current roadmap(journey so far):</p>
<ol>
<li>
<p>Learn C and Linux API and write fun user space Terminal applications. (Did loads of projects before going to step 2, Still do). Get Better at C, memory management, Getting Good at debugging (GDB)</p>
</li>
<li>
<p>Learn and read up on Computer Theory, learn  a CPU instruction set(arm assembler), Bytes, bit shifting, how arithmetic work,Logical Operations ,CPU, CPU registers, Memory etc. etc.</p>
</li>
<li>
<p>Learn and Read up on computer Malware, And Learn to Read other people’s code and learning from other people’s source code, Learn the theory and Creating projects Using that Learnt Knowledge. <strong>(Incredibly important skill in an Area of learning advanced topics with not much practical resources online)</strong></p>
</li>
<li>
<p>Currently Learning embedded micro controller programming, To learn more about computers and writing programs on bare metal(No operating system) etc etc.</p>
</li>
</ol>
<p>This is What I’ve done so far. If it helps people who are unsure about What it takes to learn Hacking , and This stuff to the source code, binary level. And honestly <strong>You gotta enjoy the process more than the outcome</strong>, especially in this Area. Most of the stuff you learn, especially at the beginning, Will be minimal and always be caught by anti virus measures. But you should still be proud when you do something as significant such as embedded a basic payload into an Elf binary and printing some text to the screen.</p>
<p><strong>Enjoy the process More than the Result.</strong> As What Seems insignificant to others, Is A big step for myself, In learning and understanding a new concept, which may of taken months of learning, and Writing a lot of lines of code for some small result.</p>
<p>As well of having a strong interest in Low level programming, Regardless Of hacking and writing Malware.</p>
<p>I just feel A good mindset is important,  and A bit of self reflection, Which has helped me at least.</p>
          <p><a href="https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466/1</link>
        <pubDate>Fri, 09 Oct 2020 13:13:15 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-23466-1</guid>
        <source url="https://0x00sec.org/t/if-you-want-to-get-good-at-malware-development/23466.rss">If you Want to get good at Malware Development</source>
      </item>
  </channel>
</rss>
