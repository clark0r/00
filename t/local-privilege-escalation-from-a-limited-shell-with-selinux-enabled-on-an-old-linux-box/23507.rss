<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Local privilege escalation from a limited shell with selinux enabled on an old Linux box</title>
    <link>https://0x00sec.org/t/local-privilege-escalation-from-a-limited-shell-with-selinux-enabled-on-an-old-linux-box/23507</link>
    <description># Local privilege escalation from a limited shell with selinux enabled on an old Linux box

Hello all! First time poster here :)

I have always been interested in infosec but lately I&#39;ve been reading a lot about topics like network security, penetration testing, reverse engineering with the objective that I&#39;ll change careers to something more security-focused.

Sorry for the long intro. I&#39;ve been working on this project for the past month trying to hack into a Linux box I&#39;ve installed in a Vmware machine. I&#39;ve looked into Metasploitable and Damn Vulnerable Linux (but those were a bit artificial), so I&#39;ve chosen an old Linux image (Centos) version with the hopes that it will be easy to exploit and a good playground for exercising my skills. Boy was I wrong :D

I&#39;ve chosen CentOS-5.0 and downloaded the image from this location: http://ftp.iij.ad.jp/pub/linux/centos-vault/5.0/isos/i386/

```
$ uname -r
2.6.18-8.el5
```

The services that I got running are the following (with mysql only accessible from localhost):

```
22/tcp   open  ssh     OpenSSH 4.3 (protocol 2.0)
80/tcp   open  http    Apache httpd 2.2.3 ((CentOS))
3306/tcp open  mysql   MySQL 5.0.22
```

So my imagined scenario is this: would it be possible to gain root privileges starting from a vulnerable web application? Let&#39;s assume an attacker already managed to upload a script to the server. So I just uploaded a reverse php shell script (I used https://github.com/pentestmonkey/php-reverse-shell). Didn&#39;t work at first until I realized I have to change the listener on my host to port 80 or 443 because the firewall on the virtual machine prevented outbound traffic on most of the other ports.

Now I start my listener and access the php script from the browser and I get this:

```
nc -lvp 80
Listening on [0.0.0.0] (family 0, port 80)
Connection from 192.168.144.136 38210 received!
Linux localhost.localdomain 2.6.18-8.el5 #1 SMP Thu Mar 15 19:57:35 EDT 2007 i686 i686 i386 GNU/Linux
 14:52:43 up 24 min,  0 users,  load average: 0.00, 0.00, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
uid=48(apache) gid=48(apache) groups=48(apache) context=system_u:system_r:httpd_t:s0
sh: no job control in this shell
sh-3.1$
```

Pretty cool. However, this shell is really limited as it runs as &quot;apache&quot; user and with selinux enabled, it&#39;s crippled. So how do I get access to a root shell?

I tried to see if there are any interesting processes, files, cron jobs and if there are any exploitable SUID binaries but of course this wasn&#39;t the case since it&#39;s mostly a clean install. I noticed however I was able to connect to mysql (`mysql -u root -p`) but of course any commands I executed were in the context of the apache user :(

Exploiting mysql through UDF was something I considered, but there was no way I could write to the /usr/lib folder to create any loadable shared libs.

Since this is an old kernel, I tried some of the popular kernel exploits. I used a suggester for that (https://github.com/jondonas/linux-exploit-suggester-2) and it created this list:

* american-sign-language
* can_bcm
* do_pages_move
* ftrex
* half_nelson1
* half_nelson2
* half_nelson3
* msr
* pipe.c_32bit
* pktcdvd
* reiserfs
* sock_sendpage
* sock_sendpage2
* udp_sendmsg_32bit
* video4linux
* vmsplice1

I downloaded them from https://github.com/lucyoa/kernel-exploits. Some of them worked if I cheated and disabled selinux with root (e.g. udp_sendmsg), but since I wanted to exploit this box with selinux enabled, I want to find a way without cheating. All of the exploits failed (or were not applicable) with selinux enabled except one... well, kind of. vmsplice1 failed but it halted the CPU and I had to do a manual restart of the virtual machine. Pretty interesting I thought. There must be some kind of vulnerability then, but not sure yet if exploitable or not.

So I run the exploit again (this time from a regular user shell for convenience):

$ strace ./vmsplice1 

... and I get this output: https://pastebin.com/raw/SMMx85My

One thing I notice immediately is this: `vmsplice(0x4, 0xbfbac958, 0x1, 0)       = -1 ENOSYS (Function not implemented)` *sigh* I think it means the function is not available, right?

But then how is it possible that the CPU halts, there must be some kind of security hole still left.

So I think my best options so far are these:

* Find a way to make the vmsplice exploit work
* Or try to find a way to disable selinux from an apache shell

For the 1st one I&#39;ve been digging into the code and reading on kernel exploitation books but I think I&#39;m still pretty far off. For the 2nd one I&#39;ve tried calling selinux functions with the addresses obtained from `/proc/kallsyms`, but no

What do you think? Do you think there&#39;s another way and I&#39;m not looking in the right place? If you have any suggestions on where to go from here, please leave a reply. Thank you :D</description>
    
    <lastBuildDate>Mon, 12 Oct 2020 20:26:46 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/local-privilege-escalation-from-a-limited-shell-with-selinux-enabled-on-an-old-linux-box/23507.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Local privilege escalation from a limited shell with selinux enabled on an old Linux box</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed 3 days after the last reply. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/local-privilege-escalation-from-a-limited-shell-with-selinux-enabled-on-an-old-linux-box/23507/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/local-privilege-escalation-from-a-limited-shell-with-selinux-enabled-on-an-old-linux-box/23507/2</link>
        <pubDate>Thu, 15 Oct 2020 20:26:53 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-23507-2</guid>
        <source url="https://0x00sec.org/t/local-privilege-escalation-from-a-limited-shell-with-selinux-enabled-on-an-old-linux-box/23507.rss">Local privilege escalation from a limited shell with selinux enabled on an old Linux box</source>
      </item>
      <item>
        <title>Local privilege escalation from a limited shell with selinux enabled on an old Linux box</title>
        <dc:creator><![CDATA[farshield]]></dc:creator>
        <description><![CDATA[
            <h1>Local privilege escalation from a limited shell with selinux enabled on an old Linux box</h1>
<p>Hello all! First time poster here <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I have always been interested in infosec but lately I’ve been reading a lot about topics like network security, penetration testing, reverse engineering with the objective that I’ll change careers to something more security-focused.</p>
<p>Sorry for the long intro. I’ve been working on this project for the past month trying to hack into a Linux box I’ve installed in a Vmware machine. I’ve looked into Metasploitable and Damn Vulnerable Linux (but those were a bit artificial), so I’ve chosen an old Linux image (Centos) version with the hopes that it will be easy to exploit and a good playground for exercising my skills. Boy was I wrong <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>I’ve chosen CentOS-5.0 and downloaded the image from this location: <a href="http://ftp.iij.ad.jp/pub/linux/centos-vault/5.0/isos/i386/" rel="noopener nofollow ugc">http://ftp.iij.ad.jp/pub/linux/centos-vault/5.0/isos/i386/</a></p>
<pre><code class="lang-auto">$ uname -r
2.6.18-8.el5
</code></pre>
<p>The services that I got running are the following (with mysql only accessible from localhost):</p>
<pre><code class="lang-auto">22/tcp   open  ssh     OpenSSH 4.3 (protocol 2.0)
80/tcp   open  http    Apache httpd 2.2.3 ((CentOS))
3306/tcp open  mysql   MySQL 5.0.22
</code></pre>
<p>So my imagined scenario is this: would it be possible to gain root privileges starting from a vulnerable web application? Let’s assume an attacker already managed to upload a script to the server. So I just uploaded a reverse php shell script (I used <a href="https://github.com/pentestmonkey/php-reverse-shell" rel="noopener nofollow ugc">https://github.com/pentestmonkey/php-reverse-shell</a>). Didn’t work at first until I realized I have to change the listener on my host to port 80 or 443 because the firewall on the virtual machine prevented outbound traffic on most of the other ports.</p>
<p>Now I start my listener and access the php script from the browser and I get this:</p>
<pre><code class="lang-auto">nc -lvp 80
Listening on [0.0.0.0] (family 0, port 80)
Connection from 192.168.144.136 38210 received!
Linux localhost.localdomain 2.6.18-8.el5 #1 SMP Thu Mar 15 19:57:35 EDT 2007 i686 i686 i386 GNU/Linux
 14:52:43 up 24 min,  0 users,  load average: 0.00, 0.00, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
uid=48(apache) gid=48(apache) groups=48(apache) context=system_u:system_r:httpd_t:s0
sh: no job control in this shell
sh-3.1$
</code></pre>
<p>Pretty cool. However, this shell is really limited as it runs as “apache” user and with selinux enabled, it’s crippled. So how do I get access to a root shell?</p>
<p>I tried to see if there are any interesting processes, files, cron jobs and if there are any exploitable SUID binaries but of course this wasn’t the case since it’s mostly a clean install. I noticed however I was able to connect to mysql (<code>mysql -u root -p</code>) but of course any commands I executed were in the context of the apache user <img src="https://0x00sec.org/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"></p>
<p>Exploiting mysql through UDF was something I considered, but there was no way I could write to the /usr/lib folder to create any loadable shared libs.</p>
<p>Since this is an old kernel, I tried some of the popular kernel exploits. I used a suggester for that (<a href="https://github.com/jondonas/linux-exploit-suggester-2" rel="noopener nofollow ugc">https://github.com/jondonas/linux-exploit-suggester-2</a>) and it created this list:</p>
<ul>
<li>american-sign-language</li>
<li>can_bcm</li>
<li>do_pages_move</li>
<li>ftrex</li>
<li>half_nelson1</li>
<li>half_nelson2</li>
<li>half_nelson3</li>
<li>msr</li>
<li>pipe.c_32bit</li>
<li>pktcdvd</li>
<li>reiserfs</li>
<li>sock_sendpage</li>
<li>sock_sendpage2</li>
<li>udp_sendmsg_32bit</li>
<li>video4linux</li>
<li>vmsplice1</li>
</ul>
<p>I downloaded them from <a href="https://github.com/lucyoa/kernel-exploits" rel="noopener nofollow ugc">https://github.com/lucyoa/kernel-exploits</a>. Some of them worked if I cheated and disabled selinux with root (e.g. udp_sendmsg), but since I wanted to exploit this box with selinux enabled, I want to find a way without cheating. All of the exploits failed (or were not applicable) with selinux enabled except one… well, kind of. vmsplice1 failed but it halted the CPU and I had to do a manual restart of the virtual machine. Pretty interesting I thought. There must be some kind of vulnerability then, but not sure yet if exploitable or not.</p>
<p>So I run the exploit again (this time from a regular user shell for convenience):</p>
<p>$ strace ./vmsplice1</p>
<p>… and I get this output: <a href="https://pastebin.com/raw/SMMx85My" rel="noopener nofollow ugc">https://pastebin.com/raw/SMMx85My</a></p>
<p>One thing I notice immediately is this: <code>vmsplice(0x4, 0xbfbac958, 0x1, 0)       = -1 ENOSYS (Function not implemented)</code> <em>sigh</em> I think it means the function is not available, right?</p>
<p>But then how is it possible that the CPU halts, there must be some kind of security hole still left.</p>
<p>So I think my best options so far are these:</p>
<ul>
<li>Find a way to make the vmsplice exploit work</li>
<li>Or try to find a way to disable selinux from an apache shell</li>
</ul>
<p>For the 1st one I’ve been digging into the code and reading on kernel exploitation books but I think I’m still pretty far off. For the 2nd one I’ve tried calling selinux functions with the addresses obtained from <code>/proc/kallsyms</code>, but no</p>
<p>What do you think? Do you think there’s another way and I’m not looking in the right place? If you have any suggestions on where to go from here, please leave a reply. Thank you <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
          <p><a href="https://0x00sec.org/t/local-privilege-escalation-from-a-limited-shell-with-selinux-enabled-on-an-old-linux-box/23507/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/local-privilege-escalation-from-a-limited-shell-with-selinux-enabled-on-an-old-linux-box/23507/1</link>
        <pubDate>Mon, 12 Oct 2020 20:26:46 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-23507-1</guid>
        <source url="https://0x00sec.org/t/local-privilege-escalation-from-a-limited-shell-with-selinux-enabled-on-an-old-linux-box/23507.rss">Local privilege escalation from a limited shell with selinux enabled on an old Linux box</source>
      </item>
  </channel>
</rss>
