<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>XCREDS - Xfinity WiFi Honeypot</title>
    <link>https://0x00sec.org/t/xcreds-xfinity-wifi-honeypot/2675</link>
    <description>**Hello, 0x00sec!**

Before discussing my project, I want to introduce myself a little; if you&#39;re more interested in xcreds, feel free to skip to the bottom.

**Introduction**

I&#39;ve been reading 0x00sec for a while, but have held off from creating an account until I had something interesting to share. I used to be an active member of Null-Byte until its leader, OccupyTheWeb, left a little while back. You can find my account here: https://creator.wonderhowto.com/codesynced/. After that community broke up, I took a break from computer security for a while to work on other computer science topics (mainly making, instead of breaking). However, now I&#39;m back with a new project I&#39;ve spent the last few days on—xcreds.

**XCREDS**

Xfinity has been rolling out free WiFi hotspots for their subscribers, which run not only at coffee shops and airports but side-by-side to home networks on their new router/modem combos. To use them, one must first sign in with their comcast email address and password. As more and more Comcast users upgrade to these new routers, Xfinity WiFi hotspots seem to be everywhere... which poses the question: how dangerous is it to have such widespread use of these free WiFi networks?

I&#39;m sure all of you here are aware of the possible MiTM attacks that can be used on open networks, but putting that aside, how easy is it to steal Xfinity credentials now that these networks are so common? Spoiler alert... the answer is _really_ easy.

_Background_

At first, I wondered how a previously signed-in device could automatically use a new Xfinity hotspot without manually signing in first. My first thought was that the device was signing in by sending the proper credentials to the router... which would make stealing them extremely easy and wouldn&#39;t even require user interaction. However, Comcast was a little smarter than that when setting this system up and instead seems to be recording the MAC address of the devices that have signed in through their servers. That way, when a returning user connects to a new hotspot, the router can simply check if that device&#39;s MAC address is listed on their servers. So instead I set out to replicate their sign in process to harvest credentials, which may not be as quick and stealthy, but it is almost as effective.

_How it works_

Simply put: xcreds first sets up a fake access point, then runs a webserver hosting modified HTML from Xfinity&#39;s WiFi login page. All requests are directed to this page until the user has signed in, upon which the user can then browse the internet. Meanwhile, their login credentials have been recorded.

EDIT: Here&#39;s some screenshots.

On the attacker machine:
&lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/5/5a329d43709f6c722f398da6374615cd5c120332.png&quot; width=&quot;690&quot; height=&quot;431&quot;&gt;

On the victim machine:
(I&#39;ll have to upload this later, I&#39;m only allowed one image due to being a new user)

_Installation_

*This program is intended for Kali Linux

You can download my project from GitHub here: https://github.com/spec-sec/xcreds

Once you unzip it to a folder, run the installer [installer.sh]. This installs the following prerequisites if you don&#39;t already have them:

* hostapd
* dnsmasq
* web.py [Python module]

After it completes, run the main program file [xcreds.py] with Python in a terminal window. Credentials are displayed on-screen (in the webserver window) and stored in creds.log.

_Bonus_

After a victim connects and signs in, it&#39;s easy to run other attacks since you own the network. One quick example is urlsnarf, which will show you the websites your victims are visiting. If you want me implement any of these kinds of attacks as features in xcreds, I&#39;d be happy to do so.

Sincerely,
~ spec [formerly Code]

P.S. This is only version 1.0, so I would greatly appreciate any critique or recommendations for improvements on this program.
Also, I&#39;m hoping some of you will recognize me (looking at you, Phoenix750!)</description>
    
    <lastBuildDate>Thu, 21 Dec 2017 19:05:52 +0000</lastBuildDate>
    <category>Networking</category>
    <atom:link href="https://0x00sec.org/t/xcreds-xfinity-wifi-honeypot/2675.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>XCREDS - Xfinity WiFi Honeypot</title>
        <dc:creator><![CDATA[oaktree]]></dc:creator>
        <description><![CDATA[
            <p>Nice work.</p>
<p>And just to quote your README:</p>
<blockquote>
<h2>Disclaimer</h2>
<p>This project is for demonstration purposes ONLY. I am not responsible for any usage outside of the law.</p>
</blockquote>
<p>Glad you chose to write this here. Join us on IRC.</p>
          <p><a href="https://0x00sec.org/t/xcreds-xfinity-wifi-honeypot/2675/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/xcreds-xfinity-wifi-honeypot/2675/2</link>
        <pubDate>Thu, 29 Jun 2017 04:59:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2675-2</guid>
        <source url="https://0x00sec.org/t/xcreds-xfinity-wifi-honeypot/2675.rss">XCREDS - Xfinity WiFi Honeypot</source>
      </item>
      <item>
        <title>XCREDS - Xfinity WiFi Honeypot</title>
        <dc:creator><![CDATA[spec]]></dc:creator>
        <description><![CDATA[
            <p><strong>Hello, 0x00sec!</strong></p>
<p>Before discussing my project, I want to introduce myself a little; if you’re more interested in xcreds, feel free to skip to the bottom.</p>
<p><strong>Introduction</strong></p>
<p>I’ve been reading 0x00sec for a while, but have held off from creating an account until I had something interesting to share. I used to be an active member of Null-Byte until its leader, OccupyTheWeb, left a little while back. You can find my account here: <a href="https://creator.wonderhowto.com/codesynced/" rel="noopener nofollow ugc">https://creator.wonderhowto.com/codesynced/</a>. After that community broke up, I took a break from computer security for a while to work on other computer science topics (mainly making, instead of breaking). However, now I’m back with a new project I’ve spent the last few days on—xcreds.</p>
<p><strong>XCREDS</strong></p>
<p>Xfinity has been rolling out free WiFi hotspots for their subscribers, which run not only at coffee shops and airports but side-by-side to home networks on their new router/modem combos. To use them, one must first sign in with their comcast email address and password. As more and more Comcast users upgrade to these new routers, Xfinity WiFi hotspots seem to be everywhere… which poses the question: how dangerous is it to have such widespread use of these free WiFi networks?</p>
<p>I’m sure all of you here are aware of the possible MiTM attacks that can be used on open networks, but putting that aside, how easy is it to steal Xfinity credentials now that these networks are so common? Spoiler alert… the answer is <em>really</em> easy.</p>
<p><em>Background</em></p>
<p>At first, I wondered how a previously signed-in device could automatically use a new Xfinity hotspot without manually signing in first. My first thought was that the device was signing in by sending the proper credentials to the router… which would make stealing them extremely easy and wouldn’t even require user interaction. However, Comcast was a little smarter than that when setting this system up and instead seems to be recording the MAC address of the devices that have signed in through their servers. That way, when a returning user connects to a new hotspot, the router can simply check if that device’s MAC address is listed on their servers. So instead I set out to replicate their sign in process to harvest credentials, which may not be as quick and stealthy, but it is almost as effective.</p>
<p><em>How it works</em></p>
<p>Simply put: xcreds first sets up a fake access point, then runs a webserver hosting modified HTML from Xfinity’s WiFi login page. All requests are directed to this page until the user has signed in, upon which the user can then browse the internet. Meanwhile, their login credentials have been recorded.</p>
<p>EDIT: Here’s some screenshots.</p>
<p>On the attacker machine:<br>
<img src="//0x00sec.s3.amazonaws.com/original/2X/5/5a329d43709f6c722f398da6374615cd5c120332.png" width="690" height="431"></p>
<p>On the victim machine:<br>
(I’ll have to upload this later, I’m only allowed one image due to being a new user)</p>
<p><em>Installation</em></p>
<p>*This program is intended for Kali Linux</p>
<p>You can download my project from GitHub here: <a href="https://github.com/spec-sec/xcreds" rel="noopener nofollow ugc">https://github.com/spec-sec/xcreds</a></p>
<p>Once you unzip it to a folder, run the installer [installer.sh]. This installs the following prerequisites if you don’t already have them:</p>
<ul>
<li>hostapd</li>
<li>dnsmasq</li>
<li>web.py [Python module]</li>
</ul>
<p>After it completes, run the main program file [xcreds.py] with Python in a terminal window. Credentials are displayed on-screen (in the webserver window) and stored in creds.log.</p>
<p><em>Bonus</em></p>
<p>After a victim connects and signs in, it’s easy to run other attacks since you own the network. One quick example is urlsnarf, which will show you the websites your victims are visiting. If you want me implement any of these kinds of attacks as features in xcreds, I’d be happy to do so.</p>
<p>Sincerely,<br>
~ spec [formerly Code]</p>
<p>P.S. This is only version 1.0, so I would greatly appreciate any critique or recommendations for improvements on this program.<br>
Also, I’m hoping some of you will recognize me (looking at you, Phoenix750!)</p>
          <p><a href="https://0x00sec.org/t/xcreds-xfinity-wifi-honeypot/2675/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/xcreds-xfinity-wifi-honeypot/2675/1</link>
        <pubDate>Wed, 28 Jun 2017 23:40:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-2675-1</guid>
        <source url="https://0x00sec.org/t/xcreds-xfinity-wifi-honeypot/2675.rss">XCREDS - Xfinity WiFi Honeypot</source>
      </item>
  </channel>
</rss>
