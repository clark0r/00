<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>A Python Package for creating backdoors!</title>
    <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170</link>
    <description>Hey, guys *(and gals)*!
Long time no see. I &#39;ve been working hard on several projects and stuff lately so I was just an observer all that time.



Observing this page and several projects starting on github, I was really impressed with how many **backdoor projects** are being created.
I remember reading about the &quot;*stelf shell*&quot; (https://0x00sec.org/t/how-to-get-a-super-stelfy-shell-that-av-doesnt-pick-up) the other day, and I was surprised on how many features this guy got to code from scratch. I felt a bit sorry for the time he spent coding actually, as I felt sorry for myself when writing the &quot;*Pozzo &amp; Lucky Shell*&quot; (https://securosophy.com/2016/09/19/pozzo-lucky-stego-in-tcpip-part-2/).
Generally re-implementing backdoor related stuff has been a part of my life...

## I came up with something really nice, this time though...
So I came up with an idea to create a package that contains all bits and parts of a backdoor (both *agent* and *handler* tools)  


# Meet the **covertutils** package!

Been working several months on this. And finally I am quite ready to show you!
Here it is then: 
https://github.com/operatorequals/covertutils

You can find the latest documentation on *Read The Docs* : 
http://covertutils.readthedocs.io/

And, of course, **Programming Examples** : http://covertutils.readthedocs.io/en/latest/prog_examples.html

## Let&#39;s finally create a polymorphic enough standard!
My focus was to make all network traffic not only encrypted, but unique, rendering impossible the network signatures.
Also oriented the whole project, not towards the standard *reverse TCP/HTTP* stuff, but made it **Network Agnostic**, making possible any creative *Communication Channel*.

## No external dependencies
A battle I so far win! I am keeping this package dependency-less. Yet any project that uses this package can have all kinds of deps.
I chose dependency free design to ensure *Python Freeze* software will work flawlessly!

## Github Issues always welcome
I have never used this package as a client/developer, except for writing tests and coding examples.
I am sure there are some bugs lurking around.
If you find one, **don&#39;t kill it alone**. Bring company - you know what to do...

## On PyPI
How would I not publish on PyPI?
https://pypi.org/project/covertutils/

`pip install covertutils` and you are ready to roll!


## Please share what you create!
If it is a new meterpreter alternative or a simple `stage` (oh it supports dynamic module loading: http://covertutils.readthedocs.io/en/latest/stage_api.html), please post it somewhere. I &#39;m really curious to see my baby in good use!

#### Interesting on some internals? Got you covered!
https://securosophy.com/2017/04/22/reinventing-the-wheel-for-the-last-time-the-covertutils-package/

### I am sure that this forum will appreciate such Python Package a lot!


#### Don&#39;t miss my [TUTORIAL](http://covertutils.readthedocs.io/en/latest/assembling_backdoor.html) on creating a full-blown _Reverse TCP Backdoor_ with all features included (file upload/download, remote extension loading, password protection, etc).</description>
    
    <lastBuildDate>Tue, 08 Aug 2017 14:55:44 +0000</lastBuildDate>
    <category>Programming</category>
    <atom:link href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>Do your magic then! See you on the other side!</p>
<p>Glad you are not a criticizing moron about the <code>pep8</code>.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/29">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/29</link>
        <pubDate>Tue, 08 Aug 2017 14:55:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-29</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>flake8 doesn’t give two craps about your variable, class, or function names (thankfully, or else I’d be in trouble too). It checks to see if the code can compile/run and if you have spacing/indentation/etc. issues.</p>
<p>Bandit checks for known, obvious security and optimization issues.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/28">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/28</link>
        <pubDate>Tue, 08 Aug 2017 14:54:19 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-28</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>I see. The thing is that I don’t like the <code>pep8</code> a whole lot. The <code>snake_case</code> in functions is something I hate for example, I prefer <code>camelCase</code> for functions and <code>CapitalizedNames</code> for classes.<br>
So, I am not really planning to fully follow the <code>pep8</code>. The <code>new line</code> policies and the <code>import order</code> are really good directives though.</p>
<p>Let me handle the code, as I want the packages API to follow the <code>principle of least surprise</code> on names and symbols in general. Also changing method names now will fuck many things up <strong>badly</strong> (like some presentations).</p>
<p>So yeah! Let’s write compatibility and functionality code!</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/27">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/27</link>
        <pubDate>Tue, 08 Aug 2017 14:52:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-27</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>Reasonable people can differ, but as someone who has maintained code for a while, style is a “do as you go” thing. It’s a lot easier to do it right as you add new code than to go back and fix it later.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/26">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/26</link>
        <pubDate>Tue, 08 Aug 2017 14:46:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-26</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>In my opinion style checks come last and are the least needed. But anything that can help debugging and that Py2/3 compatibility is more than welcome!</p>
<p>See you on github!</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/25">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/25</link>
        <pubDate>Tue, 08 Aug 2017 14:44:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-25</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[fraq]]></dc:creator>
        <description><![CDATA[
            <p>Before I start on super serious PRs, you mind me setting you up with PyFlakes and Bandit on TravisCI so you can do style checks and some simple static analysis?</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/24">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/24</link>
        <pubDate>Tue, 08 Aug 2017 13:24:23 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-24</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>Take a look at: <a href="https://github.com/operatorequals/covertutils/blob/master/covertutils/handlers/dateable.py" rel="nofollow noopener">https://github.com/operatorequals/covertutils/blob/master/covertutils/handlers/dateable.py</a></p>
<p>It makes the backdoor <strong>NOT</strong> respond at all (yet evaluate all input) on:</p>
<ul>
<li>non-working hours</li>
<li>Weekends (you get to choose which days are weekends)</li>
<li>Holidays (Christmas and New Years Eve are defaults, can be expanded)</li>
<li>Easter Holidays (you can disable it, as a lot of countries do not have Easter)</li>
</ul>
<p>Defaults are set and refer to Europe’s standards.</p>
<p>Everything gets evaluated at backdoored host’s <strong>local date and time</strong> so no need to estimate timezones. <code>9-5</code> means  <code>9-5</code> for wherever your backdoor’d host resides in the world…</p>
<p>Couple that with a <em>Reverse HTTP</em> shell and…</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/23">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/23</link>
        <pubDate>Tue, 08 Aug 2017 09:19:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-23</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>Cool new feature arriving probably today!<br>
It’s gonna take the <code>working hours</code> options to the next level…</p>
<p>Let’s stomp those Behavioral Network Filters by being <em>too Behavioral</em>…</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/22">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/22</link>
        <pubDate>Tue, 08 Aug 2017 08:00:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-22</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[rokups]]></dc:creator>
        <description><![CDATA[
            <p>But but but muh <code>f'~~~{strings}~~~'</code>. I would argue they are way more convenient than <code>'something'.encode('hex')</code> <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/21">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/21</link>
        <pubDate>Tue, 08 Aug 2017 07:54:49 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-21</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>The tutorial is ready and already published in <a href="https://0x00sec.org/t/a-tutorial-for-creating-backdoors-with-covertutils-package/3232"><strong>0x00sec</strong> post</a>.</p>
<p><strong>Free beers</strong> can be won by reading it <em>(you have been warned)</em>…</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/20">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/20</link>
        <pubDate>Tue, 08 Aug 2017 04:55:22 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-20</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[shell_bytes0x1]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/rokups">@rokups</a>, i still  love using py2.7.</p>
<p>You can use both anyway by installing them differently unless you are too much in love with py3</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/19">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/19</link>
        <pubDate>Mon, 07 Aug 2017 20:40:02 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-19</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[shell_bytes0x1]]></dc:creator>
        <description><![CDATA[
            <p>Yeah man, i support … I am still figuring out a way to change my style… Using cap is just too addictive</p>
<p>But since it is no longer supported/encourage. Gonna try using spaces.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/18">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/18</link>
        <pubDate>Mon, 07 Aug 2017 20:36:24 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-18</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[shell_bytes0x1]]></dc:creator>
        <description><![CDATA[
            <p>This is probably one of the best python package i am going to use… Yet to try it out but im sure it is going to be awesome…</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/17">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/17</link>
        <pubDate>Mon, 07 Aug 2017 20:34:36 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-17</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[rokups]]></dc:creator>
        <description><![CDATA[
            <p>I was tab fan in the past as well. Thing is it creates too much friction when majority out there is using spaces. And so i capitulated - if you cant win then join them <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"> And now tabs are discouraging contribution because i know there will be nonsense i have to deal with…</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/16">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/16</link>
        <pubDate>Sat, 05 Aug 2017 18:02:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-16</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>Yeah. My <code>pylint</code> score is about -17 already (claps).<br>
Do not bother that before the code gets passed through an <code>autopep</code>.</p>
<p>The thing is that I started coding for myself, and there is legacy code in there, even if legacy means 7 month old. All my code is bloated with spaces between arguments and parentesis because “that’s how I usually do it” (it’s a Vivek’ish coding style). I also prefer <code>tabs</code> to the point I <code>sed</code> my code to insert <code>tabs</code> instead of 4 spaces.<br>
God am I heretic…</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/15">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/15</link>
        <pubDate>Sat, 05 Aug 2017 17:34:42 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-15</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[rokups]]></dc:creator>
        <description><![CDATA[
            <p>Once py3 is complete can i start lobbying for spaces and pep8 formatting? <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/14">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/14</link>
        <pubDate>Sat, 05 Aug 2017 16:15:59 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-14</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>Computer community doesn’t need more fellows in denial.<br>
Did you see what happened with <code>exa</code> as an <code>ls</code> alternative on <em>Hacker News</em> (<a href="https://news.ycombinator.com/item?id=14923362" rel="nofollow noopener">https://news.ycombinator.com/item?id=14923362</a>)? Most of the mess was made by denial of a better tool than the <em>legendary</em> <code>ls</code>.  The rest by guys hating the guys on denial.</p>
<p>I just can’t get used to <code>hexlify</code> and such stuff. It gets frustrating at times, but If Py3 is the new better way, I don’t want to code Py2 just by myself.</p>
<p>Yet, Py2 is the standard, and, in the other hand, I can see why and I don’t believe that it is only that people are used to code in certain ways… I find it a little more intuitive.</p>
<p>Anyway, this conversation can take forever. This topic is unsolvable. You <em>can</em> screw a screw with a knife and cut an apple with a screwdriver, but I guess there is a reason we do it the other way. Tools are good at things. Unifying tools is handy but difficult.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/13</link>
        <pubDate>Sat, 05 Aug 2017 15:49:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-13</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[rokups]]></dc:creator>
        <description><![CDATA[
            <p>Well… At least you arent in denial and agree that new ways are kosher ways <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"> But in py3 you can too use binary strings: <code>b'raw binary string'</code>. But you knew that i guess.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/12</link>
        <pubDate>Sat, 05 Aug 2017 15:38:57 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-12</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>I am mainly talking about my <em>beloved</em> <code>"string here".encode(whatever)</code> function!</p>
<p>It even supports <code>zip</code>.<br>
I know that strings are fundamentally different in Py3 (and I can see that it is a more correct approach) nevertheless I can’t help but use Py2 <code>str</code> like <code>bytearrays</code>…</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/11</link>
        <pubDate>Sat, 05 Aug 2017 15:36:03 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-11</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[rokups]]></dc:creator>
        <description><![CDATA[
            <p>Cool beans, cant wait for port</p>
<p>What conveniences though? In my experience py3 was nothing but conveniences <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"> <code>print</code> took some getting used to but its small price to pay for all the goodies that come with it.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/10</link>
        <pubDate>Sat, 05 Aug 2017 15:34:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-10</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>In my humble opinion Py2 provides some conveniences that Py3 doesn’t.<br>
Anyway, I can see your point and the good fella cclauss (<a href="https://github.com/cclauss" rel="nofollow noopener">https://github.com/cclauss</a>) is working on it.</p>
<p>My guess is that if you wait a while, you can use <code>covertutils</code> along with Py3.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/9</link>
        <pubDate>Sat, 05 Aug 2017 14:37:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-9</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[rokups]]></dc:creator>
        <description><![CDATA[
            <p>Hey <a class="mention" href="https://0x00sec.org/u/operatorequals">@operatorequals</a> o/ For several weeks i was working on project of my own and just posted it on github: <a href="https://github.com/rokups/Launchpad" rel="nofollow noopener">Launchpad</a>. It is very much barebones so far. Aim of the project is to create file-less agent that is interacted with through dashboard website. I can totally see your package being VERY useful.</p>
<p>Thing is your package is python 2.7. Why? Why would anyone create new things in 2.7? Any chance to see python3 port or should i just ignore it and implement things on my own?</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/8</link>
        <pubDate>Sat, 05 Aug 2017 13:18:16 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-8</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>Published a page about the IDS evasion technique I try to utilize:<br>
<a href="http://covertutils.readthedocs.io/en/latest/ids_evasion.html" class="onebox" target="_blank" rel="nofollow noopener">http://covertutils.readthedocs.io/en/latest/ids_evasion.html</a></p>
<p>and another page with some (or maybe a lot) architectural information:<br>
<a href="http://covertutils.readthedocs.io/en/latest/architecture.html" rel="nofollow noopener">http://covertutils.readthedocs.io/en/latest/architecture.html</a></p>
<p>For the tutorial part I will start a new topic. Stay tuned!</p>
<p>Thank everyone for his/her interest! I am amused! I never saw so many github stars on any of my projects before!</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/7</link>
        <pubDate>Sat, 05 Aug 2017 12:05:31 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-7</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>Oh, and documentation isn’t even close to finished yet. More topics and How-Tos are worked at the moment.</p>
<ul>
<li>Protocol Specification,</li>
<li>API explanation</li>
<li>Design decisions</li>
<li>and more…</li>
</ul>
<p>I don’t expect you to understand the whole package by reading its code (and finding out about my backdoors <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"> )</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/6</link>
        <pubDate>Sat, 05 Aug 2017 09:54:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-6</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
      <item>
        <title>A Python Package for creating backdoors!</title>
        <dc:creator><![CDATA[operatorequals]]></dc:creator>
        <description><![CDATA[
            <p>Handler is run on the Attacker.<br>
Agent on the Pwned system.<br>
You understand correctly.</p>
<p>But <code>BaseHandler class</code> and derivatives are used to create both of them. Think of the  <code>Handler class</code> as a type of <code>abstract socket</code>.</p>
<p>This is my research for almost a year. The modelling of a backdoor, and break down to parts. The package is coded entirely on those principles.</p>
          <p><a href="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170/5</link>
        <pubDate>Fri, 04 Aug 2017 08:48:20 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-3170-5</guid>
        <source url="https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170.rss">A Python Package for creating backdoors!</source>
      </item>
  </channel>
</rss>
