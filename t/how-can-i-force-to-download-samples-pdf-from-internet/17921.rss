<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How can I force to download samples pdf from internet?</title>
    <link>https://0x00sec.org/t/how-can-i-force-to-download-samples-pdf-from-internet/17921</link>
    <description>I am trying to download files from internet for research purposes, but when I tried to move fromto python2 to python3 . I got an error `TypeError: a bytes-like object is required, not &#39;str&#39;` because python3 treats string different,but I had to change from `.content` to `.text`, and it fixed , but it doesnt download the files , but it&#39;s grabing them, how can I force to download them? 

```
def downloadFile(self, url):
    fDir=self.outputDir
    local_file = None
    if not os.path.isdir(fDir):
        os.makedirs(fDir)
                     
    try:
        f = urllib.request.urlopen(url, timeout=10)
         
        for x in range(len(self.signature)):
            if ord(f.read(1))!=self.signature[x]:
                f.close()
                raise          

        local_file=open(&quot;%s/file%08d.%s&quot; % (fDir, self.successCount, self.extension), &quot;wb&quot;)
        for x in range(len(self.signature)):
            local_file.write(chr(self.signature[x]))
        local_file.write(f.read())
        local_file.close()
        f.close()           
    except KeyboardInterrupt:
        raise
    except:
        if local_file != None:
            local_file.close()
        for x in range(10):
            try:
                if os.path.isfile(&quot;%s/file%08d.%s&quot; % (fDir, self.successCount, self.extension)): 
                    os.remove(&quot;%s/file%08d.%s&quot; % (fDir, self.successCount, self.extension))
                break
            except:
                if x==9:
                    raise
                time.sleep(1)
        return
    self.successCount += 1
```

```
def search(self):
    if self.extension == None or self.extension == &quot;&quot;:
        print(&quot;ERROR: No extension specified!&quot;)
        return         
     
    if len(self.signature) == 0:
        print(&quot;WARNING: No signature specified - THERE WILL BE LOT OF FALSE RESULTS :(&quot;)
         
    print(&quot;Starting with search&quot;)
    print(&quot;---------------------&quot;)
    print(&quot;Extension: &quot; + self.extension)
    print(&quot;Signature: &quot; + self.signatureText())
    print(&quot;Starting search base: &quot; + self.searchCharsText())
    print(&quot;Output dir: &quot; + self.outputDir)
    print(&quot;Max results per search: &quot; + str(self.maxPerSearch))
     
    self.searchReal(&quot;&quot;)     
```

```
pos=r.text.find(&#39;&lt;a href=&quot;&#39;)
while pos != -1:
    pos2_a=r.text.find(&#39;&quot;&#39;, pos+16)
    pos2_b=r.text.find(&#39;&amp;amp;&#39;, pos+16)
    if pos2_a == -1:
        pos2 = pos2_b
    elif pos2_b == -1:
        pos2 = pos2_a
    else:
        pos2 = min (pos2_a, pos2_b)
    if pos2 == -1:
        break;
    url = r.text[pos+16:pos2]
    if url.find(&#39;.google.&#39;) == -1 and url.startswith(&#39;http&#39;):
        blocked = False
        if url not in self.downloaded:
            self.downloadFile(url)
            self.downloaded.append(url)
            f.write(url + &quot;\n&quot;)
             
    pos_a=r.text.find(&#39;&lt;a href=&quot;&#39;, pos+1)
    pos_b=r.text.find(&#39;a href=&quot;/url?q=&#39;, pos+1)
    if pos_a == -1:
        pos = pos_b
    elif pos_b == -1:
        pos = pos_a
    else:
        pos=min(pos_a, pos_b)
```

## log
```
http://www.aamalaysia.org/pdf/p-1_thisisaa1.pdf
https://www.deanza.edu/articulation/documents/ge-aa-as-dac.pdf
https://aamexico.org.mx/media/Lista_de_precios_%2520vigentes.pdf
https://www.aflglobal.com/productlist/Product-Lines/Conductor-Accessories/230kV-Aluminum-Welded-Bus-Pipe-Supports/doc/230kv-aluminum-welded-bus-supports.aspx
```</description>
    
    <lastBuildDate>Mon, 09 Dec 2019 14:09:59 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/how-can-i-force-to-download-samples-pdf-from-internet/17921.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How can I force to download samples pdf from internet?</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/how-can-i-force-to-download-samples-pdf-from-internet/17921/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-can-i-force-to-download-samples-pdf-from-internet/17921/2</link>
        <pubDate>Tue, 07 Apr 2020 14:42:51 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-17921-2</guid>
        <source url="https://0x00sec.org/t/how-can-i-force-to-download-samples-pdf-from-internet/17921.rss">How can I force to download samples pdf from internet?</source>
      </item>
      <item>
        <title>How can I force to download samples pdf from internet?</title>
        <dc:creator><![CDATA[blackleitus]]></dc:creator>
        <description><![CDATA[
            <p>I am trying to download files from internet for research purposes, but when I tried to move fromto python2 to python3 . I got an error <code>TypeError: a bytes-like object is required, not 'str'</code> because python3 treats string different,but I had to change from <code>.content</code> to <code>.text</code>, and it fixed , but it doesnt download the files , but itâ€™s grabing them, how can I force to download them?</p>
<pre><code class="lang-auto">def downloadFile(self, url):
    fDir=self.outputDir
    local_file = None
    if not os.path.isdir(fDir):
        os.makedirs(fDir)
                     
    try:
        f = urllib.request.urlopen(url, timeout=10)
         
        for x in range(len(self.signature)):
            if ord(f.read(1))!=self.signature[x]:
                f.close()
                raise          

        local_file=open("%s/file%08d.%s" % (fDir, self.successCount, self.extension), "wb")
        for x in range(len(self.signature)):
            local_file.write(chr(self.signature[x]))
        local_file.write(f.read())
        local_file.close()
        f.close()           
    except KeyboardInterrupt:
        raise
    except:
        if local_file != None:
            local_file.close()
        for x in range(10):
            try:
                if os.path.isfile("%s/file%08d.%s" % (fDir, self.successCount, self.extension)): 
                    os.remove("%s/file%08d.%s" % (fDir, self.successCount, self.extension))
                break
            except:
                if x==9:
                    raise
                time.sleep(1)
        return
    self.successCount += 1
</code></pre>
<pre><code class="lang-auto">def search(self):
    if self.extension == None or self.extension == "":
        print("ERROR: No extension specified!")
        return         
     
    if len(self.signature) == 0:
        print("WARNING: No signature specified - THERE WILL BE LOT OF FALSE RESULTS :(")
         
    print("Starting with search")
    print("---------------------")
    print("Extension: " + self.extension)
    print("Signature: " + self.signatureText())
    print("Starting search base: " + self.searchCharsText())
    print("Output dir: " + self.outputDir)
    print("Max results per search: " + str(self.maxPerSearch))
     
    self.searchReal("")     
</code></pre>
<pre><code class="lang-auto">pos=r.text.find('&lt;a href="')
while pos != -1:
    pos2_a=r.text.find('"', pos+16)
    pos2_b=r.text.find('&amp;amp;', pos+16)
    if pos2_a == -1:
        pos2 = pos2_b
    elif pos2_b == -1:
        pos2 = pos2_a
    else:
        pos2 = min (pos2_a, pos2_b)
    if pos2 == -1:
        break;
    url = r.text[pos+16:pos2]
    if url.find('.google.') == -1 and url.startswith('http'):
        blocked = False
        if url not in self.downloaded:
            self.downloadFile(url)
            self.downloaded.append(url)
            f.write(url + "\n")
             
    pos_a=r.text.find('&lt;a href="', pos+1)
    pos_b=r.text.find('a href="/url?q=', pos+1)
    if pos_a == -1:
        pos = pos_b
    elif pos_b == -1:
        pos = pos_a
    else:
        pos=min(pos_a, pos_b)
</code></pre>
<h2>log</h2>
<pre><code class="lang-auto">http://www.aamalaysia.org/pdf/p-1_thisisaa1.pdf
https://www.deanza.edu/articulation/documents/ge-aa-as-dac.pdf
https://aamexico.org.mx/media/Lista_de_precios_%2520vigentes.pdf
https://www.aflglobal.com/productlist/Product-Lines/Conductor-Accessories/230kV-Aluminum-Welded-Bus-Pipe-Supports/doc/230kv-aluminum-welded-bus-supports.aspx
</code></pre>
          <p><a href="https://0x00sec.org/t/how-can-i-force-to-download-samples-pdf-from-internet/17921/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/how-can-i-force-to-download-samples-pdf-from-internet/17921/1</link>
        <pubDate>Sat, 07 Dec 2019 22:42:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-17921-1</guid>
        <source url="https://0x00sec.org/t/how-can-i-force-to-download-samples-pdf-from-internet/17921.rss">How can I force to download samples pdf from internet?</source>
      </item>
  </channel>
</rss>
