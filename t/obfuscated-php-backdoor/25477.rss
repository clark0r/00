<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Obfuscated PHP Backdoor</title>
    <link>https://0x00sec.org/t/obfuscated-php-backdoor/25477</link>
    <description>Hi, I recently found a malicious PHP code [ [LINK](https://sharetext.me/8zimbqnzxa) ] injected in some webpages, I tried to formate and deobfuscate it and understand how it works, It seems that is using Cookies to execute PHP code (Cookie: cipher=serialized+encrypted PHP code), I just want to know how they are making this kind of backdoors and how to generate this Cookie.

    function cs_decrypt_phase($data, $key)
    {
        $out_data = &quot;&quot;;

        for ($i = 0; $i &lt; strlen($data);) {
            for ($j = 0; $j &lt; strlen($key) &amp;&amp; $i &lt; strlen($data); $j++, $i++) {
                $out_data .= chr(ord($data[$i]) ^ ord($key[$j]));
            }
        }

        return $out_data;
    }

This a readable function to decrypt it.</description>
    
    <lastBuildDate>Thu, 03 Jun 2021 16:46:00 +0000</lastBuildDate>
    <category>Cryptology</category>
    <atom:link href="https://0x00sec.org/t/obfuscated-php-backdoor/25477.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Obfuscated PHP Backdoor</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/obfuscated-php-backdoor/25477/8">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/obfuscated-php-backdoor/25477/8</link>
        <pubDate>Mon, 02 Aug 2021 05:41:28 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-25477-8</guid>
        <source url="https://0x00sec.org/t/obfuscated-php-backdoor/25477.rss">Obfuscated PHP Backdoor</source>
      </item>
      <item>
        <title>Obfuscated PHP Backdoor</title>
        <dc:creator><![CDATA[Satoshin]]></dc:creator>
        <description><![CDATA[
            <p>There is no such thing as a “skiddy” project. its all about fun and being interactive. Webshells are fun to make and can provide alot of learning experience for php, and alot of webshell’s nowadays are private. The public webshells are always backdoored and send back a email if you do infect a server, so its worth making your own.</p>
<p>The easy part is about experience, your not just gonna call C easy to someone who never learned it before are you? - Satoshin</p>
          <p><a href="https://0x00sec.org/t/obfuscated-php-backdoor/25477/7">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/obfuscated-php-backdoor/25477/7</link>
        <pubDate>Thu, 03 Jun 2021 16:46:00 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-25477-7</guid>
        <source url="https://0x00sec.org/t/obfuscated-php-backdoor/25477.rss">Obfuscated PHP Backdoor</source>
      </item>
      <item>
        <title>Obfuscated PHP Backdoor</title>
        <dc:creator><![CDATA[Racist]]></dc:creator>
        <description><![CDATA[
            <p>tbh thats pretty “skiddy”, php webshells are easy to make and most of them are just Copy and Pasteable</p>
          <p><a href="https://0x00sec.org/t/obfuscated-php-backdoor/25477/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/obfuscated-php-backdoor/25477/6</link>
        <pubDate>Wed, 02 Jun 2021 00:44:35 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-25477-6</guid>
        <source url="https://0x00sec.org/t/obfuscated-php-backdoor/25477.rss">Obfuscated PHP Backdoor</source>
      </item>
      <item>
        <title>Obfuscated PHP Backdoor</title>
        <dc:creator><![CDATA[full]]></dc:creator>
        <description><![CDATA[
            <p>Yes i ve bought a tool to generate the backdoor and payloads</p>
          <p><a href="https://0x00sec.org/t/obfuscated-php-backdoor/25477/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/obfuscated-php-backdoor/25477/4</link>
        <pubDate>Thu, 15 Apr 2021 18:12:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-25477-4</guid>
        <source url="https://0x00sec.org/t/obfuscated-php-backdoor/25477.rss">Obfuscated PHP Backdoor</source>
      </item>
      <item>
        <title>Obfuscated PHP Backdoor</title>
        <dc:creator><![CDATA[webshell]]></dc:creator>
        <description><![CDATA[
            <p>Do you have the latest webshell?</p>
          <p><a href="https://0x00sec.org/t/obfuscated-php-backdoor/25477/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/obfuscated-php-backdoor/25477/3</link>
        <pubDate>Wed, 14 Apr 2021 10:54:44 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-25477-3</guid>
        <source url="https://0x00sec.org/t/obfuscated-php-backdoor/25477.rss">Obfuscated PHP Backdoor</source>
      </item>
      <item>
        <title>Obfuscated PHP Backdoor</title>
        <dc:creator><![CDATA[Humairaa_Nunhuck]]></dc:creator>
        <description><![CDATA[
            <p>Hi i had the same code injected in one of my webpage. Do you have more information on how the code works?</p>
          <p><a href="https://0x00sec.org/t/obfuscated-php-backdoor/25477/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/obfuscated-php-backdoor/25477/2</link>
        <pubDate>Fri, 09 Apr 2021 07:56:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-25477-2</guid>
        <source url="https://0x00sec.org/t/obfuscated-php-backdoor/25477.rss">Obfuscated PHP Backdoor</source>
      </item>
      <item>
        <title>Obfuscated PHP Backdoor</title>
        <dc:creator><![CDATA[full]]></dc:creator>
        <description><![CDATA[
            <p>Hi, I recently found a malicious PHP code [ <a href="https://sharetext.me/8zimbqnzxa" rel="noopener nofollow ugc">LINK</a> ] injected in some webpages, I tried to formate and deobfuscate it and understand how it works, It seems that is using Cookies to execute PHP code (Cookie: cipher=serialized+encrypted PHP code), I just want to know how they are making this kind of backdoors and how to generate this Cookie.</p>
<pre><code>function cs_decrypt_phase($data, $key)
{
    $out_data = "";

    for ($i = 0; $i &lt; strlen($data);) {
        for ($j = 0; $j &lt; strlen($key) &amp;&amp; $i &lt; strlen($data); $j++, $i++) {
            $out_data .= chr(ord($data[$i]) ^ ord($key[$j]));
        }
    }

    return $out_data;
}
</code></pre>
<p>This a readable function to decrypt it.</p>
          <p><a href="https://0x00sec.org/t/obfuscated-php-backdoor/25477/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/obfuscated-php-backdoor/25477/1</link>
        <pubDate>Fri, 02 Apr 2021 13:41:23 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-25477-1</guid>
        <source url="https://0x00sec.org/t/obfuscated-php-backdoor/25477.rss">Obfuscated PHP Backdoor</source>
      </item>
  </channel>
</rss>
