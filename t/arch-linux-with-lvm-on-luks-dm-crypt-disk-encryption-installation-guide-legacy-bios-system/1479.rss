<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</title>
    <link>https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479</link>
    <description>Hello 0x00&#39;ers.
Today I will be writing a guide on an encrypted Arch install via LUKS, then installing the lightweight XFCE desktop environment. The way we will be going about this is we will create a non-encrypted boot partition, and then we will create a LUKS encrypted partition with 2 logical volumes (home and root). Think of the LUKS partition as a container for our root and home partitions. Lets get started.

## Pre-install + Setting Up Your Hard Drive and Partitions
You will need a bootable flash drive with arch on it. If you choose to erase your hard drive, now would be the time to do it. I use dban on a dvd. Boot up arch and you should see
`Arch Linux &lt;Version of Arch&gt; (tty1)`
`archiso login: root (automatic login)`
`root@archiso ~ # `

First lets connect to the interwebz and set up the clock.

if you are connected to Ethernet it should have automatically connected to your network via dhcp but if it didnt you can run
`root@archiso ~ # dhcpcd &lt;your interface here ex: enp0s25&gt; `

You can get a list of your interfaces by typing
`root@archiso ~ # ip link`

If you are using wifi you can use the included tool, &quot;wifi-menu&quot;
`root@archiso ~ # wifi-menu -o` (the &quot;o&quot; shows asterisks when you type in the wifi password and stores it as a hexadecimal string.)

A dialog menu will pop up with a list of essid&#39;s. Choose yours via arrow keys and hit enter. Next, it should say &quot;Enter a name for the new profile. It should be already filled out, but if it isn&#39;t type something in here like &quot;home-wifi&quot;. Hit enter. Next, type in your wifi password. Hit enter, if it asks you if you would like to save this profile select yes and hit enter again. Finally ping a website to see if the internet is working.
`root@archiso ~ # ping www.google.com`

to set the system clock via ntp type
`root@archiso ~ # timedatectl set-ntp true`

**Now lets partition the disks**, and be aware that this will erase your hard drive.
Identify your hard drive via fdisk.
`root@archiso ~ # fdisk -l`

For me it is /dev/sda

now enter the disk tool &quot;parted&quot;
`root@archiso ~ # parted`

notice how instead of  `root@archiso ~ # ` it shows `(parted)`. Now select your hard drive
`(parted)  select /dev/sdX` where X is your hard drive label. For me it was `(parted) select /dev/sda`
Next, create a msdos disk label
`(parted) mklabel msdos`
then create the boot partition
`(parted) mkpart primary ext2 1MB 512MB`
Then create a partition for the lvm using the rest of the disk space.
`(parted) mkpart primary ext4 512MB 100%`
`(parted) print` should list all of your partitions, you should have 2.
now set the boot flag on your boot partition
`(parted) set 1 boot on` (1 should be the number of your boot partition)
now type
`(parted) quit`
and verify that the changes have been made.
`root@archiso ~ # fdisk -l`
you should see two partitions with one having an asterisk under &quot;boot&quot;. For my hard drive /dev/sda1 is my boot partition, and /dev/sda2 is the partition I will be using for the lvm so that is what I will be going off of for this part of the tutorial.

**Now lets set up luks**
type
`root@archiso ~ # cryptsetup luksFormat /dev/sda2` 
(2 being the bigger partition..the one you will be using for the lvm)
type YES and your password for the encrypted partition. Be sure to have a strong password.

now open the luks container
`root@archiso ~ # cryptsetup open /dev/sda2 name`
name can be anything. The container will now be at /dev/mapper/name

next lets create the physical volume.
`root@archiso ~ # pvcreate /dev/mapper/name`
now create a volume group, it can be whatever name you want.
`root@archiso ~ # vgcreate x /dev/mapper/name` where x is anything you want
now lets create the logical volumes.
`root@archiso ~ # lvcreate -L 8GB x -n swap` where x is the name of your volume group
`root@archiso ~ # lvcreate -L 30G x -n root`
`root@archiso ~ # lvcreate -l 100%FREE x -n home`

**Now lets create the file systems on each volume + boot partition.**
`root@archiso ~ # mkfs.ext4 /dev/mapper/x-home`
`root@archiso ~ # mkfs.ext4 /dev/mapper/x-root`
`root@archiso ~ # mkswap /dev/mapper/x-swap`
`root@archiso ~ # mkfs.ext2 /dev/sda1` where /dev/sda1 is your boot partiton (the one where we set the boot flag on)

**Now we mount**
`root@archiso ~ # mount /dev/mapper/x-root /mnt`
`root@archiso ~ # mkdir /mnt/home`
`root@archiso ~ # mount /dev/mapper/x-home /mnt/home`
`root@archiso ~ # mkdir /mnt/boot`
`root@archiso ~ # mount /dev/sda1 /mnt/boot`
`root@archiso ~ # swapon /dev/mapper/x-swap`

## Installation
Now let us install arch
`root@archiso ~ # pacstrap /mnt base base-devel`
Lets generate the fstab file
`root@archiso ~ # genfstab -U /mnt &gt;&gt; /mnt/etc/fstab`
Then lets chroot into the system.
`root@archiso ~ # arch-chroot /mnt`
Notice how the prompt changes to `[root@archiso /] # `

**Setting the timezone and locales**
To set the time zone type
`[root@archiso /] # ln -s /usr/share/zoneinfo/YourRegionHere/YourCityHere /etc/localtime`
Run the hardware clock
`[root@archiso /] # hwclock --systohc`
Next, type
`[root@archiso /] # nano /etc/locale.gen`
and uncomment (delete the #) on the line with &quot;en_US.UTF-8 UTF-8&quot; (or your localization)
then run
`[root@archiso /] # locale-gen`
now type
`[root@archiso /] # nano /etc.locale.conf`
and type `LANG=en_US.UTF-8` or what you need for your local.
type
`[root@archiso /] # echo myhostname &gt; /etc/hostname` where myhostname is what you want your hostname to be.
Now lets install wpa_supplicant, iw, dialog, and netctl
`[root@archiso /] # pacman -S wpa_supplicant iw`
now type
`[root@archiso /] # nano /etc/mkinitcpio.conf`
and where it says `HOOKS=&quot;bla bla bla` make sure &quot;keyboard&quot;, &quot;encrypt&quot;, and &quot;lvm2&quot; are in that list.


**Now we install and configure Grub**
`[root@archiso /] # pacman -S grub`
`[root@archiso /] # grub-install /dev/sda` where /dev/sda is the hard drive you are installing arch onto.
`[root@archiso /] # nano /etc/default/grub`
and where it says `GRUB_CMDLINE_LINUX=&quot;&quot;` make it say
`GRUB_CMDLINE_LINUX=&quot;cryptdevice=/dev/sda2:x root=/dev/mapper/x-root&quot;`
where x is the name of your volume group, and /dev/sda2 should be your partition with the volume group.
Now type
`[root@archiso /] # grub-mkconfig -o /boot/grub/grub.cfg`
and type
`[root@archiso /] # mkinitcpio -p linux`
to set the root password type
`[root@archiso /] # passwd`
Now lets add a user account and give it sudo privleges.
`[root@archiso /] # useradd -m -G wheel yourusername`
where yourusername is..of course..the username you want..duh.
Set the password with
`[root@archiso /] # passwd yourusername`
now type
`[root@archiso /] # visudo`
Navigate to where it says ` # %wheel ALL=(ALL) ALL` and uncomment it.
(its like vi so navigate so that the cursor is over the #, hit del, and type &quot;:wq&quot;
Now you should be able to reboot into your new system. You can log into root or your newly created account to install a couple more packages.

## Installing XFCE and more things.
First lets install the sound manager
`[root@hostname ~] # pacman -S alsa-utils`
Now install the Xorg display server and other goodies.
`[root@hostname ~] # pacman -S xorg-server xorg-server-utils xorg-xinit`
`[root@hostname ~] # pacman -S xfce4 xfce4-goodies`
`[root@hostname ~] # pacman -S lxdm`
`[root@hostname ~] # systemctl enable lxdm`
This will install xfce, lxdm, and bring the &quot;login screen&quot; up on boot.

**More packages**
To install firefox type
`[root@hostname ~] # pacman -S firefox`

To install wicd network manager type
`[root@hostname ~] # pacman -S wicd wicd-gtk`
`[root@hostname ~] # systemctl start wicd.service &amp;&amp; systemctl enable wicd.service` 

*If you have a Thinkpad like me and would like to use the dedicated volume control keys do this:*
Main Menu &gt; Settings -&gt; Keyboard -&gt; Application Shortcuts. Add a shortcut and type `amixer set Master 1+`; click ok; then press the volume up key when it prompts you too. Add another; `amixer set Master 1-`; ok; press volume down key. then add one and type &quot;`amixer set Master toggle`&quot;; ok; press mute key.


## Final Words 
Thank your for reading this guide. I really hope it helps, In a time like now everyone should be using disk encryption to protect themselves from thieves and nosy governments  . Arch may turn you off because its complicated but dont let it. It has a great community. I advise you to read about the AUR (Arch User Repository). If you do not like XFCE you can stop at the part where I say you should be able to reboot your computer. I chose XFCE because it is simple, lightweight and runs great on older laptops like my Thinkpad. Last but not least..I wrote this at 1:00 AM so please give me suggestions and recommendations on how I can make this article easier to understand and better.

#Other things you may need (special thanks to @kowalski )

**Graphic Drivers** `pacman -Ss xf86-video` and then pick the one for your card.
**Input Devices** search with `pacman -Ss xf86-input`. evdev and synaptics/libinput should be enough.

`Including additional LUKS encryption options is a good idea, even better if you have decent hardware. Here is a link to the wiki article with good explanation about what each option means: https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption#Encryption_options_for_LUKS_mode3`

If you don&#39;t want lxdm or any display manager, add startxfce4 to your .xinitrc in the home directory and just startx. You can also set startx to be executed automatically when you log into tty1 by putting this in /etc/profile.

# autostart systemd default session on tty1
if [[ &quot;$(tty)&quot; == &#39;/dev/tty1&#39; ]]; then
    exec startx
fi
Install pulseaudio-alsa so that when you play youtube and mpd together, youtube doesn&#39;t stop. -_-

For nice composting in XFCE, use compiz or compton. ( I used compiz with mate and xfce before.)

[root@archiso /] # visudo
Navigate to where it says # %wheel ALL=(ALL) ALL and uncomment it.
(its like vi so navigate so that the cursor is over the #, hit del, and type &quot;:wq&quot;
EDITOR=nano visudo, no need to use vi.

And as always,
Stay Frosty :snowman2:

Elliot Approved :thumbsup: &lt;img src=&quot;//0x00sec.s3.amazonaws.com/original/2X/2/292b1d61e7304da97386971fa6b76c9e51d9cc9e.jpg&quot; width=&quot;690&quot; height=&quot;388&quot;&gt;</description>
    
    <lastBuildDate>Sun, 22 Jan 2017 15:30:56 +0000</lastBuildDate>
    <category>Linux</category>
    <atom:link href="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 30 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479/4</link>
        <pubDate>Sun, 21 Jan 2018 00:36:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1479-4</guid>
        <source url="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479.rss">Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</source>
      </item>
      <item>
        <title>Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</title>
        <dc:creator><![CDATA[Fust3rCluck]]></dc:creator>
        <description><![CDATA[
            <p>Thank you, I will add your suggestions. I never had a problem with the keyboard thing and I was using integrated graphics so that’s why I didn’t install any drivers.</p>
          <p><a href="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479/3</link>
        <pubDate>Sun, 22 Jan 2017 15:30:56 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1479-3</guid>
        <source url="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479.rss">Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</source>
      </item>
      <item>
        <title>Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</title>
        <dc:creator><![CDATA[kowalski]]></dc:creator>
        <description><![CDATA[
            <p>Great article, I have a similar cheatsheet for myself! Few things I’d like to point out:</p>
<ol>
<li>
<p>You haven’t listed out the step where graphics drivers are installed. It’s easy to do that, <code>pacman -Ss xf86-video</code> and then pick the one for your card. Also, xorg-twm, xorg-xclock and xterm aren’t needed.<br>
For your input devices, search with <code>pacman -Ss xf86-input</code>. evdev and synaptics/libinput should be enough. keyboard and mouse are for old devices that don’t really play well with udev iirc.</p>
</li>
<li>
<p>Including additional LUKS encryption options is a good idea, even better if you have decent hardware. Here is a link to the wiki article with good explanation about what each option means: <a href="https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption#Encryption_options_for_LUKS_mode" rel="nofollow noopener">https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption#Encryption_options_for_LUKS_mode</a></p>
</li>
<li>
<p>If you don’t want lxdm or any display manager, add <code>startxfce4</code> to your .xinitrc in the home directory and just startx. You can also set startx to be executed automatically when you log into tty1 by putting this in /etc/profile.</p>
<pre><code> # autostart systemd default session on tty1
 if [[ "$(tty)" == '/dev/tty1' ]]; then
     exec startx
 fi
</code></pre>
</li>
<li>
<p>Install <code>pulseaudio-alsa</code> so that when you play youtube and mpd together, youtube doesn’t stop. -_-</p>
</li>
<li>
<p>For nice composting in XFCE, use compiz or compton. ( I used compiz with mate and xfce before.)</p>
</li>
<li>
</li></ol>
<blockquote>
<p>[root@archiso /] # visudo<br>
Navigate to where it says # %wheel ALL=(ALL) ALL and uncomment it.<br>
(its like vi so navigate so that the cursor is over the #, hit del, and type “:wq”</p>
</blockquote>
<p><code>EDITOR=nano visudo</code>, no need to use vi.</p>
<p>Good Job though! <img src="https://0x00sec.org/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          <p><a href="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479/2</link>
        <pubDate>Sun, 22 Jan 2017 12:25:12 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1479-2</guid>
        <source url="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479.rss">Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</source>
      </item>
      <item>
        <title>Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</title>
        <dc:creator><![CDATA[Fust3rCluck]]></dc:creator>
        <description><![CDATA[
            <p>Hello 0x00’ers.<br>
Today I will be writing a guide on an encrypted Arch install via LUKS, then installing the lightweight XFCE desktop environment. The way we will be going about this is we will create a non-encrypted boot partition, and then we will create a LUKS encrypted partition with 2 logical volumes (home and root). Think of the LUKS partition as a container for our root and home partitions. Lets get started.</p>
<h2>Pre-install + Setting Up Your Hard Drive and Partitions</h2>
<p>You will need a bootable flash drive with arch on it. If you choose to erase your hard drive, now would be the time to do it. I use dban on a dvd. Boot up arch and you should see<br>
<code>Arch Linux &lt;Version of Arch&gt; (tty1)</code><br>
<code>archiso login: root (automatic login)</code><br>
<code>root@archiso ~ # </code></p>
<p>First lets connect to the interwebz and set up the clock.</p>
<p>if you are connected to Ethernet it should have automatically connected to your network via dhcp but if it didnt you can run<br>
<code>root@archiso ~ # dhcpcd &lt;your interface here ex: enp0s25&gt; </code></p>
<p>You can get a list of your interfaces by typing<br>
<code>root@archiso ~ # ip link</code></p>
<p>If you are using wifi you can use the included tool, “wifi-menu”<br>
<code>root@archiso ~ # wifi-menu -o</code> (the “o” shows asterisks when you type in the wifi password and stores it as a hexadecimal string.)</p>
<p>A dialog menu will pop up with a list of essid’s. Choose yours via arrow keys and hit enter. Next, it should say "Enter a name for the new profile. It should be already filled out, but if it isn’t type something in here like “home-wifi”. Hit enter. Next, type in your wifi password. Hit enter, if it asks you if you would like to save this profile select yes and hit enter again. Finally ping a website to see if the internet is working.<br>
<code>root@archiso ~ # ping www.google.com</code></p>
<p>to set the system clock via ntp type<br>
<code>root@archiso ~ # timedatectl set-ntp true</code></p>
<p><strong>Now lets partition the disks</strong>, and be aware that this will erase your hard drive.<br>
Identify your hard drive via fdisk.<br>
<code>root@archiso ~ # fdisk -l</code></p>
<p>For me it is /dev/sda</p>
<p>now enter the disk tool “parted”<br>
<code>root@archiso ~ # parted</code></p>
<p>notice how instead of  <code>root@archiso ~ # </code> it shows <code>(parted)</code>. Now select your hard drive<br>
<code>(parted)  select /dev/sdX</code> where X is your hard drive label. For me it was <code>(parted) select /dev/sda</code><br>
Next, create a msdos disk label<br>
<code>(parted) mklabel msdos</code><br>
then create the boot partition<br>
<code>(parted) mkpart primary ext2 1MB 512MB</code><br>
Then create a partition for the lvm using the rest of the disk space.<br>
<code>(parted) mkpart primary ext4 512MB 100%</code><br>
<code>(parted) print</code> should list all of your partitions, you should have 2.<br>
now set the boot flag on your boot partition<br>
<code>(parted) set 1 boot on</code> (1 should be the number of your boot partition)<br>
now type<br>
<code>(parted) quit</code><br>
and verify that the changes have been made.<br>
<code>root@archiso ~ # fdisk -l</code><br>
you should see two partitions with one having an asterisk under “boot”. For my hard drive /dev/sda1 is my boot partition, and /dev/sda2 is the partition I will be using for the lvm so that is what I will be going off of for this part of the tutorial.</p>
<p><strong>Now lets set up luks</strong><br>
type<br>
<code>root@archiso ~ # cryptsetup luksFormat /dev/sda2</code><br>
(2 being the bigger partition…the one you will be using for the lvm)<br>
type YES and your password for the encrypted partition. Be sure to have a strong password.</p>
<p>now open the luks container<br>
<code>root@archiso ~ # cryptsetup open /dev/sda2 name</code><br>
name can be anything. The container will now be at /dev/mapper/name</p>
<p>next lets create the physical volume.<br>
<code>root@archiso ~ # pvcreate /dev/mapper/name</code><br>
now create a volume group, it can be whatever name you want.<br>
<code>root@archiso ~ # vgcreate x /dev/mapper/name</code> where x is anything you want<br>
now lets create the logical volumes.<br>
<code>root@archiso ~ # lvcreate -L 8GB x -n swap</code> where x is the name of your volume group<br>
<code>root@archiso ~ # lvcreate -L 30G x -n root</code><br>
<code>root@archiso ~ # lvcreate -l 100%FREE x -n home</code></p>
<p><strong>Now lets create the file systems on each volume + boot partition.</strong><br>
<code>root@archiso ~ # mkfs.ext4 /dev/mapper/x-home</code><br>
<code>root@archiso ~ # mkfs.ext4 /dev/mapper/x-root</code><br>
<code>root@archiso ~ # mkswap /dev/mapper/x-swap</code><br>
<code>root@archiso ~ # mkfs.ext2 /dev/sda1</code> where /dev/sda1 is your boot partiton (the one where we set the boot flag on)</p>
<p><strong>Now we mount</strong><br>
<code>root@archiso ~ # mount /dev/mapper/x-root /mnt</code><br>
<code>root@archiso ~ # mkdir /mnt/home</code><br>
<code>root@archiso ~ # mount /dev/mapper/x-home /mnt/home</code><br>
<code>root@archiso ~ # mkdir /mnt/boot</code><br>
<code>root@archiso ~ # mount /dev/sda1 /mnt/boot</code><br>
<code>root@archiso ~ # swapon /dev/mapper/x-swap</code></p>
<h2>Installation</h2>
<p>Now let us install arch<br>
<code>root@archiso ~ # pacstrap /mnt base base-devel</code><br>
Lets generate the fstab file<br>
<code>root@archiso ~ # genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code><br>
Then lets chroot into the system.<br>
<code>root@archiso ~ # arch-chroot /mnt</code><br>
Notice how the prompt changes to <code>[root@archiso /] # </code></p>
<p><strong>Setting the timezone and locales</strong><br>
To set the time zone type<br>
<code>[root@archiso /] # ln -s /usr/share/zoneinfo/YourRegionHere/YourCityHere /etc/localtime</code><br>
Run the hardware clock<br>
<code>[root@archiso /] # hwclock --systohc</code><br>
Next, type<br>
<code>[root@archiso /] # nano /etc/locale.gen</code><br>
and uncomment (delete the #) on the line with “en_US.UTF-8 UTF-8” (or your localization)<br>
then run<br>
<code>[root@archiso /] # locale-gen</code><br>
now type<br>
<code>[root@archiso /] # nano /etc.locale.conf</code><br>
and type <code>LANG=en_US.UTF-8</code> or what you need for your local.<br>
type<br>
<code>[root@archiso /] # echo myhostname &gt; /etc/hostname</code> where myhostname is what you want your hostname to be.<br>
Now lets install wpa_supplicant, iw, dialog, and netctl<br>
<code>[root@archiso /] # pacman -S wpa_supplicant iw</code><br>
now type<br>
<code>[root@archiso /] # nano /etc/mkinitcpio.conf</code><br>
and where it says <code>HOOKS="bla bla bla</code> make sure “keyboard”, “encrypt”, and “lvm2” are in that list.</p>
<p><strong>Now we install and configure Grub</strong><br>
<code>[root@archiso /] # pacman -S grub</code><br>
<code>[root@archiso /] # grub-install /dev/sda</code> where /dev/sda is the hard drive you are installing arch onto.<br>
<code>[root@archiso /] # nano /etc/default/grub</code><br>
and where it says <code>GRUB_CMDLINE_LINUX=""</code> make it say<br>
<code>GRUB_CMDLINE_LINUX="cryptdevice=/dev/sda2:x root=/dev/mapper/x-root"</code><br>
where x is the name of your volume group, and /dev/sda2 should be your partition with the volume group.<br>
Now type<br>
<code>[root@archiso /] # grub-mkconfig -o /boot/grub/grub.cfg</code><br>
and type<br>
<code>[root@archiso /] # mkinitcpio -p linux</code><br>
to set the root password type<br>
<code>[root@archiso /] # passwd</code><br>
Now lets add a user account and give it sudo privleges.<br>
<code>[root@archiso /] # useradd -m -G wheel yourusername</code><br>
where yourusername is…of course…the username you want…duh.<br>
Set the password with<br>
<code>[root@archiso /] # passwd yourusername</code><br>
now type<br>
<code>[root@archiso /] # visudo</code><br>
Navigate to where it says <code> # %wheel ALL=(ALL) ALL</code> and uncomment it.<br>
(its like vi so navigate so that the cursor is over the #, hit del, and type “:wq”<br>
Now you should be able to reboot into your new system. You can log into root or your newly created account to install a couple more packages.</p>
<h2>Installing XFCE and more things.</h2>
<p>First lets install the sound manager<br>
<code>[root@hostname ~] # pacman -S alsa-utils</code><br>
Now install the Xorg display server and other goodies.<br>
<code>[root@hostname ~] # pacman -S xorg-server xorg-server-utils xorg-xinit</code><br>
<code>[root@hostname ~] # pacman -S xfce4 xfce4-goodies</code><br>
<code>[root@hostname ~] # pacman -S lxdm</code><br>
<code>[root@hostname ~] # systemctl enable lxdm</code><br>
This will install xfce, lxdm, and bring the “login screen” up on boot.</p>
<p><strong>More packages</strong><br>
To install firefox type<br>
<code>[root@hostname ~] # pacman -S firefox</code></p>
<p>To install wicd network manager type<br>
<code>[root@hostname ~] # pacman -S wicd wicd-gtk</code><br>
<code>[root@hostname ~] # systemctl start wicd.service &amp;&amp; systemctl enable wicd.service</code></p>
<p><em>If you have a Thinkpad like me and would like to use the dedicated volume control keys do this:</em><br>
Main Menu &gt; Settings -&gt; Keyboard -&gt; Application Shortcuts. Add a shortcut and type <code>amixer set Master 1+</code>; click ok; then press the volume up key when it prompts you too. Add another; <code>amixer set Master 1-</code>; ok; press volume down key. then add one and type “<code>amixer set Master toggle</code>”; ok; press mute key.</p>
<h2>Final Words</h2>
<p>Thank your for reading this guide. I really hope it helps, In a time like now everyone should be using disk encryption to protect themselves from thieves and nosy governments  . Arch may turn you off because its complicated but dont let it. It has a great community. I advise you to read about the AUR (Arch User Repository). If you do not like XFCE you can stop at the part where I say you should be able to reboot your computer. I chose XFCE because it is simple, lightweight and runs great on older laptops like my Thinkpad. Last but not least…I wrote this at 1:00 AM so please give me suggestions and recommendations on how I can make this article easier to understand and better.</p>
<p><span class="hashtag">#Other</span> things you may need (special thanks to <a class="mention" href="https://0x00sec.org/u/kowalski">@kowalski</a> )</p>
<p><strong>Graphic Drivers</strong> <code>pacman -Ss xf86-video</code> and then pick the one for your card.<br>
<strong>Input Devices</strong> search with <code>pacman -Ss xf86-input</code>. evdev and synaptics/libinput should be enough.</p>
<p><code>Including additional LUKS encryption options is a good idea, even better if you have decent hardware. Here is a link to the wiki article with good explanation about what each option means: https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption#Encryption_options_for_LUKS_mode3</code></p>
<p>If you don’t want lxdm or any display manager, add startxfce4 to your .xinitrc in the home directory and just startx. You can also set startx to be executed automatically when you log into tty1 by putting this in /etc/profile.</p>
<h1>autostart systemd default session on tty1</h1>
<p>if [[ “$(tty)” == ‘/dev/tty1’ ]]; then<br>
exec startx<br>
fi<br>
Install pulseaudio-alsa so that when you play youtube and mpd together, youtube doesn’t stop. -_-</p>
<p>For nice composting in XFCE, use compiz or compton. ( I used compiz with mate and xfce before.)</p>
<p>[root@archiso /] # visudo<br>
Navigate to where it says # %wheel ALL=(ALL) ALL and uncomment it.<br>
(its like vi so navigate so that the cursor is over the #, hit del, and type “:wq”<br>
EDITOR=nano visudo, no need to use vi.</p>
<p>And as always,<br>
Stay Frosty <img src="https://0x00sec.org/images/emoji/twitter/snowman2.png?v=9" title=":snowman2:" class="emoji" alt=":snowman2:"></p>
<p>Elliot Approved <img src="https://0x00sec.org/images/emoji/twitter/thumbsup.png?v=9" title=":thumbsup:" class="emoji" alt=":thumbsup:"> <img src="//0x00sec.s3.amazonaws.com/original/2X/2/292b1d61e7304da97386971fa6b76c9e51d9cc9e.jpg" width="690" height="388"></p>
          <p><a href="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479/1</link>
        <pubDate>Sun, 22 Jan 2017 06:11:01 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-1479-1</guid>
        <source url="https://0x00sec.org/t/arch-linux-with-lvm-on-luks-dm-crypt-disk-encryption-installation-guide-legacy-bios-system/1479.rss">Arch Linux with LVM on LUKS (dm-crypt) Disk Encryption Installation Guide (Legacy/BIOS System)</source>
      </item>
  </channel>
</rss>
