<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Written a loader/dropper in C, have a question about Meterpreter</title>
    <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888</link>
    <description>Greetings all, 

The forums here look full of great information, very exciting and informative!

I have written a shellcode loader / dropper in C, which uses an encryption scheme and successfully decrypts the payload in memory. The payload bypasses Windows Defender ( Windows 10  is the test environment )  ,  and i gain a reverse meterpreter shell. The payload i have encrypted is a reverse meterpreter staged payload and like i mentioned, i gain a reverse shell.

When i use certain functions, i.e if you drop into  a shell/cmd prompt for example, Windows defender flags it and catches the payload and thus kills the shell.

I do recall a few tutorials and videos mentioning the use of Syswhispers ( i think it was a video on Shhloader and something by F-Secure ) although i cannot find these resources.

Could someone please let me know what i need to look in to , to get this working where by my revershell meterpreter activity is not flagged or caught. I believe it is something to do with the system calls or functions meterpreter uses.

Any help would be greatly appreciated :smile: 

Cheers</description>
    
    <lastBuildDate>Tue, 04 Apr 2023 11:12:48 +0000</lastBuildDate>
    <category>Malware</category>
    <atom:link href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/13">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/13</link>
        <pubDate>Fri, 12 May 2023 06:36:29 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-13</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[nemesis69]]></dc:creator>
        <description><![CDATA[
            <p>cool stuff. thanks a many. booyakasha!</p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/12">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/12</link>
        <pubDate>Tue, 04 Apr 2023 11:12:48 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-12</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[Nmalware]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/c0z">@c0z</a> , thank you for the resources <img src="https://0x00sec.org/images/emoji/twitter/metal.png?v=12" title=":metal:" class="emoji" alt=":metal:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/11">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/11</link>
        <pubDate>Thu, 02 Feb 2023 23:50:57 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-11</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[winterr_dog]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://0x00sec.org/u/c0z">@c0z</a> thanks for these resources. really helpful for hardcore red teamers <img src="https://0x00sec.org/images/emoji/twitter/handshake.png?v=12" title=":handshake:" class="emoji" alt=":handshake:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/10">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/10</link>
        <pubDate>Wed, 01 Feb 2023 17:14:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-10</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[c0z]]></dc:creator>
        <description><![CDATA[
            <p>The AMSI bypasses were in the one of the articles. Most of the effective AMSI bypasses are still just regular concatenation while patching a couple bytes, or just the <code>jmp</code>.</p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/9">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/9</link>
        <pubDate>Mon, 30 Jan 2023 10:59:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-9</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[Nmalware]]></dc:creator>
        <description><![CDATA[
            <p>Thank you very much for the detailed response! Looks like i have a long way to go. My implant is working with Meterpreter, how ever its not very sophisticated at the moment and does not incorporate half of what you have written.</p>
<p>Guess i have more work to do <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20"></p>
<p>Also, is there a page on AMSI bypasses that is a good resource. Most of the AMSI bypasses i know are knowlegde from Powershell bypassing such as concatting / splitting strings or function calls and then invoking the expression. I am wondering if this is what you are referring to?</p>
<p>Thanks for the great post again, cheers!</p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/6">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/6</link>
        <pubDate>Thu, 19 Jan 2023 22:25:13 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-6</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[c0z]]></dc:creator>
        <description><![CDATA[
            <p>So there are other ways to bypass defender, like making the thread stack so large that defender gives up, making sure the entropy of the shellcode is around 3/4 (readable text), putting code that makes your program stall which might trip the time allotted to scan your binary, if you mix that with legitimate Win32 API calls that have no meaning (junk code) you might end up being more successful.</p>
<p>It also has to be mentioned that AMSI bypasses are still hot, so if you can just turn your loader into shellcode, bypass AMSI and self-inject, to run the real payload stored somewhere else, you’ll probably have a better chance.</p>
<p>There are ObRegisterCallbacks, and ETW event (providers) sources and (consumers) sinks that allow for hook-less monitoring of processes. Since MsMpng.exe has PPL protections, is signed, and has a driver to back it up it’s safe to say that when dealing with defender most of the detections are going to be User Defined Behavior that result in triggers. <a href="https://blog.redbluepurple.io/windows-security-research/kernel-tracing-injection-detection" rel="noopener nofollow ugc">Detecting process injection</a>, <a href="https://blog.redbluepurple.io/windows-security-research/bypassing-injection-detection" rel="noopener nofollow ugc">Bypassing overview with OPSEC</a></p>
<blockquote>
<p>“As an example, Defender logs most remote thread creations as labeled events, but low file prevalence is not good enough of an indicator to trigger an alert, and <strong>there is more advanced logic in play</strong> - true for most decent EDRs.” - <a href="https://blog.redbluepurple.io/" rel="noopener nofollow ugc">https://blog.redbluepurple.io/</a></p>
</blockquote>
<p>The most preferred method for injection, if you have to do it, is to self-inject. It’s much rather preferred to set up a type of persistence, drop to disk, then stop executing. Because in the eyes of the A/V or EDR there’s no <code>CreateRemoteThread</code> or <code>NtCreateThreadEx</code> if a process starts up and does no remote injection into another process.</p>
<p>Also making your program look like it belongs on the system helps a lot via PPID spoofing, command arguments spoofing, module stomping, function stomping, encrypted heaps (in tune with using HeapAlloc instead of VirtualAlloc), encrypting return pointers, copying resources from well known binaries and singing those binaries with self-signed certificates that mirror legitimate companies. All help with staying under the threshold of detection.</p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/5</link>
        <pubDate>Tue, 17 Jan 2023 04:10:41 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-5</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[Nmalware]]></dc:creator>
        <description><![CDATA[
            <p>Just another update on this, i have traced my implant in a debugger, there does not seem to be any userland hooking being applied to syscalls and functions such as :</p>
<p>CreateProcessW<br>
CreateRemoteThreadEx</p>
<p>But these functions are what trigger the AV to flag once i drop into shell from a meterpreter prompt.</p>
<p>I am assuming i would need to hook this functions dynamically, and call the Native API alternatives instead so that they do not get flagged?</p>
<p>Cheers</p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/4</link>
        <pubDate>Mon, 16 Jan 2023 16:13:05 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-4</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[Nmalware]]></dc:creator>
        <description><![CDATA[
            <p>Thank you! That is exactly what i needed , and great info <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20"></p>
<p>Theatcheck, i may use that, but the payload successfully decrypts in memory and does not get flagged, it connects back to my listener without any issues. I can run basic commands until i believe a syscall of some sort triggers Defender to act ( and quarantine the .exe )</p>
<p>Thanks, i am looking into the *Gate techniques and i am familiar with one of them ( heavens gate  ) .</p>
<p>I am going to build the implant with the added SysWhispers3 headers and files, hopefully that works.</p>
<p>Thank you so much, i just did not know what i was looking for  <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=12" title=":smiley:" class="emoji" alt=":smiley:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/3</link>
        <pubDate>Thu, 12 Jan 2023 13:12:17 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-3</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[c0z]]></dc:creator>
        <description><![CDATA[
            <p>Just use theatcheck on the shellcode to see if it gets flagged, then run something like <a href="https://github.com/Neo23x0/Loki" rel="noopener nofollow ugc">Loki</a> to check the in-memory payload. I’d recommend just building your own shell. It’s not that difficult and it would be a good exercise for you. As for inline-syscalls, heavens gate, taurus gate, hells gate, recycled gate, etc (all the gate techniques) and other techniques for resolving syscalls at runtime can be looked up easily but here’s a starter.</p>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://github.com/klezVirus/SysWhispers3">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">

      <a href="https://github.com/klezVirus/SysWhispers3" target="_blank" rel="noopener nofollow ugc">GitHub</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/345;"><img src="https://0x00sec.s3.amazonaws.com/optimized/3X/6/c/6c4a2a475fbb35757a4f682115ce1ae5fb429c04_2_690x345.png" class="thumbnail" width="690" height="345" srcset="https://0x00sec.s3.amazonaws.com/optimized/3X/6/c/6c4a2a475fbb35757a4f682115ce1ae5fb429c04_2_690x345.png, https://0x00sec.s3.amazonaws.com/optimized/3X/6/c/6c4a2a475fbb35757a4f682115ce1ae5fb429c04_2_1035x517.png 1.5x, https://0x00sec.s3.amazonaws.com/original/3X/6/c/6c4a2a475fbb35757a4f682115ce1ae5fb429c04.png 2x" data-dominant-color="E5E6E5"></div>

<h3><a href="https://github.com/klezVirus/SysWhispers3" target="_blank" rel="noopener nofollow ugc">GitHub - klezVirus/SysWhispers3: SysWhispers on Steroids - AV/EDR evasion via...</a></h3>

  <p>SysWhispers on Steroids - AV/EDR evasion via direct system calls.  - GitHub - klezVirus/SysWhispers3: SysWhispers on Steroids - AV/EDR evasion via direct system calls.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/2</link>
        <pubDate>Thu, 12 Jan 2023 05:42:55 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-2</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
      <item>
        <title>Written a loader/dropper in C, have a question about Meterpreter</title>
        <dc:creator><![CDATA[Nmalware]]></dc:creator>
        <description><![CDATA[
            <p>Greetings all,</p>
<p>The forums here look full of great information, very exciting and informative!</p>
<p>I have written a shellcode loader / dropper in C, which uses an encryption scheme and successfully decrypts the payload in memory. The payload bypasses Windows Defender ( Windows 10  is the test environment )  ,  and i gain a reverse meterpreter shell. The payload i have encrypted is a reverse meterpreter staged payload and like i mentioned, i gain a reverse shell.</p>
<p>When i use certain functions, i.e if you drop into  a shell/cmd prompt for example, Windows defender flags it and catches the payload and thus kills the shell.</p>
<p>I do recall a few tutorials and videos mentioning the use of Syswhispers ( i think it was a video on Shhloader and something by F-Secure ) although i cannot find these resources.</p>
<p>Could someone please let me know what i need to look in to , to get this working where by my revershell meterpreter activity is not flagged or caught. I believe it is something to do with the system calls or functions meterpreter uses.</p>
<p>Any help would be greatly appreciated <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=12" title=":smile:" class="emoji" alt=":smile:" loading="lazy" width="20" height="20"></p>
<p>Cheers</p>
          <p><a href="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888/1</link>
        <pubDate>Tue, 10 Jan 2023 14:36:10 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-32888-1</guid>
        <source url="https://0x00sec.org/t/written-a-loader-dropper-in-c-have-a-question-about-meterpreter/32888.rss">Written a loader/dropper in C, have a question about Meterpreter</source>
      </item>
  </channel>
</rss>
