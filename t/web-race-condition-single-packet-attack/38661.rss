<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Web race condition: Single Packet Attack</title>
    <link>https://0x00sec.org/t/web-race-condition-single-packet-attack/38661</link>
    <description>So I am currently learning about web-based race conditions and I am kinda stuck.

So my understanding is, that multiple incomplete HTTP packets are sent to the server and THEN they are completed by a single tcp packet containing the rest of the inital HTTP requests(Nagle algo)

I can comprehend, that the HTTP packet with the rest of the first HTTP packet are somehow combined again before/when/after reaching the server(via sending a mapping with it or smth idk)

What I don&#39;t understand:

Why aren&#39;t the inital (30 or so) HTTP requests processed by the server before the rest of the HTTP requests arrive? How are they combined together again? Or are they combined before reaching the server?

I understand, that END_STREAM will be set and the last byte is removed before sending most of the data in the first step, but how does the server know? Why does it care and not just HTTP 500 me or smth?

Any help is apprechiated!</description>
    
    <lastBuildDate>Sun, 07 Jan 2024 10:25:30 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/web-race-condition-single-packet-attack/38661.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Web race condition: Single Packet Attack</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed 3 days after the last reply. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/web-race-condition-single-packet-attack/38661/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/web-race-condition-single-packet-attack/38661/2</link>
        <pubDate>Wed, 10 Jan 2024 10:25:57 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-38661-2</guid>
        <source url="https://0x00sec.org/t/web-race-condition-single-packet-attack/38661.rss">Web race condition: Single Packet Attack</source>
      </item>
      <item>
        <title>Web race condition: Single Packet Attack</title>
        <dc:creator><![CDATA[taoehutoahutwocor]]></dc:creator>
        <description><![CDATA[
            <p>So I am currently learning about web-based race conditions and I am kinda stuck.</p>
<p>So my understanding is, that multiple incomplete HTTP packets are sent to the server and THEN they are completed by a single tcp packet containing the rest of the inital HTTP requests(Nagle algo)</p>
<p>I can comprehend, that the HTTP packet with the rest of the first HTTP packet are somehow combined again before/when/after reaching the server(via sending a mapping with it or smth idk)</p>
<p>What I don’t understand:</p>
<p>Why aren’t the inital (30 or so) HTTP requests processed by the server before the rest of the HTTP requests arrive? How are they combined together again? Or are they combined before reaching the server?</p>
<p>I understand, that END_STREAM will be set and the last byte is removed before sending most of the data in the first step, but how does the server know? Why does it care and not just HTTP 500 me or smth?</p>
<p>Any help is apprechiated!</p>
          <p><a href="https://0x00sec.org/t/web-race-condition-single-packet-attack/38661/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/web-race-condition-single-packet-attack/38661/1</link>
        <pubDate>Sun, 07 Jan 2024 10:25:30 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-38661-1</guid>
        <source url="https://0x00sec.org/t/web-race-condition-single-packet-attack/38661.rss">Web race condition: Single Packet Attack</source>
      </item>
  </channel>
</rss>
