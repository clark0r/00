<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Strategy for effective vulnerability research</title>
    <link>https://0x00sec.org/t/strategy-for-effective-vulnerability-research/17185</link>
    <description>I have been working on `exploit development`, and `reverse engineering` for a few months approx 1 year , and 2-month full time, but I have some doubts after gaining solid knowledge. I want to ask non-technical questions. for example, I am at the main function of `adobe reader dc or Foxit`, but what next? there are many blocks, and it is easy to get lost over it, and `we won&#39;t reverse engineering all the product` because it is endless, So the question is. how can one find vulnerabilities path or reverse specific blocks? I was thinking about `fuzzing and only reverse the crash blocks`, but the time I am waiting for a crash. I can use it for doing another kind of analysis. what would you recommend to me? I have been using tools so far like `boofuzz, peachfuzz`, and I have been using a bit  `winafl + dynamorio, google sanitizers, libfuzzer`, and other tools.

cheers :D :D</description>
    
    <lastBuildDate>Tue, 29 Oct 2019 12:45:58 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://0x00sec.org/t/strategy-for-effective-vulnerability-research/17185.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Strategy for effective vulnerability research</title>
        <dc:creator><![CDATA[system]]></dc:creator>
        <description><![CDATA[
            <p>This topic was automatically closed after 121 days. New replies are no longer allowed.</p>
          <p><a href="https://0x00sec.org/t/strategy-for-effective-vulnerability-research/17185/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/strategy-for-effective-vulnerability-research/17185/2</link>
        <pubDate>Thu, 27 Feb 2020 20:15:45 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-17185-2</guid>
        <source url="https://0x00sec.org/t/strategy-for-effective-vulnerability-research/17185.rss">Strategy for effective vulnerability research</source>
      </item>
      <item>
        <title>Strategy for effective vulnerability research</title>
        <dc:creator><![CDATA[KR_Nails]]></dc:creator>
        <description><![CDATA[
            <p>I have been working on <code>exploit development</code>, and <code>reverse engineering</code> for a few months approx 1 year , and 2-month full time, but I have some doubts after gaining solid knowledge. I want to ask non-technical questions. for example, I am at the main function of <code>adobe reader dc or Foxit</code>, but what next? there are many blocks, and it is easy to get lost over it, and <code>we won't reverse engineering all the product</code> because it is endless, So the question is. how can one find vulnerabilities path or reverse specific blocks? I was thinking about <code>fuzzing and only reverse the crash blocks</code>, but the time I am waiting for a crash. I can use it for doing another kind of analysis. what would you recommend to me? I have been using tools so far like <code>boofuzz, peachfuzz</code>, and I have been using a bit  <code>winafl + dynamorio, google sanitizers, libfuzzer</code>, and other tools.</p>
<p>cheers <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"> <img src="https://0x00sec.org/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
          <p><a href="https://0x00sec.org/t/strategy-for-effective-vulnerability-research/17185/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/strategy-for-effective-vulnerability-research/17185/1</link>
        <pubDate>Tue, 29 Oct 2019 04:15:43 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-17185-1</guid>
        <source url="https://0x00sec.org/t/strategy-for-effective-vulnerability-research/17185.rss">Strategy for effective vulnerability research</source>
      </item>
  </channel>
</rss>
