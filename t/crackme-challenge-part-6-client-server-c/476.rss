<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>CrackMe Challenge [Part 6] - Client/Server (C#)</title>
    <link>https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476</link>
    <description>Hey Mates,
in the last post I mentioned to maybe make a bigger challenge, which I think I&#39;ll publish within the next days. Today I got a little introduction to Client/Server cracking because this will be extremely important for realistic exercises. In most of the cases your password/license is tested Server-side, so it is very helpful to know some fundamentals. This CrackMe is very easy but you can do much with it (Different ways to solve, change server, ...), so it should don&#39;t get underestimated :grin:.

## Description of the RE Challenge
Ok, it is a very simple Client/Server system. I coded it a bit weird, because you should learn how to understand more complex code. The password mechanism is extremely easy, but I think you&#39;ll find that out on your own. A last thing to say is that I recommend to first RE the server when you&#39;re done with the exercises, because in a realistic scenario you probably won&#39;t have the chance to have a look at the server. If you stuck (I think you&#39;ll do it but maybe you get confused) you can of course have a look at the server for some help.

### Difficulty: 3/10

### Requirements
- A fundamental understanding of Client/Server programming would be very valuable
- C# programming or any other language (I would just love it to see my C# client communicating with a python server :smile:)

### Download
This time I&#39;ve got the obfuscated version of both, the client and the server. As always I recommd to use the obfuscated one (I saw nobody used the unobfuscated one in the last part; Well  Done!), but you can of course have a look at the unobfuscated one.
**-- Client --**
**Obfuscated:** https://mega.nz/#!vpoCgDpR!mDhSjBYg_bRwgJMhUuzug1DCG_W5S-R5JJ6s7DgXcDI
**Unobfuscated:** https://mega.nz/#!a1QiFbgQ!LY-_KaTW62tw-BfaLpjZGWK8JzNWfr26qcwB9a_IKMQ

**-- Server --**
**Obfuscated:** https://mega.nz/#!v1QRSIpL!_m3wvw1sh1RpXbU6m4L-SAPSp75o_R3VwoCjO9S7v8w
**Unobfuscated:** https://mega.nz/#!a0gxyJ5a!j9n9metXFiE5xrp6E4iQ3tiC3HTjTKBArHlWkHzYmnw

Start the Server first and then the Client on the same computer (As always: Tested on Win7). If you get any Errors just ask me ;).

## Exercises
Exercises? Why don&#39;t just crack the password and feel 1337? This challenge is a little introduction to Client/Server systems, so it is useful to try different things out. There are more than one way for solving it and I recommend to play a bit around for collecting experience.
- Change the client that it doesn&#39;t need the validation of the server
- Code your own server which always returns that the password is valid (Could also be done by changing the existing server; for this the unobfuscated one could be helpful)
- Find the password in the servers code (Yep, easy stuff for you ;))
- And maybe you want to play a bit around? Change client and server with adding more complex password mechanisms, etc...

## Hints
If you get stuck at a particular point show here for some help :slight_smile:.
**How to change the code of the client?**
[Spoiler]In dotPeek you can&#39;t edit the code right in the window, so just copy it out into a new project and edit it there! I recommend to change the variable names of course ;). Or you can use the unobfuscated version for a better useable code.[/Spoiler]
**How to code a server in C#**
[Spoiler]You could use my code and just edit it or you can google for a good tutorial on that. I&#39;m sure you&#39;ll find something for you.[/Spoiler]
 **How to send always an &quot;Ok&quot; to the Client?**
[Spoiler]Just don&#39;t test the password Server-Side. Jump directly to the send of the &quot;1&quot;, which represents an &quot;Ok&quot;.[/Spoiler]

## Conclusion
I hope this challenge is useful for playing around with and learning some basics. Finally I want to add that I work hardly on the next challenge, which should be ready in the next 1-3 days. Spoiler: It will include a little self-written game :grin:.

|-TheDoctor-|</description>
    
    <lastBuildDate>Wed, 25 May 2016 11:46:58 +0000</lastBuildDate>
    <category>Challenges</category>
    <atom:link href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>CrackMe Challenge [Part 6] - Client/Server (C#)</title>
        <dc:creator><![CDATA[pry0cc]]></dc:creator>
        <description><![CDATA[
            <p>Hmm. I’ll look into it.</p>
          <p><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/5">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/5</link>
        <pubDate>Wed, 25 May 2016 11:46:58 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-476-5</guid>
        <source url="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476.rss">CrackMe Challenge [Part 6] - Client/Server (C#)</source>
      </item>
      <item>
        <title>CrackMe Challenge [Part 6] - Client/Server (C#)</title>
        <dc:creator><![CDATA[TheDoctor]]></dc:creator>
        <description><![CDATA[
            <p>Pretty cool implementations! Status Update: I’m done with 3/4 of the next challenge <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">. I hope I can upload it today but it should be online till tomorrow. I’m excited to see how good you’ll handle a realistic example <img src="https://0x00sec.org/images/emoji/twitter/grin.png?v=9" title=":grin:" class="emoji" alt=":grin:">.</p>
          <p><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/4">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/4</link>
        <pubDate>Wed, 25 May 2016 11:38:34 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-476-4</guid>
        <source url="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476.rss">CrackMe Challenge [Part 6] - Client/Server (C#)</source>
      </item>
      <item>
        <title>CrackMe Challenge [Part 6] - Client/Server (C#)</title>
        <dc:creator><![CDATA[JaCube]]></dc:creator>
        <description><![CDATA[
            <p>My simple server implementation in Python <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Thanks!</p>
<div class="spoiler"><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/3">spoiler</a></div>
          <p><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/3">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/3</link>
        <pubDate>Tue, 24 May 2016 20:24:39 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-476-3</guid>
        <source url="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476.rss">CrackMe Challenge [Part 6] - Client/Server (C#)</source>
      </item>
      <item>
        <title>CrackMe Challenge [Part 6] - Client/Server (C#)</title>
        <dc:creator><![CDATA[0x00pf]]></dc:creator>
        <description><![CDATA[
            <p>A Perl Server <img src="https://0x00sec.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<div class="spoiler"><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/2">spoiler</a></div>
<p>P.S.: Looks like the spoiler tag does not work well with code/pre??</p>
          <p><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/2">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/2</link>
        <pubDate>Tue, 24 May 2016 19:02:25 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-476-2</guid>
        <source url="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476.rss">CrackMe Challenge [Part 6] - Client/Server (C#)</source>
      </item>
      <item>
        <title>CrackMe Challenge [Part 6] - Client/Server (C#)</title>
        <dc:creator><![CDATA[TheDoctor]]></dc:creator>
        <description><![CDATA[
            <p>Hey Mates,<br>
in the last post I mentioned to maybe make a bigger challenge, which I think I’ll publish within the next days. Today I got a little introduction to Client/Server cracking because this will be extremely important for realistic exercises. In most of the cases your password/license is tested Server-side, so it is very helpful to know some fundamentals. This CrackMe is very easy but you can do much with it (Different ways to solve, change server, …), so it should don’t get underestimated <img src="https://0x00sec.org/images/emoji/twitter/grin.png?v=9" title=":grin:" class="emoji" alt=":grin:">.</p>
<h2>Description of the RE Challenge</h2>
<p>Ok, it is a very simple Client/Server system. I coded it a bit weird, because you should learn how to understand more complex code. The password mechanism is extremely easy, but I think you’ll find that out on your own. A last thing to say is that I recommend to first RE the server when you’re done with the exercises, because in a realistic scenario you probably won’t have the chance to have a look at the server. If you stuck (I think you’ll do it but maybe you get confused) you can of course have a look at the server for some help.</p>
<h3>Difficulty: 3/10</h3>
<h3>Requirements</h3>
<ul>
<li>A fundamental understanding of Client/Server programming would be very valuable</li>
<li>C# programming or any other language (I would just love it to see my C# client communicating with a python server <img src="https://0x00sec.org/images/emoji/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:">)</li>
</ul>
<h3>Download</h3>
<p>This time I’ve got the obfuscated version of both, the client and the server. As always I recommd to use the obfuscated one (I saw nobody used the unobfuscated one in the last part; Well  Done!), but you can of course have a look at the unobfuscated one.<br>
<strong>– Client –</strong><br>
<strong>Obfuscated:</strong> <a href="https://mega.nz/#!vpoCgDpR!mDhSjBYg_bRwgJMhUuzug1DCG_W5S-R5JJ6s7DgXcDI" rel="nofollow noopener">https://mega.nz/#!vpoCgDpR!mDhSjBYg_bRwgJMhUuzug1DCG_W5S-R5JJ6s7DgXcDI</a><br>
<strong>Unobfuscated:</strong> <a href="https://mega.nz/#!a1QiFbgQ!LY-_KaTW62tw-BfaLpjZGWK8JzNWfr26qcwB9a_IKMQ" rel="nofollow noopener">https://mega.nz/#!a1QiFbgQ!LY-_KaTW62tw-BfaLpjZGWK8JzNWfr26qcwB9a_IKMQ</a></p>
<p><strong>– Server –</strong><br>
<strong>Obfuscated:</strong> <a href="https://mega.nz/#!v1QRSIpL!_m3wvw1sh1RpXbU6m4L-SAPSp75o_R3VwoCjO9S7v8w" rel="nofollow noopener">https://mega.nz/#!v1QRSIpL!_m3wvw1sh1RpXbU6m4L-SAPSp75o_R3VwoCjO9S7v8w</a><br>
<strong>Unobfuscated:</strong> <a href="https://mega.nz/#!a0gxyJ5a!j9n9metXFiE5xrp6E4iQ3tiC3HTjTKBArHlWkHzYmnw" rel="nofollow noopener">https://mega.nz/#!a0gxyJ5a!j9n9metXFiE5xrp6E4iQ3tiC3HTjTKBArHlWkHzYmnw</a></p>
<p>Start the Server first and then the Client on the same computer (As always: Tested on Win7). If you get any Errors just ask me ;).</p>
<h2>Exercises</h2>
<p>Exercises? Why don’t just crack the password and feel 1337? This challenge is a little introduction to Client/Server systems, so it is useful to try different things out. There are more than one way for solving it and I recommend to play a bit around for collecting experience.</p>
<ul>
<li>Change the client that it doesn’t need the validation of the server</li>
<li>Code your own server which always returns that the password is valid (Could also be done by changing the existing server; for this the unobfuscated one could be helpful)</li>
<li>Find the password in the servers code (Yep, easy stuff for you ;))</li>
<li>And maybe you want to play a bit around? Change client and server with adding more complex password mechanisms, etc…</li>
</ul>
<h2>Hints</h2>
<p>If you get stuck at a particular point show here for some help <img src="https://0x00sec.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">.<br>
<strong>How to change the code of the client?</strong></p>
<div class="spoiler"><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/1">spoiler</a></div>
<p><strong>How to code a server in C#</strong></p>
<div class="spoiler"><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/1">spoiler</a></div>
<p><strong>How to send always an “Ok” to the Client?</strong></p>
<div class="spoiler"><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/1">spoiler</a></div>
<h2>Conclusion</h2>
<p>I hope this challenge is useful for playing around with and learning some basics. Finally I want to add that I work hardly on the next challenge, which should be ready in the next 1-3 days. Spoiler: It will include a little self-written game <img src="https://0x00sec.org/images/emoji/twitter/grin.png?v=9" title=":grin:" class="emoji" alt=":grin:">.</p>
<p>|-TheDoctor-|</p>
          <p><a href="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/1">Read full topic</a></p>
        ]]></description>
        <link>https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476/1</link>
        <pubDate>Tue, 24 May 2016 17:29:50 +0000</pubDate>
        <guid isPermaLink="false">0x00sec.org-post-476-1</guid>
        <source url="https://0x00sec.org/t/crackme-challenge-part-6-client-server-c/476.rss">CrackMe Challenge [Part 6] - Client/Server (C#)</source>
      </item>
  </channel>
</rss>
